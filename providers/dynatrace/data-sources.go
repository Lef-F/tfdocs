package dynatrace

import (
	"fmt"

	"github.com/cycloidio/tfdocs/resource"
)

var (
	DataSources = []*resource.Resource{

		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_alerting_profile",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_alerting_profile` + "`" + ` covers queries for an Alerting Profile with the given name`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_alerting_profiles",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_alerting_profiles` + "`" + ` covers queries for alerting profiles`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_application",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_application` + "`" + ` covers queries for the ID of an application based on name and tags / tag-value pairs`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_aws_iam_external",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_aws_iam_external` + "`" + ` covers queries for AWS IAM external ID`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_calculated_service_metric",
			Category:         "Data Sources",
			ShortDescription: ``,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_credentials",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_credentials` + "`" + ` covers queries for credentials`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_dashboard",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_dashboard` + "`" + ` covers queries for dashboards`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_entities",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_entities` + "`" + ` covers queries for the list of entities based off of type`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_entity",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_entity` + "`" + ` covers queries for the ID of a entity based on name and type`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_host",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_host` + "`" + ` covers queries for the ID of a host based on name and tags / tag-value pairs`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_iam_group",
			Category:         "Data Sources",
			ShortDescription: ``,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_iam_user",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_iam_user` + "`" + ` covers queries for the groups a user is a member of`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_management_zone",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_management_zone` + "`" + ` covers queries for the ID of a management zone based on name`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_management_zones",
			Category:         "Data Sources",
			ShortDescription: ``,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_mobile_application",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_mobile_application` + "`" + ` covers queries for a mobile application`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_process",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_process` + "`" + ` covers queries for the ID of a process based on name and tags / tag-value pairs`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_process_group",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_process_group` + "`" + ` covers queries for the ID of a process group based on name and tags / tag-value pairs`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_request_attribute",
			Category:         "Data Sources",
			ShortDescription: ``,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_request_naming",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_request_naming` + "`" + ` covers queries for request naming rules`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_service",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_service` + "`" + ` covers queries for the ID of a service based on name and tags / tag-value pairs`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_slo",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_slo` + "`" + ` covers queries for dashboards`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_synthetic_location",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_synthetic_location` + "`" + ` covers queries for the ID of a synthetic location based off of provided parameters`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "dynatrace_synthetic_locations",
			Category:         "Data Sources",
			ShortDescription: `The data source ` + "`" + `dynatrace_synthetic_locations` + "`" + ` covers queries for the ID of synthetic locations based off of provided parameters`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
	}

	dataSourcesMap = map[string]int{

		"dynatrace_alerting_profile":          0,
		"dynatrace_alerting_profiles":         1,
		"dynatrace_application":               2,
		"dynatrace_aws_iam_external":          3,
		"dynatrace_calculated_service_metric": 4,
		"dynatrace_credentials":               5,
		"dynatrace_dashboard":                 6,
		"dynatrace_entities":                  7,
		"dynatrace_entity":                    8,
		"dynatrace_host":                      9,
		"dynatrace_iam_group":                 10,
		"dynatrace_iam_user":                  11,
		"dynatrace_management_zone":           12,
		"dynatrace_management_zones":          13,
		"dynatrace_mobile_application":        14,
		"dynatrace_process":                   15,
		"dynatrace_process_group":             16,
		"dynatrace_request_attribute":         17,
		"dynatrace_request_naming":            18,
		"dynatrace_service":                   19,
		"dynatrace_slo":                       20,
		"dynatrace_synthetic_location":        21,
		"dynatrace_synthetic_locations":       22,
	}
)

func GetDataSource(r string) (*resource.Resource, error) {
	rs, ok := dataSourcesMap[r]
	if !ok {
		return nil, fmt.Errorf("datasource %q not found", r)
	}
	return DataSources[rs], nil
}
