package pingone

import (
	"fmt"

	"github.com/cycloidio/tfdocs/resource"
)

var (
	DataSources = []*resource.Resource{

		&resource.Resource{
			Name:             "",
			Type:             "pingone_agreement",
			Category:         "Platform",
			ShortDescription: `Datasource to retrieve details of an agreement configured in a PingOne environment.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"agreement",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_agreement_localization",
			Category:         "Platform",
			ShortDescription: `Datasource to retrieve details of an agreement localization in a PingOne environment.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"agreement",
				"localization",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_certificate",
			Category:         "Platform",
			ShortDescription: `Datasource to read metadata for certificates stored in PingOne.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"certificate",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_certificate_export",
			Category:         "Platform",
			ShortDescription: `Datasource to export the public certificate (in PEM and DER file encoding) from a Key pair stored in PingOne.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"certificate",
				"export",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_certificate_signing_request",
			Category:         "Platform",
			ShortDescription: `Datasource to export a certificate signing request (CSR) from a PingOne Key.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"certificate",
				"signing",
				"request",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_environment",
			Category:         "Platform",
			ShortDescription: `Datasource to retrieve details of a PingOne environment.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"environment",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_environments",
			Category:         "Platform",
			ShortDescription: `Datasource to retrieve multiple PingOne environments.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"environments",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_flow_policies",
			Category:         "SSO",
			ShortDescription: `Datasource to retrieve multiple PingOne DaVinci Flow Policies.`,
			Description:      ``,
			Keywords: []string{
				"sso",
				"flow",
				"policies",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_flow_policy",
			Category:         "SSO",
			ShortDescription: `Datasource to retrieve a PingOne DaVinci flow policy.`,
			Description:      ``,
			Keywords: []string{
				"sso",
				"flow",
				"policy",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_language",
			Category:         "Platform",
			ShortDescription: `Datasource to read PingOne language data`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"language",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_license",
			Category:         "Platform",
			ShortDescription: `Datasource to read detailed PingOne license data, selected by the license ID.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"license",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_licenses",
			Category:         "Platform",
			ShortDescription: `Datasource to retrieve multiple PingOne license IDs selected by a SCIM filter or a name/value list combination.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"licenses",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_organization",
			Category:         "Platform",
			ShortDescription: `Datasource to retrieve details of the active PingOne organization.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"organization",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_password_policy",
			Category:         "SSO",
			ShortDescription: `Datasource to read PingOne password policy data`,
			Description:      ``,
			Keywords: []string{
				"sso",
				"password",
				"policy",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_population",
			Category:         "SSO",
			ShortDescription: `Datasource to retrieve a PingOne population.`,
			Description:      ``,
			Keywords: []string{
				"sso",
				"population",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_populations",
			Category:         "SSO",
			ShortDescription: `Datasource to retrieve multiple PingOne populations.`,
			Description:      ``,
			Keywords: []string{
				"sso",
				"populations",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_resource",
			Category:         "SSO",
			ShortDescription: `Datasource to read PingOne OAuth 2.0 resource data`,
			Description:      ``,
			Keywords: []string{
				"sso",
				"resource",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_resource_attribute",
			Category:         "SSO",
			ShortDescription: `Datasource to read PingOne resource attribute data`,
			Description:      ``,
			Keywords: []string{
				"sso",
				"resource",
				"attribute",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_resource_scope",
			Category:         "SSO",
			ShortDescription: `Datasource to read PingOne OAuth 2.0 resource scope data.`,
			Description:      ``,
			Keywords: []string{
				"sso",
				"resource",
				"scope",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_role",
			Category:         "Platform",
			ShortDescription: `Datasource to read PingOne admin role data`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"role",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_schema",
			Category:         "SSO",
			ShortDescription: `Datasource to read PingOne schema data.`,
			Description:      ``,
			Keywords: []string{
				"sso",
				"schema",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_trusted_email_domain",
			Category:         "Platform",
			ShortDescription: `Datasource to retrieve a Trusted Email Domain.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"trusted",
				"email",
				"domain",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_trusted_email_domain_dkim",
			Category:         "Platform",
			ShortDescription: `Datasource to retrieve Trusted Email Domain DKIM status.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"trusted",
				"email",
				"domain",
				"dkim",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_trusted_email_domain_ownership",
			Category:         "Platform",
			ShortDescription: `Datasource to retrieve Trusted Email Domain ownership status.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"trusted",
				"email",
				"domain",
				"ownership",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_trusted_email_domain_spf",
			Category:         "Platform",
			ShortDescription: `Datasource to retrieve Trusted Email Domain SPF status.`,
			Description:      ``,
			Keywords: []string{
				"platform",
				"trusted",
				"email",
				"domain",
				"spf",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_user",
			Category:         "SSO",
			ShortDescription: `Datasource to read PingOne user data`,
			Description:      ``,
			Keywords: []string{
				"sso",
				"user",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "pingone_users",
			Category:         "SSO",
			ShortDescription: `Datasource to retrieve multiple PingOne user IDs selected by a SCIM filter.`,
			Description:      ``,
			Keywords: []string{
				"sso",
				"users",
			},
			Arguments:  []resource.Attribute{},
			Attributes: []resource.Attribute{},
		},
	}

	dataSourcesMap = map[string]int{

		"pingone_agreement":                      0,
		"pingone_agreement_localization":         1,
		"pingone_certificate":                    2,
		"pingone_certificate_export":             3,
		"pingone_certificate_signing_request":    4,
		"pingone_environment":                    5,
		"pingone_environments":                   6,
		"pingone_flow_policies":                  7,
		"pingone_flow_policy":                    8,
		"pingone_language":                       9,
		"pingone_license":                        10,
		"pingone_licenses":                       11,
		"pingone_organization":                   12,
		"pingone_password_policy":                13,
		"pingone_population":                     14,
		"pingone_populations":                    15,
		"pingone_resource":                       16,
		"pingone_resource_attribute":             17,
		"pingone_resource_scope":                 18,
		"pingone_role":                           19,
		"pingone_schema":                         20,
		"pingone_trusted_email_domain":           21,
		"pingone_trusted_email_domain_dkim":      22,
		"pingone_trusted_email_domain_ownership": 23,
		"pingone_trusted_email_domain_spf":       24,
		"pingone_user":                           25,
		"pingone_users":                          26,
	}
)

func GetDataSource(r string) (*resource.Resource, error) {
	rs, ok := dataSourcesMap[r]
	if !ok {
		return nil, fmt.Errorf("datasource %q not found", r)
	}
	return DataSources[rs], nil
}
