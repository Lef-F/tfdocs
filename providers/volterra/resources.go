package volterra

import (
	"fmt"

	"github.com/cycloidio/tfdocs/resource"
)

var (
	Resources = []*resource.Resource{

		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_active_network_policies",
			Category:         "Resources",
			ShortDescription: `"The active_network_policies allows setting of Active Network Policies for a namespace on Volterra SaaS" ------------------------------------------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_active_service_policies",
			Category:         "Resources",
			ShortDescription: `"The active_service_policies allows setting of Active Service Policies for a namespace on Volterra SaaS" ------------------------------------------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_advertise_policy",
			Category:         "Resources",
			ShortDescription: `"The advertise_policy allows CRUD of Advertise Policy resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_advertise_policy ================================== The Advertise Policy allows CRUD of Advertise Policy resource on Volterra SaaS ~> **Note:** Please refer to [Advertise Policy API docs](https://volterra.io/docs/api/advertise-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_advertise_policy" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_alert_policy",
			Category:         "Resources",
			ShortDescription: `"The alert_policy allows CRUD of Alert Policy resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_alert_policy ============================== The Alert Policy allows CRUD of Alert Policy resource on Volterra SaaS ~> **Note:** Please refer to [Alert Policy API docs](https://volterra.io/docs/api/alert-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_alert_policy" "example" { name = "acmecorp-web" namespace = "staging" receivers { name = "test1" namespace = "staging" tenant = "acmecorp" } routes { // One of the arguments from this list "send dont_send" must be set send = true // One of the arguments from this list "any severity group alertname alertname_regex custom" must be set alertname = "alertname" notification_parameters { // One of the arguments from this list "default individual ves_io_group custom" must be set default = true group_interval = "1m" group_wait = "30s" repeat_interval = "4h" } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_alert_policy_set",
			Category:         "Resources",
			ShortDescription: `"The alert_policy_set allows CRUD of Alert Policy Set resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_alert_policy_set ================================== The Alert Policy Set allows CRUD of Alert Policy Set resource on Volterra SaaS ~> **Note:** Please refer to [Alert Policy Set API docs](https://volterra.io/docs/api/alert-policy-set) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_alert_policy_set" "example" { name = "acmecorp-web" namespace = "staging" policies { name = "test1" namespace = "staging" tenant = "acmecorp" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_alert_receiver",
			Category:         "Resources",
			ShortDescription: `"The alert_receiver allows CRUD of Alert Receiver resource on Volterra SaaS" ----------------------------------------------------------------------------------------- Resource volterra_alert_receiver ================================ The Alert Receiver allows CRUD of Alert Receiver resource on Volterra SaaS ~> **Note:** Please refer to [Alert Receiver API docs](https://volterra.io/docs/api/alert-receiver) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_alert_receiver" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_api_credential",
			Category:         "Resources",
			ShortDescription: `"The volterra_api_credential allows creation of api_credential object on Volterra SaaS" ---------------------------------------------------------------------------------------------------- Resource volterra_api_credential ================================ ================================ Credentials created via volterra_api_credential inherits same user that of the creator and it gets same RBAC applied to the user. So when this credential is used in APIs, it will have same response/audit as creator of the credential is. For each these credentials, user can request credential in 3 different formats as required by their usecase: API certificate - a password protected P12 certificate bundle virtual k8s kubeconfig - a kubeconfig to access a cluster with embedded user access with client certificate. API token - an easy to use secret that can be send part of HTTP request header Authorization: APIToken ~> **Note:** Please refer to [API Credential docs](https://volterra.io/docs/api/api-credential) to learn more Example Usage ------------- --- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_api_credential" "example" { name = "api-cred-example" api_credential_type = "KUBE_CONFIG" virtual_k8s_namespace = "ns1" virtual_k8s_name = "vk8s1" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ------------------ --- ` + "`" + `name` + "`" + ` - (Required) The value of name has to follow DNS-1035 format. (` + "`" + `String` + "`" + `). ` + "`" + `api_credential_type` + "`" + ` - (Required) Types of API credential given. Valid values are ` + "`" + `API_CERTIFICATE` + "`" + `, ` + "`" + `KUBE_CONFIG` + "`" + `, ` + "`" + `API_TOKEN` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `virtual_k8s_namespace` + "`" + ` - (Optional) Namespace of virtual_k8s cluster. Applicable when ` + "`" + `api_credential_type` + "`" + ` is ` + "`" + `KUBE_CONFIG` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `virtual_k8s_name` + "`" + ` - (Optional) Name of virtual_k8s cluster. Applicable when ` + "`" + `api_credential_type` + "`" + ` is ` + "`" + `KUBE_CONFIG` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `api_credential_password` + "`" + ` - (Optional) Password is used for generating an API certificate P12 bundle user can use to protect access to it. this password will not be saved/persisted anywhere in the system. Applicable when ` + "`" + `api_credential_type` + "`" + ` is ` + "`" + `API_CERTIFICATE` + "`" + `. Users have to use this password when they use the certificate, e.g. in curl or while adding to key chain (` + "`" + `String` + "`" + `). ` + "`" + `expiry_days` + "`" + ` - (Optional) Number of days after which the certificate will be expired (` + "`" + `Int` + "`" + `). Attribute Reference -------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_app_type",
			Category:         "Resources",
			ShortDescription: `"The app_type allows CRUD of App Type resource on Volterra SaaS" ----------------------------------------------------------------------------- Resource volterra_app_type ========================== The App Type allows CRUD of App Type resource on Volterra SaaS ~> **Note:** Please refer to [App Type API docs](https://volterra.io/docs/api/app-type) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_app_type" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_aws_tgw_site",
			Category:         "Resources",
			ShortDescription: `"The aws_tgw_site allows CRUD of Aws Tgw Site resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_aws_tgw_site ============================== The Aws Tgw Site allows CRUD of Aws Tgw Site resource on Volterra SaaS ~> **Note:** Please refer to [Aws Tgw Site API docs](https://volterra.io/docs/api/views-aws-tgw-site) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_aws_tgw_site" "example" { name = "acmecorp-web" namespace = "staging" aws_parameters { aws_certified_hw = "aws-byol-multi-nic-voltmesh" aws_region = "us-east-1" az_nodes { aws_az_name = "us-west-2a" // One of the arguments from this list "reserved_inside_subnet inside_subnet" must be set reserved_inside_subnet = true disk_size = "disk_size" outside_subnet { // One of the arguments from this list "subnet_param existing_subnet_id" must be set subnet_param { ipv4 = "10.1.2.0/24" ipv6 = "1234:568:abcd:9100::/64" } } workload_subnet { // One of the arguments from this list "existing_subnet_id subnet_param" must be set subnet_param { ipv4 = "10.1.2.0/24" ipv6 = "1234:568:abcd:9100::/64" } } } // One of the arguments from this list "aws_cred assisted" must be set aws_cred { name = "test1" namespace = "staging" tenant = "acmecorp" } disk_size = "80" instance_type = "a1.xlarge" nodes_per_az = "2" // One of the arguments from this list "new_vpc vpc_id" must be set new_vpc { allocate_ipv6 = true // One of the arguments from this list "name_tag autogenerate" must be set name_tag = "name_tag" primary_ipv4 = "10.1.0.0/16" } ssh_key = "ssh-rsa AAAAB..." // One of the arguments from this list "new_tgw existing_tgw" must be set new_tgw { // One of the arguments from this list "system_generated user_assigned" must be set system_generated = true } } // One of the arguments from this list "logs_streaming_disabled log_receiver" must be set logs_streaming_disabled = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_aws_vpc_site",
			Category:         "Resources",
			ShortDescription: `"The aws_vpc_site allows CRUD of Aws Vpc Site resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_aws_vpc_site ============================== The Aws Vpc Site allows CRUD of Aws Vpc Site resource on Volterra SaaS ~> **Note:** Please refer to [Aws Vpc Site API docs](https://volterra.io/docs/api/views-aws-vpc-site) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_aws_vpc_site" "example" { name = "acmecorp-web" namespace = "staging" aws_region = ["us-east-1"] // One of the arguments from this list "aws_cred assisted" must be set aws_cred { name = "test1" namespace = "staging" tenant = "acmecorp" } instance_type = ["a1.xlarge"] // One of the arguments from this list "log_receiver logs_streaming_disabled" must be set logs_streaming_disabled = true // One of the arguments from this list "voltstack_cluster ingress_gw ingress_egress_gw" must be set ingress_gw { aws_certified_hw = "aws-byol-voltmesh" az_nodes { aws_az_name = "us-west-2a" disk_size = "disk_size" local_subnet { // One of the arguments from this list "subnet_param existing_subnet_id" must be set existing_subnet_id = "subnet-12345678901234567" } } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_azure_vnet_site",
			Category:         "Resources",
			ShortDescription: `"The azure_vnet_site allows CRUD of Azure Vnet Site resource on Volterra SaaS" ------------------------------------------------------------------------------------------- Resource volterra_azure_vnet_site ================================= The Azure Vnet Site allows CRUD of Azure Vnet Site resource on Volterra SaaS ~> **Note:** Please refer to [Azure Vnet Site API docs](https://volterra.io/docs/api/views-azure-vnet-site) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_azure_vnet_site" "example" { name = "acmecorp-web" namespace = "staging" azure_region = ["East US"] // One of the arguments from this list "assisted azure_cred" must be set assisted = true // One of the arguments from this list "log_receiver logs_streaming_disabled" must be set logs_streaming_disabled = true resource_group = ["my-resources"] // One of the arguments from this list "ingress_gw ingress_egress_gw voltstack_cluster" must be set voltstack_cluster { az_nodes { azure_az = "1" disk_size = "disk_size" local_subnet { // One of the arguments from this list "subnet subnet_param" must be set subnet_param { ipv4 = "10.1.2.0/24" ipv6 = "1234:568:abcd:9100::/64" } } } azure_certified_hw = "azure-byol-voltstack-combo" // One of the arguments from this list "forward_proxy_allow_all no_forward_proxy active_forward_proxy_policies" must be set forward_proxy_allow_all = true // One of the arguments from this list "no_global_network global_network_list" must be set global_network_list { global_network_connections { // One of the arguments from this list "sli_to_global_dr slo_to_global_dr" must be set sli_to_global_dr { global_vn { name = "test1" namespace = "staging" tenant = "acmecorp" } } // One of the arguments from this list "disable_forward_proxy enable_forward_proxy" must be set disable_forward_proxy = true } } // One of the arguments from this list "active_network_policies no_network_policy" must be set no_network_policy = true // One of the arguments from this list "no_outside_static_routes outside_static_routes" must be set no_outside_static_routes = true } vnet { // One of the arguments from this list "new_vnet existing_vnet" must be set new_vnet { // One of the arguments from this list "name autogenerate" must be set autogenerate = true primary_ipv4 = "10.1.0.0/16" } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_bgp",
			Category:         "Resources",
			ShortDescription: `"The bgp allows CRUD of Bgp resource on Volterra SaaS" ------------------------------------------------------------------- Resource volterra_bgp ===================== The Bgp allows CRUD of Bgp resource on Volterra SaaS ~> **Note:** Please refer to [Bgp API docs](https://volterra.io/docs/api/bgp) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_bgp" "example" { name = "acmecorp-web" namespace = "staging" bgp_parameters { asn = "asn" bgp_router_id { // One of the arguments from this list "ipv4 ipv6" must be set ipv4 { addr = "192.168.1.1" } } bgp_router_id_key = "bgp_router_id_key" bgp_router_id_type = "bgp_router_id_type" } bgp_peers { asn = "asn" bgp_peer_address { // One of the arguments from this list "ipv4 ipv6" must be set ipv4 { addr = "192.168.1.1" } } bgp_peer_address_key = "bgp_peer_address_key" bgp_peer_address_type = "bgp_peer_address_type" bgp_peer_subnet_offset = "bgp_peer_subnet_offset" port = "port" } network_interface { name = "test1" namespace = "staging" tenant = "acmecorp" } where { // One of the arguments from this list "site virtual_site" must be set site { network_type = "network_type" ref { name = "test1" namespace = "staging" tenant = "acmecorp" } } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_bgp_asn_set",
			Category:         "Resources",
			ShortDescription: `"The bgp_asn_set allows CRUD of Bgp Asn Set resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_bgp_asn_set ============================= The Bgp Asn Set allows CRUD of Bgp Asn Set resource on Volterra SaaS ~> **Note:** Please refer to [Bgp Asn Set API docs](https://volterra.io/docs/api/bgp-asn-set) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_bgp_asn_set" "example" { name = "acmecorp-web" namespace = "staging" as_numbers = ["[713, 7932, 847325, 4683, 15269, 1000001]"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_cloud_credentials",
			Category:         "Resources",
			ShortDescription: `"The cloud_credentials allows CRUD of Cloud Credentials resource on Volterra SaaS" ----------------------------------------------------------------------------------------------- Resource volterra_cloud_credentials =================================== The Cloud Credentials allows CRUD of Cloud Credentials resource on Volterra SaaS ~> **Note:** Please refer to [Cloud Credentials API docs](https://volterra.io/docs/api/cloud-credentials) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_cloud_credentials" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "aws_secret_key azure_pfx_certificate azure_client_secret gcp_cred_file" must be set aws_secret_key { access_key = "access_key" secret_key { blindfold_secret_info_internal { decryption_provider = "decryption_provider" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "store_provider" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "wingman_secret_info blindfold_secret_info vault_secret_info clear_secret_info" must be set vault_secret_info { key = "key_pem" location = "v1/data/vhost_key" provider = "vault-vh-provider" secret_encoding = "secret_encoding" version = "1" } } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_cluster",
			Category:         "Resources",
			ShortDescription: `"The cluster allows CRUD of Cluster resource on Volterra SaaS" --------------------------------------------------------------------------- Resource volterra_cluster ========================= The Cluster allows CRUD of Cluster resource on Volterra SaaS ~> **Note:** Please refer to [Cluster API docs](https://volterra.io/docs/api/cluster) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_cluster" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_dc_cluster_group",
			Category:         "Resources",
			ShortDescription: `"The dc_cluster_group allows CRUD of Dc Cluster Group resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_dc_cluster_group ================================== The Dc Cluster Group allows CRUD of Dc Cluster Group resource on Volterra SaaS ~> **Note:** Please refer to [Dc Cluster Group API docs](https://volterra.io/docs/api/dc-cluster-group) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_dc_cluster_group" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_discovery",
			Category:         "Resources",
			ShortDescription: `"The discovery allows CRUD of Discovery resource on Volterra SaaS" ------------------------------------------------------------------------------- Resource volterra_discovery =========================== The Discovery allows CRUD of Discovery resource on Volterra SaaS ~> **Note:** Please refer to [Discovery API docs](https://volterra.io/docs/api/discovery) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_discovery" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "discovery_k8s discovery_consul" must be set discovery_k8s { access_info { // One of the arguments from this list "in_cluster kubeconfig_url connection_info" must be set kubeconfig_url { blindfold_secret_info_internal { decryption_provider = "decryption_provider" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "store_provider" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "blindfold_secret_info vault_secret_info clear_secret_info wingman_secret_info" must be set wingman_secret_info { name = "ChargeBack-API-Key" } } // One of the arguments from this list "isolated reachable" must be set isolated = true } publish_info { // One of the arguments from this list "publish_fqdns dns_delegation disable publish" must be set disable = true } } where { // One of the arguments from this list "virtual_site virtual_network site" must be set virtual_network { ref { name = "test1" namespace = "staging" tenant = "acmecorp" } } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_endpoint",
			Category:         "Resources",
			ShortDescription: `"The endpoint allows CRUD of Endpoint resource on Volterra SaaS" ----------------------------------------------------------------------------- Resource volterra_endpoint ========================== The Endpoint allows CRUD of Endpoint resource on Volterra SaaS ~> **Note:** Please refer to [Endpoint API docs](https://volterra.io/docs/api/endpoint) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_endpoint" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_fast_acl",
			Category:         "Resources",
			ShortDescription: `"The fast_acl allows CRUD of Fast Acl resource on Volterra SaaS" ----------------------------------------------------------------------------- Resource volterra_fast_acl ========================== The Fast Acl allows CRUD of Fast Acl resource on Volterra SaaS ~> **Note:** Please refer to [Fast Acl API docs](https://volterra.io/docs/api/fast-acl) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_fast_acl" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "site_acl re_acl legacy_acl" must be set site_acl { fast_acl_rules { action { // One of the arguments from this list "simple_action policer_action protocol_policer_action" must be set simple_action = "simple_action" } metadata { description = "Virtual Host for acmecorp website" disable = true name = "acmecorp-web" } name = "name" port { // One of the arguments from this list "all user_defined dns" must be set dns = true } // One of the arguments from this list "prefix ip_prefix_set" must be set prefix { prefix = ["[192.168.1.0/24, 192.168.2.0/24]\" or \"[2001:db8::1::/112, 2001::db8::2::/112]"] } } // One of the arguments from this list "outside_network inside_network" must be set outside_network = true // One of the arguments from this list "interface_services vip_services all_services" must be set interface_services = true } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_fast_acl_for_internet_vips",
			Category:         "Resources",
			ShortDescription: `"The fast_acl_for_internet_vips activates the passed list of FastACLs for Internet VIPs" --------------------------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_fast_acl_rule",
			Category:         "Resources",
			ShortDescription: `"The fast_acl_rule allows CRUD of Fast Acl Rule resource on Volterra SaaS" --------------------------------------------------------------------------------------- Resource volterra_fast_acl_rule =============================== The Fast Acl Rule allows CRUD of Fast Acl Rule resource on Volterra SaaS ~> **Note:** Please refer to [Fast Acl Rule API docs](https://volterra.io/docs/api/fast-acl-rule) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_fast_acl_rule" "example" { name = "acmecorp-web" namespace = "staging" action { // One of the arguments from this list "simple_action policer_action protocol_policer_action" must be set simple_action = "simple_action" } // One of the arguments from this list "ip_prefix_set prefix" must be set prefix { prefix = ["[192.168.1.0/24, 192.168.2.0/24]\" or \"[2001:db8::1::/112, 2001::db8::2::/112]"] } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_fast_acl_set",
			Category:         "Resources",
			ShortDescription: `"The fast_acl_set allows CRUD of Fast Acl Set resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_fast_acl_set ============================== The Fast Acl Set allows CRUD of Fast Acl Set resource on Volterra SaaS ~> **Note:** Please refer to [Fast Acl Set API docs](https://volterra.io/docs/api/fast-acl-set) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_fast_acl_set" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_fleet",
			Category:         "Resources",
			ShortDescription: `"The fleet allows CRUD of Fleet resource on Volterra SaaS" ----------------------------------------------------------------------- Resource volterra_fleet ======================= The Fleet allows CRUD of Fleet resource on Volterra SaaS ~> **Note:** Please refer to [Fleet API docs](https://volterra.io/docs/api/fleet) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_fleet" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "bond_device_list no_bond_devices" must be set no_bond_devices = true // One of the arguments from this list "no_dc_cluster_group dc_cluster_group dc_cluster_group_inside" must be set dc_cluster_group { name = "test1" namespace = "staging" tenant = "acmecorp" } fleet_label = ["sfo"] // One of the arguments from this list "disable_gpu enable_gpu" must be set disable_gpu = true // One of the arguments from this list "interface_list default_config device_list" must be set interface_list { interfaces { name = "test1" namespace = "staging" tenant = "acmecorp" } } // One of the arguments from this list "logs_streaming_disabled log_receiver" must be set logs_streaming_disabled = true // One of the arguments from this list "default_storage_class storage_class_list" must be set default_storage_class = true // One of the arguments from this list "no_storage_device storage_device_list" must be set storage_device_list { storage_devices { advanced_advanced_parameters = { "key1" = "value1" } // One of the arguments from this list "netapp_trident pure_service_orchestrator openebs_enterprise" must be set netapp_trident { // One of the arguments from this list "netapp_backend_ontap_san netapp_backend_ontap_nas" must be set netapp_backend_ontap_san { // One of the arguments from this list "no_chap use_chap" must be set no_chap = true // One of the arguments from this list "data_lif_ip data_lif_dns_name" must be set data_lif_ip = "10.5.2.4" igroup_name = "igroup_name" labels = { "key1" = "value1" } limit_aggregate_usage = "80" limit_volume_size = "50" // One of the arguments from this list "management_lif_dns_name management_lif_ip" must be set management_lif_dns_name = "storage.local" password { blindfold_secret_info_internal { decryption_provider = "decryption_provider" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "store_provider" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "vault_secret_info clear_secret_info wingman_secret_info blindfold_secret_info" must be set blindfold_secret_info { decryption_provider = "decryption_provider" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "store_provider" } } region = "us_east_1b" storage { labels = { "key1" = "value1" } volume_defaults { encryption = true export_policy = "default" security_style = "unix" snapshot_dir = true snapshot_policy = "none" snapshot_reserve = "10" space_reserve = "thick" split_on_clone = true tiering_policy = "snapshot-only" unix_permissions = "777" } zone = "us_east_1b" } storage_driver_name = "ontap-nas" storage_prefix = "trident" svm = "trident_svm" username = "cluster-admin" volume_defaults { encryption = true export_policy = "default" security_style = "unix" snapshot_dir = true snapshot_policy = "none" snapshot_reserve = "10" space_reserve = "thick" split_on_clone = true tiering_policy = "snapshot-only" unix_permissions = "777" } } } storage_device = "storage_device" } } // One of the arguments from this list "storage_interface_list no_storage_interfaces" must be set no_storage_interfaces = true // One of the arguments from this list "no_storage_static_routes storage_static_routes" must be set no_storage_static_routes = true // One of the arguments from this list "deny_all_usb allow_all_usb usb_policy" must be set deny_all_usb = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_forward_proxy_policy",
			Category:         "Resources",
			ShortDescription: `"The forward_proxy_policy allows CRUD of Forward Proxy Policy resource on Volterra SaaS" ----------------------------------------------------------------------------------------------------- Resource volterra_forward_proxy_policy ====================================== The Forward Proxy Policy allows CRUD of Forward Proxy Policy resource on Volterra SaaS ~> **Note:** Please refer to [Forward Proxy Policy API docs](https://volterra.io/docs/api/views-forward-proxy-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_forward_proxy_policy" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "any_proxy network_connector proxy_label_selector drp_http_connect" must be set any_proxy = true // One of the arguments from this list "deny_list rule_list allow_all allow_list" must be set allow_all = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_gcp_vpc_site",
			Category:         "Resources",
			ShortDescription: `"The gcp_vpc_site allows CRUD of Gcp Vpc Site resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_gcp_vpc_site ============================== The Gcp Vpc Site allows CRUD of Gcp Vpc Site resource on Volterra SaaS ~> **Note:** Please refer to [Gcp Vpc Site API docs](https://volterra.io/docs/api/views-gcp-vpc-site) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_gcp_vpc_site" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "cloud_credentials assisted" must be set cloud_credentials { name = "test1" namespace = "staging" tenant = "acmecorp" } gcp_region = ["us-west1"] instance_type = ["n1-standard-4"] // One of the arguments from this list "logs_streaming_disabled log_receiver" must be set logs_streaming_disabled = true // One of the arguments from this list "ingress_gw ingress_egress_gw voltstack_cluster" must be set ingress_gw { gcp_certified_hw = "gcp-byol-voltmesh" gcp_zone_names = ["us-west1-a, us-west1-b, us-west1-c"] local_network { // One of the arguments from this list "new_network_autogenerate new_network existing_network" must be set new_network_autogenerate { autogenerate = true } } local_subnet { // One of the arguments from this list "new_subnet existing_subnet" must be set new_subnet { primary_ipv4 = "10.1.0.0/16" subnet_name = "subnet1-in-network1" } } node_number = "node_number" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_healthcheck",
			Category:         "Resources",
			ShortDescription: `"The healthcheck allows CRUD of Healthcheck resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_healthcheck ============================= The Healthcheck allows CRUD of Healthcheck resource on Volterra SaaS ~> **Note:** Please refer to [Healthcheck API docs](https://volterra.io/docs/api/healthcheck) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_healthcheck" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "http_health_check tcp_health_check" must be set http_health_check { headers = { "key1" = "value1" } // One of the arguments from this list "use_origin_server_name host_header" must be set use_origin_server_name = true path = "/healthcheck" request_headers_to_remove = ["user-agent"] use_http2 = true } healthy_threshold = ["2"] interval = ["10"] timeout = ["1"] unhealthy_threshold = ["5"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_http_loadbalancer",
			Category:         "Resources",
			ShortDescription: `"The http_loadbalancer allows CRUD of Http Loadbalancer resource on Volterra SaaS" ----------------------------------------------------------------------------------------------- Resource volterra_http_loadbalancer =================================== The Http Loadbalancer allows CRUD of Http Loadbalancer resource on Volterra SaaS ~> **Note:** Please refer to [Http Loadbalancer API docs](https://volterra.io/docs/api/views-http-loadbalancer) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_http_loadbalancer" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "advertise_on_public advertise_custom do_not_advertise advertise_on_public_default_vip" must be set do_not_advertise = true // One of the arguments from this list "no_challenge js_challenge captcha_challenge policy_based_challenge" must be set policy_based_challenge { // One of the arguments from this list "default_captcha_challenge_parameters captcha_challenge_parameters" must be set captcha_challenge_parameters { cookie_expiry = "cookie_expiry" custom_page = "string:///PHA+IFBsZWFzZSBXYWl0IDwvcD4=" enable_captcha_challenge = true } // One of the arguments from this list "no_challenge always_enable_js_challenge always_enable_captcha_challenge" must be set no_challenge = true // One of the arguments from this list "default_js_challenge_parameters js_challenge_parameters" must be set default_js_challenge_parameters = true // One of the arguments from this list "default_mitigation_settings malicious_user_mitigation" must be set default_mitigation_settings = true rule_list { rules { metadata { description = "Virtual Host for acmecorp website" disable = true name = "acmecorp-web" } spec { arg_matchers { invert_matcher = true // One of the arguments from this list "check_not_present item presence check_present" must be set presence = true name = "name" } // One of the arguments from this list "asn_list asn_matcher any_asn" must be set asn_matcher { asn_sets { name = "test1" namespace = "staging" tenant = "acmecorp" } } body_matcher { exact_values = ["['new york', 'london', 'sydney', 'tokyo', 'cairo']"] regex_values = ["['^new .*$', 'san f.*', '.* del .*']"] transformers = ["transformers"] } // One of the arguments from this list "disable_challenge enable_javascript_challenge enable_captcha_challenge" must be set disable_challenge = true // One of the arguments from this list "client_name client_selector client_name_matcher any_client" must be set any_client = true cookie_matchers { invert_matcher = true // One of the arguments from this list "check_present check_not_present item presence" must be set check_present = true name = "Session" } domain_matcher { exact_values = ["['new york', 'london', 'sydney', 'tokyo', 'cairo']"] regex_values = ["['^new .*$', 'san f.*', '.* del .*']"] } expiration_timestamp = "0001-01-01T00:00:00Z" headers { invert_matcher = true // One of the arguments from this list "presence check_present check_not_present item" must be set presence = true name = "Accept-Encoding" } http_method { invert_matcher = true methods = ["['GET', 'POST', 'DELETE']"] } // One of the arguments from this list "any_ip ip_prefix_list ip_matcher" must be set ip_prefix_list { invert_match = true ip_prefixes = ["192.168.20.0/24"] } path { exact_values = ["['/api/web/namespaces/project179/users/user1', '/api/config/namespaces/accounting/bgps', '/api/data/namespaces/project443/virtual_host_101']"] prefix_values = ["['/api/web/namespaces/project179/users/', '/api/config/namespaces/', '/api/data/namespaces/']"] regex_values = ["['^/api/web/namespaces/abc/users/([a-z]([-a-z0-9]*[a-z0-9])?)$', '/api/data/namespaces/proj404/virtual_hosts/([a-z]([-a-z0-9]*[a-z0-9])?)$']"] transformers = ["transformers"] } query_params { invert_matcher = true key = "sourceid" // One of the arguments from this list "presence check_present check_not_present item" must be set check_present = true } tls_fingerprint_matcher { classes = ["classes"] exact_values = ["exact_values"] excluded_values = ["excluded_values"] } } } } // One of the arguments from this list "default_temporary_blocking_parameters temporary_user_blocking" must be set default_temporary_blocking_parameters = true } domains = ["www.foo.com"] // One of the arguments from this list "ring_hash round_robin least_active random source_ip_stickiness cookie_stickiness" must be set round_robin = true // One of the arguments from this list "http https_auto_cert https" must be set https_auto_cert { add_hsts = true http_redirect = true // One of the arguments from this list "no_mtls use_mtls" must be set no_mtls = true // One of the arguments from this list "server_name append_server_name pass_through default_header" must be set server_name = "server_name" tls_config { // One of the arguments from this list "default_security medium_security low_security custom_security" must be set custom_security { cipher_suites = ["cipher_suites"] max_version = "max_version" min_version = "min_version" } } } // One of the arguments from this list "disable_rate_limit rate_limit" must be set disable_rate_limit = true // One of the arguments from this list "no_service_policies active_service_policies service_policies_from_namespace" must be set service_policies_from_namespace = true // One of the arguments from this list "disable_waf waf waf_rule" must be set waf { name = "test1" namespace = "staging" tenant = "acmecorp" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_ip_prefix_set",
			Category:         "Resources",
			ShortDescription: `"The ip_prefix_set allows CRUD of Ip Prefix Set resource on Volterra SaaS" --------------------------------------------------------------------------------------- Resource volterra_ip_prefix_set =============================== The Ip Prefix Set allows CRUD of Ip Prefix Set resource on Volterra SaaS ~> **Note:** Please refer to [Ip Prefix Set API docs](https://volterra.io/docs/api/ip-prefix-set) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_ip_prefix_set" "example" { name = "acmecorp-web" namespace = "staging" prefix = ["['10.2.1.0/24', '192.168.8.0/29', '10.7.64.160/27']"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_k8s_cluster",
			Category:         "Resources",
			ShortDescription: `"The k8s_cluster allows CRUD of K8s Cluster resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_k8s_cluster ============================= The K8s Cluster allows CRUD of K8s Cluster resource on Volterra SaaS ~> **Note:** Please refer to [K8s Cluster API docs](https://volterra.io/docs/api/k8s-cluster) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_k8s_cluster" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "use_default_cluster_role_bindings use_custom_cluster_role_bindings" must be set use_default_cluster_role_bindings = true // One of the arguments from this list "use_default_cluster_roles use_custom_cluster_role_list" must be set use_default_cluster_roles = true // One of the arguments from this list "no_global_access global_access_enable" must be set no_global_access = true // One of the arguments from this list "no_insecure_registries insecure_registry_list" must be set no_insecure_registries = true // One of the arguments from this list "no_local_access local_access_config" must be set no_local_access = true // One of the arguments from this list "use_custom_psp_list use_default_psp" must be set use_default_psp = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_k8s_cluster_role",
			Category:         "Resources",
			ShortDescription: `"The k8s_cluster_role allows CRUD of K8s Cluster Role resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_k8s_cluster_role ================================== The K8s Cluster Role allows CRUD of K8s Cluster Role resource on Volterra SaaS ~> **Note:** Please refer to [K8s Cluster Role API docs](https://volterra.io/docs/api/k8s-cluster-role) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_k8s_cluster_role" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "policy_rule_list k8s_cluster_role_selector yaml" must be set policy_rule_list { policy_rule { // One of the arguments from this list "resource_list non_resource_url_list" must be set resource_list { api_groups = ["rbac.authorization.k8s.io"] resource_instances = ["admin"] resource_types = ["role"] verbs = ["get"] } } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_k8s_cluster_role_binding",
			Category:         "Resources",
			ShortDescription: `"The k8s_cluster_role_binding allows CRUD of K8s Cluster Role Binding resource on Volterra SaaS" ------------------------------------------------------------------------------------------------------------- Resource volterra_k8s_cluster_role_binding ========================================== The K8s Cluster Role Binding allows CRUD of K8s Cluster Role Binding resource on Volterra SaaS ~> **Note:** Please refer to [K8s Cluster Role Binding API docs](https://volterra.io/docs/api/k8s-cluster-role-binding) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_k8s_cluster_role_binding" "example" { name = "acmecorp-web" namespace = "staging" k8s_cluster_role { name = "test1" namespace = "staging" tenant = "acmecorp" } subjects { // One of the arguments from this list "service_account group user" must be set user = "user1@example.com" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_k8s_pod_security_policy",
			Category:         "Resources",
			ShortDescription: `"The k8s_pod_security_policy allows CRUD of K8s Pod Security Policy resource on Volterra SaaS" ----------------------------------------------------------------------------------------------------------- Resource volterra_k8s_pod_security_policy ========================================= The K8s Pod Security Policy allows CRUD of K8s Pod Security Policy resource on Volterra SaaS ~> **Note:** Please refer to [K8s Pod Security Policy API docs](https://volterra.io/docs/api/k8s-pod-security-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_k8s_pod_security_policy" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "yaml psp_spec" must be set psp_spec { allow_privilege_escalation = true // One of the arguments from this list "allowed_capabilities no_allowed_capabilities" must be set no_allowed_capabilities = true allowed_csi_drivers = ["allowed_csi_drivers"] allowed_flex_volumes = ["allowed_flex_volumes"] allowed_host_paths { path_prefix = "path_prefix" read_only = true } allowed_proc_mounts = ["allowed_proc_mounts"] allowed_unsafe_sysctls = ["allowed_unsafe_sysctls"] default_allow_privilege_escalation = true // One of the arguments from this list "no_default_capabilities default_capabilities" must be set no_default_capabilities = true // One of the arguments from this list "no_drop_capabilities drop_capabilities" must be set no_drop_capabilities = true forbidden_sysctls = ["forbidden_sysctls"] // One of the arguments from this list "no_fs_groups fs_group_strategy_options" must be set no_fs_groups = true // One of the arguments from this list "run_as_group no_run_as_group" must be set no_run_as_group = true host_ipc = true host_network = true host_pid = true host_port_ranges = "80,443,8080-8191,9080" privileged = true read_only_root_filesystem = true // One of the arguments from this list "runtime_class no_runtime_class" must be set no_runtime_class = true // One of the arguments from this list "no_se_linux_options se_linux_options" must be set no_se_linux_options = true // One of the arguments from this list "no_supplemental_groups supplemental_groups" must be set no_supplemental_groups = true // One of the arguments from this list "no_run_as_user run_as_user" must be set no_run_as_user = true volumes = ["volumes"] } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_malicious_user_mitigation",
			Category:         "Resources",
			ShortDescription: `"The malicious_user_mitigation allows CRUD of Malicious User Mitigation resource on Volterra SaaS" --------------------------------------------------------------------------------------------------------------- Resource volterra_malicious_user_mitigation =========================================== The Malicious User Mitigation allows CRUD of Malicious User Mitigation resource on Volterra SaaS ~> **Note:** Please refer to [Malicious User Mitigation API docs](https://volterra.io/docs/api/malicious-user-mitigation) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_malicious_user_mitigation" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_modify_site",
			Category:         "Resources",
			ShortDescription: `"The volterra_modify_site helps update site fields Volterra SaaS" ------------------------------------------------------------------------------ Resource volterra_modify_site ============================= ================================ volterra_modify_site helps to update fields of site object. This is not applicable for site created through view style APIs. ~> **Note:** Please refer to [Site api docs](https://volterra.io/docs/api/site) to learn more Example Usage ------------- --- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_modify_site" "example" { name = "site1" labels = { "ves.io/fleet" = "fleet-car" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ------------------ --- ` + "`" + `annotations` + "`" + ` - (Optional) queryable and should be preserved when modifying objects. (` + "`" + `String` + "`" + `). ` + "`" + `description` + "`" + ` - (Optional) Human readable description for the object (` + "`" + `String` + "`" + `). ` + "`" + `disable` + "`" + ` - (Optional) A value of true will administratively disable the object (` + "`" + `Bool` + "`" + `). ` + "`" + `labels` + "`" + ` - (Optional) by selector expression (` + "`" + `String` + "`" + `). ` + "`" + `name` + "`" + ` - (Required) The value of name has to follow DNS-1035 format. (` + "`" + `String` + "`" + `). ` + "`" + `namespace` + "`" + ` - (Required) Must be a DNS_LABEL format. For a namespace object itself, namespace value will be "" (` + "`" + `String` + "`" + `). ` + "`" + `address` + "`" + ` - (Optional) Site's geographical address that can be used determine its latitude and longitude. Example: "123 Street, city, country, postal code" (` + "`" + `String` + "`" + `). ` + "`" + `bgp_peer_address` + "`" + ` - (Optional) bgp peer address that can be used as parameter for BGP configuration when BGP is configured to fetch BGP peer address from site Object. This can be used to change peer address per site in fleet (` + "`" + `String` + "`" + `). ` + "`" + `bgp_router_id` + "`" + ` - (Optional) bgp router id that can be used as parameter for BGP configuration when BGP is configured to fetch BGP router ID from site object. This can be used to change router id per site in a fleet (` + "`" + `String` + "`" + `). ` + "`" + `coordinates` + "`" + ` - (Optional) Coordinates of the site which provides the site physical location ` + "`" + `latitude` + "`" + ` - (Optional) Latitude of the site location (` + "`" + `String` + "`" + `). ` + "`" + `longitude` + "`" + ` - (Optional) Longitude of site location (` + "`" + `String` + "`" + `). ` + "`" + `desired_pool_count` + "`" + ` - (Optional) Desire pool count represent number of nodes in scaling group for manual scaling. It is valid only for k8s worker nodes not masters. The desired count must be less than or equal to the maximum size of the group. If new value for Desired is greater than Max, then Max must be updated in cloud provider configuration (` + "`" + `Int` + "`" + `). ` + "`" + `inside_nameserver` + "`" + ` - (Optional) DNS server IP to be used for name resolution in inside network (` + "`" + `String` + "`" + `). ` + "`" + `inside_vip` + "`" + ` - (Optional) Virtual IP to be used as automatic VIP for site local inside network. See documentation for "VIP" in advertise policy to see when Inside VIP is used. When configured, this is used as VIP (depending on advertise policy configuration). When not configured, site local inside interface ip will be used as VIP (` + "`" + `String` + "`" + `). ` + "`" + `operating_system_version` + "`" + ` - (Optional) Desired Operating System version for this site (` + "`" + `String` + "`" + `). ` + "`" + `volterra_software_version` + "`" + ` - (Optional) Desired Volterra software version for this site, a string matching released set of software components (` + "`" + `String` + "`" + `). ` + "`" + `outside_nameserver` + "`" + ` - (Optional) DNS server IP to be used for name resolution in outside network (` + "`" + `String` + "`" + `). ` + "`" + `outside_vip` + "`" + ` - (Optional) Virtual IP to be used as automatic VIP for site local outside network. See documentation for "VIP" in advertise policy to see when Outside VIP is used. When configured, this is used as VIP (depending on advertise policy configuration). When not configured, site local interface ip will be used as VIP (` + "`" + `String` + "`" + `). ` + "`" + `site_to_site_network_type` + "`" + ` - (Optional) Virtual-network of type VIRTUAL_NETWORK_SITE_LOCAL provides connectivity to public (outside) network. This is an insecure network and is connected to public internet via NAT Gateways/firwalls Virtual-network of this type is local to every site. Two virtual networks of this type on different sites are neither related nor connected. Constraints: There can be atmost one virtual network of this type in a given site. This network type is supported on CE sites. This network is created automatically and present on all sites Virtual-network of type VIRTUAL_NETWORK_SITE_LOCAL_INSIDE is a private network inside site. It is a secure network and is not connected to public network. Virtual-network of this type is local to every site. Two virtual networks of this type on different sites are neither related nor connected. Constraints: There can be atmost one virtual network of this type in a given site. This network type is supported on CE sites. This network is created during provisioning of site User defined per-site virtual network. Scope of this virtual network is limited to the site. This is not yet supported Virtual-network of type VIRTUAL_NETWORK_PUBLIC directly conects to the public internet. Virtual-network of this type is local to every site. Two virtual networks of this type on different sites are neither related nor connected. Constraints: There can be atmost one virtual network of this type in a given site. This network type is supported on RE sites only It is an internally created by the system. They must not be created by user Virtual Neworks with global scope across different sites in Volterra domain. An example global virtual-network called "AIN Network" is created for every tenant. for volterra fabric Constraints: It is currently only supported as internally created by the system. Vk8s service network for a given tenant. Used to advertise a virtual host only to vk8s pods for that tenant Constraints: It is an internally created by the system. Must not be created by user VER internal network for the site. It can only be used for virtual hosts with SMA_PROXY type proxy Constraints: It is an internally created by the system. Must not be created by user Virtual-network of type VIRTUAL_NETWORK_SITE_LOCAL_INSIDE_OUTSIDE represents both VIRTUAL_NETWORK_SITE_LOCAL and VIRTUAL_NETWORK_SITE_LOCAL_INSIDE Constraints: This network type is only meaningful in an advertise policy When virtual-network of type VIRTUAL_NETWORK_IP_AUTO is selected for an endpoint, VER will try to determine the network based on the provided IP address Constraints: This network type is only meaningful in an endpoint Valid values are: ` + "`" + `VIRTUAL_NETWORK_SITE_LOCAL` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_SITE_LOCAL_INSIDE` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_PER_SITE` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_PUBLIC` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_GLOBAL` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_SITE_SERVICE` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_VER_INTERNAL` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_SITE_LOCAL_INSIDE_OUTSIDE` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_IP_AUTO` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `site_to_site_tunnel_ip` + "`" + ` - (Optional) VIP in the site_to_site_network_type configured above used for terminating IPSec/SSL tunnels created with SiteMeshGroup (` + "`" + `String` + "`" + `). ` + "`" + `tunnel_dead_timeout` + "`" + ` - (Optional) Time interval, in millisec, within which any ipsec / ssl connection from the site going down is detected. When not set (== 0), a default value of 10000 msec will be used (` + "`" + `Int` + "`" + `). ` + "`" + `tunnel_type` + "`" + ` - (Optional) Tunnel encapsulation to be used between sites. Valid values are ` + "`" + `SITE_TO_SITE_TUNNEL_IPSEC_OR_SSL` + "`" + ` ` + "`" + `SITE_TO_SITE_TUNNEL_IPSEC` + "`" + ` ` + "`" + `SITE_TO_SITE_TUNNEL_SSL` + "`" + ` ` + "`" + `SITE_TO_SITE_CLEAR` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `vip_vrrp_mode` + "`" + ` - (Optional) VRRP advertisement mode for VIP. Valid values are ` + "`" + `VIP_VRRP_INVALID` + "`" + ` ` + "`" + `VIP_VRRP_ENABLE` + "`" + ` ` + "`" + `VIP_VRRP_DISABLE` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `volterra_software_overide` + "`" + ` - (Optional) Decide which software version takes effect in case of conflict between site and fleet. Valid values are ` + "`" + `"SITE_SOFTWARE_OVERRIDE_SITE` + "`" + ` ` + "`" + `SITE_SOFTWARE_OVERRIDE_NEWER` + "`" + ` ` + "`" + `SITE_SOFTWARE_OVERRIDE_FLEET` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `retry` + "`" + ` - (Optional) Number of retries to get the volterra site config, before it fails (` + "`" + `Int` + "`" + `). ` + "`" + `wait_time` + "`" + ` - (Optional) Number of seconds to wait before it retries (` + "`" + `Int` + "`" + `). Attribute Reference -------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_namespace",
			Category:         "Resources",
			ShortDescription: `"The volterra_namespace allows CRD of namespace resource on Volterra SaaS" --------------------------------------------------------------------------------------- Resource: volterra_namespace ============================ Namespace creates logical independent workspace within a tenant. This allows CRD of namespace resource on Volterra. ~> **Note:** Please refer to [Namespace api docs](https://volterra.io/docs/api/namespace) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_namespace" "example" { name = "example" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ------------------ - ` + "`" + `name` + "`" + ` - (Required) Name of the namespace to be queried Attribute Reference ----------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_network_connector",
			Category:         "Resources",
			ShortDescription: `"The network_connector allows CRUD of Network Connector resource on Volterra SaaS" ----------------------------------------------------------------------------------------------- Resource volterra_network_connector =================================== The Network Connector allows CRUD of Network Connector resource on Volterra SaaS ~> **Note:** Please refer to [Network Connector API docs](https://volterra.io/docs/api/network-connector) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_network_connector" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "sli_to_slo_snat sli_to_slo_dr sli_to_global_dr sli_to_global_snat slo_to_global_dr slo_to_global_snat" must be set sli_to_slo_snat { // One of the arguments from this list "interface_ip snat_pool snat_pool_allocator" must be set snat_pool_allocator { name = "test1" namespace = "staging" tenant = "acmecorp" } // One of the arguments from this list "default_gw_snat dynamic_routing" must be set dynamic_routing = true } // One of the arguments from this list "disable_forward_proxy enable_forward_proxy" must be set disable_forward_proxy = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_network_firewall",
			Category:         "Resources",
			ShortDescription: `"The network_firewall allows CRUD of Network Firewall resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_network_firewall ================================== The Network Firewall allows CRUD of Network Firewall resource on Volterra SaaS ~> **Note:** Please refer to [Network Firewall API docs](https://volterra.io/docs/api/network-firewall) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_network_firewall" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "disable_fast_acl active_fast_acls fast_acl_set" must be set disable_fast_acl = true // One of the arguments from this list "disable_forward_proxy_policy active_forward_proxy_policies forward_proxy_policy_set" must be set forward_proxy_policy_set { name = "test1" namespace = "staging" tenant = "acmecorp" } // One of the arguments from this list "disable_network_policy active_network_policies network_policy_set" must be set network_policy_set { name = "test1" namespace = "staging" tenant = "acmecorp" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_network_interface",
			Category:         "Resources",
			ShortDescription: `"The network_interface allows CRUD of Network Interface resource on Volterra SaaS" ----------------------------------------------------------------------------------------------- Resource volterra_network_interface =================================== The Network Interface allows CRUD of Network Interface resource on Volterra SaaS ~> **Note:** Please refer to [Network Interface API docs](https://volterra.io/docs/api/network-interface) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_network_interface" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "legacy_interface dedicated_management_interface dedicated_interface ethernet_interface tunnel_interface" must be set dedicated_interface { device = "eth0" // One of the arguments from this list "monitor_disabled monitor" must be set monitor_disabled = true mtu = "1450" // One of the arguments from this list "cluster node" must be set cluster = true // One of the arguments from this list "not_primary is_primary" must be set not_primary = true priority = "42" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_network_policy",
			Category:         "Resources",
			ShortDescription: `"The network_policy allows CRUD of Network Policy resource on Volterra SaaS" ----------------------------------------------------------------------------------------- Resource volterra_network_policy ================================ The Network Policy allows CRUD of Network Policy resource on Volterra SaaS ~> **Note:** Please refer to [Network Policy API docs](https://volterra.io/docs/api/network-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_network_policy" "example" { name = "acmecorp-web" namespace = "staging" endpoint { // One of the arguments from this list "prefix_list any outside_endpoints inside_endpoints interface namespace label_selector" must be set outside_endpoints = true } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_network_policy_rule",
			Category:         "Resources",
			ShortDescription: `"The network_policy_rule allows CRUD of Network Policy Rule resource on Volterra SaaS" --------------------------------------------------------------------------------------------------- Resource volterra_network_policy_rule ===================================== The Network Policy Rule allows CRUD of Network Policy Rule resource on Volterra SaaS ~> **Note:** Please refer to [Network Policy Rule API docs](https://volterra.io/docs/api/network-policy-rule) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_network_policy_rule" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_network_policy_set",
			Category:         "Resources",
			ShortDescription: `"The network_policy_set allows CRUD of Network Policy Set resource on Volterra SaaS" ------------------------------------------------------------------------------------------------- Resource volterra_network_policy_set ==================================== The Network Policy Set allows CRUD of Network Policy Set resource on Volterra SaaS ~> **Note:** Please refer to [Network Policy Set API docs](https://volterra.io/docs/api/network-policy-set) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_network_policy_set" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_network_policy_view",
			Category:         "Resources",
			ShortDescription: `"The network_policy_view allows CRUD of Network Policy View resource on Volterra SaaS" --------------------------------------------------------------------------------------------------- Resource volterra_network_policy_view ===================================== The Network Policy View allows CRUD of Network Policy View resource on Volterra SaaS ~> **Note:** Please refer to [Network Policy View API docs](https://volterra.io/docs/api/views-network-policy-view) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_network_policy_view" "example" { name = "acmecorp-web" namespace = "staging" endpoint { // One of the arguments from this list "namespace label_selector prefix_list any outside_endpoints inside_endpoints interface" must be set label_selector { expressions = ["region in (us-west1, us-west2),tier in (staging)"] } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_origin_pool",
			Category:         "Resources",
			ShortDescription: `"The origin_pool allows CRUD of Origin Pool resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_origin_pool ============================= The Origin Pool allows CRUD of Origin Pool resource on Volterra SaaS ~> **Note:** Please refer to [Origin Pool API docs](https://volterra.io/docs/api/views-origin-pool) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_origin_pool" "example" { name = "acmecorp-web" namespace = "staging" endpoint_selection = ["endpoint_selection"] loadbalancer_algorithm = ["loadbalancer_algorithm"] origin_servers { // One of the arguments from this list "voltadn_private_ip voltadn_private_name public_name private_ip k8s_service custom_endpoint_object public_ip private_name consul_service" must be set public_ip { ip = "ip" } labels = { "key1" = "value1" } } port = ["9080"] // One of the arguments from this list "no_tls use_tls" must be set no_tls = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_policer",
			Category:         "Resources",
			ShortDescription: `"The policer allows CRUD of Policer resource on Volterra SaaS" --------------------------------------------------------------------------- Resource volterra_policer ========================= The Policer allows CRUD of Policer resource on Volterra SaaS ~> **Note:** Please refer to [Policer API docs](https://volterra.io/docs/api/policer) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_policer" "example" { name = "acmecorp-web" namespace = "staging" burst_size = ["10000"] committed_information_rate = ["10000"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_protocol_policer",
			Category:         "Resources",
			ShortDescription: `"The protocol_policer allows CRUD of Protocol Policer resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_protocol_policer ================================== The Protocol Policer allows CRUD of Protocol Policer resource on Volterra SaaS ~> **Note:** Please refer to [Protocol Policer API docs](https://volterra.io/docs/api/protocol-policer) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_protocol_policer" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_public_ip",
			Category:         "Resources",
			ShortDescription: `"The volterra_public_ip helps update public IP fields on Volterra SaaS" ------------------------------------------------------------------------------------ Resource volterra_public_ip =========================== ============================= volterra_public_ip helps to update fields of site object. This is not applicable for site created through view style APIs. ~> **Note:** Please refer to [Public IP api docs](https://volterra.io/docs/api/public-ip) to learn more Example Usage -------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_rate_limiter",
			Category:         "Resources",
			ShortDescription: `"The rate_limiter allows CRUD of Rate Limiter resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_rate_limiter ============================== The Rate Limiter allows CRUD of Rate Limiter resource on Volterra SaaS ~> **Note:** Please refer to [Rate Limiter API docs](https://volterra.io/docs/api/rate-limiter) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_rate_limiter" "example" { name = "acmecorp-web" namespace = "staging" limits { total_number = "total_number" unit = "unit" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_registration_approval",
			Category:         "Resources",
			ShortDescription: `"The volterra_registration_approval helps approve registration request" ---------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_role",
			Category:         "Resources",
			ShortDescription: `"The role allows CRUD of Role resource on Volterra SaaS" --------------------------------------------------------------------- Resource volterra_role ====================== The Role allows CRUD of Role resource on Volterra SaaS ~> **Note:** Please refer to [Role API docs](https://volterra.io/docs/api/role) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_role" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_route",
			Category:         "Resources",
			ShortDescription: `"The route allows CRUD of Route resource on Volterra SaaS" ----------------------------------------------------------------------- Resource volterra_route ======================= The Route allows CRUD of Route resource on Volterra SaaS ~> **Note:** Please refer to [Route API docs](https://volterra.io/docs/api/route) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_route" "example" { name = "acmecorp-web" namespace = "staging" routes { disable_custom_script = true disable_location_add = true match { headers { invert_match = true name = "Content-Type" // One of the arguments from this list "exact regex presence" must be set presence = true } http_method = "http_method" path { // One of the arguments from this list "prefix path regex" must be set prefix = "prefix" } query_params { key = "assignee_username" // One of the arguments from this list "exact regex" must be set exact = "exact" } } request_headers_to_add { append = true name = "name" value = "value" } request_headers_to_remove = ["host"] response_headers_to_add { append = true name = "name" value = "value" } response_headers_to_remove = ["host"] // One of the arguments from this list "route_destination route_redirect route_direct_response" must be set route_destination { buffer_policy { disabled = true max_request_bytes = "2048" max_request_time = "30" } cors_policy { allow_credentials = true allow_headers = "allow_headers" allow_methods = "allow_methods" allow_origin = ["allow_origin"] allow_origin_regex = ["allow_origin_regex"] disabled = true expose_headers = "expose_headers" max_age = "max_age" maximum_age = "maximum_age" } destinations { cluster { name = "test1" namespace = "staging" tenant = "acmecorp" } endpoint_subsets = { "key1" = "value1" } weight = "weight" } endpoint_subsets = { "key1" = "value1" } hash_policy { // One of the arguments from this list "header_name cookie source_ip" must be set cookie { name = "userid" path = "/Users/userid/browser/cookies" ttl = "ttl" } terminal = true } // One of the arguments from this list "host_rewrite auto_host_rewrite" must be set host_rewrite = "one.volterra.com" mirror_policy { cluster { name = "test1" namespace = "staging" tenant = "acmecorp" } percent { denominator = "denominator" numerator = "5" } } prefix_rewrite = "/" priority = "priority" retry_policy { back_off { base_interval = "base_interval" max_interval = "max_interval" } num_retries = "num_retries" per_try_timeout = "per_try_timeout" retriable_status_codes = ["retriable_status_codes"] retry_on = "5xx" } spdy_config { use_spdy = true } timeout = "timeout" web_socket_config { idle_timeout = "idle_timeout" max_connect_attempts = "max_connect_attempts" use_websocket = true } } service_policy { disable = true } waf_type { // One of the arguments from this list "waf waf_rules" must be set waf { waf { name = "test1" namespace = "staging" tenant = "acmecorp" } } } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_secret_policy",
			Category:         "Resources",
			ShortDescription: `"The secret_policy allows CRUD of Secret Policy resource on Volterra SaaS" --------------------------------------------------------------------------------------- Resource volterra_secret_policy =============================== The Secret Policy allows CRUD of Secret Policy resource on Volterra SaaS ~> **Note:** Please refer to [Secret Policy API docs](https://volterra.io/docs/api/secret-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_secret_policy" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_secret_policy_rule",
			Category:         "Resources",
			ShortDescription: `"The secret_policy_rule allows CRUD of Secret Policy Rule resource on Volterra SaaS" ------------------------------------------------------------------------------------------------- Resource volterra_secret_policy_rule ==================================== The Secret Policy Rule allows CRUD of Secret Policy Rule resource on Volterra SaaS ~> **Note:** Please refer to [Secret Policy Rule API docs](https://volterra.io/docs/api/secret-policy-rule) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_secret_policy_rule" "example" { name = "acmecorp-web" namespace = "staging" action = ["action"] // One of the arguments from this list "client_name client_selector client_name_matcher" must be set client_name = "ver.re01.int.ves.io" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_service_policy",
			Category:         "Resources",
			ShortDescription: `"The service_policy allows CRUD of Service Policy resource on Volterra SaaS" ----------------------------------------------------------------------------------------- Resource volterra_service_policy ================================ The Service Policy allows CRUD of Service Policy resource on Volterra SaaS ~> **Note:** Please refer to [Service Policy API docs](https://volterra.io/docs/api/service-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_service_policy" "example" { name = "acmecorp-web" namespace = "staging" algo = ["algo"] // One of the arguments from this list "legacy_rule_list allow_all_requests deny_all_requests internally_generated allow_list deny_list rule_list" must be set rule_list { rules { metadata { description = "Virtual Host for acmecorp website" disable = true name = "acmecorp-web" } spec { action = "action" api_group_matcher { invert_matcher = true match = ["['new york', 'london', 'sydney', 'tokyo', 'cairo']"] } arg_matchers { invert_matcher = true // One of the arguments from this list "presence check_present check_not_present item" must be set presence = true name = "name" } // One of the arguments from this list "any_asn asn_list asn_matcher" must be set any_asn = true body_matcher { exact_values = ["['new york', 'london', 'sydney', 'tokyo', 'cairo']"] regex_values = ["['^new .*$', 'san f.*', '.* del .*']"] transformers = ["transformers"] } challenge_action = "challenge_action" // One of the arguments from this list "any_client client_name client_selector client_name_matcher" must be set client_selector { expressions = ["region in (us-west1, us-west2),tier in (staging)"] } client_role { match = "ves-io-monitor-role" } cookie_matchers { invert_matcher = true // One of the arguments from this list "presence check_present check_not_present item" must be set presence = true name = "Session" } domain_matcher { exact_values = ["['new york', 'london', 'sydney', 'tokyo', 'cairo']"] regex_values = ["['^new .*$', 'san f.*', '.* del .*']"] transformers = ["transformers"] } // One of the arguments from this list "any_dst_asn dst_asn_list dst_asn_matcher" must be set any_dst_asn = true // One of the arguments from this list "any_dst_ip dst_ip_prefix_list dst_ip_matcher" must be set any_dst_ip = true expiration_timestamp = "0001-01-01T00:00:00Z" forwarding_class { name = "test1" namespace = "staging" tenant = "acmecorp" } goto_policy { name = "test1" namespace = "staging" tenant = "acmecorp" } headers { invert_matcher = true // One of the arguments from this list "check_not_present item presence check_present" must be set presence = true name = "Accept-Encoding" } http_method { invert_matcher = true methods = ["['GET', 'POST', 'DELETE']"] } // One of the arguments from this list "any_ip ip_prefix_list ip_matcher" must be set any_ip = true l4_dest_matcher { invert_matcher = true l4_dests { port_ranges = "80,443,8080-8191,9080" prefixes = ["prefixes"] } } label_matcher { keys = ["['environment', 'location', 'deployment']"] } malicious_user_mitigation {} malicious_user_mitigation_bypass = true path { exact_values = ["['/api/web/namespaces/project179/users/user1', '/api/config/namespaces/accounting/bgps', '/api/data/namespaces/project443/virtual_host_101']"] prefix_values = ["['/api/web/namespaces/project179/users/', '/api/config/namespaces/', '/api/data/namespaces/']"] regex_values = ["['^/api/web/namespaces/abc/users/([a-z]([-a-z0-9]*[a-z0-9])?)$', '/api/data/namespaces/proj404/virtual_hosts/([a-z]([-a-z0-9]*[a-z0-9])?)$']"] transformers = ["transformers"] } port_matcher { invert_matcher = true ports = ["8000-8191"] } query_params { invert_matcher = true key = "sourceid" // One of the arguments from this list "presence check_present check_not_present item" must be set presence = true } rate_limiter { name = "test1" namespace = "staging" tenant = "acmecorp" } scheme = ["HTTPS"] server_selector { expressions = ["region in (us-west1, us-west2),tier in (staging)"] } tls_fingerprint_matcher { classes = ["classes"] exact_values = ["exact_values"] excluded_values = ["excluded_values"] } url_matcher { invert_matcher = true url_items { // One of the arguments from this list "domain_value domain_regex" must be set domain_regex = "*.mybloggingwebsite.org" // One of the arguments from this list "path_regex path_value path_prefix" must be set path_value = "/api/web/namespaces/project179/users/user1" } } virtual_host_matcher { exact_values = ["['new york', 'london', 'sydney', 'tokyo', 'cairo']"] regex_values = ["['^new .*$', 'san f.*', '.* del .*']"] transformers = ["transformers"] } waf_action { // One of the arguments from this list "none waf_skip_processing waf_rule_control waf_inline_rule_control waf_in_monitoring_mode" must be set waf_rule_control { exclude_rule_ids { name = "test1" namespace = "staging" tenant = "acmecorp" } monitoring_mode = true } } } } } // One of the arguments from this list "any_server server_name server_selector server_name_matcher" must be set any_server = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_service_policy_rule",
			Category:         "Resources",
			ShortDescription: `"The service_policy_rule allows CRUD of Service Policy Rule resource on Volterra SaaS" --------------------------------------------------------------------------------------------------- Resource volterra_service_policy_rule ===================================== The Service Policy Rule allows CRUD of Service Policy Rule resource on Volterra SaaS ~> **Note:** Please refer to [Service Policy Rule API docs](https://volterra.io/docs/api/service-policy-rule) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_service_policy_rule" "example" { name = "acmecorp-web" namespace = "staging" action = ["action"] // One of the arguments from this list "any_asn asn_list asn_matcher" must be set any_asn = true challenge_action = ["challenge_action"] // One of the arguments from this list "any_client client_name client_selector client_name_matcher" must be set any_client = true // One of the arguments from this list "any_ip ip_prefix_list ip_matcher" must be set any_ip = true waf_action { // One of the arguments from this list "waf_in_monitoring_mode none waf_skip_processing waf_rule_control waf_inline_rule_control" must be set waf_inline_rule_control { exclude_rule_ids = ["exclude_rule_ids"] monitoring_mode = true } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_service_policy_set",
			Category:         "Resources",
			ShortDescription: `"The service_policy_set allows CRUD of Service Policy Set resource on Volterra SaaS" ------------------------------------------------------------------------------------------------- Resource volterra_service_policy_set ==================================== The Service Policy Set allows CRUD of Service Policy Set resource on Volterra SaaS ~> **Note:** Please refer to [Service Policy Set API docs](https://volterra.io/docs/api/service-policy-set) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_service_policy_set" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_site_state",
			Category:         "Resources",
			ShortDescription: `"The volterra_site_state changes state of the site" -------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_tcp_loadbalancer",
			Category:         "Resources",
			ShortDescription: `"The tcp_loadbalancer allows CRUD of Tcp Loadbalancer resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_tcp_loadbalancer ================================== The Tcp Loadbalancer allows CRUD of Tcp Loadbalancer resource on Volterra SaaS ~> **Note:** Please refer to [Tcp Loadbalancer API docs](https://volterra.io/docs/api/views-tcp-loadbalancer) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_tcp_loadbalancer" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "advertise_custom do_not_advertise advertise_on_public_default_vip advertise_on_public" must be set advertise_on_public_default_vip = true // One of the arguments from this list "hash_policy_choice_least_active hash_policy_choice_random hash_policy_choice_source_ip_stickiness hash_policy_choice_round_robin" must be set hash_policy_choice_round_robin = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_tf_params_action",
			Category:         "Resources",
			ShortDescription: `"The volterra_tf_params_action runs action api on view sites" -----------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_tgw_vpc_ip_prefixes",
			Category:         "Resources",
			ShortDescription: `"The volterra_tgw_vpc_ip_prefixes runs set_vpc_ip_prefixes api on aws_tgw_site" -----------------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_tgw_vpn_tunnels",
			Category:         "Resources",
			ShortDescription: `"The volterra_tgw_vpn_tunnels runs set_vpc_ip_prefixes api on aws_tgw_site" -------------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_token",
			Category:         "Resources",
			ShortDescription: `"The token allows CRUD of Token resource on Volterra SaaS" ----------------------------------------------------------------------- Resource volterra_token ======================= The Token allows CRUD of Token resource on Volterra SaaS ~> **Note:** Please refer to [Token API docs](https://volterra.io/docs/api/token) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_token" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_tunnel",
			Category:         "Resources",
			ShortDescription: `"The tunnel allows CRUD of Tunnel resource on Volterra SaaS" ------------------------------------------------------------------------- Resource volterra_tunnel ======================== The Tunnel allows CRUD of Tunnel resource on Volterra SaaS ~> **Note:** Please refer to [Tunnel API docs](https://volterra.io/docs/api/tunnel) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_tunnel" "example" { name = "acmecorp-web" namespace = "staging" local_ip { // One of the arguments from this list "intf ip_address" must be set intf { local_intf { name = "test1" namespace = "staging" tenant = "acmecorp" } } } remote_ip { // One of the arguments from this list "ip endpoints" must be set ip { // One of the arguments from this list "ipv4 ipv6" must be set ipv4 { addr = "192.168.1.1" } } } tunnel_type = ["tunnel_type"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_usb_policy",
			Category:         "Resources",
			ShortDescription: `"The usb_policy allows CRUD of Usb Policy resource on Volterra SaaS" --------------------------------------------------------------------------------- Resource volterra_usb_policy ============================ The Usb Policy allows CRUD of Usb Policy resource on Volterra SaaS ~> **Note:** Please refer to [Usb Policy API docs](https://volterra.io/docs/api/usb-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_usb_policy" "example" { name = "acmecorp-web" namespace = "staging" allowed_devices { b_device_class = "hub" b_device_protocol = "0002" b_device_sub_class = "hub" i_serial = "0000:00:14.0" id_product = "0x0002" id_vendor = "0x1d6b" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_user",
			Category:         "Resources",
			ShortDescription: `"The user allows CRUD of User resource on Volterra SaaS" --------------------------------------------------------------------- Resource volterra_user ====================== The User allows CRUD of User resource on Volterra SaaS ~> **Note:** Please refer to [User API docs](https://volterra.io/docs/api/user) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_user" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_virtual_host",
			Category:         "Resources",
			ShortDescription: `"The virtual_host allows CRUD of Virtual Host resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_virtual_host ============================== The Virtual Host allows CRUD of Virtual Host resource on Volterra SaaS ~> **Note:** Please refer to [Virtual Host API docs](https://volterra.io/docs/api/virtual-host) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_virtual_host" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "no_challenge js_challenge captcha_challenge" must be set js_challenge { cookie_expiry = "cookie_expiry" custom_page = "string:///PHA+IFBsZWFzZSBXYWl0IDwvcD4=" enable_js_challenge = true js_script_delay = "js_script_delay" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_virtual_k8s",
			Category:         "Resources",
			ShortDescription: `"The virtual_k8s allows CRUD of Virtual K8s resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_virtual_k8s ============================= The Virtual K8s allows CRUD of Virtual K8s resource on Volterra SaaS ~> **Note:** Please refer to [Virtual K8s API docs](https://volterra.io/docs/api/virtual-k8s) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_virtual_k8s" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_virtual_network",
			Category:         "Resources",
			ShortDescription: `"The virtual_network allows CRUD of Virtual Network resource on Volterra SaaS" ------------------------------------------------------------------------------------------- Resource volterra_virtual_network ================================= The Virtual Network allows CRUD of Virtual Network resource on Volterra SaaS ~> **Note:** Please refer to [Virtual Network API docs](https://volterra.io/docs/api/virtual-network) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_virtual_network" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "srv6_network global_network site_local_network site_local_inside_network legacy_type" must be set site_local_network = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_virtual_site",
			Category:         "Resources",
			ShortDescription: `"The virtual_site allows CRUD of Virtual Site resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_virtual_site ============================== The Virtual Site allows CRUD of Virtual Site resource on Volterra SaaS ~> **Note:** Please refer to [Virtual Site API docs](https://volterra.io/docs/api/virtual-site) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_virtual_site" "example" { name = "acmecorp-web" namespace = "staging" site_selector { expressions = ["region in (us-west1, us-west2),tier in (staging)"] } site_type = ["site_type"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_voltstack_site",
			Category:         "Resources",
			ShortDescription: `"The voltstack_site allows CRUD of Voltstack Site resource on Volterra SaaS" ----------------------------------------------------------------------------------------- Resource volterra_voltstack_site ================================ The Voltstack Site allows CRUD of Voltstack Site resource on Volterra SaaS ~> **Note:** Please refer to [Voltstack Site API docs](https://volterra.io/docs/api/views-voltstack-site) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_voltstack_site" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "no_bond_devices bond_device_list" must be set no_bond_devices = true // One of the arguments from this list "enable_gpu disable_gpu" must be set disable_gpu = true // One of the arguments from this list "no_k8s_cluster k8s_cluster" must be set no_k8s_cluster = true // One of the arguments from this list "logs_streaming_disabled log_receiver" must be set logs_streaming_disabled = true master_nodes = ["master-0"] // One of the arguments from this list "custom_network_config default_network_config" must be set default_network_config = true // One of the arguments from this list "default_storage_config custom_storage_config" must be set default_storage_config = true // One of the arguments from this list "deny_all_usb allow_all_usb usb_policy" must be set deny_all_usb = true volterra_certified_hw = ["isv-8000-series-voltstack-combo"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_waf",
			Category:         "Resources",
			ShortDescription: `"The waf allows CRUD of Waf resource on Volterra SaaS" ------------------------------------------------------------------- Resource volterra_waf ===================== The Waf allows CRUD of Waf resource on Volterra SaaS ~> **Note:** Please refer to [Waf API docs](https://volterra.io/docs/api/waf) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_waf" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_waf_rule_list",
			Category:         "Resources",
			ShortDescription: `"The waf_rule_list allows CRUD of Waf Rule List resource on Volterra SaaS" --------------------------------------------------------------------------------------- Resource volterra_waf_rule_list =============================== The Waf Rule List allows CRUD of Waf Rule List resource on Volterra SaaS ~> **Note:** Please refer to [Waf Rule List API docs](https://volterra.io/docs/api/waf-rule-list) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_waf_rule_list" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_waf_rules",
			Category:         "Resources",
			ShortDescription: `"The waf_rules allows CRUD of Waf Rules resource on Volterra SaaS" ------------------------------------------------------------------------------- Resource volterra_waf_rules =========================== The Waf Rules allows CRUD of Waf Rules resource on Volterra SaaS ~> **Note:** Please refer to [Waf Rules API docs](https://volterra.io/docs/api/waf-rules) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_waf_rules" "example" { name = "acmecorp-web" namespace = "staging" anomaly_score_threshold = ["4"] mode = ["mode"] paranoia_level = ["2"] rule_list_type = ["rule_list_type"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
	}

	resourcesMap = map[string]int{

		"volterra_volterra_active_network_policies":    0,
		"volterra_volterra_active_service_policies":    1,
		"volterra_volterra_advertise_policy":           2,
		"volterra_volterra_alert_policy":               3,
		"volterra_volterra_alert_policy_set":           4,
		"volterra_volterra_alert_receiver":             5,
		"volterra_volterra_api_credential":             6,
		"volterra_volterra_app_type":                   7,
		"volterra_volterra_aws_tgw_site":               8,
		"volterra_volterra_aws_vpc_site":               9,
		"volterra_volterra_azure_vnet_site":            10,
		"volterra_volterra_bgp":                        11,
		"volterra_volterra_bgp_asn_set":                12,
		"volterra_volterra_cloud_credentials":          13,
		"volterra_volterra_cluster":                    14,
		"volterra_volterra_dc_cluster_group":           15,
		"volterra_volterra_discovery":                  16,
		"volterra_volterra_endpoint":                   17,
		"volterra_volterra_fast_acl":                   18,
		"volterra_volterra_fast_acl_for_internet_vips": 19,
		"volterra_volterra_fast_acl_rule":              20,
		"volterra_volterra_fast_acl_set":               21,
		"volterra_volterra_fleet":                      22,
		"volterra_volterra_forward_proxy_policy":       23,
		"volterra_volterra_gcp_vpc_site":               24,
		"volterra_volterra_healthcheck":                25,
		"volterra_volterra_http_loadbalancer":          26,
		"volterra_volterra_ip_prefix_set":              27,
		"volterra_volterra_k8s_cluster":                28,
		"volterra_volterra_k8s_cluster_role":           29,
		"volterra_volterra_k8s_cluster_role_binding":   30,
		"volterra_volterra_k8s_pod_security_policy":    31,
		"volterra_volterra_malicious_user_mitigation":  32,
		"volterra_volterra_modify_site":                33,
		"volterra_volterra_namespace":                  34,
		"volterra_volterra_network_connector":          35,
		"volterra_volterra_network_firewall":           36,
		"volterra_volterra_network_interface":          37,
		"volterra_volterra_network_policy":             38,
		"volterra_volterra_network_policy_rule":        39,
		"volterra_volterra_network_policy_set":         40,
		"volterra_volterra_network_policy_view":        41,
		"volterra_volterra_origin_pool":                42,
		"volterra_volterra_policer":                    43,
		"volterra_volterra_protocol_policer":           44,
		"volterra_volterra_public_ip":                  45,
		"volterra_volterra_rate_limiter":               46,
		"volterra_volterra_registration_approval":      47,
		"volterra_volterra_role":                       48,
		"volterra_volterra_route":                      49,
		"volterra_volterra_secret_policy":              50,
		"volterra_volterra_secret_policy_rule":         51,
		"volterra_volterra_service_policy":             52,
		"volterra_volterra_service_policy_rule":        53,
		"volterra_volterra_service_policy_set":         54,
		"volterra_volterra_site_state":                 55,
		"volterra_volterra_tcp_loadbalancer":           56,
		"volterra_volterra_tf_params_action":           57,
		"volterra_volterra_tgw_vpc_ip_prefixes":        58,
		"volterra_volterra_tgw_vpn_tunnels":            59,
		"volterra_volterra_token":                      60,
		"volterra_volterra_tunnel":                     61,
		"volterra_volterra_usb_policy":                 62,
		"volterra_volterra_user":                       63,
		"volterra_volterra_virtual_host":               64,
		"volterra_volterra_virtual_k8s":                65,
		"volterra_volterra_virtual_network":            66,
		"volterra_volterra_virtual_site":               67,
		"volterra_volterra_voltstack_site":             68,
		"volterra_volterra_waf":                        69,
		"volterra_volterra_waf_rule_list":              70,
		"volterra_volterra_waf_rules":                  71,
	}
)

func GetResource(r string) (*resource.Resource, error) {
	rs, ok := resourcesMap[r]
	if !ok {
		return nil, fmt.Errorf("resource %q not found", r)
	}
	return Resources[rs], nil
}
