package volterra

import (
	"fmt"

	"github.com/cycloidio/tfdocs/resource"
)

var (
	Resources = []*resource.Resource{

		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_active_alert_policies",
			Category:         "Resources",
			ShortDescription: `"The active_alert_policies allows setting of Active Alert Policies for a namespace on Volterra SaaS" --------------------------------------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_active_network_policies",
			Category:         "Resources",
			ShortDescription: `"The active_network_policies allows setting of Active Network Policies for a namespace on Volterra SaaS" ------------------------------------------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_active_service_policies",
			Category:         "Resources",
			ShortDescription: `"The active_service_policies allows setting of Active Service Policies for a namespace on Volterra SaaS" ------------------------------------------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_advertise_policy",
			Category:         "Resources",
			ShortDescription: `"The advertise_policy allows CRUD of Advertise Policy resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_advertise_policy ================================== The Advertise Policy allows CRUD of Advertise Policy resource on Volterra SaaS ~> **Note:** Please refer to [Advertise Policy API docs](https://volterra.io/docs/api/advertise-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_advertise_policy" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_alert_policy",
			Category:         "Resources",
			ShortDescription: `"The alert_policy allows CRUD of Alert Policy resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_alert_policy ============================== The Alert Policy allows CRUD of Alert Policy resource on Volterra SaaS ~> **Note:** Please refer to [Alert Policy API docs](https://volterra.io/docs/api/alert-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_alert_policy" "example" { name = "acmecorp-web" namespace = "staging" receivers { name = "test1" namespace = "staging" tenant = "acmecorp" } routes { // One of the arguments from this list "send dont_send" must be set dont_send = true // One of the arguments from this list "any severity group alertname alertname_regex custom" must be set any = true notification_parameters { // One of the arguments from this list "default individual ves_io_group custom" must be set default = true group_interval = "1m" group_wait = "30s" repeat_interval = "4h" } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_alert_receiver",
			Category:         "Resources",
			ShortDescription: `"The alert_receiver allows CRUD of Alert Receiver resource on Volterra SaaS" ----------------------------------------------------------------------------------------- Resource volterra_alert_receiver ================================ The Alert Receiver allows CRUD of Alert Receiver resource on Volterra SaaS ~> **Note:** Please refer to [Alert Receiver API docs](https://volterra.io/docs/api/alert-receiver) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_alert_receiver" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "opsgenie email sms slack pagerduty" must be set slack { channel = "value" url { blindfold_secret_info_internal { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "vault_secret_info clear_secret_info wingman_secret_info blindfold_secret_info" must be set blindfold_secret_info { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_allowed_tenant",
			Category:         "Resources",
			ShortDescription: `"The allowed_tenant allows CRUD of Allowed Tenant resource on Volterra SaaS" ----------------------------------------------------------------------------------------- Resource volterra_allowed_tenant ================================ The Allowed Tenant allows CRUD of Allowed Tenant resource on Volterra SaaS ~> **Note:** Please refer to [Allowed Tenant API docs](https://volterra.io/docs/api/allowed-tenant) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_allowed_tenant" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_api_credential",
			Category:         "Resources",
			ShortDescription: `"The volterra_api_credential allows creation of api_credential object on Volterra SaaS" ---------------------------------------------------------------------------------------------------- Resource volterra_api_credential ================================ ================================ Credentials created via volterra_api_credential inherits same user that of the creator and it gets same RBAC applied to the user. So when this credential is used in APIs, it will have same response/audit as creator of the credential is. For each these credentials, user can request credential in 3 different formats as required by their usecase: API certificate - a password protected P12 certificate bundle virtual k8s kubeconfig - a kubeconfig to access a cluster with embedded user access with client certificate. API token - an easy to use secret that can be send part of HTTP request header Authorization: APIToken ~> **Note:** Please refer to [API Credential docs](https://volterra.io/docs/api/api-credential) to learn more Example Usage ------------- --- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_api_credential" "example" { name = "api-cred-example" api_credential_type = "KUBE_CONFIG" virtual_k8s_namespace = "ns1" virtual_k8s_name = "vk8s1" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ------------------ --- ` + "`" + `name` + "`" + ` - (Required) The value of name has to follow DNS-1035 format. (` + "`" + `String` + "`" + `). ` + "`" + `api_credential_type` + "`" + ` - (Required) Types of API credential given. Valid values are ` + "`" + `API_CERTIFICATE` + "`" + `, ` + "`" + `KUBE_CONFIG` + "`" + `, ` + "`" + `API_TOKEN` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `virtual_k8s_namespace` + "`" + ` - (Optional) Namespace of virtual_k8s cluster. Applicable when ` + "`" + `api_credential_type` + "`" + ` is ` + "`" + `KUBE_CONFIG` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `virtual_k8s_name` + "`" + ` - (Optional) Name of virtual_k8s cluster. Applicable when ` + "`" + `api_credential_type` + "`" + ` is ` + "`" + `KUBE_CONFIG` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `api_credential_password` + "`" + ` - (Optional) Password is used for generating an API certificate P12 bundle user can use to protect access to it. this password will not be saved/persisted anywhere in the system. Applicable when ` + "`" + `api_credential_type` + "`" + ` is ` + "`" + `API_CERTIFICATE` + "`" + `. Users have to use this password when they use the certificate, e.g. in curl or while adding to key chain (` + "`" + `String` + "`" + `). ` + "`" + `expiry_days` + "`" + ` - (Optional) Number of days after which the certificate will be expired (` + "`" + `Int` + "`" + `). Attribute Reference -------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_api_definition",
			Category:         "Resources",
			ShortDescription: `"The api_definition allows CRUD of Api Definition resource on Volterra SaaS" ----------------------------------------------------------------------------------------- Resource volterra_api_definition ================================ The Api Definition allows CRUD of Api Definition resource on Volterra SaaS ~> **Note:** Please refer to [Api Definition API docs](https://volterra.io/docs/api/views-api-definition) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_api_definition" "example" { name = "acmecorp-web" namespace = "staging" swagger_specs = ["https://my.tenant.domain/api/object_store/namespaces/my-ns/stored_objects/swagger/file-name/v1-22-01-12"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_app_api_group",
			Category:         "Resources",
			ShortDescription: `"The app_api_group allows CRUD of App Api Group resource on Volterra SaaS" --------------------------------------------------------------------------------------- Resource volterra_app_api_group =============================== The App Api Group allows CRUD of App Api Group resource on Volterra SaaS ~> **Note:** Please refer to [App Api Group API docs](https://volterra.io/docs/api/views-app-api-group) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_app_api_group" "example" { name = "acmecorp-web" namespace = "staging" elements { methods = ["['PUT', 'POST', 'DELETE']"] path_regex = "/api/config/.*/path[123]/$" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_app_firewall",
			Category:         "Resources",
			ShortDescription: `"The app_firewall allows CRUD of App Firewall resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_app_firewall ============================== The App Firewall allows CRUD of App Firewall resource on Volterra SaaS ~> **Note:** Please refer to [App Firewall API docs](https://volterra.io/docs/api/app-firewall) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_app_firewall" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "allow_all_response_codes allowed_response_codes" must be set allow_all_response_codes = true // One of the arguments from this list "disable_anonymization default_anonymization custom_anonymization" must be set default_anonymization = true // One of the arguments from this list "use_default_blocking_page blocking_page" must be set use_default_blocking_page = true // One of the arguments from this list "default_bot_setting bot_protection_setting" must be set default_bot_setting = true // One of the arguments from this list "default_detection_settings detection_settings" must be set default_detection_settings = true // One of the arguments from this list "use_loadbalancer_setting blocking monitoring" must be set blocking = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_app_setting",
			Category:         "Resources",
			ShortDescription: `"The app_setting allows CRUD of App Setting resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_app_setting ============================= The App Setting allows CRUD of App Setting resource on Volterra SaaS ~> **Note:** Please refer to [App Setting API docs](https://volterra.io/docs/api/app-setting) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_app_setting" "example" { name = "acmecorp-web" namespace = "staging" app_type_settings { app_type_ref { name = "test1" namespace = "staging" tenant = "acmecorp" } business_logic_markup_setting { // One of the arguments from this list "disable enable" must be set enable = true } timeseries_analyses_setting { metric_selectors { metric = ["metric"] metrics_source = "metrics_source" } } user_behavior_analysis_setting { // One of the arguments from this list "enable_learning disable_learning" must be set enable_learning = true // One of the arguments from this list "enable_detection disable_detection" must be set enable_detection { // One of the arguments from this list "cooling_off_period" must be set cooling_off_period = "cooling_off_period" // One of the arguments from this list "include_failed_login_activity exclude_failed_login_activity" must be set include_failed_login_activity { login_failures_threshold = "10" } // One of the arguments from this list "include_forbidden_activity exclude_forbidden_activity" must be set exclude_forbidden_activity = true // One of the arguments from this list "exclude_ip_reputation include_ip_reputation" must be set include_ip_reputation = true // One of the arguments from this list "exclude_non_existent_url_activity include_non_existent_url_activity_custom include_non_existent_url_activity_automatic" must be set exclude_non_existent_url_activity = true // One of the arguments from this list "include_waf_activity exclude_waf_activity" must be set include_waf_activity = true } } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_app_type",
			Category:         "Resources",
			ShortDescription: `"The app_type allows CRUD of App Type resource on Volterra SaaS" ----------------------------------------------------------------------------- Resource volterra_app_type ========================== The App Type allows CRUD of App Type resource on Volterra SaaS ~> **Note:** Please refer to [App Type API docs](https://volterra.io/docs/api/app-type) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_app_type" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_aws_tgw_site",
			Category:         "Resources",
			ShortDescription: `"The aws_tgw_site allows CRUD of Aws Tgw Site resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_aws_tgw_site ============================== The Aws Tgw Site allows CRUD of Aws Tgw Site resource on Volterra SaaS ~> **Note:** Please refer to [Aws Tgw Site API docs](https://volterra.io/docs/api/views-aws-tgw-site) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_aws_tgw_site" "example" { name = "acmecorp-web" namespace = "staging" aws_parameters { aws_certified_hw = "aws-byol-multi-nic-voltmesh" aws_region = "us-east-1" az_nodes { aws_az_name = "us-west-2a" // One of the arguments from this list "reserved_inside_subnet inside_subnet" must be set reserved_inside_subnet = true disk_size = "80" outside_subnet { // One of the arguments from this list "subnet_param existing_subnet_id" must be set existing_subnet_id = "subnet-12345678901234567" } workload_subnet { // One of the arguments from this list "subnet_param existing_subnet_id" must be set subnet_param { ipv4 = "10.1.2.0/24" ipv6 = "1234:568:abcd:9100::/64" } } } // One of the arguments from this list "aws_cred assisted" must be set aws_cred { name = "test1" namespace = "staging" tenant = "acmecorp" } disk_size = "80" instance_type = "a1.xlarge" // One of the arguments from this list "disable_internet_vip enable_internet_vip" must be set disable_internet_vip = true // One of the arguments from this list "new_vpc vpc_id" must be set new_vpc { allocate_ipv6 = true // One of the arguments from this list "name_tag autogenerate" must be set name_tag = "name_tag" primary_ipv4 = "10.1.0.0/16" } ssh_key = "ssh-rsa AAAAB..." // One of the arguments from this list "new_tgw existing_tgw" must be set new_tgw { // One of the arguments from this list "system_generated user_assigned" must be set system_generated = true } // One of the arguments from this list "no_worker_nodes nodes_per_az total_nodes" must be set nodes_per_az = "2" } // One of the arguments from this list "default_blocked_services block_all_services blocked_services" must be set default_blocked_services = true // One of the arguments from this list "direct_connect_disabled direct_connect_enabled" must be set direct_connect_disabled = true // One of the arguments from this list "logs_streaming_disabled log_receiver" must be set logs_streaming_disabled = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_aws_vpc_site",
			Category:         "Resources",
			ShortDescription: `"The aws_vpc_site allows CRUD of Aws Vpc Site resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_aws_vpc_site ============================== The Aws Vpc Site allows CRUD of Aws Vpc Site resource on Volterra SaaS ~> **Note:** Please refer to [Aws Vpc Site API docs](https://volterra.io/docs/api/views-aws-vpc-site) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_aws_vpc_site" "example" { name = "acmecorp-web" namespace = "staging" aws_region = ["us-east-1"] // One of the arguments from this list "default_blocked_services block_all_services blocked_services" must be set default_blocked_services = true // One of the arguments from this list "aws_cred" must be set aws_cred { name = "test1" namespace = "staging" tenant = "acmecorp" } // One of the arguments from this list "direct_connect_disabled direct_connect_enabled" must be set direct_connect_disabled = true instance_type = ["a1.xlarge"] // One of the arguments from this list "disable_internet_vip enable_internet_vip" must be set disable_internet_vip = true // One of the arguments from this list "logs_streaming_disabled log_receiver" must be set logs_streaming_disabled = true // One of the arguments from this list "ingress_gw ingress_egress_gw voltstack_cluster" must be set ingress_gw { allowed_vip_port { // One of the arguments from this list "use_http_port use_https_port use_http_https_port custom_ports" must be set use_http_port = true } aws_certified_hw = "aws-byol-voltmesh" az_nodes { aws_az_name = "us-west-2a" disk_size = "80" local_subnet { // One of the arguments from this list "subnet_param existing_subnet_id" must be set subnet_param { ipv4 = "10.1.2.0/24" ipv6 = "1234:568:abcd:9100::/64" } } } performance_enhancement_mode { // One of the arguments from this list "perf_mode_l7_enhanced perf_mode_l3_enhanced" must be set perf_mode_l7_enhanced = true } } // One of the arguments from this list "nodes_per_az total_nodes no_worker_nodes" must be set nodes_per_az = "2" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_azure_vnet_site",
			Category:         "Resources",
			ShortDescription: `"The azure_vnet_site allows CRUD of Azure Vnet Site resource on Volterra SaaS" ------------------------------------------------------------------------------------------- Resource volterra_azure_vnet_site ================================= The Azure Vnet Site allows CRUD of Azure Vnet Site resource on Volterra SaaS ~> **Note:** Please refer to [Azure Vnet Site API docs](https://volterra.io/docs/api/views-azure-vnet-site) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_azure_vnet_site" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "default_blocked_services block_all_services blocked_services" must be set default_blocked_services = true // One of the arguments from this list "azure_cred" must be set azure_cred { name = "test1" namespace = "staging" tenant = "acmecorp" } // One of the arguments from this list "logs_streaming_disabled log_receiver" must be set logs_streaming_disabled = true // One of the arguments from this list "azure_region alternate_region" must be set azure_region = "eastus" resource_group = ["my-resources"] // One of the arguments from this list "ingress_gw ingress_egress_gw voltstack_cluster ingress_gw_ar ingress_egress_gw_ar voltstack_cluster_ar" must be set voltstack_cluster { az_nodes { azure_az = "1" disk_size = "80" local_subnet { // One of the arguments from this list "subnet_param subnet" must be set subnet_param { ipv4 = "10.1.2.0/24" ipv6 = "1234:568:abcd:9100::/64" } } } azure_certified_hw = "azure-byol-voltstack-combo" // One of the arguments from this list "no_dc_cluster_group dc_cluster_group" must be set no_dc_cluster_group = true // One of the arguments from this list "no_forward_proxy active_forward_proxy_policies forward_proxy_allow_all" must be set no_forward_proxy = true // One of the arguments from this list "no_global_network global_network_list" must be set global_network_list { global_network_connections { // One of the arguments from this list "sli_to_global_dr slo_to_global_dr" must be set slo_to_global_dr { global_vn { name = "test1" namespace = "staging" tenant = "acmecorp" } } // One of the arguments from this list "disable_forward_proxy enable_forward_proxy" must be set disable_forward_proxy = true } } // One of the arguments from this list "no_k8s_cluster k8s_cluster" must be set no_k8s_cluster = true // One of the arguments from this list "no_network_policy active_network_policies active_enhanced_firewall_policies" must be set active_enhanced_firewall_policies { enhanced_firewall_policies { name = "test1" namespace = "staging" tenant = "acmecorp" } } // One of the arguments from this list "no_outside_static_routes outside_static_routes" must be set no_outside_static_routes = true // One of the arguments from this list "sm_connection_public_ip sm_connection_pvt_ip" must be set sm_connection_public_ip = true // One of the arguments from this list "default_storage storage_class_list" must be set default_storage = true } vnet { // One of the arguments from this list "new_vnet existing_vnet" must be set new_vnet { // One of the arguments from this list "name autogenerate" must be set name = "name" primary_ipv4 = "10.1.0.0/16" } } // One of the arguments from this list "total_nodes no_worker_nodes nodes_per_az" must be set nodes_per_az = "2" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_bgp",
			Category:         "Resources",
			ShortDescription: `"The bgp allows CRUD of Bgp resource on Volterra SaaS" ------------------------------------------------------------------- Resource volterra_bgp ===================== The Bgp allows CRUD of Bgp resource on Volterra SaaS ~> **Note:** Please refer to [Bgp API docs](https://volterra.io/docs/api/bgp) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_bgp" "example" { name = "acmecorp-web" namespace = "staging" bgp_parameters { asn = "64512" bgp_router_id { // One of the arguments from this list "ipv4 ipv6" must be set ipv4 { addr = "192.168.1.1" } } bgp_router_id_key = "value" bgp_router_id_type = "bgp_router_id_type" // One of the arguments from this list "from_site ip_address local_address" must be set local_address = true } peers { metadata { description = "Virtual Host for acmecorp website" disable = true name = "acmecorp-web" } // One of the arguments from this list "passive_mode_disabled passive_mode_enabled" must be set passive_mode_enabled = true target_service = "value" // One of the arguments from this list "external internal" must be set external { // One of the arguments from this list "address subnet_begin_offset subnet_end_offset from_site default_gateway" must be set from_site = true asn = "64512" family_inet { // One of the arguments from this list "enable disable" must be set enable = true } // One of the arguments from this list "interface interface_list inside_interfaces outside_interfaces" must be set interface { name = "test1" namespace = "staging" tenant = "acmecorp" } port = "179" } } where { // One of the arguments from this list "site virtual_site" must be set virtual_site { // One of the arguments from this list "disable_internet_vip enable_internet_vip" must be set disable_internet_vip = true network_type = "network_type" ref { name = "test1" namespace = "staging" tenant = "acmecorp" } } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_bgp_asn_set",
			Category:         "Resources",
			ShortDescription: `"The bgp_asn_set allows CRUD of Bgp Asn Set resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_bgp_asn_set ============================= The Bgp Asn Set allows CRUD of Bgp Asn Set resource on Volterra SaaS ~> **Note:** Please refer to [Bgp Asn Set API docs](https://volterra.io/docs/api/bgp-asn-set) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_bgp_asn_set" "example" { name = "acmecorp-web" namespace = "staging" as_numbers = ["[713, 7932, 847325, 4683, 15269, 1000001]"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_cdn_loadbalancer",
			Category:         "Resources",
			ShortDescription: `"The cdn_loadbalancer allows CRUD of Cdn Loadbalancer resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_cdn_loadbalancer ================================== The Cdn Loadbalancer allows CRUD of Cdn Loadbalancer resource on Volterra SaaS ~> **Note:** Please refer to [Cdn Loadbalancer API docs](https://volterra.io/docs/api/views-cdn-loadbalancer) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_cdn_loadbalancer" "example" { name = "acmecorp-web" namespace = "staging" domains = ["www.foo.com"] // One of the arguments from this list "https_auto_cert https http" must be set http { dns_volterra_managed = true port = "80" } origin_pool { follow_origin_redirect = true origin_request_timeout = "100s" origin_servers { // One of the arguments from this list "public_ip public_name" must be set public_ip { ip = "8.8.8.8" } } public_name { dns_name = "value" } // One of the arguments from this list "no_tls use_tls" must be set no_tls = true } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_certificate",
			Category:         "Resources",
			ShortDescription: `"The certificate allows CRUD of Certificate resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_certificate ============================= The Certificate allows CRUD of Certificate resource on Volterra SaaS ~> **Note:** Please refer to [Certificate API docs](https://volterra.io/docs/api/certificate) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_certificate" "example" { name = "acmecorp-web" namespace = "staging" certificate_url = ["value"] private_key { blindfold_secret_info_internal { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "wingman_secret_info blindfold_secret_info vault_secret_info clear_secret_info" must be set clear_secret_info { provider = "box-provider" url = "string:///U2VjcmV0SW5mb3JtYXRpb24=" } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_certificate_chain",
			Category:         "Resources",
			ShortDescription: `"The certificate_chain allows CRUD of Certificate Chain resource on Volterra SaaS" ----------------------------------------------------------------------------------------------- Resource volterra_certificate_chain =================================== The Certificate Chain allows CRUD of Certificate Chain resource on Volterra SaaS ~> **Note:** Please refer to [Certificate Chain API docs](https://volterra.io/docs/api/certificate-chain) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_certificate_chain" "example" { name = "acmecorp-web" namespace = "staging" certificate_url = ["value"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_cloud_credentials",
			Category:         "Resources",
			ShortDescription: `"The cloud_credentials allows CRUD of Cloud Credentials resource on Volterra SaaS" ----------------------------------------------------------------------------------------------- Resource volterra_cloud_credentials =================================== The Cloud Credentials allows CRUD of Cloud Credentials resource on Volterra SaaS ~> **Note:** Please refer to [Cloud Credentials API docs](https://volterra.io/docs/api/cloud-credentials) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_cloud_credentials" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "aws_secret_key azure_pfx_certificate azure_client_secret gcp_cred_file" must be set aws_secret_key { access_key = "value" secret_key { blindfold_secret_info_internal { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "clear_secret_info wingman_secret_info blindfold_secret_info vault_secret_info" must be set blindfold_secret_info { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_cloud_site_labels",
			Category:         "Resources",
			ShortDescription: `"The volterra_cloud_site_labels helps to update the site labels for cloud sites" --------------------------------------------------------------------------------------------- Resource volterra_cloud_site_labels =================================== volterra_cloud_site_labels resource updates the labels for the cloud site also known as view sites ~> **Note:** Please add ignore_lifecycle hooks for your you cloud sites to ignore updates on labels and control the update of site label through this resource. Below is a sample snippet. ` + "`" + `` + "`" + `` + "`" + ` lifecycle { ignore_changes = [labels] } ` + "`" + `` + "`" + `` + "`" + ` Example Usage ----------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_cluster",
			Category:         "Resources",
			ShortDescription: `"The cluster allows CRUD of Cluster resource on Volterra SaaS" --------------------------------------------------------------------------- Resource volterra_cluster ========================= The Cluster allows CRUD of Cluster resource on Volterra SaaS ~> **Note:** Please refer to [Cluster API docs](https://volterra.io/docs/api/cluster) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_cluster" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_container_registry",
			Category:         "Resources",
			ShortDescription: `"The container_registry allows CRUD of Container Registry resource on Volterra SaaS" ------------------------------------------------------------------------------------------------- Resource volterra_container_registry ==================================== The Container Registry allows CRUD of Container Registry resource on Volterra SaaS ~> **Note:** Please refer to [Container Registry API docs](https://volterra.io/docs/api/container-registry) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_container_registry" "example" { name = "acmecorp-web" namespace = "staging" password { blindfold_secret_info_internal { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "blindfold_secret_info vault_secret_info clear_secret_info wingman_secret_info" must be set blindfold_secret_info { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } } registry = ["quay.io"] user_name = ["joe"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_dc_cluster_group",
			Category:         "Resources",
			ShortDescription: `"The dc_cluster_group allows CRUD of Dc Cluster Group resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_dc_cluster_group ================================== The Dc Cluster Group allows CRUD of Dc Cluster Group resource on Volterra SaaS ~> **Note:** Please refer to [Dc Cluster Group API docs](https://volterra.io/docs/api/dc-cluster-group) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_dc_cluster_group" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_discovery",
			Category:         "Resources",
			ShortDescription: `"The discovery allows CRUD of Discovery resource on Volterra SaaS" ------------------------------------------------------------------------------- Resource volterra_discovery =========================== The Discovery allows CRUD of Discovery resource on Volterra SaaS ~> **Note:** Please refer to [Discovery API docs](https://volterra.io/docs/api/discovery) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_discovery" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "no_cluster_id cluster_id" must be set no_cluster_id = true // One of the arguments from this list "discovery_k8s discovery_consul" must be set discovery_k8s { access_info { // One of the arguments from this list "kubeconfig_url connection_info in_cluster" must be set connection_info { api_server = "api.acme.com:4430" tls_info { ca_certificate_url { blindfold_secret_info_internal { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "blindfold_secret_info vault_secret_info clear_secret_info wingman_secret_info" must be set wingman_secret_info { name = "ChargeBack-API-Key" } } certificate = "value" certificate_url { blindfold_secret_info_internal { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "wingman_secret_info blindfold_secret_info vault_secret_info clear_secret_info" must be set blindfold_secret_info { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } } key_url { blindfold_secret_info_internal { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "clear_secret_info wingman_secret_info blindfold_secret_info vault_secret_info" must be set blindfold_secret_info { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } } server_name = "k8s.acme.com" trusted_ca_url = "value" } } // One of the arguments from this list "isolated reachable" must be set isolated = true } publish_info { // One of the arguments from this list "disable publish publish_fqdns dns_delegation" must be set disable = true } } where { // One of the arguments from this list "site virtual_site virtual_network" must be set virtual_network { ref { name = "test1" namespace = "staging" tenant = "acmecorp" } } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_dns_domain",
			Category:         "Resources",
			ShortDescription: `"The dns_domain allows CRUD of Dns Domain resource on Volterra SaaS" --------------------------------------------------------------------------------- Resource volterra_dns_domain ============================ The Dns Domain allows CRUD of Dns Domain resource on Volterra SaaS ~> **Note:** Please refer to [Dns Domain API docs](https://volterra.io/docs/api/dns-domain) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_dns_domain" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "verification_only volterra_managed route53" must be set volterra_managed = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_dns_lb_health_check",
			Category:         "Resources",
			ShortDescription: `"The dns_lb_health_check allows CRUD of Dns Lb Health Check resource on Volterra SaaS" --------------------------------------------------------------------------------------------------- Resource volterra_dns_lb_health_check ===================================== The Dns Lb Health Check allows CRUD of Dns Lb Health Check resource on Volterra SaaS ~> **Note:** Please refer to [Dns Lb Health Check API docs](https://volterra.io/docs/api/dns-lb-health-check) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_dns_lb_health_check" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "udp_health_check icmp_health_check https_health_check http_health_check tcp_health_check" must be set tcp_health_check { health_check_port = "80" receive = "receive" send = "send" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_dns_lb_pool",
			Category:         "Resources",
			ShortDescription: `"The dns_lb_pool allows CRUD of Dns Lb Pool resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_dns_lb_pool ============================= The Dns Lb Pool allows CRUD of Dns Lb Pool resource on Volterra SaaS ~> **Note:** Please refer to [Dns Lb Pool API docs](https://volterra.io/docs/api/dns-lb-pool) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_dns_lb_pool" "example" { name = "acmecorp-web" namespace = "staging" load_balancing_mode = ["load_balancing_mode"] // One of the arguments from this list "aaaa_pool cname_pool mx_pool a_pool" must be set a_pool { // One of the arguments from this list "disable_health_check health_check" must be set disable_health_check = true max_answers = "1" members { ip_endpoint = "8.8.8.8" priority = "10" ratio = "10" } } // One of the arguments from this list "use_rrset_ttl ttl" must be set use_rrset_ttl = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_dns_load_balancer",
			Category:         "Resources",
			ShortDescription: `"The dns_load_balancer allows CRUD of Dns Load Balancer resource on Volterra SaaS" ----------------------------------------------------------------------------------------------- Resource volterra_dns_load_balancer =================================== The Dns Load Balancer allows CRUD of Dns Load Balancer resource on Volterra SaaS ~> **Note:** Please refer to [Dns Load Balancer API docs](https://volterra.io/docs/api/dns-load-balancer) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_dns_load_balancer" "example" { name = "acmecorp-web" namespace = "staging" record_type = ["record_type"] rule_list { rules { // One of the arguments from this list "pool nxdomain" must be set pool { name = "test1" namespace = "staging" tenant = "acmecorp" } // One of the arguments from this list "geo_location_label_selector geo_location_set" must be set geo_location_label_selector { expressions = ["region in (us-west1, us-west2),tier in (staging)"] } score = "50" } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_dns_zone",
			Category:         "Resources",
			ShortDescription: `"The dns_zone allows CRUD of Dns Zone resource on Volterra SaaS" ----------------------------------------------------------------------------- Resource volterra_dns_zone ========================== The Dns Zone allows CRUD of Dns Zone resource on Volterra SaaS ~> **Note:** Please refer to [Dns Zone API docs](https://volterra.io/docs/api/dns-zone) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_dns_zone" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "primary secondary" must be set primary { default_rr_set_group { ttl = "3600" // One of the arguments from this list "aaaa_record caa_record mx_record ns_record ptr_record txt_record lb_record a_record cname_record srv_record alias_record" must be set aaaa_record { name = "www or mail or * or corp.web or *.b" values = ["2001:0db8:85a3:0000:0000:8a2e:0370:7334"] } } dnssec_mode { // One of the arguments from this list "disable enable" must be set disable = true } rr_set_group { metadata { description = "Virtual Host for acmecorp website" disable = true name = "acmecorp-web" } rr_set { ttl = "3600" // One of the arguments from this list "alias_record cname_record srv_record txt_record lb_record a_record aaaa_record caa_record mx_record ns_record ptr_record" must be set a_record { name = "www or mail or * or corp.web or *.b" values = ["1.1.1.1"] } } } // One of the arguments from this list "default_soa_parameters soa_parameters" must be set default_soa_parameters = true } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_endpoint",
			Category:         "Resources",
			ShortDescription: `"The endpoint allows CRUD of Endpoint resource on Volterra SaaS" ----------------------------------------------------------------------------- Resource volterra_endpoint ========================== The Endpoint allows CRUD of Endpoint resource on Volterra SaaS ~> **Note:** Please refer to [Endpoint API docs](https://volterra.io/docs/api/endpoint) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_endpoint" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_enhanced_firewall_policy",
			Category:         "Resources",
			ShortDescription: `"The enhanced_firewall_policy allows CRUD of Enhanced Firewall Policy resource on Volterra SaaS" ------------------------------------------------------------------------------------------------------------- Resource volterra_enhanced_firewall_policy ========================================== The Enhanced Firewall Policy allows CRUD of Enhanced Firewall Policy resource on Volterra SaaS ~> **Note:** Please refer to [Enhanced Firewall Policy API docs](https://volterra.io/docs/api/enhanced-firewall-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_enhanced_firewall_policy" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "allowed_destinations deny_all denied_sources denied_destinations rule_list allow_all allowed_sources" must be set allow_all = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_fast_acl",
			Category:         "Resources",
			ShortDescription: `"The fast_acl allows CRUD of Fast Acl resource on Volterra SaaS" ----------------------------------------------------------------------------- Resource volterra_fast_acl ========================== The Fast Acl allows CRUD of Fast Acl resource on Volterra SaaS ~> **Note:** Please refer to [Fast Acl API docs](https://volterra.io/docs/api/fast-acl) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_fast_acl" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "site_acl re_acl legacy_acl" must be set site_acl { fast_acl_rules { action { // One of the arguments from this list "simple_action policer_action protocol_policer_action" must be set simple_action = "simple_action" } metadata { description = "Virtual Host for acmecorp website" disable = true name = "acmecorp-web" } name = "value" port { // One of the arguments from this list "all user_defined dns" must be set all = true } // One of the arguments from this list "ip_prefix_set prefix" must be set prefix { prefix = ["[192.168.1.0/24, 192.168.2.0/24]\" or \"[2001:db8::1::/112, 2001::db8::2::/112]"] } } // One of the arguments from this list "outside_network inside_network" must be set outside_network = true // One of the arguments from this list "interface_services vip_services all_services" must be set all_services = true } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_fast_acl_for_internet_vips",
			Category:         "Resources",
			ShortDescription: `"The fast_acl_for_internet_vips activates the passed list of FastACLs for Internet VIPs" --------------------------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_fast_acl_rule",
			Category:         "Resources",
			ShortDescription: `"The fast_acl_rule allows CRUD of Fast Acl Rule resource on Volterra SaaS" --------------------------------------------------------------------------------------- Resource volterra_fast_acl_rule =============================== The Fast Acl Rule allows CRUD of Fast Acl Rule resource on Volterra SaaS ~> **Note:** Please refer to [Fast Acl Rule API docs](https://volterra.io/docs/api/fast-acl-rule) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_fast_acl_rule" "example" { name = "acmecorp-web" namespace = "staging" action { // One of the arguments from this list "simple_action policer_action protocol_policer_action" must be set protocol_policer_action { ref { name = "test1" namespace = "staging" tenant = "acmecorp" } } } // One of the arguments from this list "prefix ip_prefix_set" must be set prefix { prefix = ["[192.168.1.0/24, 192.168.2.0/24]\" or \"[2001:db8::1::/112, 2001::db8::2::/112]"] } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_fleet",
			Category:         "Resources",
			ShortDescription: `"The fleet allows CRUD of Fleet resource on Volterra SaaS" ----------------------------------------------------------------------- Resource volterra_fleet ======================= The Fleet allows CRUD of Fleet resource on Volterra SaaS ~> **Note:** Please refer to [Fleet API docs](https://volterra.io/docs/api/fleet) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_fleet" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "bond_device_list no_bond_devices" must be set bond_device_list { bond_devices { devices = ["eth0"] // One of the arguments from this list "lacp active_backup" must be set lacp { rate = "30" } link_polling_interval = "1000" link_up_delay = "200" name = "bond0" } } // One of the arguments from this list "no_dc_cluster_group dc_cluster_group dc_cluster_group_inside" must be set no_dc_cluster_group = true fleet_label = ["sfo"] // One of the arguments from this list "disable_gpu enable_gpu enable_vgpu" must be set disable_gpu = true // One of the arguments from this list "interface_list default_config device_list" must be set device_list { devices { // One of the arguments from this list "network_device" must be set network_device { interface { name = "test1" namespace = "staging" tenant = "acmecorp" } use = "use" } name = "eth0" owner = "owner" } } // One of the arguments from this list "logs_streaming_disabled log_receiver" must be set logs_streaming_disabled = true // One of the arguments from this list "default_storage_class storage_class_list" must be set default_storage_class = true // One of the arguments from this list "no_storage_device storage_device_list" must be set no_storage_device = true // One of the arguments from this list "no_storage_interfaces storage_interface_list" must be set no_storage_interfaces = true // One of the arguments from this list "no_storage_static_routes storage_static_routes" must be set no_storage_static_routes = true // One of the arguments from this list "allow_all_usb usb_policy deny_all_usb" must be set deny_all_usb = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_forward_proxy_policy",
			Category:         "Resources",
			ShortDescription: `"The forward_proxy_policy allows CRUD of Forward Proxy Policy resource on Volterra SaaS" ----------------------------------------------------------------------------------------------------- Resource volterra_forward_proxy_policy ====================================== The Forward Proxy Policy allows CRUD of Forward Proxy Policy resource on Volterra SaaS ~> **Note:** Please refer to [Forward Proxy Policy API docs](https://volterra.io/docs/api/views-forward-proxy-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_forward_proxy_policy" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "proxy_label_selector drp_http_connect any_proxy network_connector" must be set any_proxy = true // One of the arguments from this list "allow_list deny_list rule_list allow_all" must be set allow_all = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_gcp_vpc_site",
			Category:         "Resources",
			ShortDescription: `"The gcp_vpc_site allows CRUD of Gcp Vpc Site resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_gcp_vpc_site ============================== The Gcp Vpc Site allows CRUD of Gcp Vpc Site resource on Volterra SaaS ~> **Note:** Please refer to [Gcp Vpc Site API docs](https://volterra.io/docs/api/views-gcp-vpc-site) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_gcp_vpc_site" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "block_all_services blocked_services default_blocked_services" must be set block_all_services = true // One of the arguments from this list "cloud_credentials" must be set cloud_credentials { name = "test1" namespace = "staging" tenant = "acmecorp" } gcp_region = ["us-west1"] instance_type = ["n1-standard-4"] // One of the arguments from this list "log_receiver logs_streaming_disabled" must be set logs_streaming_disabled = true // One of the arguments from this list "ingress_gw ingress_egress_gw voltstack_cluster" must be set ingress_gw { gcp_certified_hw = "gcp-byol-voltmesh" gcp_zone_names = ["us-west1-a, us-west1-b, us-west1-c"] local_network { // One of the arguments from this list "new_network_autogenerate new_network existing_network" must be set new_network_autogenerate { autogenerate = true } } local_subnet { // One of the arguments from this list "new_subnet existing_subnet" must be set new_subnet { primary_ipv4 = "10.1.0.0/16" subnet_name = "subnet1-in-network1" } } node_number = "1" performance_enhancement_mode { // One of the arguments from this list "perf_mode_l7_enhanced perf_mode_l3_enhanced" must be set perf_mode_l7_enhanced = true } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_global_log_receiver",
			Category:         "Resources",
			ShortDescription: `"The global_log_receiver allows CRUD of Global Log Receiver resource on Volterra SaaS" --------------------------------------------------------------------------------------------------- Resource volterra_global_log_receiver ===================================== The Global Log Receiver allows CRUD of Global Log Receiver resource on Volterra SaaS ~> **Note:** Please refer to [Global Log Receiver API docs](https://volterra.io/docs/api/global-log-receiver) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_global_log_receiver" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "ns_current ns_all ns_list ns_system" must be set ns_current = true // One of the arguments from this list "audit_logs request_logs security_events" must be set request_logs = true // One of the arguments from this list "kafka_receiver new_relic_receiver sumo_logic_receiver datadog_receiver splunk_receiver elastic_receiver azure_receiver s3_receiver http_receiver azure_event_hubs_receiver aws_cloud_watch_receiver" must be set new_relic_receiver { api_key { blindfold_secret_info_internal { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "clear_secret_info wingman_secret_info blindfold_secret_info vault_secret_info" must be set blindfold_secret_info { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } } // One of the arguments from this list "us eu" must be set eu = true } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_healthcheck",
			Category:         "Resources",
			ShortDescription: `"The healthcheck allows CRUD of Healthcheck resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_healthcheck ============================= The Healthcheck allows CRUD of Healthcheck resource on Volterra SaaS ~> **Note:** Please refer to [Healthcheck API docs](https://volterra.io/docs/api/healthcheck) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_healthcheck" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "http_health_check tcp_health_check dns_proxy_tcp_health_check dns_proxy_udp_health_check dns_health_check dns_proxy_icmp_health_check" must be set tcp_health_check { expected_response = "00000034" send_payload = "000000FF" } healthy_threshold = ["2"] interval = ["10"] timeout = ["1"] unhealthy_threshold = ["5"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_http_loadbalancer",
			Category:         "Resources",
			ShortDescription: `"The http_loadbalancer allows CRUD of Http Loadbalancer resource on Volterra SaaS" ----------------------------------------------------------------------------------------------- Resource volterra_http_loadbalancer =================================== The Http Loadbalancer allows CRUD of Http Loadbalancer resource on Volterra SaaS ~> **Note:** Please refer to [Http Loadbalancer API docs](https://volterra.io/docs/api/views-http-loadbalancer) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_http_loadbalancer" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "advertise_on_public_default_vip advertise_on_public advertise_custom do_not_advertise" must be set do_not_advertise = true // One of the arguments from this list "api_definition api_specification api_definitions disable_api_definition" must be set disable_api_definition = true // One of the arguments from this list "enable_api_discovery disable_api_discovery" must be set enable_api_discovery { // One of the arguments from this list "disable_learn_from_redirect_traffic enable_learn_from_redirect_traffic" must be set disable_learn_from_redirect_traffic = true } // One of the arguments from this list "no_challenge enable_challenge js_challenge captcha_challenge policy_based_challenge" must be set no_challenge = true // One of the arguments from this list "enable_ddos_detection disable_ddos_detection" must be set enable_ddos_detection { // One of the arguments from this list "disable_auto_mitigation enable_auto_mitigation" must be set enable_auto_mitigation = true } domains = ["www.foo.com"] // One of the arguments from this list "round_robin least_active random source_ip_stickiness cookie_stickiness ring_hash" must be set cookie_stickiness { // One of the arguments from this list "ignore_httponly add_httponly" must be set ignore_httponly = true name = "userid" path = "/Users/userid/browser/cookies" // One of the arguments from this list "ignore_samesite samesite_strict samesite_lax samesite_none" must be set ignore_samesite = true // One of the arguments from this list "ignore_secure add_secure" must be set ignore_secure = true ttl = "5000" } // One of the arguments from this list "http https_auto_cert https" must be set http { dns_volterra_managed = true port = "80" } // One of the arguments from this list "enable_malicious_user_detection disable_malicious_user_detection" must be set enable_malicious_user_detection = true // One of the arguments from this list "disable_rate_limit api_rate_limit rate_limit" must be set disable_rate_limit = true // One of the arguments from this list "active_service_policies service_policies_from_namespace no_service_policies" must be set service_policies_from_namespace = true // One of the arguments from this list "enable_trust_client_ip_headers disable_trust_client_ip_headers" must be set disable_trust_client_ip_headers = true // One of the arguments from this list "user_id_client_ip user_identification" must be set user_id_client_ip = true // One of the arguments from this list "disable_waf app_firewall" must be set disable_waf = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_ip_prefix_set",
			Category:         "Resources",
			ShortDescription: `"The ip_prefix_set allows CRUD of Ip Prefix Set resource on Volterra SaaS" --------------------------------------------------------------------------------------- Resource volterra_ip_prefix_set =============================== The Ip Prefix Set allows CRUD of Ip Prefix Set resource on Volterra SaaS ~> **Note:** Please refer to [Ip Prefix Set API docs](https://volterra.io/docs/api/ip-prefix-set) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_ip_prefix_set" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_k8s_cluster",
			Category:         "Resources",
			ShortDescription: `"The k8s_cluster allows CRUD of K8s Cluster resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_k8s_cluster ============================= The K8s Cluster allows CRUD of K8s Cluster resource on Volterra SaaS ~> **Note:** Please refer to [K8s Cluster API docs](https://volterra.io/docs/api/k8s-cluster) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_k8s_cluster" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "no_cluster_wide_apps cluster_wide_app_list" must be set no_cluster_wide_apps = true // One of the arguments from this list "use_custom_cluster_role_bindings use_default_cluster_role_bindings" must be set use_default_cluster_role_bindings = true // One of the arguments from this list "use_default_cluster_roles use_custom_cluster_role_list" must be set use_default_cluster_roles = true // One of the arguments from this list "cluster_scoped_access_deny cluster_scoped_access_permit" must be set cluster_scoped_access_deny = true // One of the arguments from this list "no_global_access global_access_enable" must be set no_global_access = true // One of the arguments from this list "no_insecure_registries insecure_registry_list" must be set insecure_registry_list { insecure_registries = ["example.com:5000"] } // One of the arguments from this list "no_local_access local_access_config" must be set no_local_access = true // One of the arguments from this list "use_default_psp use_custom_psp_list" must be set use_default_psp = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_k8s_cluster_role",
			Category:         "Resources",
			ShortDescription: `"The k8s_cluster_role allows CRUD of K8s Cluster Role resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_k8s_cluster_role ================================== The K8s Cluster Role allows CRUD of K8s Cluster Role resource on Volterra SaaS ~> **Note:** Please refer to [K8s Cluster Role API docs](https://volterra.io/docs/api/k8s-cluster-role) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_k8s_cluster_role" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "k8s_cluster_role_selector yaml policy_rule_list" must be set policy_rule_list { policy_rule { // One of the arguments from this list "resource_list non_resource_url_list" must be set resource_list { api_groups = ["rbac.authorization.k8s.io"] resource_instances = ["admin"] resource_types = ["role"] verbs = ["get"] } } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_k8s_cluster_role_binding",
			Category:         "Resources",
			ShortDescription: `"The k8s_cluster_role_binding allows CRUD of K8s Cluster Role Binding resource on Volterra SaaS" ------------------------------------------------------------------------------------------------------------- Resource volterra_k8s_cluster_role_binding ========================================== The K8s Cluster Role Binding allows CRUD of K8s Cluster Role Binding resource on Volterra SaaS ~> **Note:** Please refer to [K8s Cluster Role Binding API docs](https://volterra.io/docs/api/k8s-cluster-role-binding) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_k8s_cluster_role_binding" "example" { name = "acmecorp-web" namespace = "staging" k8s_cluster_role { name = "test1" namespace = "staging" tenant = "acmecorp" } subjects { // One of the arguments from this list "group user service_account" must be set user = "user1@example.com" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_k8s_pod_security_policy",
			Category:         "Resources",
			ShortDescription: `"The k8s_pod_security_policy allows CRUD of K8s Pod Security Policy resource on Volterra SaaS" ----------------------------------------------------------------------------------------------------------- Resource volterra_k8s_pod_security_policy ========================================= The K8s Pod Security Policy allows CRUD of K8s Pod Security Policy resource on Volterra SaaS ~> **Note:** Please refer to [K8s Pod Security Policy API docs](https://volterra.io/docs/api/k8s-pod-security-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_k8s_pod_security_policy" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "psp_spec yaml" must be set yaml = "yaml" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_log_receiver",
			Category:         "Resources",
			ShortDescription: `"The log_receiver allows CRUD of Log Receiver resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_log_receiver ============================== The Log Receiver allows CRUD of Log Receiver resource on Volterra SaaS ~> **Note:** Please refer to [Log Receiver API docs](https://volterra.io/docs/api/log-receiver) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_log_receiver" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "syslog data_dog splunk" must be set splunk { // One of the arguments from this list "splunk_server_name splunk_server_ip splunk_server_tls" must be set splunk_server_name { port = "3000" server_name = "server.example.com" } splunk_hec_token { blindfold_secret_info_internal { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "blindfold_secret_info vault_secret_info clear_secret_info wingman_secret_info" must be set blindfold_secret_info { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } } } // One of the arguments from this list "site_local log_receiver_sites" must be set site_local = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_malicious_user_mitigation",
			Category:         "Resources",
			ShortDescription: `"The malicious_user_mitigation allows CRUD of Malicious User Mitigation resource on Volterra SaaS" --------------------------------------------------------------------------------------------------------------- Resource volterra_malicious_user_mitigation =========================================== The Malicious User Mitigation allows CRUD of Malicious User Mitigation resource on Volterra SaaS ~> **Note:** Please refer to [Malicious User Mitigation API docs](https://volterra.io/docs/api/malicious-user-mitigation) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_malicious_user_mitigation" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_managed_tenant",
			Category:         "Resources",
			ShortDescription: `"The managed_tenant allows CRUD of Managed Tenant resource on Volterra SaaS" ----------------------------------------------------------------------------------------- Resource volterra_managed_tenant ================================ The Managed Tenant allows CRUD of Managed Tenant resource on Volterra SaaS ~> **Note:** Please refer to [Managed Tenant API docs](https://volterra.io/docs/api/managed-tenant) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_managed_tenant" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "tenant_id all_tenants tenant_regex new_tenant_info" must be set tenant_id = "company-s4543dsa" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_modify_site",
			Category:         "Resources",
			ShortDescription: `"The volterra_modify_site helps update site fields Volterra SaaS" ------------------------------------------------------------------------------ Resource volterra_modify_site ============================= ================================ volterra_modify_site helps to update fields of site object. This is not applicable for site created through view style APIs. ~> **Note:** Please refer to [Site api docs](https://volterra.io/docs/api/site) to learn more Example Usage ------------- --- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_modify_site" "example" { name = "site1" labels = { "ves.io/fleet" = "fleet-car" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ------------------ --- ` + "`" + `annotations` + "`" + ` - (Optional) queryable and should be preserved when modifying objects. (` + "`" + `String` + "`" + `). ` + "`" + `description` + "`" + ` - (Optional) Human readable description for the object (` + "`" + `String` + "`" + `). ` + "`" + `disable` + "`" + ` - (Optional) A value of true will administratively disable the object (` + "`" + `Bool` + "`" + `). ` + "`" + `labels` + "`" + ` - (Optional) by selector expression (` + "`" + `String` + "`" + `). ` + "`" + `name` + "`" + ` - (Required) The value of name has to follow DNS-1035 format. (` + "`" + `String` + "`" + `). ` + "`" + `namespace` + "`" + ` - (Required) Must be a DNS_LABEL format. For a namespace object itself, namespace value will be "" (` + "`" + `String` + "`" + `). ` + "`" + `address` + "`" + ` - (Optional) Site's geographical address that can be used determine its latitude and longitude. Example: "123 Street, city, country, postal code" (` + "`" + `String` + "`" + `). ` + "`" + `bgp_peer_address` + "`" + ` - (Optional) bgp peer address that can be used as parameter for BGP configuration when BGP is configured to fetch BGP peer address from site Object. This can be used to change peer address per site in fleet (` + "`" + `String` + "`" + `). ` + "`" + `bgp_router_id` + "`" + ` - (Optional) bgp router id that can be used as parameter for BGP configuration when BGP is configured to fetch BGP router ID from site object. This can be used to change router id per site in a fleet (` + "`" + `String` + "`" + `). ` + "`" + `coordinates` + "`" + ` - (Optional) Coordinates of the site which provides the site physical location ` + "`" + `latitude` + "`" + ` - (Optional) Latitude of the site location (` + "`" + `String` + "`" + `). ` + "`" + `longitude` + "`" + ` - (Optional) Longitude of site location (` + "`" + `String` + "`" + `). ` + "`" + `desired_pool_count` + "`" + ` - (Optional) Desire pool count represent number of nodes in scaling group for manual scaling. It is valid only for k8s worker nodes not masters. The desired count must be less than or equal to the maximum size of the group. If new value for Desired is greater than Max, then Max must be updated in cloud provider configuration (` + "`" + `Int` + "`" + `). ` + "`" + `inside_nameserver` + "`" + ` - (Optional) DNS server IP to be used for name resolution in inside network (` + "`" + `String` + "`" + `). ` + "`" + `inside_vip` + "`" + ` - (Optional) Virtual IP to be used as automatic VIP for site local inside network. See documentation for "VIP" in advertise policy to see when Inside VIP is used. When configured, this is used as VIP (depending on advertise policy configuration). When not configured, site local inside interface ip will be used as VIP (` + "`" + `String` + "`" + `). ` + "`" + `operating_system_version` + "`" + ` - (Optional) Desired Operating System version for this site (` + "`" + `String` + "`" + `). ` + "`" + `volterra_software_version` + "`" + ` - (Optional) Desired Volterra software version for this site, a string matching released set of software components (` + "`" + `String` + "`" + `). ` + "`" + `outside_nameserver` + "`" + ` - (Optional) DNS server IP to be used for name resolution in outside network (` + "`" + `String` + "`" + `). ` + "`" + `outside_vip` + "`" + ` - (Optional) Virtual IP to be used as automatic VIP for site local outside network. See documentation for "VIP" in advertise policy to see when Outside VIP is used. When configured, this is used as VIP (depending on advertise policy configuration). When not configured, site local interface ip will be used as VIP (` + "`" + `String` + "`" + `). ` + "`" + `site_to_site_network_type` + "`" + ` - (Optional) Virtual-network of type VIRTUAL_NETWORK_SITE_LOCAL provides connectivity to public (outside) network. This is an insecure network and is connected to public internet via NAT Gateways/firwalls Virtual-network of this type is local to every site. Two virtual networks of this type on different sites are neither related nor connected. Constraints: There can be atmost one virtual network of this type in a given site. This network type is supported on CE sites. This network is created automatically and present on all sites Virtual-network of type VIRTUAL_NETWORK_SITE_LOCAL_INSIDE is a private network inside site. It is a secure network and is not connected to public network. Virtual-network of this type is local to every site. Two virtual networks of this type on different sites are neither related nor connected. Constraints: There can be atmost one virtual network of this type in a given site. This network type is supported on CE sites. This network is created during provisioning of site User defined per-site virtual network. Scope of this virtual network is limited to the site. This is not yet supported Virtual-network of type VIRTUAL_NETWORK_PUBLIC directly conects to the public internet. Virtual-network of this type is local to every site. Two virtual networks of this type on different sites are neither related nor connected. Constraints: There can be atmost one virtual network of this type in a given site. This network type is supported on RE sites only It is an internally created by the system. They must not be created by user Virtual Neworks with global scope across different sites in Volterra domain. An example global virtual-network called "AIN Network" is created for every tenant. for volterra fabric Constraints: It is currently only supported as internally created by the system. Vk8s service network for a given tenant. Used to advertise a virtual host only to vk8s pods for that tenant Constraints: It is an internally created by the system. Must not be created by user VER internal network for the site. It can only be used for virtual hosts with SMA_PROXY type proxy Constraints: It is an internally created by the system. Must not be created by user Virtual-network of type VIRTUAL_NETWORK_SITE_LOCAL_INSIDE_OUTSIDE represents both VIRTUAL_NETWORK_SITE_LOCAL and VIRTUAL_NETWORK_SITE_LOCAL_INSIDE Constraints: This network type is only meaningful in an advertise policy When virtual-network of type VIRTUAL_NETWORK_IP_AUTO is selected for an endpoint, VER will try to determine the network based on the provided IP address Constraints: This network type is only meaningful in an endpoint Valid values are: ` + "`" + `VIRTUAL_NETWORK_SITE_LOCAL` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_SITE_LOCAL_INSIDE` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_PER_SITE` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_PUBLIC` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_GLOBAL` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_SITE_SERVICE` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_VER_INTERNAL` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_SITE_LOCAL_INSIDE_OUTSIDE` + "`" + ` ` + "`" + `VIRTUAL_NETWORK_IP_AUTO` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `site_to_site_tunnel_ip` + "`" + ` - (Optional) VIP in the site_to_site_network_type configured above used for terminating IPSec/SSL tunnels created with SiteMeshGroup (` + "`" + `String` + "`" + `). ` + "`" + `tunnel_dead_timeout` + "`" + ` - (Optional) Time interval, in millisec, within which any ipsec / ssl connection from the site going down is detected. When not set (== 0), a default value of 10000 msec will be used (` + "`" + `Int` + "`" + `). ` + "`" + `tunnel_type` + "`" + ` - (Optional) Tunnel encapsulation to be used between sites. Valid values are ` + "`" + `SITE_TO_SITE_TUNNEL_IPSEC_OR_SSL` + "`" + ` ` + "`" + `SITE_TO_SITE_TUNNEL_IPSEC` + "`" + ` ` + "`" + `SITE_TO_SITE_TUNNEL_SSL` + "`" + ` ` + "`" + `SITE_TO_SITE_CLEAR` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `vip_vrrp_mode` + "`" + ` - (Optional) VRRP advertisement mode for VIP. Valid values are ` + "`" + `VIP_VRRP_INVALID` + "`" + ` ` + "`" + `VIP_VRRP_ENABLE` + "`" + ` ` + "`" + `VIP_VRRP_DISABLE` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `volterra_software_overide` + "`" + ` - (Optional) Decide which software version takes effect in case of conflict between site and fleet. Valid values are ` + "`" + `"SITE_SOFTWARE_OVERRIDE_SITE` + "`" + ` ` + "`" + `SITE_SOFTWARE_OVERRIDE_NEWER` + "`" + ` ` + "`" + `SITE_SOFTWARE_OVERRIDE_FLEET` + "`" + ` (` + "`" + `String` + "`" + `). ` + "`" + `retry` + "`" + ` - (Optional) Number of retries to get the volterra site config, before it fails (` + "`" + `Int` + "`" + `). ` + "`" + `wait_time` + "`" + ` - (Optional) Number of seconds to wait before it retries (` + "`" + `Int` + "`" + `). Attribute Reference -------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_namespace",
			Category:         "Resources",
			ShortDescription: `"The volterra_namespace allows CRD of namespace resource on Volterra SaaS" --------------------------------------------------------------------------------------- Resource: volterra_namespace ============================ Namespace creates logical independent workspace within a tenant. This allows CRD of namespace resource on Volterra. ~> **Note:** Please refer to [Namespace api docs](https://volterra.io/docs/api/namespace) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_namespace" "example" { name = "example" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ------------------ - ` + "`" + `name` + "`" + ` - (Required) Name of the namespace to be queried Attribute Reference ----------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_network_connector",
			Category:         "Resources",
			ShortDescription: `"The network_connector allows CRUD of Network Connector resource on Volterra SaaS" ----------------------------------------------------------------------------------------------- Resource volterra_network_connector =================================== The Network Connector allows CRUD of Network Connector resource on Volterra SaaS ~> **Note:** Please refer to [Network Connector API docs](https://volterra.io/docs/api/network-connector) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_network_connector" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "slo_to_global_dr slo_to_global_snat sli_to_slo_snat sli_to_slo_dr sli_to_global_dr sli_to_global_snat" must be set sli_to_slo_dr = true // One of the arguments from this list "disable_forward_proxy enable_forward_proxy" must be set disable_forward_proxy = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_network_firewall",
			Category:         "Resources",
			ShortDescription: `"The network_firewall allows CRUD of Network Firewall resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_network_firewall ================================== The Network Firewall allows CRUD of Network Firewall resource on Volterra SaaS ~> **Note:** Please refer to [Network Firewall API docs](https://volterra.io/docs/api/network-firewall) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_network_firewall" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "disable_fast_acl active_fast_acls fast_acl_set" must be set disable_fast_acl = true // One of the arguments from this list "disable_forward_proxy_policy active_forward_proxy_policies forward_proxy_policy_set" must be set disable_forward_proxy_policy = true // One of the arguments from this list "network_policy_set active_enhanced_firewall_policies disable_network_policy active_network_policies" must be set active_network_policies { network_policies { name = "test1" namespace = "staging" tenant = "acmecorp" } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_network_interface",
			Category:         "Resources",
			ShortDescription: `"The network_interface allows CRUD of Network Interface resource on Volterra SaaS" ----------------------------------------------------------------------------------------------- Resource volterra_network_interface =================================== The Network Interface allows CRUD of Network Interface resource on Volterra SaaS ~> **Note:** Please refer to [Network Interface API docs](https://volterra.io/docs/api/network-interface) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_network_interface" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "dedicated_management_interface dedicated_interface ethernet_interface tunnel_interface legacy_interface" must be set tunnel_interface { mtu = "1450" // One of the arguments from this list "site_local_inside_network inside_network site_local_network" must be set site_local_network = true // One of the arguments from this list "node cluster" must be set cluster = true priority = "42" static_ip { // One of the arguments from this list "node_static_ip cluster_static_ip fleet_static_ip" must be set node_static_ip { default_gw = "192.168.20.1" dns_server = "192.168.20.1" ip_address = "192.168.20.1/24" } } tunnel { name = "test1" namespace = "staging" tenant = "acmecorp" } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_network_policy",
			Category:         "Resources",
			ShortDescription: `"The network_policy allows CRUD of Network Policy resource on Volterra SaaS" ----------------------------------------------------------------------------------------- Resource volterra_network_policy ================================ The Network Policy allows CRUD of Network Policy resource on Volterra SaaS ~> **Note:** Please refer to [Network Policy API docs](https://volterra.io/docs/api/network-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_network_policy" "example" { name = "acmecorp-web" namespace = "staging" endpoint { // One of the arguments from this list "prefix_list any outside_endpoints inside_endpoints interface namespace label_selector" must be set prefix_list { prefixes = ["192.168.20.0/24"] } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_network_policy_rule",
			Category:         "Resources",
			ShortDescription: `"The network_policy_rule allows CRUD of Network Policy Rule resource on Volterra SaaS" --------------------------------------------------------------------------------------------------- Resource volterra_network_policy_rule ===================================== The Network Policy Rule allows CRUD of Network Policy Rule resource on Volterra SaaS ~> **Note:** Please refer to [Network Policy Rule API docs](https://volterra.io/docs/api/network-policy-rule) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_network_policy_rule" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_network_policy_view",
			Category:         "Resources",
			ShortDescription: `"The network_policy_view allows CRUD of Network Policy View resource on Volterra SaaS" --------------------------------------------------------------------------------------------------- Resource volterra_network_policy_view ===================================== The Network Policy View allows CRUD of Network Policy View resource on Volterra SaaS ~> **Note:** Please refer to [Network Policy View API docs](https://volterra.io/docs/api/views-network-policy-view) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_network_policy_view" "example" { name = "acmecorp-web" namespace = "staging" endpoint { // One of the arguments from this list "label_selector prefix_list any outside_endpoints inside_endpoints interface namespace" must be set outside_endpoints = true } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_nfv_service",
			Category:         "Resources",
			ShortDescription: `"The nfv_service allows CRUD of Nfv Service resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_nfv_service ============================= The Nfv Service allows CRUD of Nfv Service resource on Volterra SaaS ~> **Note:** Please refer to [Nfv Service API docs](https://volterra.io/docs/api/nfv-service) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_nfv_service" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "disable_https_management https_management" must be set disable_https_management = true // One of the arguments from this list "f5_big_ip_aws_service palo_alto_fw_service" must be set f5_big_ip_aws_service { admin_password { blindfold_secret_info_internal { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "blindfold_secret_info vault_secret_info clear_secret_info wingman_secret_info" must be set wingman_secret_info { name = "ChargeBack-API-Key" } } admin_username = "admin" endpoint_service { // One of the arguments from this list "disable_advertise_on_slo_ip advertise_on_slo_ip advertise_on_slo_ip_external" must be set advertise_on_slo_ip_external = true // One of the arguments from this list "automatic_vip configured_vip" must be set automatic_vip = true // One of the arguments from this list "default_tcp_ports http_port https_port custom_tcp_ports no_tcp_ports" must be set default_tcp_ports = true // One of the arguments from this list "no_udp_ports custom_udp_ports" must be set no_udp_ports = true } // One of the arguments from this list "market_place_image byol_image" must be set byol_image { image = "image1" license { blindfold_secret_info_internal { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } secret_encoding_type = "secret_encoding_type" // One of the arguments from this list "blindfold_secret_info vault_secret_info clear_secret_info wingman_secret_info" must be set blindfold_secret_info { decryption_provider = "value" location = "string:///U2VjcmV0SW5mb3JtYXRpb24=" store_provider = "value" } } } nodes { aws_az_name = "us-west-2a" // One of the arguments from this list "reserved_mgmt_subnet mgmt_subnet" must be set reserved_mgmt_subnet = true node_name = "node1" // One of the arguments from this list "automatic_prefix tunnel_prefix" must be set automatic_prefix = true } // One of the arguments from this list "aws_tgw_site_params aws_vpc_site_params" must be set aws_tgw_site_params { aws_tgw_site { name = "test1" namespace = "staging" tenant = "acmecorp" } } ssh_key = "ssh-rsa AAAAB..." tags = { "key1" = "value1" } } // One of the arguments from this list "enabled_ssh_access disable_ssh_access" must be set disable_ssh_access = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_origin_pool",
			Category:         "Resources",
			ShortDescription: `"The origin_pool allows CRUD of Origin Pool resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_origin_pool ============================= The Origin Pool allows CRUD of Origin Pool resource on Volterra SaaS ~> **Note:** Please refer to [Origin Pool API docs](https://volterra.io/docs/api/views-origin-pool) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_origin_pool" "example" { name = "acmecorp-web" namespace = "staging" endpoint_selection = ["endpoint_selection"] loadbalancer_algorithm = ["loadbalancer_algorithm"] origin_servers { // One of the arguments from this list "vn_private_name public_ip public_name private_ip private_name k8s_service consul_service vn_private_ip custom_endpoint_object" must be set public_name { dns_name = "value" } labels = { "key1" = "value1" } } // One of the arguments from this list "port automatic_port" must be set automatic_port = true // One of the arguments from this list "no_tls use_tls" must be set no_tls = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_policer",
			Category:         "Resources",
			ShortDescription: `"The policer allows CRUD of Policer resource on Volterra SaaS" --------------------------------------------------------------------------- Resource volterra_policer ========================= The Policer allows CRUD of Policer resource on Volterra SaaS ~> **Note:** Please refer to [Policer API docs](https://volterra.io/docs/api/policer) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_policer" "example" { name = "acmecorp-web" namespace = "staging" burst_size = ["10000"] committed_information_rate = ["10000"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_protocol_policer",
			Category:         "Resources",
			ShortDescription: `"The protocol_policer allows CRUD of Protocol Policer resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_protocol_policer ================================== The Protocol Policer allows CRUD of Protocol Policer resource on Volterra SaaS ~> **Note:** Please refer to [Protocol Policer API docs](https://volterra.io/docs/api/protocol-policer) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_protocol_policer" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_public_ip",
			Category:         "Resources",
			ShortDescription: `"The volterra_public_ip helps update public IP fields on Volterra SaaS" ------------------------------------------------------------------------------------ Resource volterra_public_ip =========================== ============================= volterra_public_ip helps to update fields of site object. This is not applicable for site created through view style APIs. ~> **Note:** Please refer to [Public IP api docs](https://volterra.io/docs/api/public-ip) to learn more Example Usage -------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_rate_limiter",
			Category:         "Resources",
			ShortDescription: `"The rate_limiter allows CRUD of Rate Limiter resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_rate_limiter ============================== The Rate Limiter allows CRUD of Rate Limiter resource on Volterra SaaS ~> **Note:** Please refer to [Rate Limiter API docs](https://volterra.io/docs/api/rate-limiter) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_rate_limiter" "example" { name = "acmecorp-web" namespace = "staging" limits { burst_multiplier = "1" total_number = "1" unit = "unit" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_rate_limiter_policy",
			Category:         "Resources",
			ShortDescription: `"The rate_limiter_policy allows CRUD of Rate Limiter Policy resource on Volterra SaaS" --------------------------------------------------------------------------------------------------- Resource volterra_rate_limiter_policy ===================================== The Rate Limiter Policy allows CRUD of Rate Limiter Policy resource on Volterra SaaS ~> **Note:** Please refer to [Rate Limiter Policy API docs](https://volterra.io/docs/api/views-rate-limiter-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_rate_limiter_policy" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_registration_approval",
			Category:         "Resources",
			ShortDescription: `"The volterra_registration_approval helps approve registration request" ---------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_role",
			Category:         "Resources",
			ShortDescription: `"The role allows CRUD of Role resource on Volterra SaaS" --------------------------------------------------------------------- Resource volterra_role ====================== The Role allows CRUD of Role resource on Volterra SaaS ~> **Note:** Please refer to [Role API docs](https://volterra.io/docs/api/role) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_role" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_route",
			Category:         "Resources",
			ShortDescription: `"The route allows CRUD of Route resource on Volterra SaaS" ----------------------------------------------------------------------- Resource volterra_route ======================= The Route allows CRUD of Route resource on Volterra SaaS ~> **Note:** Please refer to [Route API docs](https://volterra.io/docs/api/route) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_route" "example" { name = "acmecorp-web" namespace = "staging" routes { // One of the arguments from this list "inherited_bot_defense_javascript_injection bot_defense_javascript_injection" must be set inherited_bot_defense_javascript_injection = true bot_defense_javascript_injection_inline_mode { element_selector = "value" insert_content = "value" position = "position" } disable_custom_script = true disable_location_add = true match { headers { invert_match = true name = "Content-Type" // One of the arguments from this list "exact regex presence" must be set regex = "regex" } http_method = "http_method" path { // One of the arguments from this list "prefix path regex" must be set prefix = "/register/" } query_params { key = "assignee_username" // One of the arguments from this list "exact regex" must be set regex = "regex" } } request_headers_to_add { append = true name = "value" // One of the arguments from this list "value secret_value" must be set value = "value" } request_headers_to_remove = ["host"] response_headers_to_add { append = true name = "value" // One of the arguments from this list "value secret_value" must be set value = "value" } response_headers_to_remove = ["host"] // One of the arguments from this list "route_destination route_redirect route_direct_response" must be set route_destination { buffer_policy { disabled = true max_request_bytes = "2048" max_request_time = "30" } // One of the arguments from this list "do_not_retract_cluster retract_cluster" must be set retract_cluster = true cors_policy { allow_credentials = true allow_headers = "value" allow_methods = "GET" allow_origin = ["value"] allow_origin_regex = ["value"] disabled = true expose_headers = "value" max_age = "value" maximum_age = "-1" } destinations { cluster { name = "test1" namespace = "staging" tenant = "acmecorp" } endpoint_subsets = { "key1" = "value1" } priority = "1" weight = "10" } endpoint_subsets = { "key1" = "value1" } hash_policy { // One of the arguments from this list "header_name cookie source_ip" must be set header_name = "host" terminal = true } // One of the arguments from this list "host_rewrite auto_host_rewrite" must be set host_rewrite = "one.volterra.com" mirror_policy { cluster { name = "test1" namespace = "staging" tenant = "acmecorp" } percent { denominator = "denominator" numerator = "5" } } prefix_rewrite = "/" priority = "priority" retry_policy { back_off { base_interval = "5" max_interval = "60" } num_retries = "3" per_try_timeout = "1000" retriable_status_codes = ["403"] retry_condition = ["5xx"] retry_on = "5xx" } spdy_config { use_spdy = true } timeout = "2000" web_socket_config { idle_timeout = "2000" max_connect_attempts = "5" use_websocket = true } } service_policy { // One of the arguments from this list "disable context_extensions" must be set disable = true } skip_lb_override = true waf_type { // One of the arguments from this list "waf waf_rules app_firewall" must be set waf { waf { name = "test1" namespace = "staging" tenant = "acmecorp" } } } } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_secret_policy",
			Category:         "Resources",
			ShortDescription: `"The secret_policy allows CRUD of Secret Policy resource on Volterra SaaS" --------------------------------------------------------------------------------------- Resource volterra_secret_policy =============================== The Secret Policy allows CRUD of Secret Policy resource on Volterra SaaS ~> **Note:** Please refer to [Secret Policy API docs](https://volterra.io/docs/api/secret-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_secret_policy" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_secret_policy_rule",
			Category:         "Resources",
			ShortDescription: `"The secret_policy_rule allows CRUD of Secret Policy Rule resource on Volterra SaaS" ------------------------------------------------------------------------------------------------- Resource volterra_secret_policy_rule ==================================== The Secret Policy Rule allows CRUD of Secret Policy Rule resource on Volterra SaaS ~> **Note:** Please refer to [Secret Policy Rule API docs](https://volterra.io/docs/api/secret-policy-rule) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_secret_policy_rule" "example" { name = "acmecorp-web" namespace = "staging" action = ["action"] // One of the arguments from this list "client_name client_selector client_name_matcher" must be set client_name = "ver.re01.int.ves.io" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_securemesh_site",
			Category:         "Resources",
			ShortDescription: `"The securemesh_site allows CRUD of Securemesh Site resource on Volterra SaaS" ------------------------------------------------------------------------------------------- Resource volterra_securemesh_site ================================= The Securemesh Site allows CRUD of Securemesh Site resource on Volterra SaaS ~> **Note:** Please refer to [Securemesh Site API docs](https://volterra.io/docs/api/views-securemesh-site) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_securemesh_site" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "default_blocked_services blocked_services" must be set blocked_services { blocked_sevice { // One of the arguments from this list "dns ssh web_user_interface" must be set web_user_interface = true network_type = "network_type" } } // One of the arguments from this list "bond_device_list no_bond_devices" must be set no_bond_devices = true // One of the arguments from this list "logs_streaming_disabled log_receiver" must be set logs_streaming_disabled = true master_node_configuration { name = "master-0" public_ip = "192.168.0.156" } // One of the arguments from this list "default_network_config custom_network_config" must be set default_network_config = true volterra_certified_hw = ["isv-8000-series-voltmesh"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_service_policy",
			Category:         "Resources",
			ShortDescription: `"The service_policy allows CRUD of Service Policy resource on Volterra SaaS" ----------------------------------------------------------------------------------------- Resource volterra_service_policy ================================ The Service Policy allows CRUD of Service Policy resource on Volterra SaaS ~> **Note:** Please refer to [Service Policy API docs](https://volterra.io/docs/api/service-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_service_policy" "example" { name = "acmecorp-web" namespace = "staging" algo = ["algo"] // One of the arguments from this list "deny_list rule_list legacy_rule_list allow_all_requests deny_all_requests internally_generated allow_list" must be set allow_list { asn_list { as_numbers = ["[713, 7932, 847325, 4683, 15269, 1000001]"] } asn_set { name = "test1" namespace = "staging" tenant = "acmecorp" } country_list = ["country_list"] // One of the arguments from this list "default_action_next_policy default_action_deny default_action_allow" must be set default_action_next_policy = true ip_prefix_set { name = "test1" namespace = "staging" tenant = "acmecorp" } prefix_list { prefixes = ["192.168.20.0/24"] } tls_fingerprint_classes = ["tls_fingerprint_classes"] tls_fingerprint_values = ["tls_fingerprint_values"] } // One of the arguments from this list "any_server server_name server_selector server_name_matcher" must be set any_server = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_service_policy_rule",
			Category:         "Resources",
			ShortDescription: `"The service_policy_rule allows CRUD of Service Policy Rule resource on Volterra SaaS" --------------------------------------------------------------------------------------------------- Resource volterra_service_policy_rule ===================================== The Service Policy Rule allows CRUD of Service Policy Rule resource on Volterra SaaS ~> **Note:** Please refer to [Service Policy Rule API docs](https://volterra.io/docs/api/service-policy-rule) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_service_policy_rule" "example" { name = "acmecorp-web" namespace = "staging" action = ["action"] // One of the arguments from this list "asn_matcher any_asn asn_list" must be set any_asn = true challenge_action = ["challenge_action"] // One of the arguments from this list "client_name ip_threat_category_list client_selector client_name_matcher any_client" must be set any_client = true // One of the arguments from this list "any_ip ip_prefix_list ip_matcher" must be set any_ip = true waf_action { // One of the arguments from this list "none waf_skip_processing waf_in_monitoring_mode app_firewall_detection_control data_guard_control" must be set waf_in_monitoring_mode = true } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_site_mesh_group",
			Category:         "Resources",
			ShortDescription: `"The site_mesh_group allows CRUD of Site Mesh Group resource on Volterra SaaS" ------------------------------------------------------------------------------------------- Resource volterra_site_mesh_group ================================= The Site Mesh Group allows CRUD of Site Mesh Group resource on Volterra SaaS ~> **Note:** Please refer to [Site Mesh Group API docs](https://volterra.io/docs/api/site-mesh-group) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_site_mesh_group" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_site_state",
			Category:         "Resources",
			ShortDescription: `"The volterra_site_state changes state of the site" -------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_tcp_loadbalancer",
			Category:         "Resources",
			ShortDescription: `"The tcp_loadbalancer allows CRUD of Tcp Loadbalancer resource on Volterra SaaS" --------------------------------------------------------------------------------------------- Resource volterra_tcp_loadbalancer ================================== The Tcp Loadbalancer allows CRUD of Tcp Loadbalancer resource on Volterra SaaS ~> **Note:** Please refer to [Tcp Loadbalancer API docs](https://volterra.io/docs/api/views-tcp-loadbalancer) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_tcp_loadbalancer" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "do_not_advertise advertise_on_public_default_vip advertise_on_public advertise_custom" must be set do_not_advertise = true // One of the arguments from this list "retract_cluster do_not_retract_cluster" must be set retract_cluster = true // One of the arguments from this list "hash_policy_choice_round_robin hash_policy_choice_least_active hash_policy_choice_random hash_policy_choice_source_ip_stickiness" must be set hash_policy_choice_round_robin = true // One of the arguments from this list "tcp tls_tcp_auto_cert tls_tcp" must be set tcp = true // One of the arguments from this list "service_policies_from_namespace no_service_policies active_service_policies" must be set service_policies_from_namespace = true // One of the arguments from this list "no_sni sni default_lb_with_sni" must be set no_sni = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_tf_params_action",
			Category:         "Resources",
			ShortDescription: `"The volterra_tf_params_action runs action api on view sites" -----------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_tgw_info",
			Category:         "Resources",
			ShortDescription: `"The volterra_tgw_info runs SetTGWInfo custom api for a aws_tgw_site site" ------------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_tgw_vpc_ip_prefixes",
			Category:         "Resources",
			ShortDescription: `"The volterra_tgw_vpc_ip_prefixes runs set_vpc_ip_prefixes api on aws_tgw_site" -----------------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_tgw_vpn_tunnels",
			Category:         "Resources",
			ShortDescription: `"The volterra_tgw_vpn_tunnels runs set_vpc_ip_prefixes api on aws_tgw_site" -------------------------------------------------------------------------------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_token",
			Category:         "Resources",
			ShortDescription: `"The token allows CRUD of Token resource on Volterra SaaS" ----------------------------------------------------------------------- Resource volterra_token ======================= The Token allows CRUD of Token resource on Volterra SaaS ~> **Note:** Please refer to [Token API docs](https://volterra.io/docs/api/token) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_token" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_trusted_ca_list",
			Category:         "Resources",
			ShortDescription: `"The trusted_ca_list allows CRUD of Trusted Ca List resource on Volterra SaaS" ------------------------------------------------------------------------------------------- Resource volterra_trusted_ca_list ================================= The Trusted Ca List allows CRUD of Trusted Ca List resource on Volterra SaaS ~> **Note:** Please refer to [Trusted Ca List API docs](https://volterra.io/docs/api/trusted-ca-list) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_trusted_ca_list" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_usb_policy",
			Category:         "Resources",
			ShortDescription: `"The usb_policy allows CRUD of Usb Policy resource on Volterra SaaS" --------------------------------------------------------------------------------- Resource volterra_usb_policy ============================ The Usb Policy allows CRUD of Usb Policy resource on Volterra SaaS ~> **Note:** Please refer to [Usb Policy API docs](https://volterra.io/docs/api/usb-policy) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_usb_policy" "example" { name = "acmecorp-web" namespace = "staging" allowed_devices { b_device_class = "hub" b_device_protocol = "0002" b_device_sub_class = "hub" i_serial = "0000:00:14.0" id_product = "0x0002" id_vendor = "0x1d6b" } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_user_identification",
			Category:         "Resources",
			ShortDescription: `"The user_identification allows CRUD of User Identification resource on Volterra SaaS" --------------------------------------------------------------------------------------------------- Resource volterra_user_identification ===================================== The User Identification allows CRUD of User Identification resource on Volterra SaaS ~> **Note:** Please refer to [User Identification API docs](https://volterra.io/docs/api/user-identification) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_user_identification" "example" { name = "acmecorp-web" namespace = "staging" rules { // One of the arguments from this list "client_asn ip_and_http_header_name ip_and_tls_fingerprint client_country client_region client_city http_header_name cookie_name none tls_fingerprint client_ip query_param_key" must be set client_ip = true } } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_virtual_host",
			Category:         "Resources",
			ShortDescription: `"The virtual_host allows CRUD of Virtual Host resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_virtual_host ============================== The Virtual Host allows CRUD of Virtual Host resource on Volterra SaaS ~> **Note:** Please refer to [Virtual Host API docs](https://volterra.io/docs/api/virtual-host) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_virtual_host" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "no_challenge js_challenge captcha_challenge" must be set no_challenge = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_virtual_k8s",
			Category:         "Resources",
			ShortDescription: `"The virtual_k8s allows CRUD of Virtual K8s resource on Volterra SaaS" ----------------------------------------------------------------------------------- Resource volterra_virtual_k8s ============================= The Virtual K8s allows CRUD of Virtual K8s resource on Volterra SaaS ~> **Note:** Please refer to [Virtual K8s API docs](https://volterra.io/docs/api/virtual-k8s) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_virtual_k8s" "example" { name = "acmecorp-web" namespace = "staging" } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_virtual_network",
			Category:         "Resources",
			ShortDescription: `"The virtual_network allows CRUD of Virtual Network resource on Volterra SaaS" ------------------------------------------------------------------------------------------- Resource volterra_virtual_network ================================= The Virtual Network allows CRUD of Virtual Network resource on Volterra SaaS ~> **Note:** Please refer to [Virtual Network API docs](https://volterra.io/docs/api/virtual-network) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_virtual_network" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "site_local_network site_local_inside_network legacy_type srv6_network global_network" must be set site_local_inside_network = true } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_virtual_site",
			Category:         "Resources",
			ShortDescription: `"The virtual_site allows CRUD of Virtual Site resource on Volterra SaaS" ------------------------------------------------------------------------------------- Resource volterra_virtual_site ============================== The Virtual Site allows CRUD of Virtual Site resource on Volterra SaaS ~> **Note:** Please refer to [Virtual Site API docs](https://volterra.io/docs/api/virtual-site) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_virtual_site" "example" { name = "acmecorp-web" namespace = "staging" site_selector { expressions = ["region in (us-west1, us-west2),tier in (staging)"] } site_type = ["site_type"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "volterra_volterra_voltstack_site",
			Category:         "Resources",
			ShortDescription: `"The voltstack_site allows CRUD of Voltstack Site resource on Volterra SaaS" ----------------------------------------------------------------------------------------- Resource volterra_voltstack_site ================================ The Voltstack Site allows CRUD of Voltstack Site resource on Volterra SaaS ~> **Note:** Please refer to [Voltstack Site API docs](https://volterra.io/docs/api/views-voltstack-site) to learn more Example Usage ------------- ` + "`" + `` + "`" + `` + "`" + `hcl resource "volterra_voltstack_site" "example" { name = "acmecorp-web" namespace = "staging" // One of the arguments from this list "default_blocked_services blocked_services" must be set default_blocked_services = true // One of the arguments from this list "no_bond_devices bond_device_list" must be set no_bond_devices = true // One of the arguments from this list "disable_gpu enable_gpu enable_vgpu" must be set disable_gpu = true // One of the arguments from this list "no_k8s_cluster k8s_cluster" must be set no_k8s_cluster = true // One of the arguments from this list "logs_streaming_disabled log_receiver" must be set logs_streaming_disabled = true master_nodes = ["master-0"] // One of the arguments from this list "default_network_config custom_network_config" must be set default_network_config = true // One of the arguments from this list "default_storage_config custom_storage_config" must be set default_storage_config = true // One of the arguments from this list "usb_policy deny_all_usb allow_all_usb" must be set deny_all_usb = true volterra_certified_hw = ["isv-8000-series-voltstack-combo"] } ` + "`" + `` + "`" + `` + "`" + ` Argument Reference ---------------`,
			Description:      ``,
			Keywords:         []string{},
			Arguments:        []resource.Attribute{},
			Attributes:       []resource.Attribute{},
		},
	}

	resourcesMap = map[string]int{

		"volterra_volterra_active_alert_policies":      0,
		"volterra_volterra_active_network_policies":    1,
		"volterra_volterra_active_service_policies":    2,
		"volterra_volterra_advertise_policy":           3,
		"volterra_volterra_alert_policy":               4,
		"volterra_volterra_alert_receiver":             5,
		"volterra_volterra_allowed_tenant":             6,
		"volterra_volterra_api_credential":             7,
		"volterra_volterra_api_definition":             8,
		"volterra_volterra_app_api_group":              9,
		"volterra_volterra_app_firewall":               10,
		"volterra_volterra_app_setting":                11,
		"volterra_volterra_app_type":                   12,
		"volterra_volterra_aws_tgw_site":               13,
		"volterra_volterra_aws_vpc_site":               14,
		"volterra_volterra_azure_vnet_site":            15,
		"volterra_volterra_bgp":                        16,
		"volterra_volterra_bgp_asn_set":                17,
		"volterra_volterra_cdn_loadbalancer":           18,
		"volterra_volterra_certificate":                19,
		"volterra_volterra_certificate_chain":          20,
		"volterra_volterra_cloud_credentials":          21,
		"volterra_volterra_cloud_site_labels":          22,
		"volterra_volterra_cluster":                    23,
		"volterra_volterra_container_registry":         24,
		"volterra_volterra_dc_cluster_group":           25,
		"volterra_volterra_discovery":                  26,
		"volterra_volterra_dns_domain":                 27,
		"volterra_volterra_dns_lb_health_check":        28,
		"volterra_volterra_dns_lb_pool":                29,
		"volterra_volterra_dns_load_balancer":          30,
		"volterra_volterra_dns_zone":                   31,
		"volterra_volterra_endpoint":                   32,
		"volterra_volterra_enhanced_firewall_policy":   33,
		"volterra_volterra_fast_acl":                   34,
		"volterra_volterra_fast_acl_for_internet_vips": 35,
		"volterra_volterra_fast_acl_rule":              36,
		"volterra_volterra_fleet":                      37,
		"volterra_volterra_forward_proxy_policy":       38,
		"volterra_volterra_gcp_vpc_site":               39,
		"volterra_volterra_global_log_receiver":        40,
		"volterra_volterra_healthcheck":                41,
		"volterra_volterra_http_loadbalancer":          42,
		"volterra_volterra_ip_prefix_set":              43,
		"volterra_volterra_k8s_cluster":                44,
		"volterra_volterra_k8s_cluster_role":           45,
		"volterra_volterra_k8s_cluster_role_binding":   46,
		"volterra_volterra_k8s_pod_security_policy":    47,
		"volterra_volterra_log_receiver":               48,
		"volterra_volterra_malicious_user_mitigation":  49,
		"volterra_volterra_managed_tenant":             50,
		"volterra_volterra_modify_site":                51,
		"volterra_volterra_namespace":                  52,
		"volterra_volterra_network_connector":          53,
		"volterra_volterra_network_firewall":           54,
		"volterra_volterra_network_interface":          55,
		"volterra_volterra_network_policy":             56,
		"volterra_volterra_network_policy_rule":        57,
		"volterra_volterra_network_policy_view":        58,
		"volterra_volterra_nfv_service":                59,
		"volterra_volterra_origin_pool":                60,
		"volterra_volterra_policer":                    61,
		"volterra_volterra_protocol_policer":           62,
		"volterra_volterra_public_ip":                  63,
		"volterra_volterra_rate_limiter":               64,
		"volterra_volterra_rate_limiter_policy":        65,
		"volterra_volterra_registration_approval":      66,
		"volterra_volterra_role":                       67,
		"volterra_volterra_route":                      68,
		"volterra_volterra_secret_policy":              69,
		"volterra_volterra_secret_policy_rule":         70,
		"volterra_volterra_securemesh_site":            71,
		"volterra_volterra_service_policy":             72,
		"volterra_volterra_service_policy_rule":        73,
		"volterra_volterra_site_mesh_group":            74,
		"volterra_volterra_site_state":                 75,
		"volterra_volterra_tcp_loadbalancer":           76,
		"volterra_volterra_tf_params_action":           77,
		"volterra_volterra_tgw_info":                   78,
		"volterra_volterra_tgw_vpc_ip_prefixes":        79,
		"volterra_volterra_tgw_vpn_tunnels":            80,
		"volterra_volterra_token":                      81,
		"volterra_volterra_trusted_ca_list":            82,
		"volterra_volterra_usb_policy":                 83,
		"volterra_volterra_user_identification":        84,
		"volterra_volterra_virtual_host":               85,
		"volterra_volterra_virtual_k8s":                86,
		"volterra_volterra_virtual_network":            87,
		"volterra_volterra_virtual_site":               88,
		"volterra_volterra_voltstack_site":             89,
	}
)

func GetResource(r string) (*resource.Resource, error) {
	rs, ok := resourcesMap[r]
	if !ok {
		return nil, fmt.Errorf("resource %q not found", r)
	}
	return Resources[rs], nil
}
