package citrixadc

import (
	"fmt"

	"github.com/cycloidio/tfdocs/resource"
)

var (
	Resources = []*resource.Resource{

		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaacertparams",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaacertparams resource is used to create aaacertparams.


`,
			Keywords: []string{
				"aaa",
				"aaacertparams",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "usernamefield",
					Description: `(Optional) Client certificate field that contains the username, in the format <field>:<subfield>. .`,
				},
				resource.Attribute{
					Name:        "groupnamefield",
					Description: `(Optional) Client certificate field that specifies the group, in the format <field>:<subfield>.`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups. Maximum length = 64 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaacertparams. It is a unique string prefixed with ` + "`" + `tf-aaacertparams-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaacertparams. It is a unique string prefixed with ` + "`" + `tf-aaacertparams-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaaglobal_aaapreauthenticationpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaaglobal_aaapreauthenticationpolicy_binding resource is used to create aaaglobal_aaapreauthenticationpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaaglobal",
				"aaapreauthenticationpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) Name of the policy to be unbound. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Priority of the bound policy.`,
				},
				resource.Attribute{
					Name:        "builtin",
					Description: `(Optional) Indicates that a variable is a built-in (SYSTEM INTERNAL) type. Possible values: [ MODIFIABLE, DELETABLE, IMMUTABLE, PARTITION_ALL ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaaglobal_aaapreauthenticationpolicy_binding. It has the same value as the ` + "`" + `policy` + "`" + ` attribute. ## Import A aaaglobal_aaapreauthenticationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaaglobal_aaapreauthenticationpolicy_binding.tf_aaaglobal_aaapreauthenticationpolicy_binding my_preauthentication_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaaglobal_aaapreauthenticationpolicy_binding. It has the same value as the ` + "`" + `policy` + "`" + ` attribute. ## Import A aaaglobal_aaapreauthenticationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaaglobal_aaapreauthenticationpolicy_binding.tf_aaaglobal_aaapreauthenticationpolicy_binding my_preauthentication_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaagroup",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaagroup resource is used to create aaagroup.


`,
			Keywords: []string{
				"aaa",
				"aaagroup",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name for the group. Must begin with a letter, number, or the underscore character (_), and must consist only of letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore characters. Cannot be changed after the group is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my aaa group" or 'my aaa group'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight of this group with respect to other configured aaa groups (lower the number higher the weight). Minimum value = 0 Maximum value = 65535`,
				},
				resource.Attribute{
					Name:        "loggedin",
					Description: `(Optional) Display only the group members who are currently logged in. If there are large number of sessions, this command may provide partial details. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup. It has the same value as the ` + "`" + `groupname` + "`" + ` attribute. ## Import A aaagroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup.tf_aaagroup my_group ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup. It has the same value as the ` + "`" + `groupname` + "`" + ` attribute. ## Import A aaagroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup.tf_aaagroup my_group ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaagroup_aaauser_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaagroup_aaauser_binding resource is used to create aaagroup_aaauser_binding.


`,
			Keywords: []string{
				"aaa",
				"aaagroup",
				"aaauser",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "username",
					Description: `(Required) The user name.`,
				},
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name of the group that you are binding. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_aaauser_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `username` + "`" + ` attributes separated by a comma. ## Import A aaagroup_aaauser_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_aaauser_binding.tf_aaagroup_aaauser_binding my_group,user1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_aaauser_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `username` + "`" + ` attributes separated by a comma. ## Import A aaagroup_aaauser_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_aaauser_binding.tf_aaagroup_aaauser_binding my_group,user1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaagroup_auditnslogpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaagroup_auditnslogpolicy_binding resource is used to create aaagroup_auditnslogpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaagroup",
				"auditnslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000. Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name of the group that you are binding. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_auditnslogpolicy_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaagroup_auditnslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_auditnslogpolicy_binding.tf_aaagroup_auditnslogpolicy_binding my_group,tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_auditnslogpolicy_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaagroup_auditnslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_auditnslogpolicy_binding.tf_aaagroup_auditnslogpolicy_binding my_group,tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaagroup_auditsyslogpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaagroup_auditsyslogpolicy_binding resource is used to create aaagroup_auditsyslogpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaagroup",
				"auditsyslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000. Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name of the group that you are binding. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_auditsyslogpolicy_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaagroup_auditsyslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_auditsyslogpolicy_binding.tf_aaagroup_auditsyslogpolicy_binding my_group,tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_auditsyslogpolicy_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaagroup_auditsyslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_auditsyslogpolicy_binding.tf_aaagroup_auditsyslogpolicy_binding my_group,tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaagroup_authorizationpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaagroup_authorizationpolicy_binding resource is used to create aaagroup_authorizationpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaagroup",
				"authorizationpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name of the group that you are binding. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000. Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_authorizationpolicy_binding. It is the concatenation of ` + "`" + `grouopname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaagroup_authorizationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_authorizationpolicy_binding.tf_aaagroup_authorizationpolicy_binding my_group,tp-authorize-1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_authorizationpolicy_binding. It is the concatenation of ` + "`" + `grouopname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaagroup_authorizationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_authorizationpolicy_binding.tf_aaagroup_authorizationpolicy_binding my_group,tp-authorize-1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaagroup_intranetip_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaagroup_intranetip_binding resource is used to create aaagroup_intranetip_binding.


`,
			Keywords: []string{
				"aaa",
				"aaagroup",
				"intranetip",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "intranetip",
					Description: `(Required) The Intranet IP(s) bound to the group.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Required) The netmask for the Intranet IP.`,
				},
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name of the group that you are binding. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_intranetip_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `intranetip` + "`" + ` attributes separated by a comma. ## Import A aaagroup_intranetip_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csaction.tf_csaction tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_intranetip_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `intranetip` + "`" + ` attributes separated by a comma. ## Import A aaagroup_intranetip_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csaction.tf_csaction tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaagroup_tmsessionpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaagroup_tmsessionpolicy_binding resource is used to create aaagroup_tmsessionpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaagroup",
				"tmsessionpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name of the group that you are binding. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000. Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_tmsessionpolicy_binding. It has the same value as the ` + "`" + `groupname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaagroup_tmsessionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_tmsessionpolicy_binding.tf_aaagroup_tmsessionpolicy_binding my_group,tf_tmsesspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_tmsessionpolicy_binding. It has the same value as the ` + "`" + `groupname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaagroup_tmsessionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_tmsessionpolicy_binding.tf_aaagroup_tmsessionpolicy_binding my_group,tf_tmsesspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaagroup_vpnintranetapplication_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaagroup_vpnintranetapplication_binding resource is used to create aaagroup_vpnintranetapplication_binding.


`,
			Keywords: []string{
				"aaa",
				"aaagroup",
				"vpnintranetapplication",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "intranetapplication",
					Description: `(Required) Bind the group to the specified intranet VPN application.`,
				},
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name of the group that you are binding. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_vpnintranetapplication_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `intranetapplication` + "`" + ` attributes separated by a comma. ## Import A aaagroup_vpnintranetapplication_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_vpnintranetapplication_binding.tf_aaagroup_vpnintranetapplication_binding my_group,tf_vpnintranetapplication ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_vpnintranetapplication_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `intranetapplication` + "`" + ` attributes separated by a comma. ## Import A aaagroup_vpnintranetapplication_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_vpnintranetapplication_binding.tf_aaagroup_vpnintranetapplication_binding my_group,tf_vpnintranetapplication ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaagroup_vpnsessionpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaagroup_vpnsessionpolicy_binding resource is used to create aaagroup_vpnsessionpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaagroup",
				"vpnsessionpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000. Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name of the group that you are binding. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_vpnsessionpolicy_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaagroup_vpnsessionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_vpnsessionpolicy_binding.tf_aaagroup_vpnsessionpolicy_binding my_group,tf_vpnsessionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_vpnsessionpolicy_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaagroup_vpnsessionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_vpnsessionpolicy_binding.tf_aaagroup_vpnsessionpolicy_binding my_group,tf_vpnsessionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaagroup_vpntrafficpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaagroup_vpntrafficpolicy_binding resource is used to create aaagroup_vpntrafficpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaagroup",
				"vpntrafficpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000. Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name of the group that you are binding. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_vpntrafficpolicy_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separatedy by a comma. ## Import A aaagroup_vpntrafficpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_vpntrafficpolicy_binding.tf_aaagroup_vpntrafficpolicy_binding my_group,tf_vpntrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_vpntrafficpolicy_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separatedy by a comma. ## Import A aaagroup_vpntrafficpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_vpntrafficpolicy_binding.tf_aaagroup_vpntrafficpolicy_binding my_group,tf_vpntrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaagroup_vpnurl_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaagroup_vpnurl_binding resource is used to create aaagroup_vpnurl_binding.


`,
			Keywords: []string{
				"aaa",
				"aaagroup",
				"vpnurl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "urlname",
					Description: `(Required) The intranet url.`,
				},
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name of the group that you are binding. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_vpnurl_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `urlname` + "`" + ` attributes separated by a comma. ## Import A aaagroup_vpnurl_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_vpnurl_binding.tf_aaagroup_vpnurl_binding my_group,Firsturl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_vpnurl_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `urlname` + "`" + ` attributes separated by a comma. ## Import A aaagroup_vpnurl_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_vpnurl_binding.tf_aaagroup_vpnurl_binding my_group,Firsturl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaagroup_vpnurlpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaagroup_vpnurlpolicy_binding resource is used to create aaagroup_vpnurlpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaagroup",
				"vpnurlpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name of the group that you are binding. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000. Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_vpnurlpolicy_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaagroup_vpnurlpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_vpnurlpolicy_binding.tf_aaagroup_vpnurlpolicy_binding my_group,new_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaagroup_vpnurlpolicy_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaagroup_vpnurlpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaagroup_vpnurlpolicy_binding.tf_aaagroup_vpnurlpolicy_binding my_group,new_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaakcdaccount",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaakcdaccount resource is used to create aaakcdaccount.


`,
			Keywords: []string{
				"aaa",
				"aaakcdaccount",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "kcdaccount",
					Description: `(Required) The name of the KCD account. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "keytab",
					Description: `(Optional) The path to the keytab file. If specified other parameters in this command need not be given.`,
				},
				resource.Attribute{
					Name:        "realmstr",
					Description: `(Optional) Kerberos Realm.`,
				},
				resource.Attribute{
					Name:        "delegateduser",
					Description: `(Optional) Username that can perform kerberos constrained delegation.`,
				},
				resource.Attribute{
					Name:        "kcdpassword",
					Description: `(Optional) Password for Delegated User.`,
				},
				resource.Attribute{
					Name:        "usercert",
					Description: `(Optional) SSL Cert (including private key) for Delegated User.`,
				},
				resource.Attribute{
					Name:        "cacert",
					Description: `(Optional) CA Cert for UserCert or when doing PKINIT backchannel.`,
				},
				resource.Attribute{
					Name:        "userrealm",
					Description: `(Optional) Realm of the user.`,
				},
				resource.Attribute{
					Name:        "enterpriserealm",
					Description: `(Optional) Enterprise Realm of the user. This should be given only in certain KDC deployments where KDC expects Enterprise username instead of Principal Name.`,
				},
				resource.Attribute{
					Name:        "servicespn",
					Description: `(Optional) Service SPN. When specified, this will be used to fetch kerberos tickets. If not specified, Citrix ADC will construct SPN using service fqdn. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaakcdaccount. It has the same value as the ` + "`" + `kcdaccount` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaakcdaccount. It has the same value as the ` + "`" + `kcdaccount` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaaldapparams",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaaldapparams resource is used to update aaaldapparams.


`,
			Keywords: []string{
				"aaa",
				"aaaldapparams",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address of your LDAP server.`,
				},
				resource.Attribute{
					Name:        "serverport",
					Description: `(Optional) Port number on which the LDAP server listens for connections. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "authtimeout",
					Description: `(Optional) Maximum number of seconds that the Citrix ADC waits for a response from the LDAP server. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "ldapbase",
					Description: `(Optional) Base (the server and location) from which LDAP search commands should start. If the LDAP server is running locally, the default value of base is dc=netscaler, dc=com.`,
				},
				resource.Attribute{
					Name:        "ldapbinddn",
					Description: `(Optional) Complete distinguished name (DN) string used for binding to the LDAP server.`,
				},
				resource.Attribute{
					Name:        "ldapbinddnpassword",
					Description: `(Optional) Password for binding to the LDAP server. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "ldaploginname",
					Description: `(Optional) Name attribute that the Citrix ADC uses to query the external LDAP server or an Active Directory.`,
				},
				resource.Attribute{
					Name:        "searchfilter",
					Description: `(Optional) String to be combined with the default LDAP user search string to form the value to use when executing an LDAP search. For example, the following values: vpnallowed=true, ldaploginame=""samaccount"" when combined with the user-supplied username ""bob"", yield the following LDAP search string: ""(&(vpnallowed=true)(samaccount=bob)"". Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "groupattrname",
					Description: `(Optional) Attribute name used for group extraction from the LDAP server.`,
				},
				resource.Attribute{
					Name:        "subattributename",
					Description: `(Optional) Subattribute name used for group extraction from the LDAP server.`,
				},
				resource.Attribute{
					Name:        "sectype",
					Description: `(Optional) Type of security used for communications between the Citrix ADC and the LDAP server. For the PLAINTEXT setting, no encryption is required. Possible values: [ PLAINTEXT, TLS, SSL ]`,
				},
				resource.Attribute{
					Name:        "svrtype",
					Description: `(Optional) The type of LDAP server. Possible values: [ AD, NDS ]`,
				},
				resource.Attribute{
					Name:        "ssonameattribute",
					Description: `(Optional) Attribute used by the Citrix ADC to query an external LDAP server or Active Directory for an alternative username. This alternative username is then used for single sign-on (SSO).`,
				},
				resource.Attribute{
					Name:        "passwdchange",
					Description: `(Optional) Accept password change requests. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "nestedgroupextraction",
					Description: `(Optional) Queries the external LDAP server to determine whether the specified group belongs to another group. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "maxnestinglevel",
					Description: `(Optional) Number of levels up to which the system can query nested LDAP groups. Minimum value = 2`,
				},
				resource.Attribute{
					Name:        "groupnameidentifier",
					Description: `(Optional) LDAP-group attribute that uniquely identifies the group. No two groups on one LDAP server can have the same group name identifier.`,
				},
				resource.Attribute{
					Name:        "groupsearchattribute",
					Description: `(Optional) LDAP-group attribute that designates the parent group of the specified group. Use this attribute to search for a group's parent group.`,
				},
				resource.Attribute{
					Name:        "groupsearchsubattribute",
					Description: `(Optional) LDAP-group subattribute that designates the parent group of the specified group. Use this attribute to search for a group's parent group.`,
				},
				resource.Attribute{
					Name:        "groupsearchfilter",
					Description: `(Optional) Search-expression that can be specified for sending group-search requests to the LDAP server.`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups. Maximum length = 64 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaaldapparams. It is a unique string prefixed with ` + "`" + `tf-aaaldapparams-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaaldapparams. It is a unique string prefixed with ` + "`" + `tf-aaaldapparams-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaaotpparameter",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaaotpparameter> resource is used to update aaaotpparameter.


`,
			Keywords: []string{
				"aaa",
				"aaaotpparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "encryption",
					Description: `(Optional) To encrypt otp secret in AD or not. Default value is OFF. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "maxotpdevices",
					Description: `(Optional) Maximum number of otp devices user can register. Default value is 4. Max value is 255. Minimum value = 0 Maximum value = 255 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaaotpparameter. It is a unique string prefixed with ` + "`" + `tf-aaaotpparameter-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaaotpparameter. It is a unique string prefixed with ` + "`" + `tf-aaaotpparameter-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaaparameter",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaaparameter resource is used to create aaaparameter.


`,
			Keywords: []string{
				"aaa",
				"aaaparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "enablestaticpagecaching",
					Description: `(Optional) The default state of VPN Static Page caching. If nothing is specified, the default value is set to YES. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "enableenhancedauthfeedback",
					Description: `(Optional) Enhanced auth feedback provides more information to the end user about the reason for an authentication failure. The default value is set to NO. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "defaultauthtype",
					Description: `(Optional) The default authentication server type. Possible values: [ LOCAL, LDAP, RADIUS, TACACS, CERT ]`,
				},
				resource.Attribute{
					Name:        "maxaaausers",
					Description: `(Optional) Maximum number of concurrent users allowed to log on to VPN simultaneously. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "maxloginattempts",
					Description: `(Optional) Maximum Number of login Attempts. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "failedlogintimeout",
					Description: `(Optional) Number of minutes an account will be locked if user exceeds maximum permissible attempts. Minimum value = 1 Maximum value = 525600`,
				},
				resource.Attribute{
					Name:        "aaadnatip",
					Description: `(Optional) Source IP address to use for traffic that is sent to the authentication server.`,
				},
				resource.Attribute{
					Name:        "enablesessionstickiness",
					Description: `(Optional) Enables/Disables stickiness to authentication servers. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "aaasessionloglevel",
					Description: `(Optional) Audit log level, which specifies the types of events to log for cli executed commands. Available values function as follows:`,
				},
				resource.Attribute{
					Name:        "aaadloglevel",
					Description: `(Optional) AAAD log level, which specifies the types of AAAD events to log in nsvpn.log. Available values function as follows:`,
				},
				resource.Attribute{
					Name:        "dynaddr",
					Description: `(Optional) Set by the DHCP client when the IP address was fetched dynamically. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "ftmode",
					Description: `(Optional) First time user mode determines which configuration options are shown by default when logging in to the GUI. This setting is controlled by the GUI. Possible values: [ ON, HA, OFF ]`,
				},
				resource.Attribute{
					Name:        "maxsamldeflatesize",
					Description: `(Optional) This will set the maximum deflate size in case of SAML Redirect binding.`,
				},
				resource.Attribute{
					Name:        "persistentloginattempts",
					Description: `(Optional) Persistent storage of unsuccessful user login attempts. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "pwdexpirynotificationdays",
					Description: `(Optional) This will set the threshold time in days for password expiry notification. Default value is 0, which means no notification is sent.`,
				},
				resource.Attribute{
					Name:        "maxkbquestions",
					Description: `(Optional) This will set maximum number of Questions to be asked for KB Validation. Default value is 2, Max Value is 6. Minimum value = 2 Maximum value = 6`,
				},
				resource.Attribute{
					Name:        "loginencryption",
					Description: `(Optional) Parameter to encrypt login information for nFactor flow. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "samesite",
					Description: `(Optional) SameSite attribute value for Cookies generated in AAATM context. This attribute value will be appended only for the cookies which are specified in the builtin patset ns_cookies_samesite. Possible values: [ None, LAX, STRICT ]`,
				},
				resource.Attribute{
					Name:        "apitokencache",
					Description: `(Optional) Option to enable/disable API cache feature. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tokenintrospectioninterval",
					Description: `(Optional) Frequency at which a token must be verified at the Authorization Server (AS) despite being found in cache.`,
				},
				resource.Attribute{
					Name:        "defaultcspheader",
					Description: `(Optional) Parameter to enable/disable default CSP header. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaaparameter. It is a unique string prefixed with ` + "`" + `tf-aaaparameter-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaaparameter. It is a unique string prefixed with ` + "`" + `tf-aaaparameter-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaapreauthenticationaction",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The citrixadc_aaapreauthenticationaction resource is used to create aaapreauthenticationpolicy.


`,
			Keywords: []string{
				"aaa",
				"aaapreauthenticationaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the preauthentication action. Must begin with a letter, number, or the underscore character (_), and must consist only of letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after preauthentication action is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my aaa action" or 'my aaa action'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "preauthenticationaction",
					Description: `(Optional) Allow or deny logon after endpoint analysis (EPA) results. Possible values: [ ALLOW, DENY ]`,
				},
				resource.Attribute{
					Name:        "killprocess",
					Description: `(Optional) String specifying the name of a process to be terminated by the endpoint analysis (EPA) tool.`,
				},
				resource.Attribute{
					Name:        "deletefiles",
					Description: `(Optional) String specifying the path(s) and name(s) of the files to be deleted by the endpoint analysis (EPA) tool.`,
				},
				resource.Attribute{
					Name:        "defaultepagroup",
					Description: `(Optional) This is the default group that is chosen when the EPA check succeeds. Maximum length = 64 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaapreauthenticationpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A aaapreauthenticationpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaapreauthenticationaction.tf_aaapreauthenticationaction tf_aaapreauthenticationaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaapreauthenticationpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A aaapreauthenticationpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaapreauthenticationaction.tf_aaapreauthenticationaction tf_aaapreauthenticationaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaapreauthenticationparameter",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaapreauthenticationparameter resource is used to updateaaapreauthenticationparameter.


`,
			Keywords: []string{
				"aaa",
				"aaapreauthenticationparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "preauthenticationaction",
					Description: `(Optional) Deny or allow login on the basis of end point analysis results. Possible values: [ ALLOW, DENY ]`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Name of the Citrix ADC named rule, or an expression, to be evaluated by the EPA tool.`,
				},
				resource.Attribute{
					Name:        "killprocess",
					Description: `(Optional) String specifying the name of a process to be terminated by the EPA tool.`,
				},
				resource.Attribute{
					Name:        "deletefiles",
					Description: `(Optional) String specifying the path(s) to and name(s) of the files to be deleted by the EPA tool, as a string of between 1 and 1023 characters. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaapreauthenticationparameter. It is a unique string prefixed with ` + "`" + `tf-aaapreauthenticationparameter-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaapreauthenticationparameter. It is a unique string prefixed with ` + "`" + `tf-aaapreauthenticationparameter-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaapreauthenticationpolicy",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaapreauthenticationpolicy resource is used to create aaapreauthenticationpolicy.


`,
			Keywords: []string{
				"aaa",
				"aaapreauthenticationpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the preauthentication policy. Must begin with a letter, number, or the underscore character (_), and must consist only of letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore characters. Cannot be changed after the preauthentication policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policy" or 'my policy'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Name of the Citrix ADC named rule, or an expression, defining connections that match the policy.`,
				},
				resource.Attribute{
					Name:        "reqaction",
					Description: `(Required) Name of the action that the policy is to invoke when a connection matches the policy. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaapreauthenticationpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A aaapreauthenticationpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaapreauthenticationpolicy.tf_aaapreauthenticationpolicy my_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaapreauthenticationpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A aaapreauthenticationpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaapreauthenticationpolicy.tf_aaapreauthenticationpolicy my_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaaradiusparams",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaaradiusparams resource is used to update aaaradiusparams.


`,
			Keywords: []string{
				"aaa",
				"aaaradiusparams",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "radkey",
					Description: `(Required) The key shared between the RADIUS server and clients. Required for allowing the Citrix ADC to communicate with the RADIUS server. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address of your RADIUS server. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "serverport",
					Description: `(Optional) Port number on which the RADIUS server listens for connections. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "authtimeout",
					Description: `(Optional) Maximum number of seconds that the Citrix ADC waits for a response from the RADIUS server. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "radnasip",
					Description: `(Optional) Send the Citrix ADC IP (NSIP) address to the RADIUS server as the Network Access Server IP (NASIP) part of the Radius protocol. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "radnasid",
					Description: `(Optional) Send the Network Access Server ID (NASID) for your Citrix ADC to the RADIUS server as the nasid part of the Radius protocol.`,
				},
				resource.Attribute{
					Name:        "radvendorid",
					Description: `(Optional) Vendor ID for RADIUS group extraction. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "radattributetype",
					Description: `(Optional) Attribute type for RADIUS group extraction. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "radgroupsprefix",
					Description: `(Optional) Prefix string that precedes group names within a RADIUS attribute for RADIUS group extraction.`,
				},
				resource.Attribute{
					Name:        "radgroupseparator",
					Description: `(Optional) Group separator string that delimits group names within a RADIUS attribute for RADIUS group extraction.`,
				},
				resource.Attribute{
					Name:        "passencoding",
					Description: `(Optional) Enable password encoding in RADIUS packets that the Citrix ADC sends to the RADIUS server. Possible values: [ pap, chap, mschapv1, mschapv2 ]`,
				},
				resource.Attribute{
					Name:        "ipvendorid",
					Description: `(Optional) Vendor ID attribute in the RADIUS response. If the attribute is not vendor-encoded, it is set to 0.`,
				},
				resource.Attribute{
					Name:        "ipattributetype",
					Description: `(Optional) IP attribute type in the RADIUS response. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "accounting",
					Description: `(Optional) Configure the RADIUS server state to accept or refuse accounting messages. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "pwdvendorid",
					Description: `(Optional) Vendor ID of the password in the RADIUS response. Used to extract the user password. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "pwdattributetype",
					Description: `(Optional) Attribute type of the Vendor ID in the RADIUS response. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups. Maximum length = 64`,
				},
				resource.Attribute{
					Name:        "callingstationid",
					Description: `(Optional) Send Calling-Station-ID of the client to the RADIUS server. IP Address of the client is sent as its Calling-Station-ID. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "authservretry",
					Description: `(Optional) Number of retry by the Citrix ADC before getting response from the RADIUS server. Minimum value = 1 Maximum value = 10`,
				},
				resource.Attribute{
					Name:        "authentication",
					Description: `(Optional) Configure the RADIUS server state to accept or refuse authentication messages. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "tunnelendpointclientip",
					Description: `(Optional) Send Tunnel Endpoint Client IP address to the RADIUS server. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaaradiusparams. It is a unique string prefixed with ` + "`" + `tf-aaaradiusparams-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaaradiusparams. It is a unique string prefixed with ` + "`" + `tf-aaaradiusparams-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaassoprofile",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaassoprofile resource is used to create aaassoprofile.


`,
			Keywords: []string{
				"aaa",
				"aaassoprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the SSO Profile. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after a SSO Profile is created. The following requirement applies only to the NetScaler CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Required) Name for the user. Must begin with a letter, number, or the underscore (_) character, and must contain only alphanumeric, hyphen (-), period (.), hash (#), space ( ), at (@), equal (=), colon (:), and underscore characters. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my group" or 'my group'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "password",
					Description: `(Required) Password with which the user logs on. Required for Single sign on to external server. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaassoprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A aaassoprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaassoprofile.tf_aaassoprofile myssoprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaassoprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A aaassoprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaassoprofile.tf_aaassoprofile myssoprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaatacacsparams",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaatacacsparams resource is used to update aaatacacsparams.


`,
			Keywords: []string{
				"aaa",
				"aaatacacsparams",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address of your TACACS+ server. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "serverport",
					Description: `(Optional) Port number on which the TACACS+ server listens for connections. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "authtimeout",
					Description: `(Optional) Maximum number of seconds that the Citrix ADC waits for a response from the TACACS+ server. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "tacacssecret",
					Description: `(Optional) Key shared between the TACACS+ server and clients. Required for allowing the Citrix ADC to communicate with the TACACS+ server. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "authorization",
					Description: `(Optional) Use streaming authorization on the TACACS+ server. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "accounting",
					Description: `(Optional) Send accounting messages to the TACACS+ server. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "auditfailedcmds",
					Description: `(Optional) The option for sending accounting messages to the TACACS+ server. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "groupattrname",
					Description: `(Optional) TACACS+ group attribute name.Used for group extraction on the TACACS+ server.`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups. Maximum length = 64 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaatacacsparams. It is a unique string prefixed with ` + "`" + `tf-aaatacacsparams-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaatacacsparams. It is a unique string prefixed with ` + "`" + `tf-aaatacacsparams-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaauser",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaauser resource is used to create aaauser.


`,
			Keywords: []string{
				"aaa",
				"aaauser",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "username",
					Description: `(Required) Name for the user. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the user is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my aaa user" or "my aaa user"). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "password",
					Description: `(Optional) Password with which the user logs on. Required for any user account that does not exist on an external authentication server. If you are not using an external authentication server, all user accounts must have a password. If you are using an external authentication server, you must provide a password for local user accounts that do not exist on the authentication server. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "loggedin",
					Description: `(Optional) Show whether the user is logged in or not. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser. It has the same value as the ` + "`" + `username` + "`" + ` attribute. ## Import A aaauser can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser.tf_aaauser john ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser. It has the same value as the ` + "`" + `username` + "`" + ` attribute. ## Import A aaauser can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser.tf_aaauser john ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaauser_auditnslogpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaauser_auditnslogpolicy_binding resource is used to create aaauser_auditnslogpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaauser",
				"auditnslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy Name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies max priority is 64000. . Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Required) User account to which to bind the policy. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_auditnslogpolicy_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_auditnslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_auditnslogpolicy_binding.tf_aaauser_auditnslogpolicy_binding user1,tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_auditnslogpolicy_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_auditnslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_auditnslogpolicy_binding.tf_aaauser_auditnslogpolicy_binding user1,tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaauser_auditsyslogpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaauser_auditsyslogpolicy_binding resource is used to create aaauser_auditsyslogpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaauser",
				"auditsyslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "username",
					Description: `(Required) User account to which to bind the policy. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy Name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies max priority is 64000. . Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_auditsyslogpolicy_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_auditsyslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_auditsyslogpolicy_binding.tf_aaauser_auditsyslogpolicy_binding user1,tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_auditsyslogpolicy_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_auditsyslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_auditsyslogpolicy_binding.tf_aaauser_auditsyslogpolicy_binding user1,tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaauser_authorizationpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaauser_authorizationpolicy_binding resource is used to create aaauser_authorizationpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaauser",
				"authorizationpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy Name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies max priority is 64000. . Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Required) User account to which to bind the policy. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_authorizationpolicy_binding. It is the ` + "`" + `username` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_authorizationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_authorizationpolicy_binding.tf_aaauser_authorizationpolicy_binding user1,tp-authorize-1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_authorizationpolicy_binding. It is the ` + "`" + `username` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_authorizationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_authorizationpolicy_binding.tf_aaauser_authorizationpolicy_binding user1,tp-authorize-1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaauser_intranetip6_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaauser_intranetip6_binding resource is used to create aaauser_intranetip6_binding.


`,
			Keywords: []string{
				"aaa",
				"aaauser",
				"intranetip6",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "intranetip6",
					Description: `(Required) The Intranet IP6 bound to the user.`,
				},
				resource.Attribute{
					Name:        "numaddr",
					Description: `(Optional) Numbers of ipv6 address bound starting with intranetip6.`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Required) User account to which to bind the policy. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_intranetip6_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `intranetip6` + "`" + ` attributes separated by a comma, including the ` + "`" + `/128` + "`" + ` string appended to it . ## Import A aaauser_intranetip6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_intranetip6_binding.tf_aaauser_intranetip6_binding user1,2003:db8:100::fb/128 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_intranetip6_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `intranetip6` + "`" + ` attributes separated by a comma, including the ` + "`" + `/128` + "`" + ` string appended to it . ## Import A aaauser_intranetip6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_intranetip6_binding.tf_aaauser_intranetip6_binding user1,2003:db8:100::fb/128 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaauser_intranetip_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaauser_intranetip_binding resource is used to create aaauser_intranetip_binding.


`,
			Keywords: []string{
				"aaa",
				"aaauser",
				"intranetip",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "username",
					Description: `(Required) User account to which to bind the policy. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "intranetip",
					Description: `(Required) The Intranet IP bound to the user.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) The netmask for the Intranet IP.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_intranetip_binding. It is a concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `intranetip` + "`" + ` attributes separated by a comma. ## Import A aaauser_intranetip_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_intranetip_binding.citrixadc_tf_intranetip_binding user1,10.222.74.158 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_intranetip_binding. It is a concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `intranetip` + "`" + ` attributes separated by a comma. ## Import A aaauser_intranetip_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_intranetip_binding.citrixadc_tf_intranetip_binding user1,10.222.74.158 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaauser_tmsessionpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaauser_tmsessionpolicy_binding resource is used to create aaauser_tmsessionpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaauser",
				"tmsessionpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "username",
					Description: `(Required) User account to which to bind the policy. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy Name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies max priority is 64000. . Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_tmsessionpolicy_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_tmsessionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_tmsessionpolicy_binding.tf_aaauser_tmsessionpolicy_binding user1,tf_tmsesspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_tmsessionpolicy_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_tmsessionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_tmsessionpolicy_binding.tf_aaauser_tmsessionpolicy_binding user1,tf_tmsesspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaauser_vpnintranetapplication_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaauser_vpnintranetapplicationb_binding resource is used to create aaauser_vpnintranetapplicationb_binding.


`,
			Keywords: []string{
				"aaa",
				"aaauser",
				"vpnintranetapplication",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "intranetapplication",
					Description: `(Required) Name of the intranet VPN application to which the policy applies.`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Required) User account to which to bind the policy. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_vpnintranetapplicationb_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `intranetapplication` + "`" + ` separated by a comma. ## Import A aaauser_vpnintranetapplicationb_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_vpnintranetapplication_binding.tf_aaauser_vpnintranetapplication_binding user1,tf_vpnintranetapplication ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_vpnintranetapplicationb_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `intranetapplication` + "`" + ` separated by a comma. ## Import A aaauser_vpnintranetapplicationb_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_vpnintranetapplication_binding.tf_aaauser_vpnintranetapplication_binding user1,tf_vpnintranetapplication ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaauser_vpnsessionpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaauser_vpnsessionpolicy_binding resource is used to create aaauser_vpnsessionpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaauser",
				"vpnsessionpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy Name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies max priority is 64000. . Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Required) User account to which to bind the policy. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_vpnsessionpolicy_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_vpnsessionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_vpnsessionpolicy_binding.tf_aaauser_vpnsessionpolicy_binding user1,tf_vpnsessionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_vpnsessionpolicy_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_vpnsessionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_vpnsessionpolicy_binding.tf_aaauser_vpnsessionpolicy_binding user1,tf_vpnsessionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaauser_vpntrafficpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaauser_vpntrafficpolicy_binding resource is used to create aaauser_vpntrafficpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaauser",
				"vpntrafficpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy Name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies max priority is 64000. . Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Required) User account to which to bind the policy. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_vpntrafficpolicy_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_vpntrafficpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_vpntrafficpolicy_binding.tf_aaauser_vpntrafficpolicy_binding user1,tf_vpntrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_vpntrafficpolicy_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_vpntrafficpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_vpntrafficpolicy_binding.tf_aaauser_vpntrafficpolicy_binding user1,tf_vpntrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaauser_vpnurl_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaauser_vpnurl_binding resource is used to create aaauser_vpnurl_binding.


`,
			Keywords: []string{
				"aaa",
				"aaauser",
				"vpnurl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "urlname",
					Description: `(Required) The intranet url.`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Required) User account to which to bind the policy. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_vpnurl_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `urlname` + "`" + ` attributes separated by a comma. ## Import A aaauser_vpnurl_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_vpnurl_binding.tf user1,Firsturl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_vpnurl_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `urlname` + "`" + ` attributes separated by a comma. ## Import A aaauser_vpnurl_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_vpnurl_binding.tf user1,Firsturl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_aaauser_vpnurlpolicy_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The aaauser_vpnurlpolicy_binding resource is used to create aaauser_vpnurlpolicy_binding.


`,
			Keywords: []string{
				"aaa",
				"aaauser",
				"vpnurlpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "username",
					Description: `(Required) User account to which to bind the policy. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy Name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the policy. A lower number indicates a higher priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies max priority is 64000. . Minimum value = 0 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQUEST, UDP_REQUEST, DNS_REQUEST, ICMP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_vpnurlpolicy_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_vpnurlpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_vpnurlpolicy_binding.tf_aaauser_vpnurlpolicy_binding user1,new_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the aaauser_vpnurlpolicy_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A aaauser_vpnurlpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_aaauser_vpnurlpolicy_binding.tf_aaauser_vpnurlpolicy_binding user1,new_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_admparameter",
			Category:         "Adm",
			ShortDescription: ``,
			Description: `

The admparameter resource is used to update admparameter.


`,
			Keywords: []string{
				"adm",
				"admparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "admserviceconnect",
					Description: `(Optional) Parameter to enable/disable Citrix ADM Service Connect. This feature helps you discover your Citrix ADC instances effortlessly on Citrix ADM service and get insights and curated machine learning based recommendations for applications and Citrix ADC infrastructure. This feature lets the Citrix ADC instance automatically send system, usage and telemetry data to Citrix ADM service. View here [https://docs.citrix.com/en-us/citrix-adc/13/data-governance.html] to learn more about this feature. Use of this feature is subject to the Citrix End User ServiceAgreement. View here [https://www.citrix.com/buy/licensing/agreements.html]. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the admparameter. It is a unique string prefixed with ` + "`" + `tf-admparameter-` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the admparameter. It is a unique string prefixed with ` + "`" + `tf-admparameter-` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_analyticsprofile",
			Category:         "Analytics",
			ShortDescription: ``,
			Description: `

The analyticsprofile resource is used to create analyticsprofile.


`,
			Keywords: []string{
				"analytics",
				"analyticsprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the analytics profile. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my appflow profile" or 'my appflow profile'). Minimum length = 1 Maximum length = 127`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) This option indicates what information needs to be collected and exported. Possible values: [ global, webinsight, tcpinsight, securityinsight, videoinsight, hdxinsight, gatewayinsight, timeseries, lsninsight, botinsight, CIinsight ]`,
				},
				resource.Attribute{
					Name:        "collectors",
					Description: `(Optional) The collector can be an IP, an appflow collector name, a service or a vserver. If IP is specified, the transport is considered as logstream and default port of 5557 is taken. If collector name is specified, the collector properties are taken from the configured collector. If service is specified, the configured service is assumed as the collector. If vserver is specified, the services bound to it are considered as collectors and the records are load balanced. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "httpclientsidemeasurements",
					Description: `(Optional) On enabling this option, the Citrix ADC will insert a javascript into the HTTP response to collect the client side page-timings and will send the same to the configured collectors. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httppagetracking",
					Description: `(Optional) On enabling this option, the Citrix ADC will link the embedded objects of a page together. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httpurl",
					Description: `(Optional) On enabling this option, the Citrix ADC will log the URL in appflow records. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httphost",
					Description: `(Optional) On enabling this option, the Citrix ADC will log the Host header in appflow records. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httpmethod",
					Description: `(Optional) On enabling this option, the Citrix ADC will log the method header in appflow records. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httpreferer",
					Description: `(Optional) On enabling this option, the Citrix ADC will log the referer header in appflow records. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httpuseragent",
					Description: `(Optional) On enabling this option, the Citrix ADC will log User-Agent header. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httpcookie",
					Description: `(Optional) On enabling this option, the Citrix ADC will log cookie header. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httplocation",
					Description: `(Optional) On enabling this option, the Citrix ADC will log location header. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "urlcategory",
					Description: `(Optional) On enabling this option, the Citrix ADC will send the URL category record. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "allhttpheaders",
					Description: `(Optional) On enabling this option, the Citrix ADC will log all the request and response headers. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httpcontenttype",
					Description: `(Optional) On enabling this option, the Citrix ADC will log content-length header. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httpauthentication",
					Description: `(Optional) On enabling this option, the Citrix ADC will log Authentication header. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httpvia",
					Description: `(Optional) On enabling this option, the Citrix ADC will Via header. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httpxforwardedforheader",
					Description: `(Optional) On enabling this option, the Citrix ADC will log X-Forwarded-For header. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httpsetcookie",
					Description: `(Optional) On enabling this option, the Citrix ADC will log set-cookie header. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httpsetcookie2",
					Description: `(Optional) On enabling this option, the Citrix ADC will log set-cookie2 header. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httpdomainname",
					Description: `(Optional) On enabling this option, the Citrix ADC will log domain name. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httpurlquery",
					Description: `(Optional) On enabling this option, the Citrix ADC will log URL Query. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tcpburstreporting",
					Description: `(Optional) On enabling this option, the Citrix ADC will log TCP burst parameters. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "cqareporting",
					Description: `(Optional) On enabling this option, the Citrix ADC will log TCP CQA parameters. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "integratedcache",
					Description: `(Optional) On enabling this option, the Citrix ADC will log the Integrated Caching appflow records. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "grpcstatus",
					Description: `(Optional) On enabling this option, the Citrix ADC will log the gRPC status headers. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "outputmode",
					Description: `(Optional) This option indicates the format of REST API POST body. It depends on the consumer of the analytics data. Possible values: [ avro, prometheus, influx ]`,
				},
				resource.Attribute{
					Name:        "metrics",
					Description: `(Optional) This option indicates the whether metrics should be sent to the REST collector. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "events",
					Description: `(Optional) This option indicates the whether events should be sent to the REST collector. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "auditlogs",
					Description: `(Optional) This option indicates the whether auditlog should be sent to the REST collector. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the analyticsprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A analyticsprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_analyticsprofile.tf_analyticsprofile my_analyticsprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the analyticsprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A analyticsprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_analyticsprofile.tf_analyticsprofile my_analyticsprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appalgparam",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The appalgparam resource is used to create AppAlg Param resource.


`,
			Keywords: []string{
				"network",
				"appalgparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "pptpgreidletimeout",
					Description: `(Required) Interval in sec, after which data sessions of PPTP GRE is cleared. Minimum value = 1 Maximum value = 9000 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appalgparam. It is a unique string prefixed with "tf-appalgparam-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appalgparam. It is a unique string prefixed with "tf-appalgparam-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appflowaction",
			Category:         "AppFlow",
			ShortDescription: ``,
			Description: `

The appflowaction resource is used to create appflowaction.


`,
			Keywords: []string{
				"appflow",
				"appflowaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the action. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my appflow action" or 'my appflow action').`,
				},
				resource.Attribute{
					Name:        "botinsight",
					Description: `(Optional) On enabling this option, the Citrix ADC will send the bot insight records to the configured collectors.`,
				},
				resource.Attribute{
					Name:        "ciinsight",
					Description: `(Optional) On enabling this option, the Citrix ADC will send the ContentInspection Insight records to the configured collectors.`,
				},
				resource.Attribute{
					Name:        "clientsidemeasurements",
					Description: `(Optional) On enabling this option, the Citrix ADC will collect the time required to load and render the mainpage on the client.`,
				},
				resource.Attribute{
					Name:        "collectors",
					Description: `(Optional) Name(s) of collector(s) to be associated with the AppFlow action.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about this action. In the CLI, if including spaces between words, enclose the comment in quotation marks. (The quotation marks are not required in the configuration utility.)`,
				},
				resource.Attribute{
					Name:        "distributionalgorithm",
					Description: `(Optional) On enabling this option, the Citrix ADC will distribute records among the collectors. Else, all records will be sent to all the collectors.`,
				},
				resource.Attribute{
					Name:        "metricslog",
					Description: `(Optional) If only the stats records are to be exported, turn on this option.`,
				},
				resource.Attribute{
					Name:        "pagetracking",
					Description: `(Optional) On enabling this option, the Citrix ADC will start tracking the page for waterfall chart by inserting a NS_ESNS cookie in the response.`,
				},
				resource.Attribute{
					Name:        "securityinsight",
					Description: `(Optional) On enabling this option, the Citrix ADC will send the security insight records to the configured collectors.`,
				},
				resource.Attribute{
					Name:        "transactionlog",
					Description: `(Optional) Log ANOMALOUS or ALL transactions`,
				},
				resource.Attribute{
					Name:        "videoanalytics",
					Description: `(Optional) On enabling this option, the Citrix ADC will send the videoinsight records to the configured collectors.`,
				},
				resource.Attribute{
					Name:        "webinsight",
					Description: `(Optional) On enabling this option, the Citrix ADC will send the webinsight records to the configured collectors. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appflowaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowaction.tf_appflowaction test_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appflowaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowaction.tf_appflowaction test_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appflowaction_analyticsprofile_binding",
			Category:         "Appflow",
			ShortDescription: ``,
			Description: `

The appflowaction_analyticsprofile_binding resource is used to create appflowaction_analyticsprofile_binding.


`,
			Keywords: []string{
				"appflow",
				"appflowaction",
				"analyticsprofile",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "analyticsprofile",
					Description: `(Required) Analytics profile to be bound to the appflow action`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the action. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my appflow action" or 'my appflow action'). ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowaction_analyticsprofile_binding is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `analyticsprofile` + "`" + ` attributes separated by a comma. ## Import A appflowaction_analyticsprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowaction_analyticsprofile_binding.tf_appflowaction_analyticsprofile_binding test_action,ns_analytics_global_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowaction_analyticsprofile_binding is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `analyticsprofile` + "`" + ` attributes separated by a comma. ## Import A appflowaction_analyticsprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowaction_analyticsprofile_binding.tf_appflowaction_analyticsprofile_binding test_action,ns_analytics_global_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appflowcollector",
			Category:         "AppFlow",
			ShortDescription: ``,
			Description: `

The appflowcollector resource is used to create appflowcollector.


`,
			Keywords: []string{
				"appflow",
				"appflowcollector",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the collector. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Only four collectors can be configured. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my appflow collector" or 'my appflow collector').`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Optional) IPv4 address of the collector.`,
				},
				resource.Attribute{
					Name:        "netprofile",
					Description: `(Optional) Netprofile to associate with the collector. The IP address defined in the profile is used as the source IP address for AppFlow traffic for this collector. If you do not set this parameter, the Citrix ADC IP (NSIP) address is used as the source IP address.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Port on which the collector listens.`,
				},
				resource.Attribute{
					Name:        "transport",
					Description: `(Optional) Type of collector: either logstream or ipfix or rest. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowcollector. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appflowcollector can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowcollector.tf_appflowcollector tf_collector ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowcollector. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appflowcollector can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowcollector.tf_appflowcollector tf_collector ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appflowglobal_appflowpolicy_binding",
			Category:         "AppFlow",
			ShortDescription: ``,
			Description: `

The appflowglobal_appflowpolicy_binding resource is used to create appflowglobal_appflowpolicy_binding.


`,
			Keywords: []string{
				"appflow",
				"appflowglobal",
				"appflowpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the AppFlow policy.`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) 0`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or a user-defined policy label. After the invoked policies are evaluated, the flow returns to the policy with the next priority.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to invoke if the current policy evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke. Specify vserver for a policy label associated with a virtual server, or policylabel for a user-defined policy label.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Global bind point for which to show detailed information about the policies bound to the bind point. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowglobal_appflowpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A appflowglobal_appflowpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowglobal_appflowpolicy_binding.tf_appflowglobal_appflowpolicy_binding test_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowglobal_appflowpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A appflowglobal_appflowpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowglobal_appflowpolicy_binding.tf_appflowglobal_appflowpolicy_binding test_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appflowparam",
			Category:         "AppFlow",
			ShortDescription: ``,
			Description: `

The appflowparam resource is used to create appflowparam.


`,
			Keywords: []string{
				"appflow",
				"appflowparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "aaausername",
					Description: `(Optional) Enable AppFlow AAA Username logging.`,
				},
				resource.Attribute{
					Name:        "analyticsauthtoken",
					Description: `(Optional) Authentication token to be set by the agent.`,
				},
				resource.Attribute{
					Name:        "appnamerefresh",
					Description: `(Optional) Interval, in seconds, at which to send Appnames to the configured collectors. Appname refers to the name of an entity (virtual server, service, or service group) in the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "auditlogs",
					Description: `(Optional) Enable Auditlogs to be sent to the Telemetry Agent`,
				},
				resource.Attribute{
					Name:        "cacheinsight",
					Description: `(Optional) Flag to determine whether cache records need to be exported or not. If this flag is true and IC is enabled, cache records are exported instead of L7 HTTP records`,
				},
				resource.Attribute{
					Name:        "clienttrafficonly",
					Description: `(Optional) Generate AppFlow records for only the traffic from the client.`,
				},
				resource.Attribute{
					Name:        "connectionchaining",
					Description: `(Optional) Enable connection chaining so that the client server flows of a connection are linked. Also the connection chain ID is propagated across Citrix ADCs, so that in a multi-hop environment the flows belonging to the same logical connection are linked. This id is also logged as part of appflow record`,
				},
				resource.Attribute{
					Name:        "cqareporting",
					Description: `(Optional) TCP CQA reporting enable/disable knob.`,
				},
				resource.Attribute{
					Name:        "distributedtracing",
					Description: `(Optional) Enable generation of the distributed tracing templates in the Appflow records`,
				},
				resource.Attribute{
					Name:        "disttracingsamplingrate",
					Description: `(Optional) Sampling rate for Distributed Tracing`,
				},
				resource.Attribute{
					Name:        "emailaddress",
					Description: `(Optional) Enable AppFlow user email-id logging.`,
				},
				resource.Attribute{
					Name:        "events",
					Description: `(Optional) Enable Events to be sent to the Telemetry Agent`,
				},
				resource.Attribute{
					Name:        "flowrecordinterval",
					Description: `(Optional) Interval, in seconds, at which to send flow records to the configured collectors.`,
				},
				resource.Attribute{
					Name:        "gxsessionreporting",
					Description: `(Optional) Enable this option for Gx session reporting`,
				},
				resource.Attribute{
					Name:        "httpauthorization",
					Description: `(Optional) Include the HTTP Authorization header information.`,
				},
				resource.Attribute{
					Name:        "httpcontenttype",
					Description: `(Optional) Include the HTTP Content-Type header sent from the server to the client to determine the type of the content sent.`,
				},
				resource.Attribute{
					Name:        "httpcookie",
					Description: `(Optional) Include the cookie that was in the HTTP request the appliance received from the client.`,
				},
				resource.Attribute{
					Name:        "httpdomain",
					Description: `(Optional) Include the http domain request to be exported.`,
				},
				resource.Attribute{
					Name:        "httphost",
					Description: `(Optional) Include the host identified in the HTTP request that the appliance received from the client.`,
				},
				resource.Attribute{
					Name:        "httplocation",
					Description: `(Optional) Include the HTTP location headers returned from the HTTP responses.`,
				},
				resource.Attribute{
					Name:        "httpmethod",
					Description: `(Optional) Include the method that was specified in the HTTP request that the appliance received from the client.`,
				},
				resource.Attribute{
					Name:        "httpquerywithurl",
					Description: `(Optional) Include the HTTP query segment along with the URL that the Citrix ADC received from the client.`,
				},
				resource.Attribute{
					Name:        "httpreferer",
					Description: `(Optional) Include the web page that was last visited by the client.`,
				},
				resource.Attribute{
					Name:        "httpsetcookie",
					Description: `(Optional) Include the Set-cookie header sent from the server to the client in response to a HTTP request.`,
				},
				resource.Attribute{
					Name:        "httpsetcookie2",
					Description: `(Optional) Include the Set-cookie header sent from the server to the client in response to a HTTP request.`,
				},
				resource.Attribute{
					Name:        "httpurl",
					Description: `(Optional) Include the http URL that the Citrix ADC received from the client.`,
				},
				resource.Attribute{
					Name:        "httpuseragent",
					Description: `(Optional) Include the client application through which the HTTP request was received by the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "httpvia",
					Description: `(Optional) Include the httpVia header which contains the IP address of proxy server through which the client accessed the server.`,
				},
				resource.Attribute{
					Name:        "httpxforwardedfor",
					Description: `(Optional) Include the httpXForwardedFor header, which contains the original IP Address of the client using a proxy server to access the server.`,
				},
				resource.Attribute{
					Name:        "identifiername",
					Description: `(Optional) Include the stream identifier name to be exported.`,
				},
				resource.Attribute{
					Name:        "identifiersessionname",
					Description: `(Optional) Include the stream identifier session name to be exported.`,
				},
				resource.Attribute{
					Name:        "logstreamovernsip",
					Description: `(Optional) To use the Citrix ADC IP to send Logstream records instead of the SNIP`,
				},
				resource.Attribute{
					Name:        "lsnlogging",
					Description: `(Optional) On enabling this option, the Citrix ADC will send the Large Scale Nat(LSN) records to the configured collectors.`,
				},
				resource.Attribute{
					Name:        "metrics",
					Description: `(Optional) Enable Citrix ADC Stats to be sent to the Telemetry Agent`,
				},
				resource.Attribute{
					Name:        "observationdomainid",
					Description: `(Optional) An observation domain groups a set of Citrix ADCs based on deployment: cluster, HA etc. A unique Observation Domain ID is required to be assigned to each such group.`,
				},
				resource.Attribute{
					Name:        "observationdomainname",
					Description: `(Optional) Name of the Observation Domain defined by the observation domain ID.`,
				},
				resource.Attribute{
					Name:        "observationpointid",
					Description: `(Optional) An observation point ID is identifier for the NetScaler from which appflow records are being exported. By default, the NetScaler IP is the observation point ID.`,
				},
				resource.Attribute{
					Name:        "securityinsightrecordinterval",
					Description: `(Optional) Interval, in seconds, at which to send security insight flow records to the configured collectors.`,
				},
				resource.Attribute{
					Name:        "securityinsighttraffic",
					Description: `(Optional) Enable/disable the feature individually on appflow action.`,
				},
				resource.Attribute{
					Name:        "skipcacheredirectionhttptransaction",
					Description: `(Optional) Skip Cache http transaction. This HTTP transaction is specific to Cache Redirection module. In Case of Cache Miss there will be another HTTP transaction initiated by the cache server.`,
				},
				resource.Attribute{
					Name:        "subscriberawareness",
					Description: `(Optional) Enable this option for logging end user MSISDN in L4/L7 appflow records`,
				},
				resource.Attribute{
					Name:        "subscriberidobfuscation",
					Description: `(Optional) Enable this option for obfuscating MSISDN in L4/L7 appflow records`,
				},
				resource.Attribute{
					Name:        "subscriberidobfuscationalgo",
					Description: `(Optional) Algorithm(MD5 or SHA256) to be used for obfuscating MSISDN`,
				},
				resource.Attribute{
					Name:        "tcpattackcounterinterval",
					Description: `(Optional) Interval, in seconds, at which to send tcp attack counters to the configured collectors. If 0 is configured, the record is not sent.`,
				},
				resource.Attribute{
					Name:        "templaterefresh",
					Description: `(Optional) Refresh interval, in seconds, at which to export the template data. Because data transmission is in UDP, the templates must be resent at regular intervals.`,
				},
				resource.Attribute{
					Name:        "timeseriesovernsip",
					Description: `(Optional) To use the Citrix ADC IP to send Time series data such as metrics and events, instead of the SNIP`,
				},
				resource.Attribute{
					Name:        "udppmtu",
					Description: `(Optional) MTU, in bytes, for IPFIX UDP packets.`,
				},
				resource.Attribute{
					Name:        "urlcategory",
					Description: `(Optional) Include the URL category record.`,
				},
				resource.Attribute{
					Name:        "usagerecordinterval",
					Description: `(Optional) On enabling this option, the NGS will send bandwidth usage record to configured collectors.`,
				},
				resource.Attribute{
					Name:        "videoinsight",
					Description: `(Optional) Enable/disable the feature individually on appflow action.`,
				},
				resource.Attribute{
					Name:        "websaasappusagereporting",
					Description: `(Optional) On enabling this option, NGS will send data used by Web/saas app at the end of every HTTP transaction to configured collectors. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowparam is a unique string prefixed with "tf-appflowparam-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowparam is a unique string prefixed with "tf-appflowparam-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appflowpolicy",
			Category:         "AppFlow",
			ShortDescription: ``,
			Description: `

The appflowpolicy resource is used to create appflowpolicy.


`,
			Keywords: []string{
				"appflow",
				"appflowpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the policy. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my appflow policy" or 'my appflow policy').`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Optional) Name of the action to be associated with this policy.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about this policy.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Expression or other value against which the traffic is evaluated. Must be a Boolean expression. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Name of the appflow action to be associated with this policy when an undef event occurs. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appflowpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowpolicy.tf_appflowpolicy test_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appflowpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowpolicy.tf_appflowpolicy test_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appflowpolicylabel",
			Category:         "AppFlow",
			ShortDescription: ``,
			Description: `

The appflowpolicylabel resource is used to create appflowpolicylabel.


`,
			Keywords: []string{
				"appflow",
				"appflowpolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the AppFlow policy label. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my appflow policylabel" or 'my appflow policylabel').`,
				},
				resource.Attribute{
					Name:        "policylabeltype",
					Description: `(Optional) Type of traffic evaluated by the policies bound to the policy label. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import An appflowpolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowpolicylabel.tf_appflowpolicylabel tf_policylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import An appflowpolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowpolicylabel.tf_appflowpolicylabel tf_policylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appflowpolicylabel_appflowpolicy_binding",
			Category:         "AppFlow",
			ShortDescription: ``,
			Description: `

The appflowpolicylabel_appflowpolicy_binding resource is used to create appflowpolicylabel_appflowpolicy_binding.


`,
			Keywords: []string{
				"appflow",
				"appflowpolicylabel",
				"appflowpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name of the policy label to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the AppFlow policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or a user-defined policy label. After the invoked policies are evaluated, the flow returns to the policy with the next priority.`,
				},
				resource.Attribute{
					Name:        "invoke_labelname",
					Description: `(Optional) Name of the label to invoke if the current policy evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to be invoked.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Specifies the priority of the policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowpolicylabel_appflowpolicy_binding is the concatenation of ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by comma. ## Import A appflowpolicylabel_appflowpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowpolicylabel_appflowpolicy_binding.tf_appflowpolicylabel_appflowpolicy_binding tf_policylabel,test_policy`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appflowpolicylabel_appflowpolicy_binding is the concatenation of ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by comma. ## Import A appflowpolicylabel_appflowpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appflowpolicylabel_appflowpolicy_binding.tf_appflowpolicylabel_appflowpolicy_binding tf_policylabel,test_policy`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwconfidfield",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwconfidfield resource is used to create appfw confidfield.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwconfidfield",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "fieldname",
					Description: `(Required) Name of the form field to designate as confidential.`,
				},
				resource.Attribute{
					Name:        "url",
					Description: `(Required) URL of the web page that contains the web form.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about the form field designation.`,
				},
				resource.Attribute{
					Name:        "isregex",
					Description: `(Optional) Method of specifying the form field name. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enable or disable the confidential field designation. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwconfidfield. It is the concatenation of ` + "`" + `fieldname` + "`" + ` and ` + "`" + `url` + "`" + ` attribute. ## Import A appfwconfidfield can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwconfidfield.tf_confidfield tf_confidfield,www.example.com/ ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwconfidfield. It is the concatenation of ` + "`" + `fieldname` + "`" + ` and ` + "`" + `url` + "`" + ` attribute. ## Import A appfwconfidfield can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwconfidfield.tf_confidfield tf_confidfield,www.example.com/ ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwfieldtype",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The ` + "`" + `appfwfieldtype` + "`" + ` resource is used to create Application Firwall FieldType resource.

`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwfieldtype",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `Name for the field type. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the field type is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my field type" or 'my field type').`,
				},
				resource.Attribute{
					Name:        "regex",
					Description: `(Optional) PCRE - format regular expression defining the characters and length allowed for this field type.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Positive integer specifying the priority of the field type. A lower number specifies a higher priority. Field types are checked in the order of their priority numbers.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comment describing the type of field that this field type is intended to match.`,
				},
				resource.Attribute{
					Name:        "nocharmaps",
					Description: `(Optional) will not show internal field types added as part of FieldFormat learn rules deployment. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwfieldtype` + "`" + `. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwfieldtype` + "`" + `. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwglobal_appfwpolicy_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwglobal_appfwpolicy_binding resource is used to bind appfwpolicy to appfwglobal configuration.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwglobal",
				"appfwpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy.`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) 0`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) If the current policy evaluates to TRUE, terminate evaluation of policies bound to the current policy label, and then forward the request to the specified virtual server or evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the policy label to invoke if the current policy evaluates to TRUE, the invoke parameter is set, and Label Type is set to Policy Label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label invocation.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority of the policy.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enable or disable the binding to activate or deactivate the policy. This is applicable to classic policies only.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bind point to which to policy is bound. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwglobal_appfwpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A appfwglobal_appfwpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwglobal_appfwpolicy_binding.tf_binding tf_appfwpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwglobal_appfwpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A appfwglobal_appfwpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwglobal_appfwpolicy_binding.tf_binding tf_appfwpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwglobal_auditnslogpolicy_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwglobal_auditnslogpolicy_binding resource is used to bind auditnslogpolicy to appfwglobal configuration.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwglobal",
				"auditnslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) If the current policy evaluates to TRUE, terminate evaluation of policies bound to the current policy label, and then forward the request to the specified virtual server or evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the policy label to invoke if the current policy evaluates to TRUE, the invoke parameter is set, and Label Type is set to Policy Label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke if the current policy evaluates to TRUE and the invoke parameter is set. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority of the policy.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enable or disable the binding to activate or deactivate the policy. This is applicable to classic policies only.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bind point to which to policy is bound. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwglobal_auditnslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A appfwglobal_auditnslogpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwglobal_auditnslogpolicy_binding.tf_binding tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwglobal_auditnslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A appfwglobal_auditnslogpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwglobal_auditnslogpolicy_binding.tf_binding tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwglobal_auditsyslogpolicy_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwglobal_auditsyslogpolicy_binding resource is used to bind auditsyslogpolicy to appfwglobal configuration.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwglobal",
				"auditsyslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) If the current policy evaluates to TRUE, terminate evaluation of policies bound to the current policy label, and then forward the request to the specified virtual server or evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the policy label to invoke if the current policy evaluates to TRUE, the invoke parameter is set, and Label Type is set to Policy Label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke if the current policy evaluates to TRUE and the invoke parameter is set. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority of the policy.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enable or disable the binding to activate or deactivate the policy. This is applicable to classic policies only.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bind point to which to policy is bound. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwglobal_auditsyslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A appfwglobal_auditsyslogpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwglobal_auditsyslogpolicy_binding.tf_binding tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwglobal_auditsyslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A appfwglobal_auditsyslogpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwglobal_auditsyslogpolicy_binding.tf_binding tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwhtmlerrorpage",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwhtmlerrorpage resource is used to import appfw htmlerror page.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwhtmlerrorpage",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the XML error object to remove.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about the HTML error object.`,
				},
				resource.Attribute{
					Name:        "overwrite",
					Description: `(Optional) Overwrite any existing HTML error object of the same name.`,
				},
				resource.Attribute{
					Name:        "src",
					Description: `(Optional) URL (protocol, host, path, and name) for the location at which to store the imported HTML error object. NOTE: The import fails if the object to be imported is on an HTTPS server that requires client certificate authentication for access. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwhtmlerrorpage. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appfwhtmlerrorpage can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwhtmlerrorpage.tf_appfwhtmlerrorpage tf_appfwhtmlerrorpage ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwhtmlerrorpage. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appfwhtmlerrorpage can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwhtmlerrorpage.tf_appfwhtmlerrorpage tf_appfwhtmlerrorpage ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwjsoncontenttype",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The ` + "`" + `appfwjsoncontenttype` + "`" + ` resource is used to create Application Firewall ContentType resource.

`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwjsoncontenttype",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "jsoncontenttypevalue",
					Description: `Content type to be classified as JSON.`,
				},
				resource.Attribute{
					Name:        "isregex",
					Description: `(Optional) Is json content type a regular expression?. Possible values: [ REGEX, NOTREGEX ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwjsoncontenttype` + "`" + `. It has the same value as the ` + "`" + `jsoncontenttypevalue` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwjsoncontenttype` + "`" + `. It has the same value as the ` + "`" + `jsoncontenttypevalue` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwjsonerrorpage",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwjsonerrorpage resource is used to Configuration for JSON error page resource.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwjsonerrorpage",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Indicates name of the imported json error page to be removed.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about the JSON error object.`,
				},
				resource.Attribute{
					Name:        "overwrite",
					Description: `(Optional) Overwrite any existing JSON error object of the same name.`,
				},
				resource.Attribute{
					Name:        "src",
					Description: `(Optional) URL (protocol, host, path, and name) for the location at which to store the imported JSON error object. NOTE: The import fails if the object to be imported is on an HTTPS server that requires client certificate authentication for access. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwjsonerrorpage. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appfwjsonerrorpage can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwjsonerrorpage.tf_appfwjsonerrorpage tf_appfwjsonerrorpage ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwjsonerrorpage. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appfwjsonerrorpage can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwjsonerrorpage.tf_appfwjsonerrorpage tf_appfwjsonerrorpage ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwlearningsettings",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwlearningsettings resource is used to update appfw learning settings.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwlearningsettings",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "profilename",
					Description: `(Required) Name of the profile.`,
				},
				resource.Attribute{
					Name:        "contenttypeautodeploygraceperiod",
					Description: `(Optional) The number of minutes after the threshold hit alert the learned rule will be deployed`,
				},
				resource.Attribute{
					Name:        "contenttypeminthreshold",
					Description: `(Optional) Minimum threshold to learn Content Type information.`,
				},
				resource.Attribute{
					Name:        "contenttypepercentthreshold",
					Description: `(Optional) Minimum threshold in percent to learn Content Type information.`,
				},
				resource.Attribute{
					Name:        "cookieconsistencyautodeploygraceperiod",
					Description: `(Optional) The number of minutes after the threshold hit alert the learned rule will be deployed`,
				},
				resource.Attribute{
					Name:        "cookieconsistencyminthreshold",
					Description: `(Optional) Minimum number of application firewall sessions that the learning engine must observe to learn cookies.`,
				},
				resource.Attribute{
					Name:        "cookieconsistencypercentthreshold",
					Description: `(Optional) Minimum percentage of application firewall sessions that must contain a particular cookie pattern for the learning engine to learn that cookie.`,
				},
				resource.Attribute{
					Name:        "creditcardnumberminthreshold",
					Description: `(Optional) Minimum threshold to learn Credit Card information.`,
				},
				resource.Attribute{
					Name:        "creditcardnumberpercentthreshold",
					Description: `(Optional) Minimum threshold in percent to learn Credit Card information.`,
				},
				resource.Attribute{
					Name:        "crosssitescriptingautodeploygraceperiod",
					Description: `(Optional) The number of minutes after the threshold hit alert the learned rule will be deployed`,
				},
				resource.Attribute{
					Name:        "crosssitescriptingminthreshold",
					Description: `(Optional) Minimum number of application firewall sessions that the learning engine must observe to learn HTML cross-site scripting patterns.`,
				},
				resource.Attribute{
					Name:        "crosssitescriptingpercentthreshold",
					Description: `(Optional) Minimum percentage of application firewall sessions that must contain a particular cross-site scripting pattern for the learning engine to learn that cross-site scripting pattern.`,
				},
				resource.Attribute{
					Name:        "csrftagautodeploygraceperiod",
					Description: `(Optional) The number of minutes after the threshold hit alert the learned rule will be deployed`,
				},
				resource.Attribute{
					Name:        "csrftagminthreshold",
					Description: `(Optional) Minimum number of application firewall sessions that the learning engine must observe to learn cross-site request forgery (CSRF) tags.`,
				},
				resource.Attribute{
					Name:        "csrftagpercentthreshold",
					Description: `(Optional) Minimum percentage of application firewall sessions that must contain a particular CSRF tag for the learning engine to learn that CSRF tag.`,
				},
				resource.Attribute{
					Name:        "fieldconsistencyautodeploygraceperiod",
					Description: `(Optional) The number of minutes after the threshold hit alert the learned rule will be deployed`,
				},
				resource.Attribute{
					Name:        "fieldconsistencyminthreshold",
					Description: `(Optional) Minimum number of application firewall sessions that the learning engine must observe to learn field consistency information.`,
				},
				resource.Attribute{
					Name:        "fieldconsistencypercentthreshold",
					Description: `(Optional) Minimum percentage of application firewall sessions that must contain a particular field consistency pattern for the learning engine to learn that field consistency pattern.`,
				},
				resource.Attribute{
					Name:        "fieldformatautodeploygraceperiod",
					Description: `(Optional) The number of minutes after the threshold hit alert the learned rule will be deployed`,
				},
				resource.Attribute{
					Name:        "fieldformatminthreshold",
					Description: `(Optional) Minimum number of application firewall sessions that the learning engine must observe to learn field formats.`,
				},
				resource.Attribute{
					Name:        "fieldformatpercentthreshold",
					Description: `(Optional) Minimum percentage of application firewall sessions that must contain a particular web form field pattern for the learning engine to recommend a field format for that form field.`,
				},
				resource.Attribute{
					Name:        "sqlinjectionautodeploygraceperiod",
					Description: `(Optional) The number of minutes after the threshold hit alert the learned rule will be deployed`,
				},
				resource.Attribute{
					Name:        "sqlinjectionminthreshold",
					Description: `(Optional) Minimum number of application firewall sessions that the learning engine must observe to learn HTML SQL injection patterns.`,
				},
				resource.Attribute{
					Name:        "sqlinjectionpercentthreshold",
					Description: `(Optional) Minimum percentage of application firewall sessions that must contain a particular HTML SQL injection pattern for the learning engine to learn that HTML SQL injection pattern.`,
				},
				resource.Attribute{
					Name:        "starturlautodeploygraceperiod",
					Description: `(Optional) The number of minutes after the threshold hit alert the learned rule will be deployed`,
				},
				resource.Attribute{
					Name:        "starturlminthreshold",
					Description: `(Optional) Minimum number of application firewall sessions that the learning engine must observe to learn start URLs.`,
				},
				resource.Attribute{
					Name:        "starturlpercentthreshold",
					Description: `(Optional) Minimum percentage of application firewall sessions that must contain a particular start URL pattern for the learning engine to learn that start URL.`,
				},
				resource.Attribute{
					Name:        "xmlattachmentminthreshold",
					Description: `(Optional) Minimum number of application firewall sessions that the learning engine must observe to learn XML attachment patterns.`,
				},
				resource.Attribute{
					Name:        "xmlattachmentpercentthreshold",
					Description: `(Optional) Minimum percentage of application firewall sessions that must contain a particular XML attachment pattern for the learning engine to learn that XML attachment pattern.`,
				},
				resource.Attribute{
					Name:        "xmlwsiminthreshold",
					Description: `(Optional) Minimum number of application firewall sessions that the learning engine must observe to learn web services interoperability (WSI) information.`,
				},
				resource.Attribute{
					Name:        "xmlwsipercentthreshold",
					Description: `(Optional) Minimum percentage of application firewall sessions that must contain a particular pattern for the learning engine to learn a web services interoperability (WSI) pattern. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwlearningsettings. It has the same value as the ` + "`" + `profilename` + "`" + ` attribute. ## Import A appfwlearningsettings can be imported using its profilename, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwlearningsettings.tf_learningsetting tf_appfwprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwlearningsettings. It has the same value as the ` + "`" + `profilename` + "`" + ` attribute. ## Import A appfwlearningsettings can be imported using its profilename, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwlearningsettings.tf_learningsetting tf_appfwprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwmultipartformcontenttype",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwmultipartformcontenttype resource is used to create appfw multipart form content type Resource.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwmultipartformcontenttype",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "multipartformcontenttypevalue",
					Description: `(Required) Content type to be classified as multipart form`,
				},
				resource.Attribute{
					Name:        "isregex",
					Description: `(Optional) Is multipart_form content type a regular expression? ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwmultipartformcontenttype. It has the same value as the ` + "`" + `multipartformcontenttypevalue` + "`" + ` attribute. ## Import A appfwmultipartformcontenttype can be imported using its multipartformcontenttypevalue, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwmultipartformcontenttype.tf_multipartform data/tf_multipartform ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwmultipartformcontenttype. It has the same value as the ` + "`" + `multipartformcontenttypevalue` + "`" + ` attribute. ## Import A appfwmultipartformcontenttype can be imported using its multipartformcontenttypevalue, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwmultipartformcontenttype.tf_multipartform data/tf_multipartform ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwpolicy",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The ` + "`" + `appfwpolicy` + "`" + ` resource is used to create Applicatin Firewall Policy resource.

`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `Name for the policy. Must begin with a letter, number, or the underscore character \(_\), and must contain only letters, numbers, and the hyphen \(-\), period \(.\) pound \(\#\), space \( \), at (@), equals \(=\), colon \(:\), and underscore characters. Can be changed after the policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks \(for example, "my policy" or 'my policy'\).`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Name of the Citrix ADC named rule, or a Citrix ADC expression, that the policy uses to determine whether to filter the connection through the application firewall with the designated profile.`,
				},
				resource.Attribute{
					Name:        "profilename",
					Description: `(Optional) Name of the application firewall profile to use if the policy matches.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about the policy for later reference.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Where to log information for connections that match this policy.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policy" or 'my policy'). ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwpolicy` + "`" + `. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwpolicy` + "`" + `. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwpolicylabel",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The ` + "`" + `appfwpolicylabel` + "`" + ` resource is used to create Application Firewall Policy Label resource.

`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwpolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `Name for the policy label. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Can be changed after the policy label is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policy label" or 'my policy label').`,
				},
				resource.Attribute{
					Name:        "policylabeltype",
					Description: `(Optional) Type of transformations allowed by the policies bound to the label. Always http_req for application firewall policy labels. Possible values: [ http_req ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwpolicylabel` + "`" + `. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwpolicylabel` + "`" + `. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwpolicylabel_appfwpolicy_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwpolicylabel_appfwpolicy_binding resource is used to bind appfw policy to appfw policylabel resource.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwpolicylabel",
				"appfwpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name of the application firewall policy label.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the application firewall policy to bind to the policy label.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Positive integer specifying the priority of the policy. A lower number specifies a higher priority. Must be unique within a group of policies that are bound to the same bind point or label. Policies are evaluated in the order of their priority numbers.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) If the current policy evaluates to TRUE, terminate evaluation of policies bound to the current policy label, and then forward the request to the specified virtual server or evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "invoke_labelname",
					Description: `(Optional) Name of the policy label to invoke if the current policy evaluates to TRUE, the invoke parameter is set, and Label Type is set to Policy Label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke if the current policy evaluates to TRUE and the invoke parameter is set. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwpolicylabel_appfwpolicy_binding. It is the concatenation of ` + "`" + `labelname` + "`" + `and ` + "`" + `policyname` + "`" + ` attributes separated by comma. ## Import A appfwpolicylabel_appfwpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwpolicylabel_appfwpolicy_binding.tf_binding tf_appfwpolicylabel,tf_appfwpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwpolicylabel_appfwpolicy_binding. It is the concatenation of ` + "`" + `labelname` + "`" + `and ` + "`" + `policyname` + "`" + ` attributes separated by comma. ## Import A appfwpolicylabel_appfwpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwpolicylabel_appfwpolicy_binding.tf_binding tf_appfwpolicylabel,tf_appfwpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The ` + "`" + `appfwprofile` + "`" + ` resource is used to create Applicatin Firewall Profile.

`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `Name for the profile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.), pound (#), space ( ), at (@), equals (=), colon (:), and underscore (_) characters. Cannot be changed after the profile is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my profile" or 'my profile').`,
				},
				resource.Attribute{
					Name:        "defaults",
					Description: `(Optional) Default configuration to apply to the profile. Basic defaults are intended for standard content that requires little further configuration, such as static web site content. Advanced defaults are intended for specialized content that requires significant specialized configuration, such as heavily scripted or dynamic content. CLI users: When adding an application firewall profile, you can set either the defaults or the type, but not both. To set both options, create the profile by using the add appfw profile command, and then use the set appfw profile command to configure the other option. Possible values: [ basic, advanced ]`,
				},
				resource.Attribute{
					Name:        "starturlaction",
					Description: `(Optional) One or more Start URL actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "contenttypeaction",
					Description: `(Optional) One or more Content-type actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "inspectcontenttypes",
					Description: `(Optional) One or more InspectContentType lists.`,
				},
				resource.Attribute{
					Name:        "starturlclosure",
					Description: `(Optional) Toggle the state of Start URL Closure. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "denyurlaction",
					Description: `(Optional) One or more Deny URL actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "refererheadercheck",
					Description: `(Optional) Enable validation of Referer headers. Referer validation ensures that a web form that a user sends to your web site originally came from your web site, not an outside attacker. Although this parameter is part of the Start URL check, referer validation protects against cross-site request forgery (CSRF) attacks, not Start URL attacks. Possible values: [ OFF, if_present, AlwaysExceptStartURLs, AlwaysExceptFirstRequest ]`,
				},
				resource.Attribute{
					Name:        "cookieconsistencyaction",
					Description: `(Optional) One or more Cookie Consistency actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "cookietransforms",
					Description: `(Optional) Perform the specified type of cookie transformation. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "cookieencryption",
					Description: `(Optional) Type of cookie encryption. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "cookieproxying",
					Description: `(Optional) Cookie proxy setting. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "addcookieflags",
					Description: `(Optional) Add the specified flags to cookies. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "fieldconsistencyaction",
					Description: `(Optional) One or more Form Field Consistency actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "csrftagaction",
					Description: `(Optional) One or more Cross-Site Request Forgery (CSRF) Tagging actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "crosssitescriptingaction",
					Description: `(Optional) One or more Cross-Site Scripting (XSS) actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "crosssitescriptingtransformunsafehtml",
					Description: `(Optional) Transform cross-site scripts. This setting configures the application firewall to disable dangerous HTML instead of blocking the request. CAUTION: Make sure that this parameter is set to ON if you are configuring any cross-site scripting transformations. If it is set to OFF, no cross-site scripting transformations are performed regardless of any other settings. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "crosssitescriptingcheckcompleteurls",
					Description: `(Optional) Check complete URLs for cross-site scripts, instead of just the query portions of URLs. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "sqlinjectionaction",
					Description: `(Optional) One or more HTML SQL Injection actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "sqlinjectiontransformspecialchars",
					Description: `(Optional) Transform injected SQL code. This setting configures the application firewall to disable SQL special strings instead of blocking the request. Since most SQL servers require a special string to activate an SQL keyword, in most cases a request that contains injected SQL code is safe if special strings are disabled. CAUTION: Make sure that this parameter is set to ON if you are configuring any SQL injection transformations. If it is set to OFF, no SQL injection transformations are performed regardless of any other settings. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "sqlinjectiononlycheckfieldswithsqlchars",
					Description: `(Optional) Check only form fields that contain SQL special strings (characters) for injected SQL code. Most SQL servers require a special string to activate an SQL request, so SQL code without a special string is harmless to most SQL servers. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "sqlinjectiontype",
					Description: `(Optional) Available SQL injection types. -SQLSplChar : Checks for SQL Special Chars -SQLKeyword : Checks for SQL Keywords -SQLSplCharANDKeyword : Checks for both and blocks if both are found -SQLSplCharORKeyword : Checks for both and blocks if anyone is found. Possible values: [ SQLSplChar, SQLKeyword, SQLSplCharORKeyword, SQLSplCharANDKeyword ]`,
				},
				resource.Attribute{
					Name:        "sqlinjectionchecksqlwildchars",
					Description: `(Optional) Check for form fields that contain SQL wild chars . Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "fieldformataction",
					Description: `(Optional) One or more Field Format actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "defaultfieldformattype",
					Description: `(Optional) Designate a default field type to be applied to web form fields that do not have a field type explicitly assigned to them.`,
				},
				resource.Attribute{
					Name:        "defaultfieldformatminlength",
					Description: `(Optional) To disable the minimum and maximum length settings and allow data of any length to be entered into the field, set this parameter to zero (0).`,
				},
				resource.Attribute{
					Name:        "defaultfieldformatmaxlength",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "bufferoverflowaction",
					Description: `(Optional) One or more Buffer Overflow actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "bufferoverflowmaxurllength",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "bufferoverflowmaxheaderlength",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "bufferoverflowmaxcookielength",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "creditcardaction",
					Description: `(Optional) One or more Credit Card actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "creditcard",
					Description: `(Optional) Credit card types that the application firewall should protect. Possible values: [ none, visa, mastercard, discover, amex, jcb, dinersclub ]`,
				},
				resource.Attribute{
					Name:        "creditcardmaxallowed",
					Description: `(Optional) This parameter value is used by the block action. It represents the maximum number of credit card numbers that can appear on a web page served by your protected web sites. Pages that contain more credit card numbers are blocked.`,
				},
				resource.Attribute{
					Name:        "creditcardxout",
					Description: `(Optional) Mask any credit card number detected in a response by replacing each digit, except the digits in the final group, with the letter "X.". Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "dosecurecreditcardlogging",
					Description: `(Optional) Setting this option logs credit card numbers in the response when the match is found. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "streaming",
					Description: `(Optional) Setting this option converts content-length form submission requests (requests with content-type "application/x-www-form-urlencoded" or "multipart/form-data") to chunked requests when atleast one of the following protections : SQL injection protection, XSS protection, form field consistency protection, starturl closure, CSRF tagging is enabled. Please make sure that the backend server accepts chunked requests before enabling this option. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "trace",
					Description: `(Optional) Toggle the state of trace. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "requestcontenttype",
					Description: `(Optional) Default Content-Type header for requests. A Content-Type header can contain 0-255 letters, numbers, and the hyphen (-) and underscore (_) characters.`,
				},
				resource.Attribute{
					Name:        "responsecontenttype",
					Description: `(Optional) Default Content-Type header for responses. A Content-Type header can contain 0-255 letters, numbers, and the hyphen (-) and underscore (_) characters.`,
				},
				resource.Attribute{
					Name:        "jsonerrorobject",
					Description: `(Optional) Name to the imported JSON Error Object to be set on application firewall profile. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks \(for example, "my JSON error object" or 'my JSON error object'\).`,
				},
				resource.Attribute{
					Name:        "jsondosaction",
					Description: `(Optional) One or more JSON Denial-of-Service (JsonDoS) actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "jsonsqlinjectionaction",
					Description: `(Optional) One or more JSON SQL Injection actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "jsonsqlinjectiontype",
					Description: `(Optional) Available SQL injection types. -SQLSplChar : Checks for SQL Special Chars -SQLKeyword : Checks for SQL Keywords -SQLSplCharANDKeyword : Checks for both and blocks if both are found -SQLSplCharORKeyword : Checks for both and blocks if anyone is found. Possible values: [ SQLSplChar, SQLKeyword, SQLSplCharORKeyword, SQLSplCharANDKeyword ]`,
				},
				resource.Attribute{
					Name:        "jsonxssaction",
					Description: `(Optional) One or more JSON Cross-Site Scripting actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "xmldosaction",
					Description: `(Optional) One or more XML Denial-of-Service (XDoS) actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "xmlformataction",
					Description: `(Optional) One or more XML Format actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "xmlsqlinjectionaction",
					Description: `(Optional) One or more XML SQL Injection actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "xmlsqlinjectiononlycheckfieldswithsqlchars",
					Description: `(Optional) Check only form fields that contain SQL special characters, which most SQL servers require before accepting an SQL command, for injected SQL. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "xmlsqlinjectiontype",
					Description: `(Optional) Available SQL injection types. -SQLSplChar : Checks for SQL Special Chars -SQLKeyword : Checks for SQL Keywords -SQLSplCharANDKeyword : Checks for both and blocks if both are found -SQLSplCharORKeyword : Checks for both and blocks if anyone is found. Possible values: [ SQLSplChar, SQLKeyword, SQLSplCharORKeyword, SQLSplCharANDKeyword ]`,
				},
				resource.Attribute{
					Name:        "xmlsqlinjectionchecksqlwildchars",
					Description: `(Optional) Check for form fields that contain SQL wild chars . Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "xmlsqlinjectionparsecomments",
					Description: `(Optional) Parse comments in XML Data and exempt those sections of the request that are from the XML SQL Injection check. You must configure the type of comments that the application firewall is to detect and exempt from this security check. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "xmlxssaction",
					Description: `(Optional) One or more XML Cross-Site Scripting actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "xmlwsiaction",
					Description: `(Optional) One or more Web Services Interoperability (WSI) actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "xmlattachmentaction",
					Description: `(Optional) One or more XML Attachment actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "xmlvalidationaction",
					Description: `(Optional) One or more XML Validation actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "xmlerrorobject",
					Description: `(Optional) Name to assign to the XML Error Object, which the application firewall displays when a user request is blocked. Must begin with a letter, number, or the underscore character \(_\), and must contain only letters, numbers, and the hyphen \(-\), period \(.\) pound \(\#\), space \( \), at (@), equals \(=\), colon \(:\), and underscore characters. Cannot be changed after the XML error object is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks \(for example, "my XML error object" or 'my XML error object'\).`,
				},
				resource.Attribute{
					Name:        "customsettings",
					Description: `(Optional) Object name for custom settings. This check is applicable to Profile Type: HTML, XML. .`,
				},
				resource.Attribute{
					Name:        "signatures",
					Description: `(Optional) Object name for signatures. This check is applicable to Profile Type: HTML, XML. .`,
				},
				resource.Attribute{
					Name:        "xmlsoapfaultaction",
					Description: `(Optional) One or more XML SOAP Fault Filtering actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "usehtmlerrorobject",
					Description: `(Optional) Send an imported HTML Error object to a user when a request is blocked, instead of redirecting the user to the designated Error URL. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "errorurl",
					Description: `(Optional) URL that application firewall uses as the Error URL.`,
				},
				resource.Attribute{
					Name:        "htmlerrorobject",
					Description: `(Optional) Name to assign to the HTML Error Object. Must begin with a letter, number, or the underscore character \(_\), and must contain only letters, numbers, and the hyphen \(-\), period \(.\) pound \(\#\), space \( \), at (@), equals \(=\), colon \(:\), and underscore characters. Cannot be changed after the HTML error object is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks \(for example, "my HTML error object" or 'my HTML error object'\).`,
				},
				resource.Attribute{
					Name:        "logeverypolicyhit",
					Description: `(Optional) Log every profile match, regardless of security checks results. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "stripcomments",
					Description: `(Optional) Strip HTML comments. This check is applicable to Profile Type: HTML. . Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "striphtmlcomments",
					Description: `(Optional) Strip HTML comments before forwarding a web page sent by a protected web site in response to a user request. Possible values: [ none, all, exclude_script_tag ]`,
				},
				resource.Attribute{
					Name:        "stripxmlcomments",
					Description: `(Optional) Strip XML comments before forwarding a web page sent by a protected web site in response to a user request. Possible values: [ none, all ]`,
				},
				resource.Attribute{
					Name:        "exemptclosureurlsfromsecuritychecks",
					Description: `(Optional) Exempt URLs that pass the Start URL closure check from SQL injection, cross-site script, field format and field consistency security checks at locations other than headers. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "defaultcharset",
					Description: `(Optional) Default character set for protected web pages. Web pages sent by your protected web sites in response to user requests are assigned this character set if the page does not already specify a character set. The character sets supported by the application firewall are:`,
				},
				resource.Attribute{
					Name:        "dynamiclearning",
					Description: `(Optional) One or more security checks. Available options are as follows:`,
				},
				resource.Attribute{
					Name:        "postbodylimit",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "postbodylimitsignature",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "fileuploadmaxnum",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "canonicalizehtmlresponse",
					Description: `(Optional) Perform HTML entity encoding for any special characters in responses sent by your protected web sites. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "enableformtagging",
					Description: `(Optional) Enable tagging of web form fields for use by the Form Field Consistency and CSRF Form Tagging checks. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "sessionlessfieldconsistency",
					Description: `(Optional) Perform sessionless Field Consistency Checks. Possible values: [ OFF, ON, postOnly ]`,
				},
				resource.Attribute{
					Name:        "sessionlessurlclosure",
					Description: `(Optional) Enable session less URL Closure Checks. This check is applicable to Profile Type: HTML. . Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "semicolonfieldseparator",
					Description: `(Optional) Allow '; ' as a form field separator in URL queries and POST form bodies. . Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "excludefileuploadfromchecks",
					Description: `(Optional) Exclude uploaded files from Form checks. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "sqlinjectionparsecomments",
					Description: `(Optional) Parse HTML comments and exempt them from the HTML SQL Injection check. You must specify the type of comments that the application firewall is to detect and exempt from this security check. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "invalidpercenthandling",
					Description: `(Optional) Configure the method that the application firewall uses to handle percent-encoded names and values. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Application firewall profile type, which controls which security checks and settings are applied to content that is filtered with the profile. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "checkrequestheaders",
					Description: `(Optional) Check request headers as well as web forms for injected SQL and cross-site scripts. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "optimizepartialreqs",
					Description: `(Optional) Optimize handle of HTTP partial requests i.e. those with range headers. Available settings are as follows:`,
				},
				resource.Attribute{
					Name:        "urldecoderequestcookies",
					Description: `(Optional) URL Decode request cookies before subjecting them to SQL and cross-site scripting checks. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "percentdecoderecursively",
					Description: `(Optional) Configure whether the application firewall should use percentage recursive decoding. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "multipleheaderaction",
					Description: `(Optional) One or more multiple header actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "rfcprofile",
					Description: `(Optional) Object name of the rfc profile.`,
				},
				resource.Attribute{
					Name:        "fileuploadtypesaction",
					Description: `(Optional) One or more file upload types actions. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "verboseloglevel",
					Description: `(Optional) Detailed Logging Verbose Log Level. Possible values: [ pattern, patternPayload, patternPayloadHeader ]`,
				},
				resource.Attribute{
					Name:        "archivename",
					Description: `(Optional) Source for tar archive. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwprofile` + "`" + `. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwprofile` + "`" + `. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_cmdinjection_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_cmdinjection_binding resource is used to bind cmdinjection to appfw profile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"cmdinjection",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "cmdinjection",
					Description: `(Required) Name of the relaxed web form field/header/cookie`,
				},
				resource.Attribute{
					Name:        "formactionurl_cmd",
					Description: `(Required) The web form action URL.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "as_scan_location_cmd",
					Description: `(Optional) Location of command injection exception - form field, header or cookie.`,
				},
				resource.Attribute{
					Name:        "as_value_expr_cmd",
					Description: `(Optional) The web form/header/cookie value expression.`,
				},
				resource.Attribute{
					Name:        "as_value_type_cmd",
					Description: `(Optional) Type of the relaxed web form value`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "isregex_cmd",
					Description: `(Optional) Is the relaxed web form field name/header/cookie a regular expression?`,
				},
				resource.Attribute{
					Name:        "isvalueregex_cmd",
					Description: `(Optional) Is the web form field/header/cookie value a regular expression?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_cmdinjection_binding. It is the concatenation of ` + "`" + `name` + "`" + ` ,` + "`" + `cmdinjection` + "`" + ` and ` + "`" + `formactionurl_cmd` + "`" + ` attributes separated by comma. ## Import A appfwprofile_cmdinjection_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_cmdinjection_binding.tf_binding tf_appfwprofile,tf_cmdinjection,http://10.10.10.10/ ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_cmdinjection_binding. It is the concatenation of ` + "`" + `name` + "`" + ` ,` + "`" + `cmdinjection` + "`" + ` and ` + "`" + `formactionurl_cmd` + "`" + ` attributes separated by comma. ## Import A appfwprofile_cmdinjection_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_cmdinjection_binding.tf_binding tf_appfwprofile,tf_cmdinjection,http://10.10.10.10/ ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_contenttype_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_contenttype_binding resource is used to bind contenttype to appfw profile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"contenttype",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "contenttype",
					Description: `(Required) A regular expression that designates a content-type on the content-types list.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_contenttype_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `contenttype` + "`" + ` attributes separated by comma. ## Import A appfwprofile_contenttype_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_contenttype_binding.tf_binding tf_appfwprofile,hello ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_contenttype_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `contenttype` + "`" + ` attributes separated by comma. ## Import A appfwprofile_contenttype_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_contenttype_binding.tf_binding tf_appfwprofile,hello ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_cookieconsistency_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The ` + "`" + `appfwprofile_cookieconsistency_binding` + "`" + ` resource is used to add bindings between appfwprofile and cookieconsistency relaxation rules.

`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"cookieconsistency",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "cookieconsistency",
					Description: `The name of the cookie to be checked.`,
				},
				resource.Attribute{
					Name:        "isregex",
					Description: `(Optional) Is the cookie name a regular expression?. Possible values: [ REGEX, NOTREGEX ]`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?. Possible values: [ AUTODEPLOYED, NOTAUTODEPLOYED ]`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?. Possible values: [ on, off ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwprofile_cookieconsistency_binding` + "`" + `. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `cookieconsistency` + "`" + ` attributes separated by a comma.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwprofile_cookieconsistency_binding` + "`" + `. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `cookieconsistency` + "`" + ` attributes separated by a comma.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_creditcardnumber_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_creditcardnumber_binding resource is used to bind creditcard number to appfw profile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"creditcardnumber",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "creditcardnumber",
					Description: `(Required) The object expression that is to be excluded from safe commerce check`,
				},
				resource.Attribute{
					Name:        "creditcardnumberurl",
					Description: `(Required) The url for which the list of credit card numbers are needed to be bypassed from inspection`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_creditcardnumber_binding. It is the concatenation of ` + "`" + `name` + "`" + ` , ` + "`" + `creditcardnumber` + "`" + ` and ` + "`" + `creditcardnumberurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_creditcardnumber_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_creditcardnumber_binding.tf_binding tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_creditcardnumber_binding. It is the concatenation of ` + "`" + `name` + "`" + ` , ` + "`" + `creditcardnumber` + "`" + ` and ` + "`" + `creditcardnumberurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_creditcardnumber_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_creditcardnumber_binding.tf_binding tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_crosssitescripting_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The ` + "`" + `appfwprofile_crosssitescripting_binding` + "`" + ` resource is used to add binding between Applicatin Firewall Profile and CrossSiteScripting relaxation rule.

`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"crosssitescripting",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "crosssitescripting",
					Description: `The web form field name.`,
				},
				resource.Attribute{
					Name:        "isregex_xss",
					Description: `Is the web form field name a regular expression?. Possible values: [ REGEX, NOTREGEX ]`,
				},
				resource.Attribute{
					Name:        "formactionurl_xss",
					Description: `The web form action URL.`,
				},
				resource.Attribute{
					Name:        "as_scan_location_xss",
					Description: `(Optional) Location of cross-site scripting exception - form field, header, cookie or URL. Possible values: [ FORMFIELD, HEADER, COOKIE, URL ]`,
				},
				resource.Attribute{
					Name:        "as_value_type_xss",
					Description: `(Optional) The web form value type. Possible values: [ Tag, Attribute, Pattern ]`,
				},
				resource.Attribute{
					Name:        "as_value_expr_xss",
					Description: `(Optional) The web form value expression.`,
				},
				resource.Attribute{
					Name:        "isvalueregex_xss",
					Description: `(Optional) Is the web form field value a regular expression?. Possible values: [ REGEX, NOTREGEX ]`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?. Possible values: [ AUTODEPLOYED, NOTAUTODEPLOYED ]`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?. Possible values: [ on, off ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwprofile_crosssitescripting_binding` + "`" + `.It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `crosssitescripting` + "`" + ` attributes separated by a comma.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwprofile_crosssitescripting_binding` + "`" + `.It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `crosssitescripting` + "`" + ` attributes separated by a comma.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_csrftag_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_csrftag_binding resource is used to bind csrftag to appfwprofile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"csrftag",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "csrftag",
					Description: `(Required) The web form originating URL.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "csrfformactionurl",
					Description: `(Optional) The web form action URL.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_csrftag_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `csrftag` + "`" + ` attributes separated by comma. ## Import A appfwprofile_csrftag_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_csrftag_binding.tf_binding tf_appfwprofile,www.source.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_csrftag_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `csrftag` + "`" + ` attributes separated by comma. ## Import A appfwprofile_csrftag_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_csrftag_binding.tf_binding tf_appfwprofile,www.source.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_denyurl_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The ` + "`" + `appfwprofile_denyurl_binding` + "`" + ` resource is used to add bindings between Application Firewall Profile and DenyURL relaxation rule.

`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"denyurl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "denyurl",
					Description: `A regular expression that designates a URL on the Deny URL list.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?. Possible values: [ AUTODEPLOYED, NOTAUTODEPLOYED ]`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?. Possible values: [ on, off ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwprofile_denyurl_binding` + "`" + `. It has the value of the string ` + "`" + `name,denyurl` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwprofile_denyurl_binding` + "`" + `. It has the value of the string ` + "`" + `name,denyurl` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_excluderescontenttype_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_excluderescontenttype_binding resource is used to bind excluderescontenttype to appfw profile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"excluderescontenttype",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "excluderescontenttype",
					Description: `(Required) A regular expression that represents the content type of the response that are to be excluded from inspection.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_excluderescontenttype_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `excluderescontenttype` + "`" + ` attributes separated by comma. ## Import A appfwprofile_excluderescontenttype_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_excluderescontenttype_binding.tf_binding tf_appfwprofile,expressionexample ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_excluderescontenttype_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `excluderescontenttype` + "`" + ` attributes separated by comma. ## Import A appfwprofile_excluderescontenttype_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_excluderescontenttype_binding.tf_binding tf_appfwprofile,expressionexample ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_fieldconsistency_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_fieldconsistency_binding resource is used to bind fieldconsistency to appfwprofile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"fieldconsistency",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "fieldconsistency",
					Description: `(Required) The web form field name.`,
				},
				resource.Attribute{
					Name:        "formactionurl_ffc",
					Description: `(Required) The web form action URL.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "isregex_ffc",
					Description: `(Optional) Is the web form field name a regular expression?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_fieldconsistency_binding. It is the concatenation of ` + "`" + `name` + "`" + ` , ` + "`" + `fieldconsistency` + "`" + ` and ` + "`" + `formactionurl_ffc` + "`" + ` attributes separated by comma. ## Import A appfwprofile_fieldconsistency_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_fieldconsistency_binding.tf_binding tf_appfwprofile,tf_field,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_fieldconsistency_binding. It is the concatenation of ` + "`" + `name` + "`" + ` , ` + "`" + `fieldconsistency` + "`" + ` and ` + "`" + `formactionurl_ffc` + "`" + ` attributes separated by comma. ## Import A appfwprofile_fieldconsistency_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_fieldconsistency_binding.tf_binding tf_appfwprofile,tf_field,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_fieldformat_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_fieldformat_binding resource is used to bind fieldformat to appfwprofile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"fieldformat",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "fieldformat",
					Description: `(Required) Name of the form field to which a field format will be assigned.`,
				},
				resource.Attribute{
					Name:        "formactionurl_ff",
					Description: `(Required) Action URL of the form field to which a field format will be assigned.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "fieldformatmaxlength",
					Description: `(Optional) The maximum allowed length for data in this form field.`,
				},
				resource.Attribute{
					Name:        "fieldformatminlength",
					Description: `(Optional) The minimum allowed length for data in this form field.`,
				},
				resource.Attribute{
					Name:        "fieldtype",
					Description: `(Optional) The field type you are assigning to this form field.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "isregex_ff",
					Description: `(Optional) Is the form field name a regular expression?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_fieldformat_binding. It is the concatenation of ` + "`" + `name` + "`" + `,` + "`" + `fieldformat` + "`" + ` and ` + "`" + `formactionurl_ff` + "`" + ` attributes separated by comma. ## Import A appfwprofile_fieldformat_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_fieldformat_binding.tf_binding tf_appfwprofile,tf_field,http://www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_fieldformat_binding. It is the concatenation of ` + "`" + `name` + "`" + `,` + "`" + `fieldformat` + "`" + ` and ` + "`" + `formactionurl_ff` + "`" + ` attributes separated by comma. ## Import A appfwprofile_fieldformat_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_fieldformat_binding.tf_binding tf_appfwprofile,tf_field,http://www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_fileuploadtype_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_fileuploadtype_binding resource is used to bind fileuploadtype to appfwprofile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"fileuploadtype",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "fileuploadtype",
					Description: `(Required) FileUploadTypes to allow/deny.`,
				},
				resource.Attribute{
					Name:        "as_fileuploadtypes_url",
					Description: `(Required) FileUploadTypes action URL.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "filetype",
					Description: `(Optional) FileUploadTypes file types.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "isregex_fileuploadtypes_url",
					Description: `(Optional) Is a regular expression?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_fileuploadtype_binding. It is the concatenation of ` + "`" + `name` + "`" + ` ,` + "`" + `fileuploadtype` + "`" + ` and ` + "`" + `as_fileuploadtypes_url` + "`" + ` attributes separated by comma. ## Import A appfwprofile_fileuploadtype_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_fileuploadtype_binding.tf_binding tf_appfwprofile,tf_uploadtype,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_fileuploadtype_binding. It is the concatenation of ` + "`" + `name` + "`" + ` ,` + "`" + `fileuploadtype` + "`" + ` and ` + "`" + `as_fileuploadtypes_url` + "`" + ` attributes separated by comma. ## Import A appfwprofile_fileuploadtype_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_fileuploadtype_binding.tf_binding tf_appfwprofile,tf_uploadtype,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_jsoncmdurl_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_jsoncmdurl_binding resource is used to bind jsoncmdurl to appfw profile resource.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"jsoncmdurl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "jsoncmdurl",
					Description: `(Required) A regular expression that designates a URL on the Json CMD URL list for which Command injection violations are relaxed. Enclose URLs in double quotes to ensure preservation of any embedded spaces or non-alphanumeric characters.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_jsoncmdurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `jsoncmdurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_jsoncmdurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_jsoncmdurl_binding.tf_binding tf_appfwprofile,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_jsoncmdurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `jsoncmdurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_jsoncmdurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_jsoncmdurl_binding.tf_binding tf_appfwprofile,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_jsondosurl_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_jsondosurl_binding resource is used to bind jsondosurl to appfw profile resource.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"jsondosurl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "jsondosurl",
					Description: `(Required) The URL on which we need to enforce the specified JSON denial-of-service (JSONDoS) attack protections. An JSON DoS configuration consists of the following items:`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "jsonmaxarraylength",
					Description: `(Optional) Maximum array length in the any of JSON object. This check protects against arrays having large lengths.`,
				},
				resource.Attribute{
					Name:        "jsonmaxarraylengthcheck",
					Description: `(Optional) State if JSON Max array value count check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "jsonmaxcontainerdepth",
					Description: `(Optional) Maximum allowed nesting depth of JSON document. JSON allows one to nest the containers (object and array) in any order to any depth. This check protects against documents that have excessive depth of hierarchy.`,
				},
				resource.Attribute{
					Name:        "jsonmaxcontainerdepthcheck",
					Description: `(Optional) State if JSON Max depth check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "jsonmaxdocumentlength",
					Description: `(Optional) Maximum document length of JSON document, in bytes.`,
				},
				resource.Attribute{
					Name:        "jsonmaxdocumentlengthcheck",
					Description: `(Optional) State if JSON Max document length check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "jsonmaxobjectkeycount",
					Description: `(Optional) Maximum key count in the any of JSON object. This check protects against objects that have large number of keys.`,
				},
				resource.Attribute{
					Name:        "jsonmaxobjectkeycountcheck",
					Description: `(Optional) State if JSON Max object key count check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "jsonmaxobjectkeylength",
					Description: `(Optional) Maximum key length in the any of JSON object. This check protects against objects that have large keys.`,
				},
				resource.Attribute{
					Name:        "jsonmaxobjectkeylengthcheck",
					Description: `(Optional) State if JSON Max object key length check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "jsonmaxstringlength",
					Description: `(Optional) Maximum string length in the JSON. This check protects against strings that have large length.`,
				},
				resource.Attribute{
					Name:        "jsonmaxstringlengthcheck",
					Description: `(Optional) State if JSON Max string value count check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_jsondosurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `jsondosurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_jsondosurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_jsondosurl_binding.tf_binding tf_appfwprofile,.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_jsondosurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `jsondosurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_jsondosurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_jsondosurl_binding.tf_binding tf_appfwprofile,.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_jsonsqlurl_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_jsonsqlurl_binding resource is used to bind jsonsqlurl to appfwprofile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"jsonsqlurl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "jsonsqlurl",
					Description: `(Required) A regular expression that designates a URL on the Json SQL URL list for which SQL violations are relaxed. Enclose URLs in double quotes to ensure preservation of any embedded spaces or non-alphanumeric characters.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_jsonsqlurl_binding. It is concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `jsonsqlurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_jsonsqlurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_jsonsqlurl_binding.tf_binding tf_appfwprofile,[abc][a-z]a`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_jsonsqlurl_binding. It is concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `jsonsqlurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_jsonsqlurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_jsonsqlurl_binding.tf_binding tf_appfwprofile,[abc][a-z]a`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_jsonxssurl_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_jsonxssurl_binding resource is used to bind jsonxssurl to appfwprofile resource.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"jsonxssurl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "jsonxssurl",
					Description: `(Required) A regular expression that designates a URL on the Json XSS URL list for which XSS violations are relaxed. Enclose URLs in double quotes to ensure preservation of any embedded spaces or non-alphanumeric characters.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_jsonxssurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `jsonxssurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_jsonxssurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_jsonxssurl_binding.tf_binding tf_appfwprofile,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_jsonxssurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `jsonxssurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_jsonxssurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_jsonxssurl_binding.tf_binding tf_appfwprofile,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_logexpression_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_logexpression_binding resource is used to bind logexpression to appfwprofile resource.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"logexpression",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "logexpression",
					Description: `(Required) Name of LogExpression object.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "as_logexpression",
					Description: `(Optional) LogExpression to log when violation happened on appfw profile`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_logexpression_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `logexpression` + "`" + ` attributes separated by comma. ## Import A appfwprofile_logexpression_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_logexpression_binding.tf_binding tf_appfwprofile,tf_logexp ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_logexpression_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `logexpression` + "`" + ` attributes separated by comma. ## Import A appfwprofile_logexpression_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_logexpression_binding.tf_binding tf_appfwprofile,tf_logexp ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_safeobject_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_safeobject_binding resource is used to bind safeobject to appfw profile. 


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"safeobject",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "safeobject",
					Description: `(Required) Name of the Safe Object.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Optional) Safe Object action types. (BLOCK | LOG | STATS | NONE)`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "as_expression",
					Description: `(Optional) A regular expression that defines the Safe Object.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "maxmatchlength",
					Description: `(Optional) Maximum match length for a Safe Object expression.`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_safeobject_binding. It is theconcatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `safeobject` + "`" + ` attributes separated by comma. ## Import A appfwprofile_safeobject_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_safeobject_binding.tf_binding tf_appfwprofile,tf_safeobject ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_safeobject_binding. It is theconcatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `safeobject` + "`" + ` attributes separated by comma. ## Import A appfwprofile_safeobject_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_safeobject_binding.tf_binding tf_appfwprofile,tf_safeobject ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_sqlinjection_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The ` + "`" + `appfwprofile_sqlinjection_binding` + "`" + ` resource is used to add bindings between Applicatin Firewall Profile and HTML SQLInjection relaxation rule.

`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"sqlinjection",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "sqlinjection",
					Description: `The web form field name.`,
				},
				resource.Attribute{
					Name:        "formactionurl_sql",
					Description: `The web form action URL.`,
				},
				resource.Attribute{
					Name:        "as_scan_location_sql",
					Description: `Location of SQL injection exception - form field, header or cookie. Possible values: [ FORMFIELD, HEADER, COOKIE ]`,
				},
				resource.Attribute{
					Name:        "isregex_sql",
					Description: `(Optional) Is the web form field name a regular expression?. Possible values: [ REGEX, NOTREGEX ]`,
				},
				resource.Attribute{
					Name:        "as_value_type_sql",
					Description: `(Optional) The web form value type. Possible values: [ Keyword, SpecialString, Wildchar ]`,
				},
				resource.Attribute{
					Name:        "as_value_expr_sql",
					Description: `(Optional) The web form value expression.`,
				},
				resource.Attribute{
					Name:        "isvalueregex_sql",
					Description: `(Optional) Is the web form field value a regular expression?. Possible values: [ REGEX, NOTREGEX ]`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?. Possible values: [ AUTODEPLOYED, NOTAUTODEPLOYED ]`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?. Possible values: [ on, off ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwprofile_sqlinjection_binding` + "`" + `. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `sqlinjection` + "`" + ` attributes separated by a comma.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwprofile_sqlinjection_binding` + "`" + `. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `sqlinjection` + "`" + ` attributes separated by a comma.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_starturl_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The ` + "`" + `appfwprofile_starturl_binding` + "`" + ` resource is used to add bindings between Application Firewall Profile and StartURL relaxation rule.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"starturl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "starturl",
					Description: `A regular expression that designates a URL on the Start URL list.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?. Possible values: [ AUTODEPLOYED, NOTAUTODEPLOYED ]`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?. Possible values: [ on, off ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwprofile_starturl_binding` + "`" + `. It has the value of the string ` + "`" + `name,starturl` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwprofile_starturl_binding` + "`" + `. It has the value of the string ` + "`" + `name,starturl` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_trustedlearningclients_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_trustedlearningclients_binding resource is used to bind trustedlearningclients to appfwprofile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"trustedlearningclients",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "trustedlearningclients",
					Description: `(Required) Specify trusted host/network IP`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_trustedlearningclients_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `trustedlearningclients` + "`" + ` attributes separated by comma. ## Import A appfwprofile_trustedlearningclients_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_trustedlearningclients_binding.tf_binding tf_appfwprofile,1.2.31.1/32 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_trustedlearningclients_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `trustedlearningclients` + "`" + ` attributes separated by comma. ## Import A appfwprofile_trustedlearningclients_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_trustedlearningclients_binding.tf_binding tf_appfwprofile,1.2.31.1/32 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_xmlattachmenturl_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_xmlattachmenturl_binding resource is used to bind xmlattachmenturl to appfwprofile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"xmlattachmenturl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "xmlattachmenturl",
					Description: `(Required) XML attachment URL regular expression length.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled.`,
				},
				resource.Attribute{
					Name:        "xmlattachmentcontenttype",
					Description: `(Optional) Specify content-type regular expression.`,
				},
				resource.Attribute{
					Name:        "xmlattachmentcontenttypecheck",
					Description: `(Optional) State if XML attachment content-type check is ON or OFF. Protects against XML requests with illegal attachments.`,
				},
				resource.Attribute{
					Name:        "xmlmaxattachmentsize",
					Description: `(Optional) Specify maximum attachment size.`,
				},
				resource.Attribute{
					Name:        "xmlmaxattachmentsizecheck",
					Description: `(Optional) State if XML Max attachment size Check is ON or OFF. Protects against XML requests with large attachment data. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_xmlattachmenturl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `xmlattachmenturl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_xmlattachmenturl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_xmlattachmenturl_binding.tf_binding tf_appfwprofile,.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_xmlattachmenturl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `xmlattachmenturl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_xmlattachmenturl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_xmlattachmenturl_binding.tf_binding tf_appfwprofile,.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_xmldosurl_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_xmldosurl_binding resource is used to bind xmldosurl to appfwprofile resource.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"xmldosurl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "xmldosurl",
					Description: `(Required) XML DoS URL regular expression length.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled.`,
				},
				resource.Attribute{
					Name:        "xmlblockdtd",
					Description: `(Optional) State if XML DTD is ON or OFF. Protects against recursive Document Type Declaration (DTD) entity expansion attacks. Also, SOAP messages cannot have DTDs in messages.`,
				},
				resource.Attribute{
					Name:        "xmlblockexternalentities",
					Description: `(Optional) State if XML Block External Entities Check is ON or OFF. Protects against XML External Entity (XXE) attacks that force applications to parse untrusted external entities (sources) in XML documents.`,
				},
				resource.Attribute{
					Name:        "xmlblockpi",
					Description: `(Optional) State if XML Block PI is ON or OFF. Protects resources from denial of service attacks as SOAP messages cannot have processing instructions (PI) in messages.`,
				},
				resource.Attribute{
					Name:        "xmlmaxattributenamelength",
					Description: `(Optional) Specify the longest name of any XML attribute. Protects against overflow attacks.`,
				},
				resource.Attribute{
					Name:        "xmlmaxattributenamelengthcheck",
					Description: `(Optional) State if XML Max attribute name length check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxattributes",
					Description: `(Optional) Specify maximum number of attributes per XML element. Protects against overflow attacks.`,
				},
				resource.Attribute{
					Name:        "xmlmaxattributescheck",
					Description: `(Optional) State if XML Max attributes check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxattributevaluelength",
					Description: `(Optional) Specify the longest value of any XML attribute. Protects against overflow attacks.`,
				},
				resource.Attribute{
					Name:        "xmlmaxattributevaluelengthcheck",
					Description: `(Optional) State if XML Max atribute value length is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxchardatalength",
					Description: `(Optional) Specify the maximum size of CDATA. Protects against overflow attacks and large quantities of unparsed data within XML messages.`,
				},
				resource.Attribute{
					Name:        "xmlmaxchardatalengthcheck",
					Description: `(Optional) State if XML Max CDATA length check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxelementchildren",
					Description: `(Optional) Specify the maximum number of children allowed per XML element. Protects against overflow attacks.`,
				},
				resource.Attribute{
					Name:        "xmlmaxelementchildrencheck",
					Description: `(Optional) State if XML Max element children check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxelementdepth",
					Description: `(Optional) Maximum nesting (depth) of XML elements. This check protects against documents that have excessive hierarchy depths.`,
				},
				resource.Attribute{
					Name:        "xmlmaxelementdepthcheck",
					Description: `(Optional) State if XML Max element depth check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxelementnamelength",
					Description: `(Optional) Specify the longest name of any element (including the expanded namespace) to protect against overflow attacks.`,
				},
				resource.Attribute{
					Name:        "xmlmaxelementnamelengthcheck",
					Description: `(Optional) State if XML Max element name length check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxelements",
					Description: `(Optional) Specify the maximum number of XML elements allowed. Protects against overflow attacks.`,
				},
				resource.Attribute{
					Name:        "xmlmaxelementscheck",
					Description: `(Optional) State if XML Max elements check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxentityexpansiondepth",
					Description: `(Optional) Specify maximum entity expansion depth. Protects aganist Entity Expansion Attack.`,
				},
				resource.Attribute{
					Name:        "xmlmaxentityexpansiondepthcheck",
					Description: `(Optional) State if XML Max Entity Expansions Depth Check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxentityexpansions",
					Description: `(Optional) Specify maximum allowed number of entity expansions. Protects aganist Entity Expansion Attack.`,
				},
				resource.Attribute{
					Name:        "xmlmaxentityexpansionscheck",
					Description: `(Optional) State if XML Max Entity Expansions Check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxfilesize",
					Description: `(Optional) Specify the maximum size of XML messages. Protects against overflow attacks.`,
				},
				resource.Attribute{
					Name:        "xmlmaxfilesizecheck",
					Description: `(Optional) State if XML Max file size check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxnamespaces",
					Description: `(Optional) Specify maximum number of active namespaces. Protects against overflow attacks.`,
				},
				resource.Attribute{
					Name:        "xmlmaxnamespacescheck",
					Description: `(Optional) State if XML Max namespaces check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxnamespaceurilength",
					Description: `(Optional) Specify the longest URI of any XML namespace. Protects against overflow attacks.`,
				},
				resource.Attribute{
					Name:        "xmlmaxnamespaceurilengthcheck",
					Description: `(Optional) State if XML Max namespace URI length check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxnodes",
					Description: `(Optional) Specify the maximum number of XML nodes. Protects against overflow attacks.`,
				},
				resource.Attribute{
					Name:        "xmlmaxnodescheck",
					Description: `(Optional) State if XML Max nodes check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlmaxsoaparrayrank",
					Description: `(Optional) XML Max Individual SOAP Array Rank. This is the dimension of the SOAP array.`,
				},
				resource.Attribute{
					Name:        "xmlmaxsoaparraysize",
					Description: `(Optional) XML Max Total SOAP Array Size. Protects against SOAP Array Abuse attack.`,
				},
				resource.Attribute{
					Name:        "xmlminfilesize",
					Description: `(Optional) Enforces minimum message size.`,
				},
				resource.Attribute{
					Name:        "xmlminfilesizecheck",
					Description: `(Optional) State if XML Min file size check is ON or OFF.`,
				},
				resource.Attribute{
					Name:        "xmlsoaparraycheck",
					Description: `(Optional) State if XML SOAP Array check is ON or OFF. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_xmldosurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `xmldosurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_xmldosurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_xmldosurl_binding.tf_binding tf_appfwprofile,.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_xmldosurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `xmldosurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_xmldosurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_xmldosurl_binding.tf_binding tf_appfwprofile,.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_xmlsqlinjection_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_xmlsqlinjection_binding resource is used to bind xmlsqlinjection to appfwprofile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"xmlsqlinjection",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "xmlsqlinjection",
					Description: `(Required) Exempt the specified URL from the XML SQL injection check. An XML SQL injection exemption (relaxation) consists of the following items:`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "as_scan_location_xmlsql",
					Description: `(Optional) Location of SQL injection exception - XML Element or Attribute.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "isregex_xmlsql",
					Description: `(Optional) Is the XML SQL Injection exempted field name a regular expression?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_xmlsqlinjection_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `xmlsqlinjection` + "`" + ` attributes separated by comma. ## Import A appfwprofile_xmlsqlinjection_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_xmlsqlinjection_binding.tf_binding tf_appfwprofile,hello ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_xmlsqlinjection_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `xmlsqlinjection` + "`" + ` attributes separated by comma. ## Import A appfwprofile_xmlsqlinjection_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_xmlsqlinjection_binding.tf_binding tf_appfwprofile,hello ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_xmlvalidationurl_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_xmlvalidationurl_binding resource is used to bind xmlvalidationurl to appfwprofile resource.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"xmlvalidationurl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "xmlvalidationurl",
					Description: `(Required) XML Validation URL regular expression.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled.`,
				},
				resource.Attribute{
					Name:        "xmladditionalsoapheaders",
					Description: `(Optional) Allow addtional soap headers.`,
				},
				resource.Attribute{
					Name:        "xmlendpointcheck",
					Description: `(Optional) Modifies the behaviour of the Request URL validation w.r.t. the Service URL. If set to ABSOLUTE, the entire request URL is validated with the entire URL mentioned in Service of the associated WSDL. eg: Service URL: http://example.org/ExampleService, Request URL: http//example.com/ExampleService would FAIL the validation. If set to RELAIVE, only the non-hostname part of the request URL is validated against the non-hostname part of the Service URL. eg: Service URL: http://example.org/ExampleService, Request URL: http//example.com/ExampleService would PASS the validation.`,
				},
				resource.Attribute{
					Name:        "xmlrequestschema",
					Description: `(Optional) XML Schema object for request validation .`,
				},
				resource.Attribute{
					Name:        "xmlresponseschema",
					Description: `(Optional) XML Schema object for response validation.`,
				},
				resource.Attribute{
					Name:        "xmlvalidateresponse",
					Description: `(Optional) Validate response message.`,
				},
				resource.Attribute{
					Name:        "xmlvalidatesoapenvelope",
					Description: `(Optional) Validate SOAP Evelope only.`,
				},
				resource.Attribute{
					Name:        "xmlwsdl",
					Description: `(Optional) WSDL object for soap request validation. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_xmlvalidationurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `xmlvalidationurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_xmlvalidationurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_xmlvalidationurl_binding.tf_binding tf_appfwprofile,.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_xmlvalidationurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `xmlvalidationurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_xmlvalidationurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_xmlvalidationurl_binding.tf_binding tf_appfwprofile,.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_xmlwsiurl_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_xmlwsiurl_binding resource is used to bind xmlwsiurl to appfw profile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"xmlwsiurl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "xmlwsiurl",
					Description: `(Required) XML WS-I URL regular expression length.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled.`,
				},
				resource.Attribute{
					Name:        "xmlwsichecks",
					Description: `(Optional) Specify a comma separated list of relevant WS-I rule IDs. (R1140, R1141) ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_xmlwsiurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `xmlwsiurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_xmlwsiurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_xmlwsiurl_binding.tf_binding tf_appfwprofile,.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_xmlwsiurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `xmlwsiurl` + "`" + ` attributes separated by comma. ## Import A appfwprofile_xmlwsiurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_xmlwsiurl_binding.tf_binding tf_appfwprofile,.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwprofile_xmlxss_binding",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwprofile_xmlxss_binding resource is used to bind xmlxss with appfw profile.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwprofile",
				"xmlxss",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the profile to which to bind an exemption or rule.`,
				},
				resource.Attribute{
					Name:        "xmlxss",
					Description: `(Required) Exempt the specified URL from the XML cross-site scripting (XSS) check. An XML cross-site scripting exemption (relaxation) consists of the following items:`,
				},
				resource.Attribute{
					Name:        "as_scan_location_xmlxss",
					Description: `(Required) Location of XSS injection exception - XML Element or Attribute.`,
				},
				resource.Attribute{
					Name:        "alertonly",
					Description: `(Optional) Send SNMP alert?`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile.`,
				},
				resource.Attribute{
					Name:        "isautodeployed",
					Description: `(Optional) Is the rule auto deployed by dynamic profile ?`,
				},
				resource.Attribute{
					Name:        "isregex_xmlxss",
					Description: `(Optional) Is the XML XSS exempted field name a regular expression?`,
				},
				resource.Attribute{
					Name:        "resourceid",
					Description: `(Optional) A "id" that identifies the rule.`,
				},
				resource.Attribute{
					Name:        "ruletype",
					Description: `(Optional) Specifies rule type of binding`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_xmlxss_binding. It is the concatenation ` + "`" + `name` + "`" + ` ,` + "`" + `xmlxss` + "`" + ` and ` + "`" + `as_scan_location_xmlxss` + "`" + ` attributes separated by comma. ## Import A appfwprofile_xmlxss_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_xmlxss_binding.tf_binding tf_appfwprofile,tf_xmlxss,ELEMENT ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwprofile_xmlxss_binding. It is the concatenation ` + "`" + `name` + "`" + ` ,` + "`" + `xmlxss` + "`" + ` and ` + "`" + `as_scan_location_xmlxss` + "`" + ` attributes separated by comma. ## Import A appfwprofile_xmlxss_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwprofile_xmlxss_binding.tf_binding tf_appfwprofile,tf_xmlxss,ELEMENT ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwsettings",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwsettings resource is used to create configure aplication firewall settings.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwsettings",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ceflogging",
					Description: `(Optional) Enable CEF format logs.`,
				},
				resource.Attribute{
					Name:        "centralizedlearning",
					Description: `(Optional) Flag used to enable/disable ADM centralized learning`,
				},
				resource.Attribute{
					Name:        "clientiploggingheader",
					Description: `(Optional) Name of an HTTP header that contains the IP address that the client used to connect to the protected web site or service.`,
				},
				resource.Attribute{
					Name:        "cookiepostencryptprefix",
					Description: `(Optional) String that is prepended to all encrypted cookie values.`,
				},
				resource.Attribute{
					Name:        "defaultprofile",
					Description: `(Optional) Profile to use when a connection does not match any policy. Default setting is APPFW_BYPASS, which sends unmatched connections back to the Citrix ADC without attempting to filter them further.`,
				},
				resource.Attribute{
					Name:        "entitydecoding",
					Description: `(Optional) Transform multibyte (double- or half-width) characters to single width characters.`,
				},
				resource.Attribute{
					Name:        "geolocationlogging",
					Description: `(Optional) Enable Geo-Location Logging in CEF format logs.`,
				},
				resource.Attribute{
					Name:        "importsizelimit",
					Description: `(Optional) Cumulative total maximum number of bytes in web forms imported to a protected web site. If a user attempts to upload files with a total byte count higher than the specified limit, the application firewall blocks the request.`,
				},
				resource.Attribute{
					Name:        "learnratelimit",
					Description: `(Optional) Maximum number of connections per second that the application firewall learning engine examines to generate new relaxations for learning-enabled security checks. The application firewall drops any connections above this limit from the list of connections used by the learning engine.`,
				},
				resource.Attribute{
					Name:        "logmalformedreq",
					Description: `(Optional) Log requests that are so malformed that application firewall parsing doesn't occur.`,
				},
				resource.Attribute{
					Name:        "malformedreqaction",
					Description: `(Optional) flag to define action on malformed requests that application firewall cannot parse`,
				},
				resource.Attribute{
					Name:        "proxyport",
					Description: `(Optional) Proxy Server Port to get updated signatures from AWS.`,
				},
				resource.Attribute{
					Name:        "proxyserver",
					Description: `(Optional) Proxy Server IP to get updated signatures from AWS.`,
				},
				resource.Attribute{
					Name:        "sessioncookiename",
					Description: `(Optional) Name of the session cookie that the application firewall uses to track user sessions. Must begin with a letter or number, and can consist of from 1 to 31 letters, numbers, and the hyphen (-) and underscore (\_) symbols. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my cookie name" or 'my cookie name').`,
				},
				resource.Attribute{
					Name:        "sessionlifetime",
					Description: `(Optional) Maximum amount of time (in seconds) that the application firewall allows a user session to remain active, regardless of user activity. After this time, the user session is terminated. Before continuing to use the protected web site, the user must establish a new session by opening a designated start URL.`,
				},
				resource.Attribute{
					Name:        "sessionlimit",
					Description: `(Optional) Maximum number of sessions that the application firewall allows to be active, regardless of user activity. After the max_limit reaches, No more user session will be created .`,
				},
				resource.Attribute{
					Name:        "sessiontimeout",
					Description: `(Optional) Timeout, in seconds, after which a user session is terminated. Before continuing to use the protected web site, the user must establish a new session by opening a designated start URL.`,
				},
				resource.Attribute{
					Name:        "signatureautoupdate",
					Description: `(Optional) Flag used to enable/disable auto update signatures`,
				},
				resource.Attribute{
					Name:        "signatureurl",
					Description: `(Optional) URL to download the mapping file from server`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Profile to use when an application firewall policy evaluates to undefined (UNDEF). An UNDEF event indicates an internal error condition. The APPFW_BLOCK built-in profile is the default setting. You can specify a different built-in or user-created profile as the UNDEF profile.`,
				},
				resource.Attribute{
					Name:        "useconfigurablesecretkey",
					Description: `(Optional) Use configurable secret key in AppFw operations ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwsettings. It is a unique string prefixed with "tf-appfwsettings-".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwsettings. It is a unique string prefixed with "tf-appfwsettings-".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwsignatures",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwsignatures resource is used to import appfw signature.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwsignatures",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the signature object.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about the signatures object.`,
				},
				resource.Attribute{
					Name:        "merge",
					Description: `(Optional) Merges the existing Signature with new signature rules`,
				},
				resource.Attribute{
					Name:        "mergedefault",
					Description: `(Optional) Merges signature file with default signature file.`,
				},
				resource.Attribute{
					Name:        "overwrite",
					Description: `(Optional) Overwrite any existing signatures object of the same name.`,
				},
				resource.Attribute{
					Name:        "preservedefactions",
					Description: `(Optional) preserves def actions of signature rules`,
				},
				resource.Attribute{
					Name:        "sha1",
					Description: `(Optional) File path for sha1 file to validate signature file`,
				},
				resource.Attribute{
					Name:        "src",
					Description: `(Optional) URL (protocol, host, path, and file name) for the location at which to store the imported signatures object. NOTE: The import fails if the object to be imported is on an HTTPS server that requires client certificate authentication for access.`,
				},
				resource.Attribute{
					Name:        "vendortype",
					Description: `(Optional) Third party vendor type for which WAF signatures has to be generated.`,
				},
				resource.Attribute{
					Name:        "xslt",
					Description: `(Optional) XSLT file source. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwsignatures. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appfwsignatures can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwsignatures.tf_appfwsignatures tf_appfwsignatures ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwsignatures. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appfwsignatures can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwsignatures.tf_appfwsignatures tf_appfwsignatures ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwurlencodedformcontenttype",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwurlencodedformcontenttype resource is used to create appfw urlencoded form contenttype.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwurlencodedformcontenttype",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "urlencodedformcontenttypevalue",
					Description: `(Required) Content type to be classified as urlencoded form`,
				},
				resource.Attribute{
					Name:        "isregex",
					Description: `(Optional) Is urlencoded form content type a regular expression? ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwurlencodedformcontenttype. It has the same value as the ` + "`" + `urlencodedformcontenttypevalue` + "`" + ` attribute. ## Import A appfwurlencodedformcontenttype can be imported using its urlencodedformcontenttypevalue, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwurlencodedformcontenttype.tf_urlencodedformcontenttype tf_urlencodedformcontenttype ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwurlencodedformcontenttype. It has the same value as the ` + "`" + `urlencodedformcontenttypevalue` + "`" + ` attribute. ## Import A appfwurlencodedformcontenttype can be imported using its urlencodedformcontenttypevalue, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwurlencodedformcontenttype.tf_urlencodedformcontenttype tf_urlencodedformcontenttype ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwwsdl",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwwsdl resource is used to create WSDL file resource.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwwsdl",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the WSDL file to remove. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "src",
					Description: `(Optional) URL (protocol, host, path, and name) of the WSDL file to be imported is stored. NOTE: The import fails if the object to be imported is on an HTTPS server that requires client certificate authentication for access. Minimum length = 1 Maximum length = 2047`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about the WSDL. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "overwrite",
					Description: `(Optional) Overwrite any existing WSDL of the same name. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwwsdl. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appfwwsdl can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwwsdl.tf_appfwwsdl tf_appfwwsdl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwwsdl. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appfwwsdl can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwwsdl.tf_appfwwsdl tf_appfwwsdl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwxmlcontenttype",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The ` + "`" + `appfwxmlcontenttype` + "`" + ` resource is used to crate Application Firewall XML ContentType.

`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwxmlcontenttype",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "xmlcontenttypevalue",
					Description: `Content type to be classified as XML.`,
				},
				resource.Attribute{
					Name:        "isregex",
					Description: `(Optional) Is field name a regular expression?. Possible values: [ REGEX, NOTREGEX ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwxmlcontenttype` + "`" + `. It has the same value as the ` + "`" + `xmlcontenttypevalue` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `appfwxmlcontenttype` + "`" + `. It has the same value as the ` + "`" + `xmlcontenttypevalue` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwxmlerrorpage",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwxmlerrorpage resource is used to Configuration for xml error page resource.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwxmlerrorpage",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Indicates name of the imported xml error page to be removed.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about the XML error object.`,
				},
				resource.Attribute{
					Name:        "overwrite",
					Description: `(Optional) Overwrite any existing XML error object of the same name.`,
				},
				resource.Attribute{
					Name:        "src",
					Description: `(Optional) URL (protocol, host, path, and name) for the location at which to store the imported XML error object. NOTE: The import fails if the object to be imported is on an HTTPS server that requires client certificate authentication for access. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwxmlerrorpage. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appfwxmlerrorpage can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwxmlerrorpage.tf_appfwxmlerrorpage tf_appfwxmlerrorpage ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwxmlerrorpage. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appfwxmlerrorpage can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwxmlerrorpage.tf_appfwxmlerrorpage tf_appfwxmlerrorpage ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appfwxmlschema",
			Category:         "Application Firewall",
			ShortDescription: ``,
			Description: `

The appfwxmlschema resource is used to Configure XML schema resource.


`,
			Keywords: []string{
				"application",
				"firewall",
				"appfwxmlschema",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the XML Schema object to remove. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "src",
					Description: `(Required) URL (protocol, host, path, and file name) for the location at which to store the imported XML Schema. NOTE: The import fails if the object to be imported is on an HTTPS server that requires client certificate authentication for access. Minimum length = 1 Maximum length = 2047`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about the XML Schema object. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "overwrite",
					Description: `(Optional) Overwrite any existing XML Schema object of the same name. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwxmlschema. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appfwxmlschema can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwxmlschema.tf_appfwxmlschema tf_appfwxmlschema ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appfwxmlschema. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appfwxmlschema can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appfwxmlschema.tf_appfwxmlschema tf_appfwxmlschema ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appqoeaction",
			Category:         "Appqoe",
			ShortDescription: ``,
			Description: `

The appqoeaction resource is used to create appqoeaction.


`,
			Keywords: []string{
				"appqoe",
				"appqoeaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the AppQoE action. Must begin with a letter, number, or the underscore symbol (_). Other characters allowed, after the first character, are the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), and colon (:) characters. This is a mandatory argument`,
				},
				resource.Attribute{
					Name:        "altcontentpath",
					Description: `(Optional) Path to the alternative content service to be used in the ACS`,
				},
				resource.Attribute{
					Name:        "altcontentsvcname",
					Description: `(Optional) Name of the alternative content service to be used in the ACS`,
				},
				resource.Attribute{
					Name:        "customfile",
					Description: `(Optional) name of the HTML page object to use as the response`,
				},
				resource.Attribute{
					Name:        "delay",
					Description: `(Optional) Delay threshold, in microseconds, for requests that match the policy's rule. If the delay statistics gathered for the matching request exceed the specified delay, configured action triggered for that request, if there is no action then requests are dropped to the lowest priority level`,
				},
				resource.Attribute{
					Name:        "dosaction",
					Description: `(Optional) DoS Action to take when vserver will be considered under DoS attack and corresponding rule matches. Mandatory if AppQoE actions are to be used for DoS attack prevention.`,
				},
				resource.Attribute{
					Name:        "dostrigexpression",
					Description: `(Optional) Optional expression to add second level check to trigger DoS actions. Specifically used for Analytics based DoS response generation`,
				},
				resource.Attribute{
					Name:        "maxconn",
					Description: `(Optional) Maximum number of concurrent connections that can be open for requests that matches with rule.`,
				},
				resource.Attribute{
					Name:        "numretries",
					Description: `(Optional) Retry count`,
				},
				resource.Attribute{
					Name:        "polqdepth",
					Description: `(Optional) Policy queue depth threshold value. When the policy queue size (number of requests queued for the policy binding this action is attached to) increases to the specified polqDepth value, subsequent requests are dropped to the lowest priority level.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for queuing the request. If server resources are not available for a request that matches the configured rule, this option specifies a priority for queuing the request until the server resources are available again. If priority is not configured then Lowest priority will be used to queue the request.`,
				},
				resource.Attribute{
					Name:        "priqdepth",
					Description: `(Optional) Queue depth threshold value per priorirty level. If the queue size (number of requests in the queue of that particular priorirty) on the virtual server to which this policy is bound, increases to the specified qDepth value, subsequent requests are dropped to the lowest priority level.`,
				},
				resource.Attribute{
					Name:        "respondwith",
					Description: `(Optional) Responder action to be taken when the threshold is reached. Available settings function as follows: ACS - Serve content from an alternative content service Threshold : maxConn or delay NS - Serve from the Citrix ADC (built-in response) Threshold : maxConn or delay`,
				},
				resource.Attribute{
					Name:        "retryonreset",
					Description: `(Optional) Retry on TCP Reset`,
				},
				resource.Attribute{
					Name:        "retryontimeout",
					Description: `(Optional) Retry on request Timeout(in millisec) upon sending request to backend servers`,
				},
				resource.Attribute{
					Name:        "tcpprofile",
					Description: `(Optional) Bind TCP Profile based on L2/L3/L7 parameters. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appqoeaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import An appqoeaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csaction.tf_csaction tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appqoeaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import An appqoeaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csaction.tf_csaction tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appqoecustomresp",
			Category:         "Appqoe",
			ShortDescription: ``,
			Description: `

The appqoecustomresp resource is used to create appqoecustomresp.


`,
			Keywords: []string{
				"appqoe",
				"appqoecustomresp",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Indicates name of the custom response HTML page to import/update.`,
				},
				resource.Attribute{
					Name:        "src",
					Description: `(Optional) URL \(protocol, host, path, and file name\) from where the location file will be imported. NOTE: The import fails if the object to be imported is on an HTTPS server that requires client certificate authentication for access. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appqoecustomresp. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appqoecustomresp can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appqoecustomresp.tf_appqoecustomresp my_appqoecustomresp ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appqoecustomresp. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appqoecustomresp can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appqoecustomresp.tf_appqoecustomresp my_appqoecustomresp ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appqoeparameter",
			Category:         "Appqoe",
			ShortDescription: ``,
			Description: `

The appqoeparameter resource is used to update appqoeparameter.


`,
			Keywords: []string{
				"appqoe",
				"appqoeparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "avgwaitingclient",
					Description: `(Optional) average number of client connections, that can sit in service waiting queue`,
				},
				resource.Attribute{
					Name:        "dosattackthresh",
					Description: `(Optional) average number of client connection that can queue up on vserver level without triggering DoS mitigation module`,
				},
				resource.Attribute{
					Name:        "maxaltrespbandwidth",
					Description: `(Optional) maximum bandwidth which will determine whether to send alternate content response`,
				},
				resource.Attribute{
					Name:        "sessionlife",
					Description: `(Optional) Time, in seconds, between the first time and the next time the AppQoE alternative content window is displayed. The alternative content window is displayed only once during a session for the same browser accessing a configured URL, so this parameter determines the length of a session. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appqoeparameter. It is a unique string prefixed with ` + "`" + `tf-appqoeparameter-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appqoeparameter. It is a unique string prefixed with ` + "`" + `tf-appqoeparameter-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_appqoepolicy",
			Category:         "Appqoe",
			ShortDescription: ``,
			Description: `

The appqoepolicy resource is used to create appqoepolicy.


`,
			Keywords: []string{
				"appqoe",
				"appqoepolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Configured AppQoE action to trigger`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of AppQoEpolicy`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression or name of a named expression, against which the request is evaluated. The policy is applied if the rule evaluates to true. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appqoepolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appqoepolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appqoepolicy.tf_appqoepolicy my_appqoepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the appqoepolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A appqoepolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_appqoepolicy.tf_appqoepolicy my_appqoepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_arp",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The arp resource is used to create arp.


`,
			Keywords: []string{
				"network",
				"arp",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) IP address of the network device that you want to add to the ARP table. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "mac",
					Description: `(Required) MAC address of the network device.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "ifnum",
					Description: `(Optional) Interface through which the network device is accessible. Specify the interface in (slot/port) notation. For example, 1/3.`,
				},
				resource.Attribute{
					Name:        "vxlan",
					Description: `(Optional) ID of the VXLAN on which the IP address of this ARP entry is reachable. Minimum value = 1 Maximum value = 16777215`,
				},
				resource.Attribute{
					Name:        "vtep",
					Description: `(Optional) IP address of the VXLAN tunnel endpoint (VTEP) through which the IP address of this ARP entry is reachable. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) The VLAN ID through which packets are to be sent after matching the ARP entry. This is a numeric value.`,
				},
				resource.Attribute{
					Name:        "ownernode",
					Description: `(Optional) The owner node for the Arp entry. Minimum value = 0 Maximum value = 31`,
				},
				resource.Attribute{
					Name:        "all",
					Description: `(Optional) Remove all ARP entries from the ARP table of the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node. Minimum value = 0 Maximum value = 31 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the arp. It has the same value as the ` + "`" + `ipaddress` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the arp. It has the same value as the ` + "`" + `ipaddress` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_arpparam",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The arpparam resource is used to create Global arp parameters resource.


`,
			Keywords: []string{
				"network",
				"arpparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "timeout",
					Description: `(Optional) Time-out value (aging time) for the dynamically learned ARP entries, in seconds. The new value applies only to ARP entries that are dynamically learned after the new value is set. Previously existing ARP entries expire after the previously configured aging time. Minimum value = 5 Maximum value = 1200`,
				},
				resource.Attribute{
					Name:        "spoofvalidation",
					Description: `(Optional) enable/disable arp spoofing validation. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the arpparam. It is a unique string prefixed with "tf-arpparam-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the arpparam. It is a unique string prefixed with "tf-arpparam-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_auditmessageaction",
			Category:         "Audit",
			ShortDescription: ``,
			Description: `

This resource is used to create audit message actions.


`,
			Keywords: []string{
				"audit",
				"auditmessageaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the audit message action.`,
				},
				resource.Attribute{
					Name:        "loglevel",
					Description: `(Optional) Audit log level, which specifies the severity level of the log message being generated.. The following loglevels are valid:`,
				},
				resource.Attribute{
					Name:        "stringbuilderexpr",
					Description: `(Optional) Default-syntax expression that defines the format and content of the log message.`,
				},
				resource.Attribute{
					Name:        "logtonewnslog",
					Description: `(Optional) Send the message to the new nslog. Possible values: [YES, NO].`,
				},
				resource.Attribute{
					Name:        "bypasssafetycheck",
					Description: `(Optional) Bypass the safety check and allow unsafe expressions. Possible values: [YES, NO]. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the resource. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A auditmessageaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_auditmessageaction.tf_msgaction tf_msgaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the resource. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A auditmessageaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_auditmessageaction.tf_msgaction tf_msgaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_auditnslogaction",
			Category:         "Audit",
			ShortDescription: ``,
			Description: `

The auditnslogaction resource is used to create auditnslogaction.


`,
			Keywords: []string{
				"audit",
				"auditnslogaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "loglevel",
					Description: `(Required) Audit log level, which specifies the types of events to log. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the nslog action. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the nslog action is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my nslog action" or 'my nslog action').`,
				},
				resource.Attribute{
					Name:        "acl",
					Description: `(Optional) Log access control list (ACL) messages.`,
				},
				resource.Attribute{
					Name:        "alg",
					Description: `(Optional) Log the ALG messages`,
				},
				resource.Attribute{
					Name:        "appflowexport",
					Description: `(Optional) Export log messages to AppFlow collectors. Appflow collectors are entities to which log messages can be sent so that some action can be performed on them.`,
				},
				resource.Attribute{
					Name:        "contentinspectionlog",
					Description: `(Optional) Log Content Inspection event information`,
				},
				resource.Attribute{
					Name:        "dateformat",
					Description: `(Optional) Format of dates in the logs. Supported formats are:`,
				},
				resource.Attribute{
					Name:        "domainresolvenow",
					Description: `(Optional) Immediately send a DNS query to resolve the server's domain name.`,
				},
				resource.Attribute{
					Name:        "domainresolveretry",
					Description: `(Optional) Time, in seconds, for which the Citrix ADC waits before sending another DNS query to resolve the host name of the audit server if the last query failed.`,
				},
				resource.Attribute{
					Name:        "logfacility",
					Description: `(Optional) Facility value, as defined in RFC 3164, assigned to the log message. Log facility values are numbers 0 to 7 (LOCAL0 through LOCAL7). Each number indicates where a specific message originated from, such as the Citrix ADC itself, the VPN, or external.`,
				},
				resource.Attribute{
					Name:        "lsn",
					Description: `(Optional) Log the LSN messages`,
				},
				resource.Attribute{
					Name:        "serverdomainname",
					Description: `(Optional) Auditserver name as a FQDN. Mutually exclusive with serverIP`,
				},
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address of the nslog server.`,
				},
				resource.Attribute{
					Name:        "serverport",
					Description: `(Optional) Port on which the nslog server accepts connections.`,
				},
				resource.Attribute{
					Name:        "sslinterception",
					Description: `(Optional) Log SSL Interception event information`,
				},
				resource.Attribute{
					Name:        "subscriberlog",
					Description: `(Optional) Log subscriber session event information`,
				},
				resource.Attribute{
					Name:        "tcp",
					Description: `(Optional) Log TCP messages.`,
				},
				resource.Attribute{
					Name:        "timezone",
					Description: `(Optional) Time zone used for date and timestamps in the logs. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "urlfiltering",
					Description: `(Optional) Log URL filtering event information`,
				},
				resource.Attribute{
					Name:        "userdefinedauditlog",
					Description: `(Optional) Log user-configurable log messages to nslog. Setting this parameter to NO causes auditing to ignore all user-configured message actions. Setting this parameter to YES causes auditing to log user-configured message actions that meet the other logging criteria. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the auditnslogaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A auditnslogaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_auditnslogaction.tf_auditnslogaction my_auditnslogaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the auditnslogaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A auditnslogaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_auditnslogaction.tf_auditnslogaction my_auditnslogaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_auditnslogglobal_auditnslogpolicy_binding",
			Category:         "Audit",
			ShortDescription: ``,
			Description: `

The Auditnslogglobal_auditnslogpolicy_binding resource is used to create Auditnslogglobal_auditnslogpolicy_binding.


`,
			Keywords: []string{
				"audit",
				"auditnslogglobal",
				"auditnslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the audit nslog policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy. Minimum value = 1 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ]`,
				},
				resource.Attribute{
					Name:        "builtin",
					Description: `(Optional) Indicates that a variable is a built-in (SYSTEM INTERNAL) type. Possible values: [ MODIFIABLE, DELETABLE, IMMUTABLE, PARTITION_ALL ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the Auditnslogglobal_auditnslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A Auditnslogglobal_auditnslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_auditnslogglobal_auditnslogpolicy_binding.tf_auditnslogglobal_auditnslogpolicy_binding SETASLEARNNSLOG_ADV_POL ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the Auditnslogglobal_auditnslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A Auditnslogglobal_auditnslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_auditnslogglobal_auditnslogpolicy_binding.tf_auditnslogglobal_auditnslogpolicy_binding SETASLEARNNSLOG_ADV_POL ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_auditnslogparams",
			Category:         "Audit",
			ShortDescription: ``,
			Description: `

The auditnslogparams resource is used to update auditnslogparams.


`,
			Keywords: []string{
				"audit",
				"auditnslogparams",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address of the nslog server. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "serverport",
					Description: `(Optional) Port on which the nslog server accepts connections. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "dateformat",
					Description: `(Optional) Format of dates in the logs. Supported formats are:`,
				},
				resource.Attribute{
					Name:        "loglevel",
					Description: `(Optional) Types of information to be logged. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "logfacility",
					Description: `(Optional) Facility value, as defined in RFC 3164, assigned to the log message. Log facility values are numbers 0 to 7 (LOCAL0 through LOCAL7). Each number indicates where a specific message originated from, such as the Citrix ADC itself, the VPN, or external. Possible values: [ LOCAL0, LOCAL1, LOCAL2, LOCAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7 ]`,
				},
				resource.Attribute{
					Name:        "tcp",
					Description: `(Optional) Configure auditing to log TCP messages. Possible values: [ NONE, ALL ]`,
				},
				resource.Attribute{
					Name:        "acl",
					Description: `(Optional) Configure auditing to log access control list (ACL) messages. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "timezone",
					Description: `(Optional) Time zone used for date and timestamps in the logs. Supported settings are:`,
				},
				resource.Attribute{
					Name:        "userdefinedauditlog",
					Description: `(Optional) Log user-configurable log messages to nslog. Setting this parameter to NO causes auditing to ignore all user-configured message actions. Setting this parameter to YES causes auditing to log user-configured message actions that meet the other logging criteria. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "appflowexport",
					Description: `(Optional) Export log messages to AppFlow collectors. Appflow collectors are entities to which log messages can be sent so that some action can be performed on them. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "lsn",
					Description: `(Optional) Log the LSN messages. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "alg",
					Description: `(Optional) Log the ALG messages. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "subscriberlog",
					Description: `(Optional) Log subscriber session event information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sslinterception",
					Description: `(Optional) Log SSL Interception event information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "urlfiltering",
					Description: `(Optional) Log URL filtering event information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "contentinspectionlog",
					Description: `(Optional) Log Content Inspection event information. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the auditnslogparams. It is a unique string prefixed with ` + "`" + `tf-auditnslogparams-` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the auditnslogparams. It is a unique string prefixed with ` + "`" + `tf-auditnslogparams-` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_auditnslogpolicy",
			Category:         "Audit",
			ShortDescription: ``,
			Description: `

The auditnslogpolicy resource is used to create auditnslogpolicy.


`,
			Keywords: []string{
				"audit",
				"auditnslogpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Nslog server action that is performed when this policy matches. NOTE: An nslog server action must be associated with an nslog audit policy.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the policy. Must begin with a letter, number, or the underscore character (_), and must consist only of letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore characters. Cannot be changed after the nslog policy is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my nslog policy" or 'my nslog policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Name of the Citrix ADC named rule, or an expression, that defines the messages to be logged to the nslog server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the auditnslogpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A auditnslogpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_auditnslogpolicy.tf_auditnslogpolicy my_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the auditnslogpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A auditnslogpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_auditnslogpolicy.tf_auditnslogpolicy my_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_auditsyslogaction",
			Category:         "Audit",
			ShortDescription: ``,
			Description: `

This resource is used to create audit syslog actions.


`,
			Keywords: []string{
				"audit",
				"auditsyslogaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the audit syslog action.`,
				},
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address of the syslog server.`,
				},
				resource.Attribute{
					Name:        "serverdomainname",
					Description: `(Optional) SYSLOG server name as a FQDN. Mutually exclusive with serverIP/lbVserverName.`,
				},
				resource.Attribute{
					Name:        "domainresolveretry",
					Description: `(Optional) Time, in seconds, for which the Citrix ADC waits before sending another DNS query to resolve the host name of the syslog server if the last query failed.`,
				},
				resource.Attribute{
					Name:        "lbvservername",
					Description: `(Optional) Name of the LB vserver. Mutually exclusive with syslog serverIP/serverName.`,
				},
				resource.Attribute{
					Name:        "serverport",
					Description: `(Optional) Port on which the syslog server accepts connections.`,
				},
				resource.Attribute{
					Name:        "loglevel",
					Description: `(Optional) Audit log level, which specifies the types of events to log. Possible values: [ ALL, EMERGENCY, ALERT, CRITICAL, ERROR, WARNING, NOTICE, INFORMATIONAL, DEBUG, NONE ]`,
				},
				resource.Attribute{
					Name:        "dateformat",
					Description: `(Optional) Format of dates in the logs. Possible values: [ MMDDYYYY, DDMMYYYY, DDMMYYYY ]`,
				},
				resource.Attribute{
					Name:        "logfacility",
					Description: `(Optional) Facility value, as defined in RFC 3164, assigned to the log message. Possible values: [ LOCAL0, LOCAL1, LOCAL2, LOCAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7 ]`,
				},
				resource.Attribute{
					Name:        "tcp",
					Description: `(Optional) Log TCP messages. Possible values: [ NONE, ALL ]`,
				},
				resource.Attribute{
					Name:        "acl",
					Description: `(Optional) Log access control list (ACL) messages. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "timezone",
					Description: `(Optional) Time zone used for date and timestamps in the logs. Possible values: [ GMT\_TIME, LOCAL\_TIME ]`,
				},
				resource.Attribute{
					Name:        "userdefinedauditlog",
					Description: `(Optional) Log user-configurable log messages to syslog. Setting this parameter to NO causes auditing to ignore all user-configured message actions. Setting this parameter to YES causes auditing to log user-configured message actions that meet the other logging criteria. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "appflowexport",
					Description: `(Optional) Export log messages to AppFlow collectors. Appflow collectors are entities to which log messages can be sent so that some action can be performed on them. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "lsn",
					Description: `(Optional) Log lsn info. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "alg",
					Description: `(Optional) Log alg info. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "subscriberlog",
					Description: `(Optional) Log subscriber session event information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "transport",
					Description: `(Optional) Transport type used to send auditlogs to syslog server. Possible values: [ TCP, UDP ]`,
				},
				resource.Attribute{
					Name:        "tcpprofilename",
					Description: `(Optional) Name of the TCP profile whose settings are to be applied to the audit server info to tune the TCP connection parameters.`,
				},
				resource.Attribute{
					Name:        "maxlogdatasizetohold",
					Description: `(Optional) Max size of log data that can be held in NSB chain of server info.`,
				},
				resource.Attribute{
					Name:        "dns",
					Description: `(Optional) Log DNS related syslog messages. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "contentinspectionlog",
					Description: `(Optional) Log Content Inspection event information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "netprofile",
					Description: `(Optional) Name of the network profile. The SNIP configured in the network profile will be used as source IP while sending log messages.`,
				},
				resource.Attribute{
					Name:        "sslinterception",
					Description: `(Optional) Log SSL Interception event information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "urlfiltering",
					Description: `(Optional) Log URL filtering event information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "domainresolvenow",
					Description: `(Optional) Immediately send a DNS query to resolve the server's domain name. ## Attributes In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the audit syslog action. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import An instance of the resource can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_auditsyslogaction.tf_syslogaction tf_syslogaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_auditsyslogglobal_auditsyslogpolicy_binding",
			Category:         "Audit",
			ShortDescription: ``,
			Description: `

The auditsyslogglobal_auditsyslogpolicy_binding resource is used to create auditsyslogglobal_auditsyslogpolicy_binding.


`,
			Keywords: []string{
				"audit",
				"auditsyslogglobal",
				"auditsyslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the audit syslog policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy. Minimum value = 1 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ]`,
				},
				resource.Attribute{
					Name:        "builtin",
					Description: `(Optional) Indicates that a variable is a built-in (SYSTEM INTERNAL) type. Possible values: [ MODIFIABLE, DELETABLE, IMMUTABLE, PARTITION_ALL ]`,
				},
				resource.Attribute{
					Name:        "feature",
					Description: `(Optional) The feature to be checked while applying this config. Possible values: [ WL, WebLogging, SP, SurgeProtection, LB, LoadBalancing, CS, ContentSwitching, CR, CacheRedirection, SC, SureConnect, CMP, CMPcntl, CompressionControl, PQ, PriorityQueuing, HDOSP, HttpDoSProtection, SSLVPN, AAA, GSLB, GlobalServerLoadBalancing, SSL, SSLOffload, SSLOffloading, CF, ContentFiltering, IC, IntegratedCaching, OSPF, OSPFRouting, RIP, RIPRouting, BGP, BGPRouting, REWRITE, IPv6PT, IPv6protocoltranslation, AppFw, ApplicationFirewall, RESPONDER, HTMLInjection, push, NSPush, NetScalerPush, AppFlow, CloudBridge, ISIS, ISISRouting, CH, CallHome, AppQoE, ContentAccelerator, SYSTEM, RISE, FEO, LSN, LargeScaleNAT, RDPProxy, Rep, Reputation, URLFiltering, VideoOptimization, ForwardProxy, SSLInterception, AdaptiveTCP, CQA, CI, ContentInspection, Bot, APIGateway ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the auditsyslogglobal_auditsyslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A auditsyslogglobal_auditsyslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_auditsyslogpolicy.tf_auditsyslogpolicy tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the auditsyslogglobal_auditsyslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A auditsyslogglobal_auditsyslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_auditsyslogpolicy.tf_auditsyslogpolicy tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_auditsyslogparams",
			Category:         "Audit",
			ShortDescription: ``,
			Description: `

The auditsyslogparams resource is used to create auditsyslogparams.


`,
			Keywords: []string{
				"audit",
				"auditsyslogparams",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address of the syslog server. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "serverport",
					Description: `(Optional) Port on which the syslog server accepts connections. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "dateformat",
					Description: `(Optional) Format of dates in the logs. Supported formats are:`,
				},
				resource.Attribute{
					Name:        "loglevel",
					Description: `(Optional) Types of information to be logged. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "logfacility",
					Description: `(Optional) Facility value, as defined in RFC 3164, assigned to the log message. Log facility values are numbers 0 to 7 (LOCAL0 through LOCAL7). Each number indicates where a specific message originated from, such as the Citrix ADC itself, the VPN, or external. Possible values: [ LOCAL0, LOCAL1, LOCAL2, LOCAL3, LOCAL4, LOCAL5, LOCAL6, LOCAL7 ]`,
				},
				resource.Attribute{
					Name:        "tcp",
					Description: `(Optional) Log TCP messages. Possible values: [ NONE, ALL ]`,
				},
				resource.Attribute{
					Name:        "acl",
					Description: `(Optional) Log access control list (ACL) messages. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "timezone",
					Description: `(Optional) Time zone used for date and timestamps in the logs. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "userdefinedauditlog",
					Description: `(Optional) Log user-configurable log messages to syslog. Setting this parameter to NO causes audit to ignore all user-configured message actions. Setting this parameter to YES causes audit to log user-configured message actions that meet the other logging criteria. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "appflowexport",
					Description: `(Optional) Export log messages to AppFlow collectors. Appflow collectors are entities to which log messages can be sent so that some action can be performed on them. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "lsn",
					Description: `(Optional) Log the LSN messages. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "alg",
					Description: `(Optional) Log the ALG messages. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "subscriberlog",
					Description: `(Optional) Log subscriber session event information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dns",
					Description: `(Optional) Log DNS related syslog messages. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sslinterception",
					Description: `(Optional) Log SSL Interceptionn event information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "urlfiltering",
					Description: `(Optional) Log URL filtering event information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "contentinspectionlog",
					Description: `(Optional) Log Content Inspection event ifnormation. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of theauditsyslogparams. It is a unique string prefixde with ` + "`" + `tf-auditsyslogparams-` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of theauditsyslogparams. It is a unique string prefixde with ` + "`" + `tf-auditsyslogparams-` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_auditsyslogpolicy",
			Category:         "Audit",
			ShortDescription: ``,
			Description: `

The resource is used to create audit syslog policies


`,
			Keywords: []string{
				"audit",
				"auditsyslogpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the policy.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Name of the Citrix ADC named rule, or an expression, that defines the messages to be logged to the syslog server.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Optional) Syslog server action to perform when this policy matches traffic.`,
				},
				resource.Attribute{
					Name:        "globalbinding",
					Description: `(Optional) A single global binding block. Documented below. Global binding supports the following:`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority of the command policy.`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) Possible values: [ SYSTEM\_GLOBAL, VPN\_GLOBAL, RNAT\_GLOBAL ]`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) On success invoke label. Applicable for advanced authentication policy binding.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "feature",
					Description: `(Optional) The feature to be checked while applying this config. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import An instance of the resource can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_auditsyslogpolicy.tf_auditsyslogpolicy tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import An instance of the resource can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_auditsyslogpolicy.tf_auditsyslogpolicy tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationauthnprofile",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationauthnprofile resource is used to create Authentication profile resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationauthnprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the authentication profile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the RADIUS action is added.`,
				},
				resource.Attribute{
					Name:        "authnvsname",
					Description: `(Required) Name of the authentication vserver at which authentication should be done.`,
				},
				resource.Attribute{
					Name:        "authenticationdomain",
					Description: `(Optional) Domain for which TM cookie must to be set. If unspecified, cookie will be set for FQDN.`,
				},
				resource.Attribute{
					Name:        "authenticationhost",
					Description: `(Optional) Hostname of the authentication vserver to which user must be redirected for authentication.`,
				},
				resource.Attribute{
					Name:        "authenticationlevel",
					Description: `(Optional) Authentication weight or level of the vserver to which this will bound. This is used to order TM vservers based on the protection required. A session that is created by authenticating against TM vserver at given level cannot be used to access TM vserver at a higher level. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationauthnprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationauthnprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationauthnprofile.tf_authenticationauthnprofile tf_name ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationauthnprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationauthnprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationauthnprofile.tf_authenticationauthnprofile tf_name ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationcaptchaaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationcaptchaaction resource is used to create authentication captchaaction resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationcaptchaaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new captcha action. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after an action is created. The following requirement applies only to the NetScaler CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action').`,
				},
				resource.Attribute{
					Name:        "secretkey",
					Description: `(Required) Secret of gateway as established at the captcha source.`,
				},
				resource.Attribute{
					Name:        "sitekey",
					Description: `(Required) Sitekey to identify gateway fqdn while loading captcha.`,
				},
				resource.Attribute{
					Name:        "serverurl",
					Description: `(Optional) This is the endpoint at which captcha response is validated.`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the group that is added to user sessions that match current policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationcaptchaaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationcaptchaaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationcaptchaaction.tf_captchaaction tf_captchaaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationcaptchaaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationcaptchaaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationcaptchaaction.tf_captchaaction tf_captchaaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationcertaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationcertaction resource is used to create authentication certaction resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationcertaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the client cert authentication server profile (action). Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after certifcate action is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication action" or 'my authentication action').`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups.`,
				},
				resource.Attribute{
					Name:        "groupnamefield",
					Description: `(Optional) Client-cert field from which the group is extracted. Must be set to either ""Subject"" and ""Issuer"" (include both sets of double quotation marks). Format: <field>:<subfield>`,
				},
				resource.Attribute{
					Name:        "twofactor",
					Description: `(Optional) Enables or disables two-factor authentication. Two factor authentication is client cert authentication followed by password authentication.`,
				},
				resource.Attribute{
					Name:        "usernamefield",
					Description: `(Optional) Client-cert field from which the username is extracted. Must be set to either ""Subject"" and ""Issuer"" (include both sets of double quotation marks). Format: <field>:<subfield>. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationcertaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationcertaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationcertaction.tf_certaction tf_certaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationcertaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationcertaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationcertaction.tf_certaction tf_certaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationcertpolicy",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationcertpolicy resource is used to create authentication certpolicy resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationcertpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the client certificate authentication policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after cert authentication policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication policy" or 'my authentication policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Name of the Citrix ADC named rule, or an expression, that the policy uses to determine whether to attempt to authenticate the user with the authentication server.`,
				},
				resource.Attribute{
					Name:        "reqaction",
					Description: `(Optional) Name of the client cert authentication action to be performed if the policy matches. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationcertpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationcertpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationcertpolicy.tf_certpolicy tf_certpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationcertpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationcertpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationcertpolicy.tf_certpolicy tf_certpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationcitrixauthaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationcitrixauthaction resource is used to create authentication citrixauthaction resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationcitrixauthaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new Citrix Authentication action. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after an action is created. The following requirement applies only to the NetScaler CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action').`,
				},
				resource.Attribute{
					Name:        "authentication",
					Description: `(Optional) Authentication needs to be disabled for searching user object without performing authentication.`,
				},
				resource.Attribute{
					Name:        "authenticationtype",
					Description: `(Optional) Type of the Citrix Authentication implementation. Default implementation uses Citrix Cloud Connector. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationcitrixauthaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationcitrixauthaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationcitrixauthaction.tf_citrixauthaction tf_citrixauthaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationcitrixauthaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationcitrixauthaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationcitrixauthaction.tf_citrixauthaction tf_citrixauthaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationdfaaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationdfaaction resource is used to create Authentication dfa action Resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationdfaaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the DFA action. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the DFA action is added.`,
				},
				resource.Attribute{
					Name:        "passphrase",
					Description: `(Required) Key shared between the DFA server and the Citrix ADC. Required to allow the Citrix ADC to communicate with the DFA server.`,
				},
				resource.Attribute{
					Name:        "serverurl",
					Description: `(Required) DFA Server URL`,
				},
				resource.Attribute{
					Name:        "clientid",
					Description: `(Required) If configured, this string is sent to the DFA server as the X-Citrix-Exchange header value.`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationdfaaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationdfaaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationdfaaction.tf_dfaaction tf_dfaaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationdfaaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationdfaaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationdfaaction.tf_dfaaction tf_dfaaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationdfapolicy",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationdfapolicy resource is used to create authentication dfapolicy resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationdfapolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the DFA policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after DFA policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication policy" or 'my authentication policy').`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Name of the DFA action to perform if the policy matches.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Name of the Citrix ADC named rule, or an expression, that the policy uses to determine whether to attempt to authenticate the user with the Web server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationdfapolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationdfapolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationdfapolicy.td_dfapolicy td_dfapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationdfapolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationdfapolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationdfapolicy.td_dfapolicy td_dfapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationemailaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationemailaction resource is used to create authentication emailaction resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationemailaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new email action. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after an action is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action').`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Required) Username/Clientid/EmailID to be used to authenticate to the server.`,
				},
				resource.Attribute{
					Name:        "password",
					Description: `(Required) Password/Clientsecret to use when authenticating to the server.`,
				},
				resource.Attribute{
					Name:        "serverurl",
					Description: `(Required) Address of the server that delivers the message. It is fully qualified fqdn such as http(s):// or smtp(s):// for http and smtp protocols respectively. For SMTP, the port number is mandatory like smtps://smtp.example.com:25.`,
				},
				resource.Attribute{
					Name:        "content",
					Description: `(Optional) Content to be delivered to the user. "$code" string within the content will be replaced with the actual one-time-code to be sent.`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the group that is added to user sessions that match current IdP policy. It can be used in policies to identify relying party trust.`,
				},
				resource.Attribute{
					Name:        "emailaddress",
					Description: `(Optional) An optional expression that yields user's email. When not configured, user's default mail address would be used. When configured, result of this expression is used as destination email address.`,
				},
				resource.Attribute{
					Name:        "timeout",
					Description: `(Optional) Time after which the code expires.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of the email action. Default type is SMTP. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationemailaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationemailaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationemailaction.tf_emailaction tf_emailaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationemailaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationemailaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationemailaction.tf_emailaction tf_emailaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationepaaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationepaaction resource is used to create authentication epaaction Resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationepaaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the epa action. Must begin with a letter, number, or the underscore character (_), and must consist only of letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after epa action is created.The following requirement applies only to the Citrix ADC CLI:If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my aaa action" or 'my aaa action').`,
				},
				resource.Attribute{
					Name:        "csecexpr",
					Description: `(Required) it holds the ClientSecurityExpression to be sent to the client`,
				},
				resource.Attribute{
					Name:        "defaultepagroup",
					Description: `(Optional) This is the default group that is chosen when the EPA check succeeds.`,
				},
				resource.Attribute{
					Name:        "deletefiles",
					Description: `(Optional) String specifying the path(s) and name(s) of the files to be deleted by the endpoint analysis (EPA) tool. Multiple files to be delimited by comma`,
				},
				resource.Attribute{
					Name:        "killprocess",
					Description: `(Optional) String specifying the name of a process to be terminated by the endpoint analysis (EPA) tool. Multiple processes to be delimited by comma`,
				},
				resource.Attribute{
					Name:        "quarantinegroup",
					Description: `(Optional) This is the quarantine group that is chosen when the EPA check fails if configured. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationepaaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationepaaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationepaaction.tf_epaaction tf_epaaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationepaaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationepaaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationepaaction.tf_epaaction tf_epaaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationldapaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationldapaction resource is used to create LDAP action resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationldapaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new LDAP action. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the LDAP action is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication action" or 'my authentication action').`,
				},
				resource.Attribute{
					Name:        "alternateemailattr",
					Description: `(Optional) The NetScaler appliance uses the alternateive email attribute to query the Active Directory for the alternative email id of a user`,
				},
				resource.Attribute{
					Name:        "attribute1",
					Description: `(Optional) Expression that would be evaluated to extract attribute1 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute10",
					Description: `(Optional) Expression that would be evaluated to extract attribute10 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute11",
					Description: `(Optional) Expression that would be evaluated to extract attribute11 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute12",
					Description: `(Optional) Expression that would be evaluated to extract attribute12 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute13",
					Description: `(Optional) Expression that would be evaluated to extract attribute13 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute14",
					Description: `(Optional) Expression that would be evaluated to extract attribute14 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute15",
					Description: `(Optional) Expression that would be evaluated to extract attribute15 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute16",
					Description: `(Optional) Expression that would be evaluated to extract attribute16 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute2",
					Description: `(Optional) Expression that would be evaluated to extract attribute2 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute3",
					Description: `(Optional) Expression that would be evaluated to extract attribute3 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute4",
					Description: `(Optional) Expression that would be evaluated to extract attribute4 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute5",
					Description: `(Optional) Expression that would be evaluated to extract attribute5 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute6",
					Description: `(Optional) Expression that would be evaluated to extract attribute6 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute7",
					Description: `(Optional) Expression that would be evaluated to extract attribute7 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute8",
					Description: `(Optional) Expression that would be evaluated to extract attribute8 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attribute9",
					Description: `(Optional) Expression that would be evaluated to extract attribute9 from the ldap response`,
				},
				resource.Attribute{
					Name:        "attributes",
					Description: `(Optional) List of attribute names separated by ',' which needs to be fetched from ldap server. Note that preceeding and trailing spaces will be removed. Attribute name can be 127 bytes and total length of this string should not cross 2047 bytes. These attributes have multi-value support separated by ',' and stored as key-value pair in AAA session`,
				},
				resource.Attribute{
					Name:        "authentication",
					Description: `(Optional) Perform LDAP authentication. If authentication is disabled, any LDAP authentication attempt returns authentication success if the user is found. CAUTION! Authentication should be disabled only for authorization group extraction or where other (non-LDAP) authentication methods are in use and either bound to a primary list or flagged as secondary.`,
				},
				resource.Attribute{
					Name:        "authtimeout",
					Description: `(Optional) Number of seconds the Citrix ADC waits for a response from the RADIUS server.`,
				},
				resource.Attribute{
					Name:        "cloudattributes",
					Description: `(Optional) The Citrix ADC uses the cloud attributes to extract additional attributes from LDAP servers required for Citrix Cloud operations`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups.`,
				},
				resource.Attribute{
					Name:        "email",
					Description: `(Optional) The Citrix ADC uses the email attribute to query the Active Directory for the email id of a user`,
				},
				resource.Attribute{
					Name:        "followreferrals",
					Description: `(Optional) Setting this option to ON enables following LDAP referrals received from the LDAP server.`,
				},
				resource.Attribute{
					Name:        "groupattrname",
					Description: `(Optional) LDAP group attribute name. Used for group extraction on the LDAP server.`,
				},
				resource.Attribute{
					Name:        "groupnameidentifier",
					Description: `(Optional) Name that uniquely identifies a group in LDAP or Active Directory.`,
				},
				resource.Attribute{
					Name:        "groupsearchattribute",
					Description: `(Optional) LDAP group search attribute. Used to determine to which groups a group belongs.`,
				},
				resource.Attribute{
					Name:        "groupsearchfilter",
					Description: `(Optional) String to be combined with the default LDAP group search string to form the search value. For example, the group search filter ""vpnallowed=true"" when combined with the group identifier ""samaccount"" and the group name ""g1"" yields the LDAP search string ""(&(vpnallowed=true)(samaccount=g1)"". If nestedGroupExtraction is ENABLED, the filter is applied on the first level group search as well, otherwise first level groups (of which user is a direct member of) will be fetched without applying this filter. (Be sure to enclose the search string in two sets of double quotation marks; both sets are needed.)`,
				},
				resource.Attribute{
					Name:        "groupsearchsubattribute",
					Description: `(Optional) LDAP group search subattribute. Used to determine to which groups a group belongs.`,
				},
				resource.Attribute{
					Name:        "kbattribute",
					Description: `(Optional) KnowledgeBasedAuthentication(KBA) attribute on AD. This attribute is used to store and retrieve preconfigured Question and Answer knowledge base used for KBA authentication.`,
				},
				resource.Attribute{
					Name:        "ldapbase",
					Description: `(Optional) Base (node) from which to start LDAP searches. If the LDAP server is running locally, the default value of base is dc=netscaler, dc=com.`,
				},
				resource.Attribute{
					Name:        "ldapbinddn",
					Description: `(Optional) Full distinguished name (DN) that is used to bind to the LDAP server. Default: cn=Manager,dc=netscaler,dc=com`,
				},
				resource.Attribute{
					Name:        "ldapbinddnpassword",
					Description: `(Optional) Password used to bind to the LDAP server.`,
				},
				resource.Attribute{
					Name:        "ldaphostname",
					Description: `(Optional) Hostname for the LDAP server. If -validateServerCert is ON then this must be the host name on the certificate from the LDAP server. A hostname mismatch will cause a connection failure.`,
				},
				resource.Attribute{
					Name:        "ldaploginname",
					Description: `(Optional) LDAP login name attribute. The Citrix ADC uses the LDAP login name to query external LDAP servers or Active Directories.`,
				},
				resource.Attribute{
					Name:        "maxldapreferrals",
					Description: `(Optional) Specifies the maximum number of nested referrals to follow.`,
				},
				resource.Attribute{
					Name:        "maxnestinglevel",
					Description: `(Optional) If nested group extraction is ON, specifies the number of levels up to which group extraction is performed.`,
				},
				resource.Attribute{
					Name:        "mssrvrecordlocation",
					Description: `(Optional) MSSRV Specific parameter. Used to locate the DNS node to which the SRV record pertains in the domainname. The domainname is appended to it to form the srv record. Example : For "dc._msdcs", the srv record formed is _ldap._tcp.dc._msdcs.<domainname>.`,
				},
				resource.Attribute{
					Name:        "nestedgroupextraction",
					Description: `(Optional) Allow nested group extraction, in which the Citrix ADC queries external LDAP servers to determine whether a group is part of another group.`,
				},
				resource.Attribute{
					Name:        "otpsecret",
					Description: `(Optional) OneTimePassword(OTP) Secret key attribute on AD. This attribute is used to store and retrieve secret key used for OTP check`,
				},
				resource.Attribute{
					Name:        "passwdchange",
					Description: `(Optional) Allow password change requests.`,
				},
				resource.Attribute{
					Name:        "pushservice",
					Description: `(Optional) Name of the service used to send push notifications`,
				},
				resource.Attribute{
					Name:        "referraldnslookup",
					Description: `(Optional) Specifies the DNS Record lookup Type for the referrals`,
				},
				resource.Attribute{
					Name:        "requireuser",
					Description: `(Optional) Require a successful user search for authentication. CAUTION! This field should be set to NO only if usersearch not required [Both username validation as well as password validation skipped] and (non-LDAP) authentication methods are in use and either bound to a primary list or flagged as secondary.`,
				},
				resource.Attribute{
					Name:        "searchfilter",
					Description: `(Optional) String to be combined with the default LDAP user search string to form the search value. For example, if the search filter "vpnallowed=true" is combined with the LDAP login name "samaccount" and the user-supplied username is "bob", the result is the LDAP search string ""(&(vpnallowed=true)(samaccount=bob)"" (Be sure to enclose the search string in two sets of double quotation marks; both sets are needed.).`,
				},
				resource.Attribute{
					Name:        "sectype",
					Description: `(Optional) Type of security used for communications between the Citrix ADC and the LDAP server. For the PLAINTEXT setting, no encryption is required.`,
				},
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address assigned to the LDAP server.`,
				},
				resource.Attribute{
					Name:        "servername",
					Description: `(Optional) LDAP server name as a FQDN. Mutually exclusive with LDAP IP address.`,
				},
				resource.Attribute{
					Name:        "serverport",
					Description: `(Optional) Port on which the LDAP server accepts connections.`,
				},
				resource.Attribute{
					Name:        "sshpublickey",
					Description: `(Optional) SSH PublicKey is attribute on AD. This attribute is used to retrieve ssh PublicKey for RBA authentication`,
				},
				resource.Attribute{
					Name:        "ssonameattribute",
					Description: `(Optional) LDAP single signon (SSO) attribute. The Citrix ADC uses the SSO name attribute to query external LDAP servers or Active Directories for an alternate username.`,
				},
				resource.Attribute{
					Name:        "subattributename",
					Description: `(Optional) LDAP group sub-attribute name. Used for group extraction from the LDAP server.`,
				},
				resource.Attribute{
					Name:        "svrtype",
					Description: `(Optional) The type of LDAP server.`,
				},
				resource.Attribute{
					Name:        "validateservercert",
					Description: `(Optional) When to validate LDAP server certs ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationldapaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationldapaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationldapaction.tf_authenticationldapaction ldapaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationldapaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationldapaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationldapaction.tf_authenticationldapaction ldapaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationldappolicy",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationldappolicy resource is used to create authentication ldap policy.


`,
			Keywords: []string{
				"authentication",
				"authenticationldappolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the LDAP policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after LDAP policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication policy" or 'my authentication policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Name of the Citrix ADC named rule, or an expression, that the policy uses to determine whether to attempt to authenticate the user with the LDAP server.`,
				},
				resource.Attribute{
					Name:        "reqaction",
					Description: `(Optional) Name of the LDAP action to perform if the policy matches. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationldappolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationldappolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationldappolicy.tf_authenticationldappolicy tf_authenticationldappolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationldappolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationldappolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationldappolicy.tf_authenticationldappolicy tf_authenticationldappolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationlocalpolicy",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationlocalpolicy resource is used to create authentication localpolicy resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationlocalpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the local authentication policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after local policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication policy" or 'my authentication policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Name of the Citrix ADC named rule, or an expression, that the policy uses to perform the authentication. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationlocalpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationlocalpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationlocalpolicy.tf_authenticationlocalpolicy tf_authenticationlocalpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationlocalpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationlocalpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationlocalpolicy.tf_authenticationlocalpolicy tf_authenticationlocalpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationloginschema",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationloginschema resource is used to create authentication loginschema Resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationloginschema",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new login schema. Login schema defines the way login form is rendered. It provides a way to customize the fields that are shown to the user. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after an action is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action').`,
				},
				resource.Attribute{
					Name:        "authenticationschema",
					Description: `(Required) Name of the file for reading authentication schema to be sent for Login Page UI. This file should contain xml definition of elements as per Citrix Forms Authentication Protocol to be able to render login form. If administrator does not want to prompt users for additional credentials but continue with previously obtained credentials, then "noschema" can be given as argument. Please note that this applies only to loginSchemas that are used with user-defined factors, and not the vserver factor.`,
				},
				resource.Attribute{
					Name:        "authenticationstrength",
					Description: `(Optional) Weight of the current authentication`,
				},
				resource.Attribute{
					Name:        "passwdexpression",
					Description: `(Optional) Expression for password extraction during login. This can be any relevant advanced policy expression.`,
				},
				resource.Attribute{
					Name:        "passwordcredentialindex",
					Description: `(Optional) The index at which user entered password should be stored in session.`,
				},
				resource.Attribute{
					Name:        "ssocredentials",
					Description: `(Optional) This option indicates whether current factor credentials are the default SSO (SingleSignOn) credentials.`,
				},
				resource.Attribute{
					Name:        "usercredentialindex",
					Description: `(Optional) The index at which user entered username should be stored in session.`,
				},
				resource.Attribute{
					Name:        "userexpression",
					Description: `(Optional) Expression for username extraction during login. This can be any relevant advanced policy expression. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationloginschema. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationloginschema can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationloginschema.tf_loginschema tf_loginschema ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationloginschema. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationloginschema can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationloginschema.tf_loginschema tf_loginschema ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationloginschemapolicy",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationloginschemapolicy resource is used to create authentication loginschema policy resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationloginschemapolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the LoginSchema policy. This is used for selecting parameters for user logon. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policy" or 'my policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression which is evaluated to choose a profile for authentication. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Name of the profile to apply to requests or connections that match this policy.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of messagelog action to use when a request matches this policy.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the LoginSchema policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my loginschemapolicy policy" or 'my loginschemapolicy policy').`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to perform if the result of policy evaluation is undefined (UNDEF). An UNDEF event indicates an internal error condition. Only the above built-in actions can be used. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationloginschemapolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationloginschemapolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationloginschemapolicy.tf_loginschemapolicy tf_loginschemapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationloginschemapolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationloginschemapolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationloginschemapolicy.tf_loginschemapolicy tf_loginschemapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationnegotiateaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationnegotiateaction resource is used to create authentication negotiate action resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationnegotiateaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the AD KDC server profile (negotiate action). Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after AD KDC server profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication action" or 'my authentication action').`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups.`,
				},
				resource.Attribute{
					Name:        "domain",
					Description: `(Optional) Domain name of the service principal that represnts Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "domainuser",
					Description: `(Optional) User name of the account that is mapped with Citrix ADC principal. This can be given along with domain and password when keytab file is not available. If username is given along with keytab file, then that keytab file will be searched for this user's credentials.`,
				},
				resource.Attribute{
					Name:        "domainuserpasswd",
					Description: `(Optional) Password of the account that is mapped to the Citrix ADC principal.`,
				},
				resource.Attribute{
					Name:        "keytab",
					Description: `(Optional) The path to the keytab file that is used to decrypt kerberos tickets presented to Citrix ADC. If keytab is not available, domain/username/password can be specified in the negotiate action configuration`,
				},
				resource.Attribute{
					Name:        "ntlmpath",
					Description: `(Optional) The path to the site that is enabled for NTLM authentication, including FQDN of the server. This is used when clients fallback to NTLM.`,
				},
				resource.Attribute{
					Name:        "ou",
					Description: `(Optional) Active Directory organizational units (OU) attribute. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationnegotiateaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationnegotiateaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationnegotiateaction.tf_negotiateaction tf_negotiateaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationnegotiateaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationnegotiateaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationnegotiateaction.tf_negotiateaction tf_negotiateaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationnegotiatepolicy",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationnegotiatepolicy resource is used to create authentication negotiatepolicy Resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationnegotiatepolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required ) Name for the negotiate authentication policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after AD KCD (negotiate) policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication policy" or 'my authentication policy').`,
				},
				resource.Attribute{
					Name:        "reqaction",
					Description: `(Required) Name of the negotiate action to perform if the policy matches.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Name of the Citrix ADC named rule, or an expression, that the policy uses to determine whether to attempt to authenticate the user with the AD KCD server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationnegotiatepolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationnegotiatepolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationnegotiatepolicy.tf_negotiatepolicy tf_negotiatepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationnegotiatepolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationnegotiatepolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationnegotiatepolicy.tf_negotiatepolicy tf_negotiatepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationnoauthaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationnoauthaction resource is used to create Authenticationnoauth action resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationnoauthaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new no-authentication action. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after an action is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action').`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the group that is added to user sessions that match current policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationnoauthaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationnoauthaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationnoauthaction.tf_noauthaction tf_noauthaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationnoauthaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationnoauthaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationnoauthaction.tf_noauthaction tf_noauthaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationoauthaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationoauthaction resource is used to create OAuth authentication action resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationoauthaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the OAuth Authentication action. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication action" or 'my authentication action').`,
				},
				resource.Attribute{
					Name:        "tokenendpoint",
					Description: `(Required) URL to which OAuth token will be posted to verify its authenticity. User obtains this token from Authorization server upon successful authentication. Citrix ADC will validate presented token by posting it to the URL configured.`,
				},
				resource.Attribute{
					Name:        "authorizationendpoint",
					Description: `(Required) Authorization endpoint/url to which unauthenticated user will be redirected. Citrix ADC redirects user to this endpoint by adding query parameters including clientid. If this parameter not specified then as default value we take Token Endpoint/URL value. Please note that Authorization Endpoint or Token Endpoint is mandatory for oauthAction`,
				},
				resource.Attribute{
					Name:        "clientid",
					Description: `(Required) Unique identity of the client/user who is getting authenticated. Authorization server infers client configuration using this ID`,
				},
				resource.Attribute{
					Name:        "clientsecret",
					Description: `(Required) Secret string established by user and authorization server`,
				},
				resource.Attribute{
					Name:        "allowedalgorithms",
					Description: `(Optional) Multivalued option to specify allowed token verification algorithms.`,
				},
				resource.Attribute{
					Name:        "attribute1",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute1`,
				},
				resource.Attribute{
					Name:        "attribute10",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute10`,
				},
				resource.Attribute{
					Name:        "attribute11",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute11`,
				},
				resource.Attribute{
					Name:        "attribute12",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute12`,
				},
				resource.Attribute{
					Name:        "attribute13",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute13`,
				},
				resource.Attribute{
					Name:        "attribute14",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute14`,
				},
				resource.Attribute{
					Name:        "attribute15",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute15`,
				},
				resource.Attribute{
					Name:        "attribute16",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute16`,
				},
				resource.Attribute{
					Name:        "attribute2",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute2`,
				},
				resource.Attribute{
					Name:        "attribute3",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute3`,
				},
				resource.Attribute{
					Name:        "attribute4",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute4`,
				},
				resource.Attribute{
					Name:        "attribute5",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute5`,
				},
				resource.Attribute{
					Name:        "attribute6",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute6`,
				},
				resource.Attribute{
					Name:        "attribute7",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute7`,
				},
				resource.Attribute{
					Name:        "attribute8",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute8`,
				},
				resource.Attribute{
					Name:        "attribute9",
					Description: `(Optional) Name of the attribute to be extracted from OAuth Token and to be stored in the attribute9`,
				},
				resource.Attribute{
					Name:        "attributes",
					Description: `(Optional) List of attribute names separated by ',' which needs to be extracted. Note that preceding and trailing spaces will be removed. Attribute name can be 127 bytes and total length of this string should not cross 1023 bytes. These attributes have multi-value support separated by ',' and stored as key-value pair in AAA session`,
				},
				resource.Attribute{
					Name:        "audience",
					Description: `(Optional) Audience for which token sent by Authorization server is applicable. This is typically entity name or url that represents the recipient`,
				},
				resource.Attribute{
					Name:        "authentication",
					Description: `(Optional) If authentication is disabled, password is not sent in the request.`,
				},
				resource.Attribute{
					Name:        "certendpoint",
					Description: `(Optional) URL of the endpoint that contains JWKs (Json Web Key) for JWT (Json Web Token) verification.`,
				},
				resource.Attribute{
					Name:        "certfilepath",
					Description: `(Optional) Path to the file that contains JWKs (Json Web Key) for JWT (Json Web Token) verification.`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups.`,
				},
				resource.Attribute{
					Name:        "granttype",
					Description: `(Optional) Grant type support. value can be code or password`,
				},
				resource.Attribute{
					Name:        "graphendpoint",
					Description: `(Optional) URL of the Graph API service to learn Enterprise Mobility Services (EMS) endpoints.`,
				},
				resource.Attribute{
					Name:        "idtokendecryptendpoint",
					Description: `(Optional) URL to which obtained idtoken will be posted to get a decrypted user identity. Encrypted idtoken will be obtained by posting OAuth token to token endpoint. In order to decrypt idtoken, Citrix ADC posts request to the URL configured`,
				},
				resource.Attribute{
					Name:        "introspecturl",
					Description: `(Optional) URL to which access token would be posted for validation`,
				},
				resource.Attribute{
					Name:        "issuer",
					Description: `(Optional) Identity of the server whose tokens are to be accepted.`,
				},
				resource.Attribute{
					Name:        "metadataurl",
					Description: `(Optional) Well-known configuration endpoint of the Authorization Server. Citrix ADC fetches server details from this endpoint.`,
				},
				resource.Attribute{
					Name:        "oauthtype",
					Description: `(Optional) Type of the OAuth implementation. Default value is generic implementation that is applicable for most deployments.`,
				},
				resource.Attribute{
					Name:        "pkce",
					Description: `(Optional) Option to enable/disable PKCE flow during authentication.`,
				},
				resource.Attribute{
					Name:        "refreshinterval",
					Description: `(Optional) Interval at which services are monitored for necessary configuration.`,
				},
				resource.Attribute{
					Name:        "resourceuri",
					Description: `(Optional) Resource URL for Oauth configuration.`,
				},
				resource.Attribute{
					Name:        "skewtime",
					Description: `(Optional) This option specifies the allowed clock skew in number of minutes that Citrix ADC allows on an incoming token. For example, if skewTime is 10, then token would be valid from (current time - 10) min to (current time + 10) min, ie 20min in all.`,
				},
				resource.Attribute{
					Name:        "tenantid",
					Description: `(Optional) TenantID of the application. This is usually specific to providers such as Microsoft and usually refers to the deployment identifier.`,
				},
				resource.Attribute{
					Name:        "tokenendpointauthmethod",
					Description: `(Optional) Option to select the variant of token authentication method. This method is used while exchanging code with IdP.`,
				},
				resource.Attribute{
					Name:        "userinfourl",
					Description: `(Optional) URL to which OAuth access token will be posted to obtain user information.`,
				},
				resource.Attribute{
					Name:        "usernamefield",
					Description: `(Optional) Attribute in the token from which username should be extracted. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationoauthaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationoauthaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationoauthaction.tf_authenticationoauthaction tf_authenticationoauthaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationoauthaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationoauthaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationoauthaction.tf_authenticationoauthaction tf_authenticationoauthaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationoauthidppolicy",
			Category:         "Authentication",
			ShortDescription: ``,
			Description:      ``,
			Keywords: []string{
				"authentication",
				"authenticationoauthidppolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the OAuth Identity Provider (IdP) authentication policy. This is used for configuring Citrix ADC as OAuth Identity Provider. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policy" or 'my policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression that the policy uses to determine whether to respond to the specified request.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Name of the profile to apply to requests or connections that match this policy.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of messagelog action to use when a request matches this policy.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the OAuth IdentityProvider policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my oauthidppolicy policy" or 'my oauthidppolicy policy').`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to perform if the result of policy evaluation is undefined (UNDEF). An UNDEF event indicates an internal error condition. Only DROP/RESET actions can be used. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationoauthidpprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationoauthidpprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationoauthidppolicy.tf_idppolicy tf_idppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationoauthidpprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationoauthidpprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationoauthidppolicy.tf_idppolicy tf_idppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationoauthidpprofile",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationoauthidpprofile resource is used to create authenticationOAuthIdpProfile resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationoauthidpprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new OAuth Identity Provider (IdP) single sign-on profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after an action is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action').`,
				},
				resource.Attribute{
					Name:        "clientid",
					Description: `(Required) Unique identity of the relying party requesting for authentication.`,
				},
				resource.Attribute{
					Name:        "clientsecret",
					Description: `(Required) Unique secret string to authorize relying party at authorization server.`,
				},
				resource.Attribute{
					Name:        "redirecturl",
					Description: `(Required) URL endpoint on relying party to which the OAuth token is to be sent.`,
				},
				resource.Attribute{
					Name:        "attributes",
					Description: `(Optional) Name-Value pairs of attributes to be inserted in idtoken. Configuration format is name=value_expr@@@name2=value2_expr@@@. '@@@' is used as delimiter between Name-Value pairs. name is a literal string whose value is 127 characters and does not contain '=' character. Value is advanced policy expression terminated by @@@ delimiter. Last value need not contain the delimiter.`,
				},
				resource.Attribute{
					Name:        "audience",
					Description: `(Optional) Audience for which token is being sent by Citrix ADC IdP. This is typically entity name or url that represents the recipient`,
				},
				resource.Attribute{
					Name:        "configservice",
					Description: `(Optional) Name of the entity that is used to obtain configuration for the current authentication request. It is used only in Citrix Cloud.`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This group will be part of AAA session's internal group list. This will be helpful to admin in Nfactor flow to decide right AAA configuration for Relaying Party. In authentication policy AAA.USER.IS_MEMBER_OF("<default_auth_group>") is way to use this feature.`,
				},
				resource.Attribute{
					Name:        "encrypttoken",
					Description: `(Optional) Option to encrypt token when Citrix ADC IDP sends one.`,
				},
				resource.Attribute{
					Name:        "issuer",
					Description: `(Optional) The name to be used in requests sent from Citrix ADC to IdP to uniquely identify Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "refreshinterval",
					Description: `(Optional) Interval at which Relying Party metadata is refreshed.`,
				},
				resource.Attribute{
					Name:        "relyingpartymetadataurl",
					Description: `(Optional) This is the endpoint at which Citrix ADC IdP can get details about Relying Party (RP) being configured. Metadata response should include endpoints for jwks_uri for RP public key(s).`,
				},
				resource.Attribute{
					Name:        "sendpassword",
					Description: `(Optional) Option to send encrypted password in idtoken.`,
				},
				resource.Attribute{
					Name:        "signaturealg",
					Description: `(Optional) Algorithm to be used to sign OpenID tokens.`,
				},
				resource.Attribute{
					Name:        "signatureservice",
					Description: `(Optional) Name of the service in cloud used to sign the data. This is applicable only if signature if offloaded to cloud.`,
				},
				resource.Attribute{
					Name:        "skewtime",
					Description: `(Optional) This option specifies the duration for which the token sent by Citrix ADC IdP is valid. For example, if skewTime is 10, then token would be valid from (current time - 10) min to (current time + 10) min, ie 20min in all. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationoauthidpprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationoauthidpprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationoauthidpprofile.tf_idpprofile tf_idpprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationoauthidpprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationoauthidpprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationoauthidpprofile.tf_idpprofile tf_idpprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationpolicy",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationpolicy resource is used to create Authentication Policy.


`,
			Keywords: []string{
				"authentication",
				"authenticationpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the advance AUTHENTICATION policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after AUTHENTICATION policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication policy" or 'my authentication policy').`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Name of the authentication action to be performed if the policy matches.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Name of the Citrix ADC named rule, or an expression, that the policy uses to determine whether to attempt to authenticate the user with the AUTHENTICATION server.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of messagelog action to use when a request matches this policy.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the authentication policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication policy" or 'my authentication policy').`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to perform if the result of policy evaluation is undefined (UNDEF). An UNDEF event indicates an internal error condition. Only the above built-in actions can be used. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationpolicy.tf_authenticationpolicy tf_authenticationpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationpolicy.tf_authenticationpolicy tf_authenticationpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationpolicylabel",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationpolicylabel resource is used to create authentication policy label.


`,
			Keywords: []string{
				"authentication",
				"authenticationpolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name for the new authentication policy label. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication policy label" or 'authentication policy label').`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this authentication policy label.`,
				},
				resource.Attribute{
					Name:        "loginschema",
					Description: `(Optional) Login schema associated with authentication policy label. Login schema defines the UI rendering by providing customization option of the fields. If user intervention is not needed for a given factor such as group extraction, a loginSchema whose authentication schema is "noschema" should be used.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) The new name of the auth policy label`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of feature (aaatm or rba) against which to match the policies bound to this policy label. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A authenticationpolicylabel can be imported using its labelname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationpolicylabel.tf_authenticationpolicylabel tf_authenticationpolicylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A authenticationpolicylabel can be imported using its labelname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationpolicylabel.tf_authenticationpolicylabel tf_authenticationpolicylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationpolicylabel_authenticationpolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationpolicylabel_authenticationpolicy_binding resource is used to bind authenticationpolicylabel to authenticationpolicy.


`,
			Keywords: []string{
				"authentication",
				"authenticationpolicylabel",
				"authenticationpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name of the authentication policy label to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the authentication policy to bind to the policy label.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) On success invoke label. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationpolicylabel_authenticationpolicy_binding. It is the concatenation of the ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A authenticationpolicylabel_authenticationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationpolicylabel_authenticationpolicy_binding.tf_bind tf_authenticationpolicylabel,tf_authenticationpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationpolicylabel_authenticationpolicy_binding. It is the concatenation of the ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A authenticationpolicylabel_authenticationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationpolicylabel_authenticationpolicy_binding.tf_bind tf_authenticationpolicylabel,tf_authenticationpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationpushservice",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationpushservice resource is used to create authentication pushservice resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationpushservice",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the push service. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Cannot be changed after the profile is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my push service" or 'my push service').`,
				},
				resource.Attribute{
					Name:        "clientid",
					Description: `(Optional) Unique identity for communicating with Citrix Push server in cloud.`,
				},
				resource.Attribute{
					Name:        "clientsecret",
					Description: `(Optional) Unique secret for communicating with Citrix Push server in cloud.`,
				},
				resource.Attribute{
					Name:        "customerid",
					Description: `(Optional) Customer id/name of the account in cloud that is used to create clientid/secret pair.`,
				},
				resource.Attribute{
					Name:        "refreshinterval",
					Description: `(Optional) Interval at which certificates or idtoken is refreshed. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationpushservice. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationpushservice can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationpushservice.tf_pushservice tf_pushservice ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationpushservice. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationpushservice can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationpushservice.tf_pushservice tf_pushservice ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationradiusaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationradiusaction resource is used to create authentication radiusaction resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationradiusaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the RADIUS action. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the RADIUS action is added.`,
				},
				resource.Attribute{
					Name:        "radkey",
					Description: `(Required) Key shared between the RADIUS server and the Citrix ADC. Required to allow the Citrix ADC to communicate with the RADIUS server.`,
				},
				resource.Attribute{
					Name:        "accounting",
					Description: `(Optional) Whether the RADIUS server is currently accepting accounting messages.`,
				},
				resource.Attribute{
					Name:        "authentication",
					Description: `(Optional) Configure the RADIUS server state to accept or refuse authentication messages.`,
				},
				resource.Attribute{
					Name:        "authservretry",
					Description: `(Optional) Number of retry by the Citrix ADC before getting response from the RADIUS server.`,
				},
				resource.Attribute{
					Name:        "authtimeout",
					Description: `(Optional) Number of seconds the Citrix ADC waits for a response from the RADIUS server.`,
				},
				resource.Attribute{
					Name:        "callingstationid",
					Description: `(Optional) Send Calling-Station-ID of the client to the RADIUS server. IP Address of the client is sent as its Calling-Station-ID.`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups.`,
				},
				resource.Attribute{
					Name:        "ipattributetype",
					Description: `(Optional) Remote IP address attribute type in a RADIUS response.`,
				},
				resource.Attribute{
					Name:        "ipvendorid",
					Description: `(Optional) Vendor ID of the intranet IP attribute in the RADIUS response. NOTE: A value of 0 indicates that the attribute is not vendor encoded.`,
				},
				resource.Attribute{
					Name:        "passencoding",
					Description: `(Optional) Encoding type for passwords in RADIUS packets that the Citrix ADC sends to the RADIUS server.`,
				},
				resource.Attribute{
					Name:        "pwdattributetype",
					Description: `(Optional) Vendor-specific password attribute type in a RADIUS response.`,
				},
				resource.Attribute{
					Name:        "pwdvendorid",
					Description: `(Optional) Vendor ID of the attribute, in the RADIUS response, used to extract the user password.`,
				},
				resource.Attribute{
					Name:        "radattributetype",
					Description: `(Optional) RADIUS attribute type, used for RADIUS group extraction.`,
				},
				resource.Attribute{
					Name:        "radgroupseparator",
					Description: `(Optional) RADIUS group separator string The group separator delimits group names within a RADIUS attribute for RADIUS group extraction.`,
				},
				resource.Attribute{
					Name:        "radgroupsprefix",
					Description: `(Optional) RADIUS groups prefix string. This groups prefix precedes the group names within a RADIUS attribute for RADIUS group extraction.`,
				},
				resource.Attribute{
					Name:        "radnasid",
					Description: `(Optional) If configured, this string is sent to the RADIUS server as the Network Access Server ID (NASID).`,
				},
				resource.Attribute{
					Name:        "radnasip",
					Description: `(Optional) If enabled, the Citrix ADC IP address (NSIP) is sent to the RADIUS server as the Network Access Server IP (NASIP) address. The RADIUS protocol defines the meaning and use of the NASIP address.`,
				},
				resource.Attribute{
					Name:        "radvendorid",
					Description: `(Optional) RADIUS vendor ID attribute, used for RADIUS group extraction.`,
				},
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address assigned to the RADIUS server.`,
				},
				resource.Attribute{
					Name:        "servername",
					Description: `(Optional) RADIUS server name as a FQDN. Mutually exclusive with RADIUS IP address.`,
				},
				resource.Attribute{
					Name:        "serverport",
					Description: `(Optional) Port number on which the RADIUS server listens for connections.`,
				},
				resource.Attribute{
					Name:        "tunnelendpointclientip",
					Description: `(Optional) Send Tunnel Endpoint Client IP address to the RADIUS server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationradiusaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationradiusaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationradiusaction.tf_radiusaction tf_radiusaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationradiusaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationradiusaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationradiusaction.tf_radiusaction tf_radiusaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationradiuspolicy",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationradiuspolicy resource is used to create authentication radiuspolicy resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationradiuspolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the RADIUS authentication policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after RADIUS policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication policy" or 'my authentication policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Name of the Citrix ADC named rule, or an expression, that the policy uses to determine whether to attempt to authenticate the user with the RADIUS server.`,
				},
				resource.Attribute{
					Name:        "reqaction",
					Description: `(Optional) Name of the RADIUS action to perform if the policy matches. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationradiuspolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A <authenticationradiuspolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationradiuspolicy.tf_radiuspolicy tf_radiuspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationradiuspolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A <authenticationradiuspolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationradiuspolicy.tf_radiuspolicy tf_radiuspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationsamlaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationsamlaction resource is used to create authenticationsamlaction resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationsamlaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the SAML server profile (action). Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after SAML profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication action" or 'my authentication action').`,
				},
				resource.Attribute{
					Name:        "artifactresolutionserviceurl",
					Description: `(Optional) URL of the Artifact Resolution Service on IdP to which Citrix ADC will post artifact to get actual SAML token.`,
				},
				resource.Attribute{
					Name:        "attribute1",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute1. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute10",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute10. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute11",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute11. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute12",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute12. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute13",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute13. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute14",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute14. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute15",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute15. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute16",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute16. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute2",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute2. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute3",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute3. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute4",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute4. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute5",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute5. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute6",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute6. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute7",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute7. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute8",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute8. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attribute9",
					Description: `(Optional) Name of the attribute in SAML Assertion whose value needs to be extracted and stored as attribute9. Maximum length of the extracted attribute is 239 bytes.`,
				},
				resource.Attribute{
					Name:        "attributeconsumingserviceindex",
					Description: `(Optional) Index/ID of the attribute specification at Identity Provider (IdP). IdP will locate attributes requested by SP using this index and send those attributes in Assertion`,
				},
				resource.Attribute{
					Name:        "attributes",
					Description: `(Optional) List of attribute names separated by ',' which needs to be extracted. Note that preceeding and trailing spaces will be removed. Attribute name can be 127 bytes and total length of this string should not cross 2047 bytes. These attributes have multi-value support separated by ',' and stored as key-value pair in AAA session`,
				},
				resource.Attribute{
					Name:        "audience",
					Description: `(Optional) Audience for which assertion sent by IdP is applicable. This is typically entity name or url that represents ServiceProvider`,
				},
				resource.Attribute{
					Name:        "authnctxclassref",
					Description: `(Optional) This element specifies the authentication class types that are requested from IdP (IdentityProvider). InternetProtocol: This is applicable when a principal is authenticated through the use of a provided IP address. InternetProtocolPassword: This is applicable when a principal is authenticated through the use of a provided IP address, in addition to a username/password. Kerberos: This is applicable when the principal has authenticated using a password to a local authentication authority, in order to acquire a Kerberos ticket. MobileOneFactorUnregistered: This indicates authentication of the mobile device without requiring explicit end-user interaction. MobileTwoFactorUnregistered: This indicates two-factor based authentication during mobile customer registration process, such as secure device and user PIN. MobileOneFactorContract: Reflects mobile contract customer registration procedures and a single factor authentication. MobileTwoFactorContract: Reflects mobile contract customer registration procedures and a two-factor based authentication. Password: This class is applicable when a principal authenticates using password over unprotected http session. PasswordProtectedTransport: This class is applicable when a principal authenticates to an authentication authority through the presentation of a password over a protected session. PreviousSession: This class is applicable when a principal had authenticated to an authentication authority at some point in the past using any authentication context. X509: This indicates that the principal authenticated by means of a digital signature where the key was validated as part of an X.509 Public Key Infrastructure. PGP: This indicates that the principal authenticated by means of a digital signature where the key was validated as part of a PGP Public Key Infrastructure. SPKI: This indicates that the principal authenticated by means of a digital signature where the key was validated via an SPKI Infrastructure. XMLDSig: This indicates that the principal authenticated by means of a digital signature according to the processing rules specified in the XML Digital Signature specification. Smartcard: This indicates that the principal has authenticated using smartcard. SmartcardPKI: This class is applicable when a principal authenticates to an authentication authority through a two-factor authentication mechanism using a smartcard with enclosed private key and a PIN. SoftwarePKI: This class is applicable when a principal uses an X.509 certificate stored in software to authenticate to the authentication authority. Telephony: This class is used to indicate that the principal authenticated via the provision of a fixed-line telephone number, transported via a telephony protocol such as ADSL. NomadTelephony: Indicates that the principal is "roaming" and authenticates via the means of the line number, a user suffix, and a password element. PersonalTelephony: This class is used to indicate that the principal authenticated via the provision of a fixed-line telephone. AuthenticatedTelephony: Indicates that the principal authenticated via the means of the line number, a user suffix, and a password element. SecureRemotePassword: This class is applicable when the authentication was performed by means of Secure Remote Password. TLSClient: This class indicates that the principal authenticated by means of a client certificate, secured with the SSL/TLS transport. TimeSyncToken: This is applicable when a principal authenticates through a time synchronization token. Unspecified: This indicates that the authentication was performed by unspecified means. Windows: This indicates that Windows integrated authentication is utilized for authentication.`,
				},
				resource.Attribute{
					Name:        "customauthnctxclassref",
					Description: `(Optional) This element specifies the custom authentication class reference to be sent as a part of the Authentication Request that is sent by the SP to SAML IDP. The input string must be the body of the authentication class being requested. Input format: Alphanumeric string or URL specifying the body of the Request.If more than one string has to be provided, then the same can be done by specifying the classes as a string of comma separated values. Example input: set authentication samlaction samlact1 -customAuthnCtxClassRef http://www.class1.com/LoA1,http://www.class2.com/LoA2`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups.`,
				},
				resource.Attribute{
					Name:        "digestmethod",
					Description: `(Optional) Algorithm to be used to compute/verify digest for SAML transactions`,
				},
				resource.Attribute{
					Name:        "enforceusername",
					Description: `(Optional) Option to choose whether the username that is extracted from SAML assertion can be edited in login page while doing second factor`,
				},
				resource.Attribute{
					Name:        "forceauthn",
					Description: `(Optional) Option that forces authentication at the Identity Provider (IdP) that receives Citrix ADC's request`,
				},
				resource.Attribute{
					Name:        "groupnamefield",
					Description: `(Optional) Name of the tag in assertion that contains user groups.`,
				},
				resource.Attribute{
					Name:        "logoutbinding",
					Description: `(Optional) This element specifies the transport mechanism of saml logout messages.`,
				},
				resource.Attribute{
					Name:        "logouturl",
					Description: `(Optional) SingleLogout URL on IdP to which logoutRequest will be sent on Citrix ADC session cleanup.`,
				},
				resource.Attribute{
					Name:        "metadatarefreshinterval",
					Description: `(Optional) Interval in minutes for fetching metadata from specified metadata URL`,
				},
				resource.Attribute{
					Name:        "metadataurl",
					Description: `(Optional) This URL is used for obtaining saml metadata. Note that it fills samlIdPCertName and samlredirectUrl fields so those fields should not be updated when metadataUrl present`,
				},
				resource.Attribute{
					Name:        "relaystaterule",
					Description: `(Optional) Boolean expression that will be evaluated to validate the SAML Response. Examples: set authentication samlaction <actionname> -relaystateRule 'AAA.LOGIN.RELAYSTATE.EQ("https://fqdn.com/")' set authentication samlaction <actionname> -relaystateRule 'AAA.LOGIN.RELAYSTATE.CONTAINS("https://fqdn.com/")' set authentication samlaction <actionname> -relaystateRule 'AAA.LOGIN.RELAYSTATE.CONTAINS_ANY("patset_name")' set authentication samlAction samlsp -relaystateRule 'AAA.LOGIN.RELAYSTATE.REGEX_MATCH(re#http://<regex>.com/#)'.`,
				},
				resource.Attribute{
					Name:        "requestedauthncontext",
					Description: `(Optional) This element specifies the authentication context requirements of authentication statements returned in the response.`,
				},
				resource.Attribute{
					Name:        "samlacsindex",
					Description: `(Optional) Index/ID of the metadata entry corresponding to this configuration.`,
				},
				resource.Attribute{
					Name:        "samlbinding",
					Description: `(Optional) This element specifies the transport mechanism of saml messages.`,
				},
				resource.Attribute{
					Name:        "samlidpcertname",
					Description: `(Optional) Name of the SSL certificate used to verify responses from SAML Identity Provider (IdP). Note that if metadateURL is present then this filed should be empty.`,
				},
				resource.Attribute{
					Name:        "samlissuername",
					Description: `(Optional) The name to be used in requests sent from Citrix ADC to IdP to uniquely identify Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "samlredirecturl",
					Description: `(Optional) URL to which users are redirected for authentication. Note that if metadateURL is present then this filed should be empty`,
				},
				resource.Attribute{
					Name:        "samlrejectunsignedassertion",
					Description: `(Optional) Reject unsigned SAML assertions. ON option results in rejection of Assertion that is received without signature. STRICT option ensures that both Response and Assertion are signed. OFF allows unsigned Assertions.`,
				},
				resource.Attribute{
					Name:        "samlsigningcertname",
					Description: `(Optional) Name of the SSL certificate to sign requests from ServiceProvider (SP) to Identity Provider (IdP).`,
				},
				resource.Attribute{
					Name:        "samltwofactor",
					Description: `(Optional) Option to enable second factor after SAML`,
				},
				resource.Attribute{
					Name:        "samluserfield",
					Description: `(Optional) SAML user ID, as given in the SAML assertion.`,
				},
				resource.Attribute{
					Name:        "sendthumbprint",
					Description: `(Optional) Option to send thumbprint instead of x509 certificate in SAML request`,
				},
				resource.Attribute{
					Name:        "signaturealg",
					Description: `(Optional) Algorithm to be used to sign/verify SAML transactions`,
				},
				resource.Attribute{
					Name:        "skewtime",
					Description: `(Optional) This option specifies the allowed clock skew in number of minutes that Citrix ADC ServiceProvider allows on an incoming assertion. For example, if skewTime is 10, then assertion would be valid from (current time - 10) min to (current time + 10) min, ie 20min in all.`,
				},
				resource.Attribute{
					Name:        "storesamlresponse",
					Description: `(Optional) Option to store entire SAML Response through the life of user session. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationsamlaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationsamlaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationsamlaction.tf_samlaction tf_samlaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationsamlaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationsamlaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationsamlaction.tf_samlaction tf_samlaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationsamlidppolicy",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationsamlidppolicyresource is used to create authentication samlidppolicy resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationsamlidppolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the SAML Identity Provider (IdP) authentication policy. This is used for configuring Citrix ADC as SAML Identity Provider. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policy" or 'my policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression which is evaluated to choose a profile for authentication. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Name of the profile to apply to requests or connections that match this policy.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of messagelog action to use when a request matches this policy.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the SAML IdentityProvider policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my samlidppolicy policy" or 'my samlidppolicy policy').`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to perform if the result of policy evaluation is undefined (UNDEF). An UNDEF event indicates an internal error condition. Only the above built-in actions can be used. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationsamlidppolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationsamlidppolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationsamlidppolicy.tf_samlidppolicy tf_samlidppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationsamlidppolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationsamlidppolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationsamlidppolicy.tf_samlidppolicy tf_samlidppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationsamlidpprofile",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationsamlidpprofile resource is used to create authentication samlidpprofile resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationsamlidpprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new saml single sign-on profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after an action is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action').`,
				},
				resource.Attribute{
					Name:        "acsurlrule",
					Description: `(Optional) Expression that will be evaluated to allow Assertion Consumer Service URI coming in the SAML Request`,
				},
				resource.Attribute{
					Name:        "assertionconsumerserviceurl",
					Description: `(Optional) URL to which the assertion is to be sent.`,
				},
				resource.Attribute{
					Name:        "attribute1",
					Description: `(Optional) Name of attribute1 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute10",
					Description: `(Optional) Name of attribute10 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute10expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute10's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute10format",
					Description: `(Optional) Format of Attribute10 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute10friendlyname",
					Description: `(Optional) User-Friendly Name of attribute10 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute11",
					Description: `(Optional) Name of attribute11 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute11expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute11's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute11format",
					Description: `(Optional) Format of Attribute11 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute11friendlyname",
					Description: `(Optional) User-Friendly Name of attribute11 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute12",
					Description: `(Optional) Name of attribute12 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute12expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute12's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute12format",
					Description: `(Optional) Format of Attribute12 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute12friendlyname",
					Description: `(Optional) User-Friendly Name of attribute12 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute13",
					Description: `(Optional) Name of attribute13 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute13expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute13's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute13format",
					Description: `(Optional) Format of Attribute13 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute13friendlyname",
					Description: `(Optional) User-Friendly Name of attribute13 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute14",
					Description: `(Optional) Name of attribute14 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute14expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute14's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute14format",
					Description: `(Optional) Format of Attribute14 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute14friendlyname",
					Description: `(Optional) User-Friendly Name of attribute14 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute15",
					Description: `(Optional) Name of attribute15 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute15expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute15's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute15format",
					Description: `(Optional) Format of Attribute15 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute15friendlyname",
					Description: `(Optional) User-Friendly Name of attribute15 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute16",
					Description: `(Optional) Name of attribute16 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute16expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute16's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute16format",
					Description: `(Optional) Format of Attribute16 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute16friendlyname",
					Description: `(Optional) User-Friendly Name of attribute16 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute1expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute1's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute1format",
					Description: `(Optional) Format of Attribute1 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute1friendlyname",
					Description: `(Optional) User-Friendly Name of attribute1 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute2",
					Description: `(Optional) Name of attribute2 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute2expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute2's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute2format",
					Description: `(Optional) Format of Attribute2 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute2friendlyname",
					Description: `(Optional) User-Friendly Name of attribute2 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute3",
					Description: `(Optional) Name of attribute3 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute3expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute3's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute3format",
					Description: `(Optional) Format of Attribute3 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute3friendlyname",
					Description: `(Optional) User-Friendly Name of attribute3 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute4",
					Description: `(Optional) Name of attribute4 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute4expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute4's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute4format",
					Description: `(Optional) Format of Attribute4 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute4friendlyname",
					Description: `(Optional) User-Friendly Name of attribute4 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute5",
					Description: `(Optional) Name of attribute5 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute5expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute5's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute5format",
					Description: `(Optional) Format of Attribute5 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute5friendlyname",
					Description: `(Optional) User-Friendly Name of attribute5 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute6",
					Description: `(Optional) Name of attribute6 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute6expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute6's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute6format",
					Description: `(Optional) Format of Attribute6 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute6friendlyname",
					Description: `(Optional) User-Friendly Name of attribute6 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute7",
					Description: `(Optional) Name of attribute7 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute7expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute7's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute7format",
					Description: `(Optional) Format of Attribute7 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute7friendlyname",
					Description: `(Optional) User-Friendly Name of attribute7 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute8",
					Description: `(Optional) Name of attribute8 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute8expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute8's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute8format",
					Description: `(Optional) Format of Attribute8 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute8friendlyname",
					Description: `(Optional) User-Friendly Name of attribute8 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute9",
					Description: `(Optional) Name of attribute9 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute9expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute9's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute9format",
					Description: `(Optional) Format of Attribute9 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute9friendlyname",
					Description: `(Optional) User-Friendly Name of attribute9 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "audience",
					Description: `(Optional) Audience for which assertion sent by IdP is applicable. This is typically entity name or url that represents ServiceProvider`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This group will be part of AAA session's internal group list. This will be helpful to admin in Nfactor flow to decide right AAA configuration for Relaying Party. In authentication policy AAA.USER.IS_MEMBER_OF("<default_auth_group>") is way to use this feature.`,
				},
				resource.Attribute{
					Name:        "digestmethod",
					Description: `(Optional) Algorithm to be used to compute/verify digest for SAML transactions`,
				},
				resource.Attribute{
					Name:        "encryptassertion",
					Description: `(Optional) Option to encrypt assertion when Citrix ADC IDP sends one.`,
				},
				resource.Attribute{
					Name:        "encryptionalgorithm",
					Description: `(Optional) Algorithm to be used to encrypt SAML assertion`,
				},
				resource.Attribute{
					Name:        "keytransportalg",
					Description: `(Optional) Key transport algorithm to be used in encryption of SAML assertion`,
				},
				resource.Attribute{
					Name:        "logoutbinding",
					Description: `(Optional) This element specifies the transport mechanism of saml logout messages.`,
				},
				resource.Attribute{
					Name:        "metadatarefreshinterval",
					Description: `(Optional) Interval in minute for fetching metadata from specified metadata URL`,
				},
				resource.Attribute{
					Name:        "metadataurl",
					Description: `(Optional) This URL is used for obtaining samlidp metadata`,
				},
				resource.Attribute{
					Name:        "nameidexpr",
					Description: `(Optional) Expression that will be evaluated to obtain NameIdentifier to be sent in assertion`,
				},
				resource.Attribute{
					Name:        "nameidformat",
					Description: `(Optional) Format of Name Identifier sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "rejectunsignedrequests",
					Description: `(Optional) Option to Reject unsigned SAML Requests. ON option denies any authentication requests that arrive without signature.`,
				},
				resource.Attribute{
					Name:        "samlbinding",
					Description: `(Optional) This element specifies the transport mechanism of saml messages.`,
				},
				resource.Attribute{
					Name:        "samlidpcertname",
					Description: `(Optional) Name of the certificate used to sign the SAMLResposne that is sent to Relying Party or Service Provider after successful authentication`,
				},
				resource.Attribute{
					Name:        "samlissuername",
					Description: `(Optional) The name to be used in requests sent from Citrix ADC to IdP to uniquely identify Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "samlsigningcertversion",
					Description: `(Optional) version of the certificate in signature service used to sign the SAMLResposne that is sent to Relying Party or Service Provider after successful authentication`,
				},
				resource.Attribute{
					Name:        "samlspcertname",
					Description: `(Optional) Name of the SSL certificate of SAML Relying Party. This certificate is used to verify signature of the incoming AuthnRequest from a Relying Party or Service Provider`,
				},
				resource.Attribute{
					Name:        "samlspcertversion",
					Description: `(Optional) version of the certificate in signature service used to verify the signature of the incoming AuthnRequest from a Relying Party or Service Provider`,
				},
				resource.Attribute{
					Name:        "sendpassword",
					Description: `(Optional) Option to send password in assertion.`,
				},
				resource.Attribute{
					Name:        "serviceproviderid",
					Description: `(Optional) Unique identifier of the Service Provider that sends SAML Request. Citrix ADC will ensure that the Issuer of the SAML Request matches this URI. In case of SP initiated sign-in scenarios, this value must be same as samlIssuerName configured in samlAction.`,
				},
				resource.Attribute{
					Name:        "signassertion",
					Description: `(Optional) Option to sign portions of assertion when Citrix ADC IDP sends one. Based on the user selection, either Assertion or Response or Both or none can be signed`,
				},
				resource.Attribute{
					Name:        "signaturealg",
					Description: `(Optional) Algorithm to be used to sign/verify SAML transactions`,
				},
				resource.Attribute{
					Name:        "signatureservice",
					Description: `(Optional) Name of the service in cloud used to sign the data`,
				},
				resource.Attribute{
					Name:        "skewtime",
					Description: `(Optional) This option specifies the number of minutes on either side of current time that the assertion would be valid. For example, if skewTime is 10, then assertion would be valid from (current time - 10) min to (current time + 10) min, ie 20min in all.`,
				},
				resource.Attribute{
					Name:        "splogouturl",
					Description: `(Optional) Endpoint on the ServiceProvider (SP) to which logout messages are to be sent ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationsamlidpprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationsamlidpprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationsamlidpprofile.tf_samlidpprofile tf_samlidpprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationsamlidpprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationsamlidpprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationsamlidpprofile.tf_samlidpprofile tf_samlidpprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationsamlpolicy",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationsamlpolicy resource is used to create authentication samlprofile.


`,
			Keywords: []string{
				"authentication",
				"authenticationsamlpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the SAML policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after SAML policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication policy" or 'my authentication policy').`,
				},
				resource.Attribute{
					Name:        "reqaction",
					Description: `(Required) Name of the SAML authentication action to be performed if the policy matches.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Name of the Citrix ADC named rule, or an expression, that the policy uses to determine whether to attempt to authenticate the user with the SAML server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationsamlpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationsamlpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationsamlpolicy.tf_samlpolicy tf_samlpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationsamlpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationsamlpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationsamlpolicy.tf_samlpolicy tf_samlpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationstorefrontauthaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationstorefrontauthaction resource is used to create authentication storefrontauthaction resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationstorefrontauthaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the Storefront Authentication action. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication action" or 'my authentication action').`,
				},
				resource.Attribute{
					Name:        "serverurl",
					Description: `(Required) URL of the Storefront server. This is the FQDN of the Storefront server. example: https://storefront.com/. Authentication endpoints are learned dynamically by Gateway.`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups.`,
				},
				resource.Attribute{
					Name:        "domain",
					Description: `(Optional) Domain of the server that is used for authentication. If users enter name without domain, this parameter is added to username in the authentication request to server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationstorefrontauthaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationstorefrontauthaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationstorefrontauthaction.tf_storefront tf_storefront ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationstorefrontauthaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationstorefrontauthaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationstorefrontauthaction.tf_storefront tf_storefront ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationtacacsaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationtacacsaction resource is used to create authentication tacacsaction resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationtacacsaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the TACACS+ profile (action). Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after TACACS profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication action" or 'y authentication action').`,
				},
				resource.Attribute{
					Name:        "accounting",
					Description: `(Optional) Whether the TACACS+ server is currently accepting accounting messages.`,
				},
				resource.Attribute{
					Name:        "attribute1",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '1' (where '1' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute10",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '10' (where '10' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute11",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '11' (where '11' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute12",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '12' (where '12' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute13",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '13' (where '13' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute14",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '14' (where '14' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute15",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '15' (where '15' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute16",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '16' (where '16' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute2",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '2' (where '2' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute3",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '3' (where '3' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute4",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '4' (where '4' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute5",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '5' (where '5' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute6",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '6' (where '6' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute7",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '7' (where '7' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute8",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '8' (where '8' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attribute9",
					Description: `(Optional) Name of the custom attribute to be extracted from server and stored at index '9' (where '9' changes for each attribute)`,
				},
				resource.Attribute{
					Name:        "attributes",
					Description: `(Optional) List of attribute names separated by ',' which needs to be fetched from tacacs server. Note that preceeding and trailing spaces will be removed. Attribute name can be 127 bytes and total length of this string should not cross 2047 bytes. These attributes have multi-value support separated by ',' and stored as key-value pair in AAA session`,
				},
				resource.Attribute{
					Name:        "auditfailedcmds",
					Description: `(Optional) The state of the TACACS+ server that will receive accounting messages.`,
				},
				resource.Attribute{
					Name:        "authorization",
					Description: `(Optional) Use streaming authorization on the TACACS+ server.`,
				},
				resource.Attribute{
					Name:        "authtimeout",
					Description: `(Optional) Number of seconds the Citrix ADC waits for a response from the TACACS+ server.`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups.`,
				},
				resource.Attribute{
					Name:        "groupattrname",
					Description: `(Optional) TACACS+ group attribute name. Used for group extraction on the TACACS+ server.`,
				},
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address assigned to the TACACS+ server.`,
				},
				resource.Attribute{
					Name:        "serverport",
					Description: `(Optional) Port number on which the TACACS+ server listens for connections.`,
				},
				resource.Attribute{
					Name:        "tacacssecret",
					Description: `(Optional) Key shared between the TACACS+ server and the Citrix ADC. Required for allowing the Citrix ADC to communicate with the TACACS+ server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationtacacsaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationtacacsaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationtacacsaction.tf_tacacsaction tf_tacacsaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationtacacsaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationtacacsaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationtacacsaction.tf_tacacsaction tf_tacacsaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationtacacspolicy",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationtacacspolicy resource is used to create authentication tacacspolicy resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationtacacspolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the TACACS+ policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after TACACS+ policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication policy" or 'my authentication policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Name of the Citrix ADC named rule, or an expression, that the policy uses to determine whether to attempt to authenticate the user with the TACACS+ server.`,
				},
				resource.Attribute{
					Name:        "reqaction",
					Description: `(Optional) Name of the TACACS+ action to perform if the policy matches. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationtacacspolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationtacacspolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationtacacspolicy.tf_tacacspolicy tf_tacacspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationtacacspolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationtacacspolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationtacacspolicy.tf_tacacspolicy tf_tacacspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver resource is used to create authentication virtual server resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new authentication virtual server. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Can be changed after the authentication virtual server is added by using the rename authentication vserver command. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication policy" or 'my authentication policy').`,
				},
				resource.Attribute{
					Name:        "appflowlog",
					Description: `(Optional) Log AppFlow flow information.`,
				},
				resource.Attribute{
					Name:        "authentication",
					Description: `(Optional) Require users to be authenticated before sending traffic through this virtual server.`,
				},
				resource.Attribute{
					Name:        "authenticationdomain",
					Description: `(Optional) The domain of the authentication cookie set by Authentication vserver`,
				},
				resource.Attribute{
					Name:        "certkeynames",
					Description: `(Optional) Name of the certificate key that was bound to the corresponding SSL virtual server as the Certificate Authority for the device certificate`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments associated with this virtual server.`,
				},
				resource.Attribute{
					Name:        "failedlogintimeout",
					Description: `(Optional) Number of minutes an account will be locked if user exceeds maximum permissible attempts`,
				},
				resource.Attribute{
					Name:        "ipv46",
					Description: `(Optional) IP address of the authentication virtual server, if a single IP address is assigned to the virtual server.`,
				},
				resource.Attribute{
					Name:        "maxloginattempts",
					Description: `(Optional) Maximum Number of login Attempts`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name of the authentication virtual server. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, 'my authentication policy' or "my authentication policy").`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) TCP port on which the virtual server accepts connections.`,
				},
				resource.Attribute{
					Name:        "range",
					Description: `(Optional) If you are creating a series of virtual servers with a range of IP addresses assigned to them, the length of the range. The new range of authentication virtual servers will have IP addresses consecutively numbered, starting with the primary address specified with the IP Address parameter.`,
				},
				resource.Attribute{
					Name:        "samesite",
					Description: `(Optional) SameSite attribute value for Cookies generated in AAATM context. This attribute value will be appended only for the cookies which are specified in the builtin patset ns_cookies_samesite`,
				},
				resource.Attribute{
					Name:        "servicetype",
					Description: `(Optional) Protocol type of the authentication virtual server. Always SSL.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Initial state of the new virtual server.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationvserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver.tf_authenticationvserver tf_authenticationvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationvserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver.tf_authenticationvserver tf_authenticationvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_auditnslogpolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_auditnslogpolicy_binding resource is used to bind authenticationvserver with auditnslogpolicy resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"auditnslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_auditnslogpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_auditnslogpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_auditnslogpolicy_binding.tf_bind tf_authenticationvserver,tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_auditnslogpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_auditnslogpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_auditnslogpolicy_binding.tf_bind tf_authenticationvserver,tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_auditsyslogpolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_auditsyslogpolicy_binding resource is used to bind auditsyslogpolicy to authenticationvserver resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"auditsyslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_auditsyslogpolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_auditsyslogpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_auditsyslogpolicy_binding.tf_bind tf_authenticationvserver,tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_auditsyslogpolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_auditsyslogpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_auditsyslogpolicy_binding.tf_bind tf_authenticationvserver,tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_authenticationcertpolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_authenticationcertpolicy_binding resource is used to bind authenticationcertpolicy to the authenticationvserver resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"authenticationcertpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy to the secondary chain. Provides for multifactor authentication in which a user must authenticate via both a primary authentication method and, afterward, via a secondary authentication method. Because user groups are aggregated across authentication systems, usernames must be the same on all authentication servers. Passwords can be different. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationcertpolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationcertpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationcertpolicy_binding.tf_bind tf_authenticationvserver,tf_certpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationcertpolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationcertpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationcertpolicy_binding.tf_bind tf_authenticationvserver,tf_certpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_authenticationldappolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_authenticationldappolicy_binding resource is used to bind authenticationvserver to the authenticationldappolicy resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"authenticationldappolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Bind the Authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy to the secondary chain. Provides for multifactor authentication in which a user must authenticate via both a primary authentication method and, afterward, via a secondary authentication method. Because user groups are aggregated across authentication systems, usernames must be the same on all authentication servers. Passwords can be different. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationldappolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationldappolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationldappolicy_binding.tf_bind tf_authenticationvserver,tf_authenticationldappolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationldappolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationldappolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationldappolicy_binding.tf_bind tf_authenticationvserver,tf_authenticationldappolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_authenticationlocalpolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_authenticationlocalpolicy_binding resource is used to bind authenticationlocalpolicy to authenticationvserver resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"authenticationlocalpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy to the secondary chain. Provides for multifactor authentication in which a user must authenticate via both a primary authentication method and, afterward, via a secondary authentication method. Because user groups are aggregated across authentication systems, usernames must be the same on all authentication servers. Passwords can be different. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationlocalpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationlocalpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationlocalpolicy_binding.tf_bind tf_authenticationvserver,tf_authenticationlocalpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationlocalpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationlocalpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationlocalpolicy_binding.tf_bind tf_authenticationvserver,tf_authenticationlocalpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_authenticationloginschemapolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_authenticationloginschemapolicy_binding resource is used to bind authenticationloginschemapolicy to authenticationvserver.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"authenticationloginschemapolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationloginschemapolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationloginschemapolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationloginschemapolicy_binding.tf_binding tf_authenticationvserver,tf_loginschemapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationloginschemapolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationloginschemapolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationloginschemapolicy_binding.tf_binding tf_authenticationvserver,tf_loginschemapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_authenticationnegotiatepolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_authenticationnegotiatepolicy_binding resource is used to bind authenticationnegotiatepolicy to authenticationvserver resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"authenticationnegotiatepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy to the secondary chain. Provides for multifactor authentication in which a user must authenticate via both a primary authentication method and, afterward, via a secondary authentication method. Because user groups are aggregated across authentication systems, usernames must be the same on all authentication servers. Passwords can be different. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationnegotiatepolicy_binding. It is concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationnegotiatepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationnegotiatepolicy_binding.tf_binding tf_authenticationvserver,tf_negotiatepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationnegotiatepolicy_binding. It is concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationnegotiatepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationnegotiatepolicy_binding.tf_binding tf_authenticationvserver,tf_negotiatepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_authenticationoauthidppolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_authenticationoauthidppolicy_binding resource is used to bind authenticationoauthidppolicy to authenticationvserver resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"authenticationoauthidppolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) On success invoke label.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationoauthidppolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationoauthidppolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationoauthidppolicy_binding.tf_bind tf_authenticationvserver,tf_idppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationoauthidppolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationoauthidppolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationoauthidppolicy_binding.tf_bind tf_authenticationvserver,tf_idppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_authenticationpolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_authenticationpolicy_binding resource is used to bind authenticationvserver to authenticationpolicy.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"authenticationpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) On success invoke label.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationpolicy_binding.It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A authenticationvserver_authenticationpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationpolicy_binding.tf_bind tf_authenticationvserver,tf_authenticationpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationpolicy_binding.It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A authenticationvserver_authenticationpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationpolicy_binding.tf_bind tf_authenticationvserver,tf_authenticationpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_authenticationradiuspolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_authenticationradiuspolicy_binding resource is used to bind authenticationradiuspolicy to authenticationvserver.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"authenticationradiuspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy to the secondary chain. Provides for multifactor authentication in which a user must authenticate via both a primary authentication method and, afterward, via a secondary authentication method. Because user groups are aggregated across authentication systems, usernames must be the same on all authentication servers. Passwords can be different. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationradiuspolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationradiuspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationradiuspolicy_binding.tf_bind tf_authenticationvserver,tf_radiuspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationradiuspolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationradiuspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationradiuspolicy_binding.tf_bind tf_authenticationvserver,tf_radiuspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_authenticationsamlidppolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_authenticationsamlidppolicy_binding resource is used to bind authenticationsamlidppolicy to authenticationvserver resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"authenticationsamlidppolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) On success invoke label.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationsamlidppolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationsamlidppolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationsamlidppolicy_binding.tf_bind tf_authenticationvserver,tf_samlidppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationsamlidppolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationsamlidppolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationsamlidppolicy_binding.tf_bind tf_authenticationvserver,tf_samlidppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_authenticationsamlpolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_authenticationsamlpolicy_binding resource is used to bind authenticationsamlpolicy to authenticationvserver resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"authenticationsamlpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy to the secondary chain. Provides for multifactor authentication in which a user must authenticate via both a primary authentication method and, afterward, via a secondary authentication method. Because user groups are aggregated across authentication systems, usernames must be the same on all authentication servers. Passwords can be different. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationsamlpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationsamlpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationsamlpolicy_binding.tf_bind tf_authenticationvserver,tf_samlpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationsamlpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationsamlpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationsamlpolicy_binding.tf_bind tf_authenticationvserver,tf_samlpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_authenticationtacacspolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_authenticationtacacspolicy_binding resource is used to bind authenticationtacacspolicy to authenticationvserver resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"authenticationtacacspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy to the secondary chain. Provides for multifactor authentication in which a user must authenticate via both a primary authentication method and, afterward, via a secondary authentication method. Because user groups are aggregated across authentication systems, usernames must be the same on all authentication servers. Passwords can be different. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationtacacspolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationtacacspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationtacacspolicy_binding.tf_bind tf_authenticationvserver,tf_tacacspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationtacacspolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationtacacspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationtacacspolicy_binding.tf_bind tf_authenticationvserver,tf_tacacspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_authenticationwebauthpolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_authenticationwebauthpolicy_binding resource is used to bind authenticationwebauthpolicy to the authenticationvserver resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"authenticationwebauthpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy to the secondary chain. Provides for multifactor authentication in which a user must authenticate via both a primary authentication method and, afterward, via a secondary authentication method. Because user groups are aggregated across authentication systems, usernames must be the same on all authentication servers. Passwords can be different. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationwebauthpolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationwebauthpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationwebauthpolicy_binding.tf_bind tf_authenticationvserver,tf_webauthpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_authenticationwebauthpolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_authenticationwebauthpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_authenticationwebauthpolicy_binding.tf_bind tf_authenticationvserver,tf_webauthpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_cachepolicy_binding",
			Category:         "Vpn",
			ShortDescription: ``,
			Description: `

The authenticationvserver_cachepolicy_binding resource is used to bind cachepolicy to authenticationvserver resource.


`,
			Keywords: []string{
				"vpn",
				"authenticationvserver",
				"cachepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_cachepolicy_binding. It is concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_cachepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_cachepolicy_binding.tf_binding tf_authenticationvserver,tf_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_cachepolicy_binding. It is concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_cachepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_cachepolicy_binding.tf_binding tf_authenticationvserver,tf_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_cspolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_cspolicy_binding resource is used to bind the authenticationvserver to cspolicy resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"cspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_cspolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_cspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_cspolicy_binding.tf_bind tf_authenticationvserver,test_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_cspolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_cspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_cspolicy_binding.tf_bind tf_authenticationvserver,test_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_responderpolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_responderpolicy_binding resource is used to bind responderpolicy with the authenticationvserver.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"responderpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bindpoint to which the policy is bound.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_responderpolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_responderpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_responderpolicy_binding.tf_bind tf_authenticationvserver,tf_responder_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_responderpolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_responderpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_responderpolicy_binding.tf_bind tf_authenticationvserver,tf_responder_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_rewritepolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_rewritepolicy_binding resource is used to bind the rewritepolicy to authenticationvserver resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"rewritepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bindpoint to which the policy is bound.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_rewritepolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_rewritepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_rewritepolicy_binding.tf_bind tf_authenticationvserver,tf_rewrite_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_rewritepolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_rewritepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_rewritepolicy_binding.tf_bind tf_authenticationvserver,tf_rewrite_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_tmsessionpolicy_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_tmsessionpolicy_binding resource is used to bind tmsessionpolicy to authenticationvserver resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"tmsessionpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the authentication vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) Applicable only while binding advance authentication policy as classic authentication policy does not support nFactor`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority, if any, of the vpn vserver policy.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Applicable only while bindind classic authentication policy as advance authentication policy use nFactor ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_tmsessionpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_tmsessionpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_tmsessionpolicy_binding.tf_bind tf_authenticationvserver,tf_tmsesspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_tmsessionpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_tmsessionpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_tmsessionpolicy_binding.tf_bind tf_authenticationvserver,tf_tmsesspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationvserver_vpnportaltheme_binding",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationvserver_vpnportaltheme_binding resource is used to to bind authenticationvserver to vpnportaltheme resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationvserver",
				"vpnportaltheme",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the authentication virtual server to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "portaltheme",
					Description: `(Required) Theme for Authentication virtual server Login portal ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_vpnportaltheme_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `portaltheme` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_vpnportaltheme_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_vpnportaltheme_binding.tf_bind tf_authenticationvserver,tf_vpnportaltheme ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationvserver_vpnportaltheme_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `portaltheme` + "`" + ` attributes seperated by comma. ## Import A authenticationvserver_vpnportaltheme_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationvserver_vpnportaltheme_binding.tf_bind tf_authenticationvserver,tf_vpnportaltheme ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationwebauthaction",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationwebauthaction resource is used to create authentication webauthaction resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationwebauthaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the Web Authentication action. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication action" or 'my authentication action').`,
				},
				resource.Attribute{
					Name:        "scheme",
					Description: `(Required) Type of scheme for the web server.`,
				},
				resource.Attribute{
					Name:        "serverip",
					Description: `(Required) IP address of the web server to be used for authentication.`,
				},
				resource.Attribute{
					Name:        "serverport",
					Description: `(Required) Port on which the web server accepts connections.`,
				},
				resource.Attribute{
					Name:        "successrule",
					Description: `(Required) Expression, that checks to see if authentication is successful.`,
				},
				resource.Attribute{
					Name:        "attribute1",
					Description: `(Optional) Expression that would be evaluated to extract attribute1 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute10",
					Description: `(Optional) Expression that would be evaluated to extract attribute10 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute11",
					Description: `(Optional) Expression that would be evaluated to extract attribute11 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute12",
					Description: `(Optional) Expression that would be evaluated to extract attribute12 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute13",
					Description: `(Optional) Expression that would be evaluated to extract attribute13 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute14",
					Description: `(Optional) Expression that would be evaluated to extract attribute14 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute15",
					Description: `(Optional) Expression that would be evaluated to extract attribute15 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute16",
					Description: `(Optional) Expression that would be evaluated to extract attribute16 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute2",
					Description: `(Optional) Expression that would be evaluated to extract attribute2 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute3",
					Description: `(Optional) Expression that would be evaluated to extract attribute3 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute4",
					Description: `(Optional) Expression that would be evaluated to extract attribute4 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute5",
					Description: `(Optional) Expression that would be evaluated to extract attribute5 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute6",
					Description: `(Optional) Expression that would be evaluated to extract attribute6 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute7",
					Description: `(Optional) Expression that would be evaluated to extract attribute7 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute8",
					Description: `(Optional) Expression that would be evaluated to extract attribute8 from the webauth response`,
				},
				resource.Attribute{
					Name:        "attribute9",
					Description: `(Optional) Expression that would be evaluated to extract attribute9 from the webauth response`,
				},
				resource.Attribute{
					Name:        "defaultauthenticationgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups.`,
				},
				resource.Attribute{
					Name:        "fullreqexpr",
					Description: `(Optional) Exact HTTP request, in the form of an expression, which the Citrix ADC sends to the authentication server. The Citrix ADC does not check the validity of this request. One must manually validate the request. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationwebauthaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationwebauthaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationwebauthaction.tf_webauthaction tf_webauthaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationwebauthaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationwebauthaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationwebauthaction.tf_webauthaction tf_webauthaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authenticationwebauthpolicy",
			Category:         "Authentication",
			ShortDescription: ``,
			Description: `

The authenticationwebauthpolicy resource is used to create authentication webauthpolicy resource.


`,
			Keywords: []string{
				"authentication",
				"authenticationwebauthpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the WebAuth policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after LDAP policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authentication policy" or 'my authentication policy').`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Name of the WebAuth action to perform if the policy matches.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Name of the Citrix ADC named rule, or an expression, that the policy uses to determine whether to attempt to authenticate the user with the Web server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationwebauthpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationwebauthpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationwebauthpolicy.tf_webauthpolicy tf_webauthpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authenticationwebauthpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A authenticationwebauthpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authenticationwebauthpolicy.tf_webauthpolicy tf_webauthpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authorizationpolicy",
			Category:         "Authorization",
			ShortDescription: ``,
			Description: `

The ` + "`" + `authorizationpolicy` + "`" + ` resource is used to create Authorization Policy.

`,
			Keywords: []string{
				"authorization",
				"authorizationpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new authorization policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the authorization policy is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authorization policy" or 'my authorization policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Name of the Citrix ADC named rule, or an expression, that the policy uses to perform the authentication.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Optional) Action to perform if the policy matches: either allow or deny the request. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `authorizationpolicy` + "`" + `. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `authorizationpolicy` + "`" + `. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authorizationpolicylabel",
			Category:         "authorization",
			ShortDescription: ``,
			Description: `

The authorizationpolicylabel resource is used to create authorization policy label.


`,
			Keywords: []string{
				"authorization",
				"authorizationpolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name for the new authorization policy label. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the authorization policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my authorization policy label" or 'authorization policy label').`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) The new name of the auth policy label ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authorizationpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A authorizationpolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authorizationpolicylabel.authorizationpolicylabel trans_http_url ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authorizationpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A authorizationpolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authorizationpolicylabel.authorizationpolicylabel trans_http_url ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_authorizationpolicylabel_authorizationpolicy_binding",
			Category:         "AUTHORIZATION",
			ShortDescription: ``,
			Description: `

The authorizationpolicylabel_authorizationpolicy_binding resource is used to create Authorization policylabel policy binding.


`,
			Keywords: []string{
				"authorization",
				"authorizationpolicylabel",
				"authorizationpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name of the authorization policy label to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the authorization policy to bind to the policy label.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) If the current policy evaluates to TRUE, terminate evaluation of policies bound to the current policy label, and then either forward the request or response to the specified virtual server or evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "invoke_labelname",
					Description: `(Optional) Name of the policy label to invoke if the current policy evaluates to TRUE, the invoke parameter is set, and Label Type is set to Policy Label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of invocation. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authorizationpolicylabel_authorizationpolicy_binding. It has the same value as the ` + "`" + `labelname,policyname` + "`" + ` attribute. ## Import A authorizationpolicylabel_authorizationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authorizationpolicylabel_authorizationpolicy_binding.authorizationpolicylabel_authorizationpolicy_binding trans_http_url,tp-authorize-1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the authorizationpolicylabel_authorizationpolicy_binding. It has the same value as the ` + "`" + `labelname,policyname` + "`" + ` attribute. ## Import A authorizationpolicylabel_authorizationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_authorizationpolicylabel_authorizationpolicy_binding.authorizationpolicylabel_authorizationpolicy_binding trans_http_url,tp-authorize-1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_autoscaleaction",
			Category:         "Autoscale",
			ShortDescription: ``,
			Description: `

The autoscaleaction resource is used to create autoscaleaction.


`,
			Keywords: []string{
				"autoscale",
				"autoscaleaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) ActionScale action name.`,
				},
				resource.Attribute{
					Name:        "parameters",
					Description: `(Required) Parameters to use in the action`,
				},
				resource.Attribute{
					Name:        "profilename",
					Description: `(Required) AutoScale profile name.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) The type of action.`,
				},
				resource.Attribute{
					Name:        "vserver",
					Description: `(Required) Name of the vserver on which autoscale action has to be taken.`,
				},
				resource.Attribute{
					Name:        "quiettime",
					Description: `(Optional) Time in seconds no other policy is evaluated or action is taken`,
				},
				resource.Attribute{
					Name:        "vmdestroygraceperiod",
					Description: `(Optional) Time in minutes a VM is kept in inactive state before destroying ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the autoscaleaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A autoscaleaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_autoscaleaction.tfautoscaleaction my_autoscaleaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the autoscaleaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A autoscaleaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_autoscaleaction.tfautoscaleaction my_autoscaleaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_autoscalepolicy",
			Category:         "Autoscale",
			ShortDescription: ``,
			Description: `

The autoscalepolicy resource is used to create autoscalepolicy.


`,
			Keywords: []string{
				"autoscale",
				"autoscalepolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "action",
					Description: `(Required) The autoscale profile associated with the policy.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Reuqired) The name of the autoscale policy.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) The rule associated with the policy.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comments associated with this autoscale policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) The log action associated with the autoscale policy ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the autoscalepolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A autoscalepolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_autoscalepolicy.tf_autoscalepolicy my_autoscaleprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the autoscalepolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A autoscalepolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_autoscalepolicy.tf_autoscalepolicy my_autoscaleprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_autoscaleprofile",
			Category:         "Autoscale",
			ShortDescription: ``,
			Description: `

The autoscaleprofile resource is used to create autoscaleprofile.


`,
			Keywords: []string{
				"autoscale",
				"autoscaleprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "apikey",
					Description: `(Required) api key for authentication with service`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) AutoScale profile name.`,
				},
				resource.Attribute{
					Name:        "sharedsecret",
					Description: `(Required) shared secret for authentication with service`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) The type of profile.`,
				},
				resource.Attribute{
					Name:        "url",
					Description: `(Required) URL providing the service ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the autoscaleprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A autoscaleprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_autoscaleprofile.tf_autoscaleprofile my_autoscaleprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the autoscaleprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A autoscaleprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_autoscaleprofile.tf_autoscaleprofile my_autoscaleprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botglobal_botpolicy_binding",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botglobal_botpolicy_binding resource is used to bind botpolicy to botglobal.


`,
			Keywords: []string{
				"bot",
				"botglobal",
				"botpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the bot policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) 0`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) If the current policy evaluates to TRUE, terminate evaluation of policies bound to the current policy label, and then forward the request to the specified virtual server.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the policy label to invoke. If the current policy evaluates to TRUE, the invoke parameter is set, and Label Type is policylabel.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of invocation, Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Specifies the bind point whose policies you want to display. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botglobal_botpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A botglobal_botpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botglobal_botpolicy_binding.tf_binding tf_botpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botglobal_botpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A botglobal_botpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botglobal_botpolicy_binding.tf_binding tf_botpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botpolicy",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botpolicy resource is used to create a botpolicy.


`,
			Keywords: []string{
				"bot",
				"botpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the bot policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Can be changed after the bot policy is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my bot policy" or 'my bot policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression that the policy uses to determine whether to apply bot profile on the specified request.`,
				},
				resource.Attribute{
					Name:        "profilename",
					Description: `(Required) Name of the bot profile to apply if the request matches this bot policy.`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to perform if the result of policy evaluation is undefined (UNDEF). An UNDEF event indicates an internal error condition.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any type of information about this bot policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of the messagelog action to use for requests that match this policy.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the bot policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my bot policy" or 'my bot policy'). ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the Botpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A botpolicy resource can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botpolicy.tf_botpolicy tf_botpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the Botpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A botpolicy resource can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botpolicy.tf_botpolicy tf_botpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botpolicylabel",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botpolicylabel resource is used to create a user-defined bot policy label, to which you can bind policies.


`,
			Keywords: []string{
				"bot",
				"botpolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name for the bot policy label. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the responder policy label is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my responder policy label" or my responder policy label').`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this bot policy label. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A botpolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botpolicylabel.tf_botpolicylabel tf_botpolicylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A botpolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botpolicylabel.tf_botpolicylabel tf_botpolicylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botpolicylabel_botpolicy_binding",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botpolicylabel_botpolicy_binding resource is used to bind botpolicy to botpolicylabel.


`,
			Keywords: []string{
				"bot",
				"botpolicylabel",
				"botpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name of the bot policy label to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the bot policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) If the current policy evaluates to TRUE, terminate evaluation of policies bound to the current policy label and evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "invoke_labelname",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Specifies the priority of the policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botpolicylabel_botpolicy_binding. It is the concatenation of ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes seperated by comma. ## Import A botpolicylabel_botpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botpolicylabel_botpolicy_binding.tf_binding labelname,policyname ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botpolicylabel_botpolicy_binding. It is the concatenation of ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes seperated by comma. ## Import A botpolicylabel_botpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botpolicylabel_botpolicy_binding.tf_binding labelname,policyname ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botprofile",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The Botprofile resource is used to create a collection of profile settings to configure bot management on the appliance.


`,
			Keywords: []string{
				"bot",
				"botprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the profile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.), pound (#), space ( ), at (@), equals (=), colon (:), and underscore (_) characters. Cannot be changed after the profile is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my profile" or 'my profile'). Minimum length = 1 Maximum length = 31`,
				},
				resource.Attribute{
					Name:        "signature",
					Description: `(Optional) Name of object containing bot static signature details. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "errorurl",
					Description: `(Optional) URL that Bot protection uses as the Error URL. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "trapurl",
					Description: `(Optional) URL that Bot protection uses as the Trap URL. Minimum length = 1 Maximum length = 127`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments about the purpose of profile, or other useful information about the profile. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "bot_enable_white_list",
					Description: `(Optional) Enable white-list bot detection. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "bot_enable_black_list",
					Description: `(Optional) Enable black-list bot detection. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "bot_enable_rate_limit",
					Description: `(Optional) Enable rate-limit bot detection. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "devicefingerprint",
					Description: `(Optional) Enable device-fingerprint bot detection. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "devicefingerprintaction",
					Description: `(Optional) Action to be taken for device-fingerprint based bot detection. Possible values: [ NONE, LOG, DROP, REDIRECT, RESET, MITIGATION ]`,
				},
				resource.Attribute{
					Name:        "bot_enable_ip_reputation",
					Description: `(Optional) Enable IP-reputation bot detection. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "trap",
					Description: `(Optional) Enable trap bot detection. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "trapaction",
					Description: `(Optional) Action to be taken for bot trap based bot detection. Possible values: [ NONE, LOG, DROP, REDIRECT, RESET ]`,
				},
				resource.Attribute{
					Name:        "signaturenouseragentheaderaction",
					Description: `(Optional) Actions to be taken if no User-Agent header in the request (Applicable if Signature check is enabled). Possible values: [ NONE, LOG, DROP, REDIRECT, RESET ]`,
				},
				resource.Attribute{
					Name:        "signaturemultipleuseragentheaderaction",
					Description: `(Optional) Actions to be taken if multiple User-Agent headers are seen in a request (Applicable if Signature check is enabled). Log action should be combined with other actions. Possible values: [ CHECKLAST, LOG, DROP, REDIRECT, RESET ]`,
				},
				resource.Attribute{
					Name:        "bot_enable_tps",
					Description: `(Optional) Enable TPS. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "devicefingerprintmobile",
					Description: `(Optional) Enabling bot device fingerprint protection for mobile clients. Possible values: [ NONE, Android ]`,
				},
				resource.Attribute{
					Name:        "clientipexpression",
					Description: `(Optional) Expression to get the client IP.`,
				},
				resource.Attribute{
					Name:        "kmjavascriptname",
					Description: `(Optional) Name of the JavaScript file that the Bot Management feature will insert in the response for keyboard-mouse based detection. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my javascript file name" or 'my javascript file name').`,
				},
				resource.Attribute{
					Name:        "kmdetection",
					Description: `(Optional) Enable keyboard-mouse based bot detection. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "kmeventspostbodylimit",
					Description: `(Optional) Size of the KM data send by the browser, needs to be processed on ADC. Minimum value = 1 Maximum value = 204800 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A botprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile.tf_botprofile botprofile_name ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A botprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile.tf_botprofile botprofile_name ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botprofile_blacklist_binding",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botprofile_blacklist_binding resource is used to bind blacklist to botprofile.


`,
			Keywords: []string{
				"bot",
				"botprofile",
				"blacklist",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the profile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.), pound (#), space ( ), at (@), equals (=), colon (:), and underscore (_) characters. Cannot be changed after the profile is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my profile" or 'my profile').`,
				},
				resource.Attribute{
					Name:        "bot_blacklist_value",
					Description: `(Required) Value of the bot black-list entry.`,
				},
				resource.Attribute{
					Name:        "bot_bind_comment",
					Description: `(Optional) Any comments about this binding.`,
				},
				resource.Attribute{
					Name:        "bot_blacklist",
					Description: `(Optional) Blacklist binding. Maximum 32 bindings can be configured per profile for Blacklist detection.`,
				},
				resource.Attribute{
					Name:        "bot_blacklist_action",
					Description: `(Optional) One or more actions to be taken if bot is detected based on this Blacklist binding. Only LOG action can be combined with DROP or RESET action.`,
				},
				resource.Attribute{
					Name:        "bot_blacklist_enabled",
					Description: `(Optional) Enabled or disbaled black-list binding.`,
				},
				resource.Attribute{
					Name:        "bot_blacklist_type",
					Description: `(Optional) Type of the black-list entry.`,
				},
				resource.Attribute{
					Name:        "logmessage",
					Description: `(Optional) Message to be logged for this binding. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_blacklist_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_blacklist_value` + "`" + ` attributes separated by comma. ## Import A botprofile_blacklist_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_blacklist_binding.tf_binding tf_botprofile,1.3.5.7`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_blacklist_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_blacklist_value` + "`" + ` attributes separated by comma. ## Import A botprofile_blacklist_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_blacklist_binding.tf_binding tf_botprofile,1.3.5.7`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botprofile_captcha_binding",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botprofile_captcha_binding resource is used to bind captcha to botprofile resource.


`,
			Keywords: []string{
				"bot",
				"botprofile",
				"captcha",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the profile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.), pound (#), space ( ), at (@), equals (=), colon (:), and underscore (_) characters. Cannot be changed after the profile is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my profile" or 'my profile').`,
				},
				resource.Attribute{
					Name:        "bot_captcha_url",
					Description: `(Required) URL for which the Captcha action, if configured under IP reputation, TPS or device fingerprint, need to be applied.`,
				},
				resource.Attribute{
					Name:        "bot_bind_comment",
					Description: `(Optional) Any comments about this binding.`,
				},
				resource.Attribute{
					Name:        "bot_captcha_action",
					Description: `(Optional) One or more actions to be taken when client fails captcha challenge. Only, log action can be configured with DROP, REDIRECT or RESET action.`,
				},
				resource.Attribute{
					Name:        "bot_captcha_enabled",
					Description: `(Optional) Enable or disable the captcha binding.`,
				},
				resource.Attribute{
					Name:        "captcharesource",
					Description: `(Optional) Captcha action binding. For each URL, only one binding is allowed. To update the values of an existing URL binding, user has to first unbind that binding, and then needs to bind the URL again with new values. Maximum 30 bindings can be configured per profile.`,
				},
				resource.Attribute{
					Name:        "graceperiod",
					Description: `(Optional) Time (in seconds) duration for which no new captcha challenge is sent after current captcha challenge has been answered successfully.`,
				},
				resource.Attribute{
					Name:        "logmessage",
					Description: `(Optional) Message to be logged for this binding.`,
				},
				resource.Attribute{
					Name:        "muteperiod",
					Description: `(Optional) Time (in seconds) duration for which client which failed captcha need to wait until allowed to try again. The requests from this client are silently dropped during the mute period.`,
				},
				resource.Attribute{
					Name:        "requestsizelimit",
					Description: `(Optional) Length of body request (in Bytes) up to (equal or less than) which captcha challenge will be provided to client. Above this length threshold the request will be dropped. This is to avoid DOS and DDOS attacks.`,
				},
				resource.Attribute{
					Name:        "retryattempts",
					Description: `(Optional) Number of times client can retry solving the captcha.`,
				},
				resource.Attribute{
					Name:        "waittime",
					Description: `(Optional) Wait time in seconds for which ADC needs to wait for the Captcha response. This is to avoid DOS attacks. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_captcha_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_captcha_url` + "`" + ` attributes seperated by comma. ## Import A botprofile_captcha_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_captcha_binding.tf_binding tf_botprofile,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_captcha_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_captcha_url` + "`" + ` attributes seperated by comma. ## Import A botprofile_captcha_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_captcha_binding.tf_binding tf_botprofile,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botprofile_ipreputation_binding",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botprofile_ipreputation_binding resource is used to bind ipreputation to botprofile.


`,
			Keywords: []string{
				"bot",
				"botprofile",
				"ipreputation",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the profile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.), pound (#), space ( ), at (@), equals (=), colon (:), and underscore (_) characters. Cannot be changed after the profile is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my profile" or 'my profile').`,
				},
				resource.Attribute{
					Name:        "category",
					Description: `(Required) IP Repuation category. Following IP Reuputation categories are allowed:`,
				},
				resource.Attribute{
					Name:        "bot_bind_comment",
					Description: `(Optional) Any comments about this binding.`,
				},
				resource.Attribute{
					Name:        "bot_iprep_action",
					Description: `(Optional) One or more actions to be taken if bot is detected based on this IP Reputation binding. Only LOG action can be combinded with DROP, RESET, REDIRECT or MITIGATION action.`,
				},
				resource.Attribute{
					Name:        "bot_iprep_enabled",
					Description: `(Optional) Enabled or disabled IP-repuation binding.`,
				},
				resource.Attribute{
					Name:        "bot_ipreputation",
					Description: `(Optional) IP reputation binding. For each category, only one binding is allowed. To update the values of an existing binding, user has to first unbind that binding, and then needs to bind again with the new values.`,
				},
				resource.Attribute{
					Name:        "logmessage",
					Description: `(Optional) Message to be logged for this binding. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_ipreputation_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `category` + "`" + ` attributes separated by comma. ## Import A botprofile_ipreputation_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_ipreputation_binding.tf_binding tf_botprofile,BOTNETS ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_ipreputation_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `category` + "`" + ` attributes separated by comma. ## Import A botprofile_ipreputation_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_ipreputation_binding.tf_binding tf_botprofile,BOTNETS ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botprofile_logexpression_binding",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botprofile_logexpression_binding resource is used to bind logexpression to botprofile resource.


`,
			Keywords: []string{
				"bot",
				"botprofile",
				"logexpression",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the profile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.), pound (#), space ( ), at (@), equals (=), colon (:), and underscore (_) characters. Cannot be changed after the profile is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my profile" or 'my profile').`,
				},
				resource.Attribute{
					Name:        "bot_log_expression_name",
					Description: `(Required) Name of the log expression object.`,
				},
				resource.Attribute{
					Name:        "bot_bind_comment",
					Description: `(Optional) Any comments about this binding.`,
				},
				resource.Attribute{
					Name:        "bot_log_expression_enabled",
					Description: `(Optional) Enable or disable the log expression binding.`,
				},
				resource.Attribute{
					Name:        "bot_log_expression_value",
					Description: `(Optional) Expression whose result to be logged when violation happened on the bot profile.`,
				},
				resource.Attribute{
					Name:        "logexpression",
					Description: `(Optional) Log expression binding.`,
				},
				resource.Attribute{
					Name:        "logmessage",
					Description: `(Optional) Message to be logged for this binding. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_logexpression_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_log_expression_name` + "`" + ` attributes seperated by comma. ## Import A botprofile_logexpression_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_logexpression_binding.tf_binding tf_botprofile,tf_logname ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_logexpression_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_log_expression_name` + "`" + ` attributes seperated by comma. ## Import A botprofile_logexpression_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_logexpression_binding.tf_binding tf_botprofile,tf_logname ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botprofile_ratelimit_binding",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botprofile_ratelimit_binding resource is used to bind ratelimit to botprofile resource.


`,
			Keywords: []string{
				"bot",
				"botprofile",
				"ratelimit",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the profile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.), pound (#), space ( ), at (@), equals (=), colon (:), and underscore (_) characters. Cannot be changed after the profile is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my profile" or 'my profile').`,
				},
				resource.Attribute{
					Name:        "bot_rate_limit_type",
					Description: `(Required) Rate-limiting type Following rate-limiting types are allowed:`,
				},
				resource.Attribute{
					Name:        "bot_bind_comment",
					Description: `(Optional) Any comments about this binding.`,
				},
				resource.Attribute{
					Name:        "bot_rate_limit_action",
					Description: `(Optional) One or more actions to be taken when the current rate becomes more than the configured rate. Only LOG action can be combined with DROP, REDIRECT or RESET action.`,
				},
				resource.Attribute{
					Name:        "bot_rate_limit_enabled",
					Description: `(Optional) Enable or disable rate-limit binding.`,
				},
				resource.Attribute{
					Name:        "bot_rate_limit_url",
					Description: `(Optional) URL for the resource based rate-limiting.`,
				},
				resource.Attribute{
					Name:        "bot_ratelimit",
					Description: `(Optional) Rate-limit binding. Maximum 30 bindings can be configured per profile for rate-limit detection. For SOURCE_IP type, only one binding can be configured, and for URL type, only one binding is allowed per URL, and for SESSION type, only one binding is allowed for a cookie name. To update the values of an existing binding, user has to first unbind that binding, and then needs to bind again with new values.`,
				},
				resource.Attribute{
					Name:        "cookiename",
					Description: `(Optional) Cookie name which is used to identify the session for session rate-limiting.`,
				},
				resource.Attribute{
					Name:        "logmessage",
					Description: `(Optional) Message to be logged for this binding.`,
				},
				resource.Attribute{
					Name:        "rate",
					Description: `(Optional) Maximum number of requests that are allowed in this session in the given period time.`,
				},
				resource.Attribute{
					Name:        "timeslice",
					Description: `(Optional) Time interval during which requests are tracked to check if they cross the given rate. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_ratelimit_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_rate_limit_type` + "`" + ` attributes separated by comma, ## Import A botprofile_ratelimit_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_ratelimit_binding.tf_binding tf_botprofile,SESSION ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_ratelimit_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_rate_limit_type` + "`" + ` attributes separated by comma, ## Import A botprofile_ratelimit_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_ratelimit_binding.tf_binding tf_botprofile,SESSION ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botprofile_tps_binding",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botprofile_tps_binding resource is used to bind tps to botprofile resource.


`,
			Keywords: []string{
				"bot",
				"botprofile",
				"tps",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the profile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.), pound (#), space ( ), at (@), equals (=), colon (:), and underscore (_) characters. Cannot be changed after the profile is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my profile" or 'my profile').`,
				},
				resource.Attribute{
					Name:        "bot_tps_type",
					Description: `(Required) Type of TPS binding.`,
				},
				resource.Attribute{
					Name:        "bot_bind_comment",
					Description: `(Optional) Any comments about this binding.`,
				},
				resource.Attribute{
					Name:        "bot_tps",
					Description: `(Optional) TPS binding. For each type only binding can be configured. To update the values of an existing binding, user has to first unbind that binding, and then needs to bind again with new values.`,
				},
				resource.Attribute{
					Name:        "bot_tps_action",
					Description: `(Optional) One to more actions to be taken if bot is detected based on this TPS binding. Only LOG action can be combined with DROP, RESET, REDIRECT, or MITIGIATION action.`,
				},
				resource.Attribute{
					Name:        "logmessage",
					Description: `(Optional) Message to be logged for this binding.`,
				},
				resource.Attribute{
					Name:        "percentage",
					Description: `(Optional) Maximum percentage increase in the requests from (or to) a IP, Geolocation, URL or Host in 30 minutes interval.`,
				},
				resource.Attribute{
					Name:        "threshold",
					Description: `(Optional) Maximum number of requests that are allowed from (or to) a IP, Geolocation, URL or Host in 1 second time interval. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_tps_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_tps_type` + "`" + ` attributes seperated by comma. ## Import A botprofile_tps_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_tps_binding.tf_binding tf_botprofile,SOURCE_IP ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_tps_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_tps_type` + "`" + ` attributes seperated by comma. ## Import A botprofile_tps_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_tps_binding.tf_binding tf_botprofile,SOURCE_IP ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botprofile_trapinsertionurl_binding",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botprofile_trapinsertionurl_binding resource is used to bind trapinsertionurl to botprofile.


`,
			Keywords: []string{
				"bot",
				"botprofile",
				"trapinsertionurl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the profile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.), pound (#), space ( ), at (@), equals (=), colon (:), and underscore (_) characters. Cannot be changed after the profile is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my profile" or 'my profile').`,
				},
				resource.Attribute{
					Name:        "bot_trap_url",
					Description: `(Required) Request URL regex pattern for which Trap URL is inserted.`,
				},
				resource.Attribute{
					Name:        "bot_bind_comment",
					Description: `(Optional) Any comments about this binding.`,
				},
				resource.Attribute{
					Name:        "bot_trap_url_insertion_enabled",
					Description: `(Optional) Enable or disable the request URL pattern.`,
				},
				resource.Attribute{
					Name:        "logmessage",
					Description: `(Optional) Message to be logged for this binding.`,
				},
				resource.Attribute{
					Name:        "trapinsertionurl",
					Description: `(Optional) Bind the trap URL for the configured request URLs. Maximum 30 bindings can be configured per profile. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_trapinsertionurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_trap_url` + "`" + ` attributes seperated by comma. ## Import A botprofile_trapinsertionurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_trapinsertionurl_binding.tf_binding tf_botprofile,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_trapinsertionurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_trap_url` + "`" + ` attributes seperated by comma. ## Import A botprofile_trapinsertionurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_trapinsertionurl_binding.tf_binding tf_botprofile,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botprofile_whitelist_binding",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botprofile_whitelist_binding resource is used to bind whitelist to botprofile.


`,
			Keywords: []string{
				"bot",
				"botprofile",
				"whitelist",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the profile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.), pound (#), space ( ), at (@), equals (=), colon (:), and underscore (_) characters. Cannot be changed after the profile is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my profile" or 'my profile').`,
				},
				resource.Attribute{
					Name:        "bot_whitelist_value",
					Description: `(Required) Value of bot white-list entry.`,
				},
				resource.Attribute{
					Name:        "bot_bind_comment",
					Description: `(Optional) Any comments about this binding.`,
				},
				resource.Attribute{
					Name:        "bot_whitelist",
					Description: `(Optional) Whitelist binding. Maximum 32 bindings can be configured per profile for Whitelist detection.`,
				},
				resource.Attribute{
					Name:        "bot_whitelist_enabled",
					Description: `(Optional) Enabled or disabled white-list binding.`,
				},
				resource.Attribute{
					Name:        "bot_whitelist_type",
					Description: `(Optional) Type of the white-list entry.`,
				},
				resource.Attribute{
					Name:        "log",
					Description: `(Optional) Enable logging for Whitelist binding.`,
				},
				resource.Attribute{
					Name:        "logmessage",
					Description: `(Optional) Message to be logged for this binding. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_whitelist_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_whitelist_value` + "`" + ` attributes seperated by comma. ## Import A botprofile_whitelist_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_whitelist_binding.tf_binding tf_botprofile,1.2.1.2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botprofile_whitelist_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `bot_whitelist_value` + "`" + ` attributes seperated by comma. ## Import A botprofile_whitelist_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botprofile_whitelist_binding.tf_binding tf_botprofile,1.2.1.2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botsettings",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botsettings  resource is used to create and update the ADC BOT settings.


`,
			Keywords: []string{
				"bot",
				"botsettings",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "defaultprofile",
					Description: `(Optional) Profile to use when a connection does not match any policy. Default setting is " ", which sends unmatched connections back to the Citrix ADC without attempting to filter them further.`,
				},
				resource.Attribute{
					Name:        "javascriptname",
					Description: `(Optional) Name of the JavaScript that the Bot Management feature uses in response. Must begin with a letter or number, and can consist of from 1 to 31 letters, numbers, and the hyphen (-) and underscore (_) symbols. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my cookie name" or 'my cookie name').`,
				},
				resource.Attribute{
					Name:        "sessiontimeout",
					Description: `(Optional) Timeout, in seconds, after which a user session is terminated.`,
				},
				resource.Attribute{
					Name:        "sessioncookiename",
					Description: `(Optional) Name of the SessionCookie that the Bot Management feature uses for tracking. Must begin with a letter or number, and can consist of from 1 to 31 letters, numbers, and the hyphen (-) and underscore (_) symbols. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my cookie name" or 'my cookie name').`,
				},
				resource.Attribute{
					Name:        "dfprequestlimit",
					Description: `(Optional) Number of requests to allow without bot session cookie if device fingerprint is enabled.`,
				},
				resource.Attribute{
					Name:        "signatureautoupdate",
					Description: `(Optional) Flag used to enable/disable bot auto update signatures. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "signatureurl",
					Description: `(Optional) URL to download the bot signature mapping file from server.`,
				},
				resource.Attribute{
					Name:        "proxyserver",
					Description: `(Optional) Proxy Server IP to get updated signatures from AWS.`,
				},
				resource.Attribute{
					Name:        "proxyport",
					Description: `(Optional) Proxy Server Port to get updated signatures from AWS. Range 1-65535`,
				},
				resource.Attribute{
					Name:        "trapurlautogenerate",
					Description: `(Optional) Enable/disable trap URL auto generation. When enabled, trap URL is updated within the configured interval. Default value: OFF Possible values = ON, OFF`,
				},
				resource.Attribute{
					Name:        "trapurlinterval",
					Description: `(Optional)Time in seconds after which trap URL is updated. Default value: 3600 Minimum value = 300 Maximum value = 86400`,
				},
				resource.Attribute{
					Name:        "trapurllength",
					Description: `(Optional) Length of the auto-generated trap URL. Default value: 32 Minimum value = 10 Maximum value = 255 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botsettings.It is a unique string prefixed with "tf-botsettings". ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csaction.tf_csaction tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botsettings.It is a unique string prefixed with "tf-botsettings". ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csaction.tf_csaction tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_botsignature",
			Category:         "Bot",
			ShortDescription: ``,
			Description: `

The botsignature resource is used Configuration for bot signatures resource.


`,
			Keywords: []string{
				"bot",
				"botsignature",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name to assign to the bot signature file object on the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about the signature file object.`,
				},
				resource.Attribute{
					Name:        "overwrite",
					Description: `(Optional) Overwrites the existing file`,
				},
				resource.Attribute{
					Name:        "src",
					Description: `(Optional) Local path to and name of, or URL (protocol, host, path, and file name) for, the file in which to store the imported signature file. NOTE: The import fails if the object to be imported is on an HTTPS server that requires client certificate authentication for access. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botsignature. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A botsignature can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botsignature.tf_botsignature tf_botsignature ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the botsignature. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A botsignature can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_botsignature.tf_botsignature tf_botsignature ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_bridgegroup",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The bridgegroup resource is used to create bridge group resource.


`,
			Keywords: []string{
				"network",
				"bridgegroup",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "bridgegroup_id",
					Description: `(Required) An integer that uniquely identifies the bridge group. Minimum value = 1 Maximum value = 1000`,
				},
				resource.Attribute{
					Name:        "dynamicrouting",
					Description: `(Optional) Enable dynamic routing for this bridgegroup. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ipv6dynamicrouting",
					Description: `(Optional) Enable all IPv6 dynamic routing protocols on all VLANs bound to this bridgegroup. Note: For the ENABLED setting to work, you must configure IPv6 dynamic routing protocols from the VTYSH command line. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the bridgegroup. It has the same value as the ` + "`" + `bridgegroup_id` + "`" + ` attribute. ## Import A bridgegroup can be imported using its bridgegroup_id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_bridgegroup.tf_bridgegroup 2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the bridgegroup. It has the same value as the ` + "`" + `bridgegroup_id` + "`" + ` attribute. ## Import A bridgegroup can be imported using its bridgegroup_id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_bridgegroup.tf_bridgegroup 2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_bridgegroup_nsip6_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The bridgegroup_nsip6_binding resource is used to bind nsip6 to bridgegroup resource.


`,
			Keywords: []string{
				"network",
				"bridgegroup",
				"nsip6",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "bridgegroup_id",
					Description: `(Required) The integer that uniquely identifies the bridge group. Minimum value = 1 Maximum value = 1000`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) The IP address assigned to the bridge group.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for this vlan. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) A subnet mask associated with the network address. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the bridgegroup_nsip6_binding. It is the concatenation of both ` + "`" + `bridgegroup_id` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by comma. ## Import A bridgegroup_nsip6_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_bridgegroup_nsip6_binding.tf_binding 2,2001:db8:100::fb/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the bridgegroup_nsip6_binding. It is the concatenation of both ` + "`" + `bridgegroup_id` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by comma. ## Import A bridgegroup_nsip6_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_bridgegroup_nsip6_binding.tf_binding 2,2001:db8:100::fb/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_bridgegroup_nsip_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The bridgegroup_nsip_binding resource is used to bind nsip to the bridgegroup resource.


`,
			Keywords: []string{
				"network",
				"bridgegroup",
				"nsip",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "bridgegroup_id",
					Description: `(Required) The integer that uniquely identifies the bridge group. Minimum value = 1 Maximum value = 1000`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) The IP address assigned to the bridge group.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) The network mask for the subnet defined for the bridge group.`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for this vlan. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the bridgegroup_nsip_binding. It is the concatenation of ` + "`" + `bridgegroup_id` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by comma. ## Import A bridgegroup_nsip_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_bridgegroup_nsip_binding.tf_binding 2,2.2.2.3 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the bridgegroup_nsip_binding. It is the concatenation of ` + "`" + `bridgegroup_id` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by comma. ## Import A bridgegroup_nsip_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_bridgegroup_nsip_binding.tf_binding 2,2.2.2.3 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_bridgegroup_vlan_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The bridgegroup_vlan_binding resource is used to bind vlan to bridgegroup resource.


`,
			Keywords: []string{
				"network",
				"bridgegroup",
				"vlan",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "bridgegroup_id",
					Description: `(Required) The integer that uniquely identifies the bridge group. Minimum value = 1 Maximum value = 1000`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Required) Names of all member VLANs. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the bridgegroup_vlan_binding.It is the concatenation of ` + "`" + `bridgegroup_id` + "`" + ` and ` + "`" + `vlan` + "`" + ` attributes separated by comma. ## Import A bridgegroup_vlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_bridgegroup_vlan_binding.tf_csaction 2,20 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the bridgegroup_vlan_binding.It is the concatenation of ` + "`" + `bridgegroup_id` + "`" + ` and ` + "`" + `vlan` + "`" + ` attributes separated by comma. ## Import A bridgegroup_vlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_bridgegroup_vlan_binding.tf_csaction 2,20 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_bridgetable",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The bridgetable resource is used to create bridge table entry resource.


`,
			Keywords: []string{
				"network",
				"bridgetable",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "mac",
					Description: `(Required) The MAC address of the target.`,
				},
				resource.Attribute{
					Name:        "vtep",
					Description: `(Required) The IP address of the destination VXLAN tunnel endpoint where the Ethernet MAC ADDRESS resides.`,
				},
				resource.Attribute{
					Name:        "vxlan",
					Description: `(Required) The VXLAN to which this address is associated.`,
				},
				resource.Attribute{
					Name:        "bridgeage",
					Description: `(Optional) Time-out value for the bridge table entries, in seconds. The new value applies only to the entries that are dynamically learned after the new value is set. Previously existing bridge table entries expire after the previously configured time-out value.`,
				},
				resource.Attribute{
					Name:        "devicevlan",
					Description: `(Optional) The vlan on which to send multicast packets when the VXLAN tunnel endpoint is a muticast group address.`,
				},
				resource.Attribute{
					Name:        "ifnum",
					Description: `(Optional) INTERFACE whose entries are to be removed.`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node.`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) VLAN whose entries are to be removed.`,
				},
				resource.Attribute{
					Name:        "vni",
					Description: `(Optional) The VXLAN VNI Network Identifier (or VXLAN Segment ID) to use to connect to the remote VXLAN tunnel endpoint. If omitted the value specified as vxlan will be used. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the bridgetable It is the concatenation of ` + "`" + `mac` + "`" + ` , ` + "`" + `vxlan` + "`" + ` and ` + "`" + `vtep` + "`" + ` attributes separated by comma. ## Import A bridgetable can be imported using its is, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_bridgetable.tf_bridgetable 00:00:00:00:00:01,123,2.34.5.6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the bridgetable It is the concatenation of ` + "`" + `mac` + "`" + ` , ` + "`" + `vxlan` + "`" + ` and ` + "`" + `vtep` + "`" + ` attributes separated by comma. ## Import A bridgetable can be imported using its is, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_bridgetable.tf_bridgetable 00:00:00:00:00:01,123,2.34.5.6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cachecontentgroup",
			Category:         "Integrated Caching",
			ShortDescription: ``,
			Description: `

The cachecontentgroup resource is used to create cachecontentgroup.


`,
			Keywords: []string{
				"integrated",
				"caching",
				"cachecontentgroup",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the content group. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the content group is created.`,
				},
				resource.Attribute{
					Name:        "absexpiry",
					Description: `(Optional) Local time, up to 4 times a day, at which all objects in the content group must expire. CLI Users: For example, to specify that the objects in the content group should expire by 11:00 PM, type the following command: add cache contentgroup <contentgroup name> -absexpiry 23:00 To specify that the objects in the content group should expire at 10:00 AM, 3 PM, 6 PM, and 11:00 PM, type: add cache contentgroup <contentgroup name> -absexpiry 10:00 15:00 18:00 23:00`,
				},
				resource.Attribute{
					Name:        "absexpirygmt",
					Description: `(Optional) Coordinated Universal Time (GMT), up to 4 times a day, when all objects in the content group must expire.`,
				},
				resource.Attribute{
					Name:        "alwaysevalpolicies",
					Description: `(Optional) Force policy evaluation for each response arriving from the origin server. Cannot be set to YES if the Prefetch parameter is also set to YES.`,
				},
				resource.Attribute{
					Name:        "cachecontrol",
					Description: `(Optional) Insert a Cache-Control header into the response.`,
				},
				resource.Attribute{
					Name:        "expireatlastbyte",
					Description: `(Optional) Force expiration of the content immediately after the response is downloaded (upon receipt of the last byte of the response body). Applicable only to positive responses.`,
				},
				resource.Attribute{
					Name:        "flashcache",
					Description: `(Optional) Perform flash cache. Mutually exclusive with Poll Every Time (PET) on the same content group.`,
				},
				resource.Attribute{
					Name:        "heurexpiryparam",
					Description: `(Optional) Heuristic expiry time, in percent of the duration, since the object was last modified.`,
				},
				resource.Attribute{
					Name:        "hitparams",
					Description: `(Optional) Parameters to use for parameterized hit evaluation of an object. Up to 128 parameters can be specified. Mutually exclusive with the Hit Selector parameter.`,
				},
				resource.Attribute{
					Name:        "hitselector",
					Description: `(Optional) Selector for evaluating whether an object gets stored in a particular content group. A selector is an abstraction for a collection of PIXL expressions.`,
				},
				resource.Attribute{
					Name:        "host",
					Description: `(Optional) Flush only objects that belong to the specified host. Do not use except with parameterized invalidation. Also, the Invalidation Restricted to Host parameter for the group must be set to YES.`,
				},
				resource.Attribute{
					Name:        "ignoreparamvaluecase",
					Description: `(Optional) Ignore case when comparing parameter values during parameterized hit evaluation. (Parameter value case is ignored by default during parameterized invalidation.)`,
				},
				resource.Attribute{
					Name:        "ignorereloadreq",
					Description: `(Optional) Ignore any request to reload a cached object from the origin server. To guard against Denial of Service attacks, set this parameter to YES. For RFC-compliant behavior, set it to NO.`,
				},
				resource.Attribute{
					Name:        "ignorereqcachinghdrs",
					Description: `(Optional) Ignore Cache-Control and Pragma headers in the incoming request.`,
				},
				resource.Attribute{
					Name:        "insertage",
					Description: `(Optional) Insert an Age header into the response. An Age header contains information about the age of the object, in seconds, as calculated by the integrated cache.`,
				},
				resource.Attribute{
					Name:        "insertetag",
					Description: `(Optional) Insert an ETag header in the response. With ETag header insertion, the integrated cache does not serve full responses on repeat requests.`,
				},
				resource.Attribute{
					Name:        "insertvia",
					Description: `(Optional) Insert a Via header into the response.`,
				},
				resource.Attribute{
					Name:        "invalparams",
					Description: `(Optional) Parameters for parameterized invalidation of an object. You can specify up to 8 parameters. Mutually exclusive with invalSelector.`,
				},
				resource.Attribute{
					Name:        "invalrestrictedtohost",
					Description: `(Optional) Take the host header into account during parameterized invalidation.`,
				},
				resource.Attribute{
					Name:        "invalselector",
					Description: `(Optional) Selector for invalidating objects in the content group. A selector is an abstraction for a collection of PIXL expressions.`,
				},
				resource.Attribute{
					Name:        "lazydnsresolve",
					Description: `(Optional) Perform DNS resolution for responses only if the destination IP address in the request does not match the destination IP address of the cached response.`,
				},
				resource.Attribute{
					Name:        "matchcookies",
					Description: `(Optional) Evaluate for parameters in the cookie header also.`,
				},
				resource.Attribute{
					Name:        "maxressize",
					Description: `(Optional) Maximum size of a response that can be cached in this content group.`,
				},
				resource.Attribute{
					Name:        "memlimit",
					Description: `(Optional) Maximum amount of memory that the cache can use. The effective limit is based on the available memory of the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "minhits",
					Description: `(Optional) Number of hits that qualifies a response for storage in this content group.`,
				},
				resource.Attribute{
					Name:        "minressize",
					Description: `(Optional) Minimum size of a response that can be cached in this content group. Default minimum response size is 0.`,
				},
				resource.Attribute{
					Name:        "persistha",
					Description: `(Optional) Setting persistHA to YES causes IC to save objects in contentgroup to Secondary node in HA deployment.`,
				},
				resource.Attribute{
					Name:        "pinned",
					Description: `(Optional) Do not flush objects from this content group under memory pressure.`,
				},
				resource.Attribute{
					Name:        "polleverytime",
					Description: `(Optional) Always poll for the objects in this content group. That is, retrieve the objects from the origin server whenever they are requested.`,
				},
				resource.Attribute{
					Name:        "prefetch",
					Description: `(Optional) Attempt to refresh objects that are about to go stale.`,
				},
				resource.Attribute{
					Name:        "prefetchmaxpending",
					Description: `(Optional) Maximum number of outstanding prefetches that can be queued for the content group.`,
				},
				resource.Attribute{
					Name:        "prefetchperiod",
					Description: `(Optional) Time period, in seconds before an object's calculated expiry time, during which to attempt prefetch.`,
				},
				resource.Attribute{
					Name:        "prefetchperiodmillisec",
					Description: `(Optional) Time period, in milliseconds before an object's calculated expiry time, during which to attempt prefetch.`,
				},
				resource.Attribute{
					Name:        "query",
					Description: `(Optional) Query string specifying individual objects to flush from this group by using parameterized invalidation. If this parameter is not set, all objects are flushed from the group.`,
				},
				resource.Attribute{
					Name:        "quickabortsize",
					Description: `(Optional) If the size of an object that is being downloaded is less than or equal to the quick abort value, and a client aborts during the download, the cache stops downloading the response. If the object is larger than the quick abort size, the cache continues to download the response.`,
				},
				resource.Attribute{
					Name:        "relexpiry",
					Description: `(Optional) Relative expiry time, in seconds, after which to expire an object cached in this content group.`,
				},
				resource.Attribute{
					Name:        "relexpirymillisec",
					Description: `(Optional) Relative expiry time, in milliseconds, after which to expire an object cached in this content group.`,
				},
				resource.Attribute{
					Name:        "removecookies",
					Description: `(Optional) Remove cookies from responses.`,
				},
				resource.Attribute{
					Name:        "selectorvalue",
					Description: `(Optional) Value of the selector to be used for flushing objects from the content group. Requires that an invalidation selector be configured for the content group.`,
				},
				resource.Attribute{
					Name:        "tosecondary",
					Description: `(Optional) content group whose objects are to be sent to secondary.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) The type of the content group.`,
				},
				resource.Attribute{
					Name:        "weaknegrelexpiry",
					Description: `(Optional) Relative expiry time, in seconds, for expiring negative responses. This value is used only if the expiry time cannot be determined from any other source. It is applicable only to the following status codes: 307, 403, 404, and 410.`,
				},
				resource.Attribute{
					Name:        "weakposrelexpiry",
					Description: `(Optional) Relative expiry time, in seconds, for expiring positive responses with response codes between 200 and 399. Cannot be used in combination with other Expiry attributes. Similar to -relExpiry but has lower precedence. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cachecontentgroup. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A cachecontentgroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cachecontentgroup.tf_cachecontentgroup my_cachecontentgroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cachecontentgroup. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A cachecontentgroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cachecontentgroup.tf_cachecontentgroup my_cachecontentgroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cacheforwardproxy",
			Category:         "Integrated Caching",
			ShortDescription: ``,
			Description: `

The cacheforwardproxy resource is used to createcacheforwardproxy.


`,
			Keywords: []string{
				"integrated",
				"caching",
				"cacheforwardproxy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) IP address of the Citrix ADC or a cache server for which the cache acts as a proxy. Requests coming to the Citrix ADC with the configured IP address are forwarded to the particular address, without involving the Integrated Cache in any way.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Required) Port on the Citrix ADC or a server for which the cache acts as a proxy ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cacheforwardproxy. It has the same value as the ` + "`" + `ipaddress` + "`" + ` attribute. ## Import A cacheforwardproxy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cacheforwardproxy.tf_cacheforwardproxy 10.222.74.185 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cacheforwardproxy. It has the same value as the ` + "`" + `ipaddress` + "`" + ` attribute. ## Import A cacheforwardproxy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cacheforwardproxy.tf_cacheforwardproxy 10.222.74.185 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cacheglobal_cachepolicy_binding",
			Category:         "Integrated Caching",
			ShortDescription: ``,
			Description: `

The cacheglobal_cachepolicy_binding resource is used to create cacheglobal_cachepolicy_binding.


`,
			Keywords: []string{
				"integrated",
				"caching",
				"cacheglobal",
				"cachepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) Name of the cache policy.`,
				},
				resource.Attribute{
					Name:        "precededefrules",
					Description: `(Optional) Specify whether this policy should be evaluated.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) The bind point to which policy is bound. When you specify the type, detailed information about that bind point appears.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or a user-defined policy label. After the invoked policies are evaluated, the flow returns to the policy with the next priority. Applicable only to default-syntax policies.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to invoke if the current policy rule evaluates to TRUE. (To invoke a label associated with a virtual server, specify the name of the virtual server.)`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cacheglobal_cachepolicy_binding. It has the same value as the ` + "`" + `policy` + "`" + ` attribute. ## Import A cacheglobal_cachepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cacheglobal_cachepolicy_binding.tf_cacheglobal_cachepolicy_binding my_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cacheglobal_cachepolicy_binding. It has the same value as the ` + "`" + `policy` + "`" + ` attribute. ## Import A cacheglobal_cachepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cacheglobal_cachepolicy_binding.tf_cacheglobal_cachepolicy_binding my_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cacheparameter",
			Category:         "Integrated Caching",
			ShortDescription: ``,
			Description: `

The cacheparameter resource is used to update cacheparameter.


`,
			Keywords: []string{
				"integrated",
				"caching",
				"cacheparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "enablebypass",
					Description: `(Optional) Evaluate the request-time policies before attempting hit selection. If set to NO, an incoming request for which a matching object is found in cache storage results in a response regardless of the policy configuration. If the request matches a policy with a NOCACHE action, the request bypasses all cache processing. This parameter does not affect processing of requests that match any invalidation policy.`,
				},
				resource.Attribute{
					Name:        "enablehaobjpersist",
					Description: `(Optional) The HA object persisting parameter. When this value is set to YES, cache objects can be synced to Secondary in a HA deployment. If set to NO, objects will never be synced to Secondary node.`,
				},
				resource.Attribute{
					Name:        "maxpostlen",
					Description: `(Optional) Maximum number of POST body bytes to consider when evaluating parameters for a content group for which you have configured hit parameters and invalidation parameters.`,
				},
				resource.Attribute{
					Name:        "memlimit",
					Description: `(Optional) Amount of memory available for storing the cache objects. In practice, the amount of memory available for caching can be less than half the total memory of the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "prefetchmaxpending",
					Description: `(Optional) Maximum number of outstanding prefetches in the Integrated Cache.`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to take when a policy cannot be evaluated.`,
				},
				resource.Attribute{
					Name:        "verifyusing",
					Description: `(Optional) Criteria for deciding whether a cached object can be served for an incoming HTTP request. Available settings function as follows: HOSTNAME - The URL, host name, and host port values in the incoming HTTP request header must match the cache policy. The IP address and the TCP port of the destination host are not evaluated. Do not use the HOSTNAME setting unless you are certain that no rogue client can access a rogue server through the cache. HOSTNAME_AND_IP - The URL, host name, host port in the incoming HTTP request header, and the IP address and TCP port of the destination server, must match the cache policy. DNS - The URL, host name and host port in the incoming HTTP request, and the TCP port must match the cache policy. The host name is used for DNS lookup of the destination server's IP address, and is compared with the set of addresses returned by the DNS lookup.`,
				},
				resource.Attribute{
					Name:        "via",
					Description: `(Optional) String to include in the Via header. A Via header is inserted into all responses served from a content group if its Insert Via flag is set. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cacheparameter. It is a unique string prefixed with ` + "`" + `tf-cacheparameter-` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cacheparameter. It is a unique string prefixed with ` + "`" + `tf-cacheparameter-` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cachepolicy",
			Category:         "Integrated Caching",
			ShortDescription: ``,
			Description: `

The cachepolicy resource is used to create cachepolicy.


`,
			Keywords: []string{
				"integrated",
				"caching",
				"cachepolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Action to apply to content that matches the policy.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression against which the traffic is evaluated. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name for the policy. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Can be changed after the policy is created.`,
				},
				resource.Attribute{
					Name:        "invalgroups",
					Description: `(Optional) Content group(s) to be invalidated when the INVAL action is applied. Maximum number of content groups that can be specified is 16.`,
				},
				resource.Attribute{
					Name:        "invalobjects",
					Description: `(Optional) Content groups(s) in which the objects will be invalidated if the action is INVAL.`,
				},
				resource.Attribute{
					Name:        "storeingroup",
					Description: `(Optional) Name of the content group in which to store the object when the final result of policy evaluation is CACHE. The content group must exist before being mentioned here. Use the "show cache contentgroup" command to view the list of existing content groups.`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to be performed when the result of rule evaluation is undefined. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cachepolicy. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A cachepolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cachepolicy.tf_cachepolicy my_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cachepolicy. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A cachepolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cachepolicy.tf_cachepolicy my_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cachepolicylabel",
			Category:         "Integrated Caching",
			ShortDescription: ``,
			Description: `

The cachepolicylabel resource is used to create cachepolicylabel.


`,
			Keywords: []string{
				"integrated",
				"caching",
				"cachepolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "evaluates",
					Description: `(Required) When to evaluate policies bound to this label: request-time or response-time.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name for the label. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Can be changed after the label is created. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cachepolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A cachepolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrix_policylabel.tf_policylabel my_cachepolicylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cachepolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A cachepolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrix_policylabel.tf_policylabel my_cachepolicylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cachepolicylabel_cachepolicy_binding",
			Category:         "Integrated Caching",
			ShortDescription: ``,
			Description: `

The cachepolicylabel_cachepolicy_binding resource is used to create cachepolicylabel_cachepolicy_binding.


`,
			Keywords: []string{
				"integrated",
				"caching",
				"cachepolicylabel",
				"cachepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the cache policy to bind to the policy label.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name of the cache policy label to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or a user-defined policy label. After the invoked policies are evaluated, the flow returns to the policy with the next-lower priority.`,
				},
				resource.Attribute{
					Name:        "invoke_labelname",
					Description: `(Optional) Name of the policy label to invoke if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke: an unnamed label associated with a virtual server, or user-defined policy label. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cachepolicylabel_cachepolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A cachepolicylabel_cachepolicy_bindingcan be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cachepolicylabel_cachepolicy_binding.tf_cachepolicylabel_cachepolicy_binding my_cachepolicylabel,my_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cachepolicylabel_cachepolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A cachepolicylabel_cachepolicy_bindingcan be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cachepolicylabel_cachepolicy_binding.tf_cachepolicylabel_cachepolicy_binding my_cachepolicylabel,my_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cacheselector",
			Category:         "Integrated Caching",
			ShortDescription: ``,
			Description: `

The cacheselector resource is used to create a cacheselector.


`,
			Keywords: []string{
				"integrated",
				"caching",
				"cacheselector",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) One or multiple PIXL expressions for evaluating an HTTP request or response.`,
				},
				resource.Attribute{
					Name:        "selectorname",
					Description: `(Required) Name for the selector. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cacheselector. It has the same value as the ` + "`" + `selectorname` + "`" + ` attribute. ## Import A cacheselector can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cacheselector.tf_cacheselector my_cacheselector ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cacheselector. It has the same value as the ` + "`" + `selectorname` + "`" + ` attribute. ## Import A cacheselector can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cacheselector.tf_cacheselector my_cacheselector ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_change_password",
			Category:         "Utility",
			ShortDescription: ``,
			Description: `

This resource is used to change the password of the Citrix ADC. default password reset operation.


`,
			Keywords: []string{
				"utility",
				"change",
				"password",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "username",
					Description: `(Required) User name for the operation.`,
				},
				resource.Attribute{
					Name:        "password",
					Description: `(Required) The default password.`,
				},
				resource.Attribute{
					Name:        "new_password",
					Description: `(Required) The new password`,
				},
				resource.Attribute{
					Name:        "first_time_password_reset",
					Description: `(Required) bool value.The value is ` + "`" + `true` + "`" + ` if the user wants to perform default password reset operation at first login, else ` + "`" + `false` + "`" + ` if the user wants to change the password at any point later. ~> │ Error: [ERROR] nitro-go: Failed to create resource of type login, name=, err=failed: 599 Netscaler specific error ({ "errorcode": 278, "message": "Invalid argument", "severity": "ERROR" }) If the user observe above error than it may be possible that the value of ` + "`" + `first_time_password_reset` + "`" + ` is set to ` + "`" + `true` + "`" + ` by the user but if the user wants to change the password at any point later than it must be set ` + "`" + `false` + "`" + `. So, change the value of ` + "`" + `first_time_password_reset` + "`" + ` to ` + "`" + `false` + "`" + `. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the password_resetter. It is a random string prefixed with "tf-change-password".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the password_resetter. It is a random string prefixed with "tf-change-password".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_channel",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The channel resource is used to create channel.


`,
			Keywords: []string{
				"network",
				"channel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "channel_id",
					Description: `(Required) ID for the LA channel or cluster LA channel or LR channel to be created. Specify an LA channel in LA/x notation, where x can range from 1 to 8 or cluster LA channel in CLA/x notation or Link redundant channel in LR/x notation, where x can range from 1 to 4. Cannot be changed after the LA channel is created.`,
				},
				resource.Attribute{
					Name:        "ifnum",
					Description: `(Optional) Interfaces to be bound to the LA channel of a Citrix ADC or to the LA channel of a cluster configuration. For an LA channel of a Citrix ADC, specify an interface in C/U notation (for example, 1/3). For an LA channel of a cluster configuration, specify an interface in N/C/U notation (for example, 2/1/3). where C can take one of the following values:`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enable or disable the LA channel. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mode",
					Description: `(Optional) The initital mode for the LA channel. Possible values: [ MANUAL, AUTO ]`,
				},
				resource.Attribute{
					Name:        "conndistr",
					Description: `(Optional) The 'connection' distribution mode for the LA channel. Possible values: [ DISABLED, ENABLED ]`,
				},
				resource.Attribute{
					Name:        "macdistr",
					Description: `(Optional) The 'MAC' distribution mode for the LA channel. Possible values: [ SOURCE, DESTINATION, BOTH ]`,
				},
				resource.Attribute{
					Name:        "lamac",
					Description: `(Optional) Specifies a MAC address for the LA channels configured in Citrix ADC virtual appliances (VPX). This MAC address is persistent after each reboot. If you don't specify this parameter, a MAC address is generated randomly for each LA channel. These MAC addresses change after each reboot.`,
				},
				resource.Attribute{
					Name:        "speed",
					Description: `(Optional) Ethernet speed of the channel, in Mbps. If the speed of any bound interface is greater than or equal to the value set for this parameter, the state of the interface is UP. Otherwise, the state is INACTIVE. Bound Interfaces whose state is INACTIVE do not process any traffic. Possible values: [ AUTO, 10, 100, 1000, 10000, 25000, 40000, 50000, 100000 ]`,
				},
				resource.Attribute{
					Name:        "flowctl",
					Description: `(Optional) Specifies the flow control type for this LA channel to manage the flow of frames. Flow control is a function as mentioned in clause 31 of the IEEE 802.3 standard. Flow control allows congested ports to pause traffic from the peer device. Flow control is achieved by sending PAUSE frames. Possible values: [ OFF, RX, TX, RXTX, ON ]`,
				},
				resource.Attribute{
					Name:        "hamonitor",
					Description: `(Optional) In a High Availability (HA) configuration, monitor the LA channel for failure events. Failure of any LA channel that has HA MON enabled triggers HA failover. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "haheartbeat",
					Description: `(Optional) In a High Availability (HA) configuration, configure the LA channel for sending heartbeats. LA channel that has HA Heartbeat disabled should not send the heartbeats. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "tagall",
					Description: `(Optional) Adds a four-byte 802.1q tag to every packet sent on this channel. The ON setting applies tags for all VLANs that are bound to this channel. OFF applies the tag for all VLANs other than the native VLAN. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "trunk",
					Description: `(Optional) This is deprecated by tagall. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "ifalias",
					Description: `(Optional) Alias name for the LA channel. Used only to enhance readability. To perform any operations, you have to specify the LA channel ID. Maximum length = 31`,
				},
				resource.Attribute{
					Name:        "throughput",
					Description: `(Optional) Low threshold value for the throughput of the LA channel, in Mbps. In an high availability (HA) configuration, failover is triggered when the LA channel has HA MON enabled and the throughput is below the specified threshold. Minimum value = 0 Maximum value = 160000`,
				},
				resource.Attribute{
					Name:        "bandwidthhigh",
					Description: `(Optional) High threshold value for the bandwidth usage of the LA channel, in Mbps. The Citrix ADC generates an SNMP trap message when the bandwidth usage of the LA channel is greater than or equal to the specified high threshold value. Minimum value = 0 Maximum value = 160000`,
				},
				resource.Attribute{
					Name:        "bandwidthnormal",
					Description: `(Optional) Normal threshold value for the bandwidth usage of the LA channel, in Mbps. When the bandwidth usage of the LA channel returns to less than or equal to the specified normal threshold after exceeding the high threshold, the Citrix ADC generates an SNMP trap message to indicate that the bandwidth usage has returned to normal. Minimum value = 0 Maximum value = 160000`,
				},
				resource.Attribute{
					Name:        "mtu",
					Description: `(Optional) The Maximum Transmission Unit (MTU) is the largest packet size, measured in bytes excluding 14 bytes ethernet header and 4 bytes CRC, that can be transmitted and received by an interface. The default value of MTU is 1500 on all the interface of Citrix ADC, some Cloud Platforms will restrict Citrix ADC to use the lesser default value. Any MTU value more than 1500 is called Jumbo MTU and will make the interface as jumbo enabled. The Maximum Jumbo MTU in Citrix ADC is 9216, however, some Virtualized / Cloud Platforms will have lesser Maximum Jumbo MTU Value (9000). In the case of Cluster, the Backplane interface requires an MTU value of 78 bytes more than the Max MTU configured on any other Data-Plane Interface. When the Data plane interfaces are all at default 1500 MTU, Cluster Back Plane will be automatically set to 1578 (1500 + 78) MTU. If a Backplane interface is reset to Data Plane Interface, then the 1578 MTU will be automatically reset to the default MTU of 1500(or whatever lesser default value). If any data plane interface of a Cluster is configured with a Jumbo MTU ( > 1500), then all backplane interfaces require to be configured with a minimum MTU of 'Highest Data Plane MTU in the Cluster + 78'. That makes the maximum Jumbo MTU for any Data-Plane Interface in a Cluster System to be '9138 (9216 - 78)., where 9216 is the maximum Jumbo MTU. On certain Virtualized / Cloud Platforms, the maximum possible MTU is restricted to a lesser value, Similar calculation can be applied, Maximum Data Plane MTU in Cluster = (Maximum possible MTU - 78). . Minimum value = 1500 Maximum value = 9216`,
				},
				resource.Attribute{
					Name:        "lrminthroughput",
					Description: `(Optional) Specifies the minimum throughput threshold (in Mbps) to be met by the active subchannel. Setting this parameter automatically divides an LACP channel into logical subchannels, with one subchannel active and the others in standby mode. When the maximum supported throughput of the active channel falls below the lrMinThroughput value, link failover occurs and a standby subchannel becomes active. Minimum value = 0 Maximum value = 80000`,
				},
				resource.Attribute{
					Name:        "linkredundancy",
					Description: `(Optional) Link Redundancy for Cluster LAG. Possible values: [ on, off ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the channel. It has the same value as the ` + "`" + `channel_id` + "`" + ` attribute. ## Import A channel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_channel.tf_channel LA/3 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the channel. It has the same value as the ` + "`" + `channel_id` + "`" + ` attribute. ## Import A channel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_channel.tf_channel LA/3 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cluster",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The resource is used to create and modify Citrix ADC in cluster deployment.

If there is no cluster instantiated the resource will bootstrap
the first node so that the Cluster IP address is reachable
and then add cluster nodes according to the terraform execution plan.

If there already exists a cluster deployment with the Cluster IP address
reachable the resource will add, remove or modify cluster nodes
according to the terraform execution plan.

In both cases the Citrix ADC provider configuration should point to the
Cluster IP address.


`,
			Keywords: []string{
				"cluster",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "clip",
					Description: `(Required) Cluster IP address. It will be added on cluster bootstrap on the first cluster node.`,
				},
				resource.Attribute{
					Name:        "clid",
					Description: `(Required) Unique number that identifies the cluster.`,
				},
				resource.Attribute{
					Name:        "deadinterval",
					Description: `(Optional) Amount of time, in seconds, after which nodes that do not respond to the heartbeats are assumed to be down.If the value is less than 3 sec, set the ` + "`" + `hellointerval` + "`" + ` parameter to 200 msec.`,
				},
				resource.Attribute{
					Name:        "hellointerval",
					Description: `(Optional) Interval, in milliseconds, at which heartbeats are sent to each cluster node to check the health status.Set the value to 200 msec, if the ` + "`" + `deadinterval` + "`" + ` parameter is less than 3 sec.`,
				},
				resource.Attribute{
					Name:        "preemption",
					Description: `(Optional) Preempt a cluster node that is configured as a SPARE if an ACTIVE node becomes available. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "quorumtype",
					Description: `(Optional) Quorum Configuration Choices - "MAJORITY" (recommended) requires majority of nodes to be online for the cluster to be UP. "NONE" relaxes this requirement. Possible values: [ MAJORITY, NONE ]`,
				},
				resource.Attribute{
					Name:        "inc",
					Description: `(Optional) This option is required if the cluster nodes reside on different networks. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "processlocal",
					Description: `(Optional) By turning on this option packets destined to a service in a cluster will not under go any steering. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "retainconnectionsoncluster",
					Description: `(Optional) This option enables you to retain existing connections on a node joining a Cluster system or when a node is being configured for passive timeout. By default, this option is disabled. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "backplanebasedview",
					Description: `(Optional) View based on heartbeat only on bkplane interface. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "nodegroup",
					Description: `(Optional) The node group in a Cluster system used for transition from L2 to L3.`,
				},
				resource.Attribute{
					Name:        "bootstrap_poll_delay",
					Description: `(Optional) Time duration to wait before the first poll for the Cluster IP during first node bootstrap. Defaults to ` + "`" + `60s` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "bootstrap_poll_interval",
					Description: `(Optional) Time duration between subsequent polls for the Cluster IP during first node bootstrap. Defaults to ` + "`" + `60s` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "bootstrap_poll_timeout",
					Description: `(Optional) Time duration that defines http request timeout for each Cluster IP poll during first node bootstrap. Defaults to ` + "`" + `10s` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "bootstrap_total_timeout",
					Description: `(Optional) Time duration that defines the timeout for the whole operation of the first node bootstrap. If the node has not been added when this timeout expires the operation will fail. Defaults to ` + "`" + `10m` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "clip_migration_poll_delay",
					Description: `(Optional) Time duration to wait before the first poll for the Cluster IP during a Cluster IP address migration. Defaults to ` + "`" + `10s` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "clip_migration_poll_interval",
					Description: `(Optional) Time duration between subsequent polls for the Cluster IP during a Cluster IP address migration. Defaults to ` + "`" + `30s` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "clip_migration_poll_timeout",
					Description: `(Optional) Time duration that defines http request timeout for each Cluster IP poll during a Cluster IP address migration. Defaults to ` + "`" + `10s` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "clip_migration_total_timeout",
					Description: `(Optional) Time duration that defines the timeout for the whole operation of Cluster IP address migration. If the node has not been added when this timeout expires the operation will fail. Defaults to ` + "`" + `10m` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "node_add_poll_delay",
					Description: `(Optional) Time duration to wait before the first poll for the Cluster IP during the addition of a node to the cluster. Defaults to ` + "`" + `10s` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "node_add_poll_interval",
					Description: `(Optional) Time duration between subsequent polls for the Cluster IP during the addition of a node to the cluster. Defaults to ` + "`" + `30s` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "node_add_total_timeout",
					Description: `(Optional) Time duration that defines the timeout for the whole operation of the addition of a node to the cluster. If the node has not been added when this timeout expires the operation will fail. Defaults to ` + "`" + `10m` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "clusternode",
					Description: `(Required) Cluster node configuration blocks. Documented below.`,
				},
				resource.Attribute{
					Name:        "clusternodegroup",
					Description: `(Optional) One cluster nodegroup configuration block. Documented below. Cluster node supports the following:`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Required) Unique number that identifies the cluster node.`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) Citrix ADC IP (NSIP) address of the appliance to add to the cluster. Must be an IPv4 address.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Admin state of the cluster node. Possible values: [ ACTIVE, SPARE, PASSIVE ]`,
				},
				resource.Attribute{
					Name:        "backplane",
					Description: `(Optional) Interface through which the node communicates with the other nodes in the cluster. Must be specified in the three-tuple form n/c/u, where n represents the node ID and c/u refers to the interface on the appliance.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Preference for selecting a node as the configuration coordinator. The node with the lowest priority value is selected as the configuration coordinator. When the current configuration coordinator goes down, the node with the next lowest priority is made the new configuration coordinator. When the original node comes back up, it will preempt the new configuration coordinator and take over as the configuration coordinator. -> When priority is not configured for any of the nodes or if multiple nodes have the same priority, the cluster elects one of the nodes as the configuration coordinator.`,
				},
				resource.Attribute{
					Name:        "nodegroup",
					Description: `(Optional) The default node group in a Cluster system.`,
				},
				resource.Attribute{
					Name:        "delay",
					Description: `(Optional) Applicable for Passive node and node becomes passive after this timeout (in minutes).`,
				},
				resource.Attribute{
					Name:        "tunnelmode",
					Description: `(Optional) To set the tunnel mode. Possible values: [ NONE, GRE, UDP ]`,
				},
				resource.Attribute{
					Name:        "clearnodegroupconfig",
					Description: `(Optional) Option to remove nodegroup config. Possible values: [ YES, NO ] -> When a standalone ADC instance joins a cluster the provider will issue a series of NITRO API calls against this particular node. The following arguments apply to the NITRO API client that will be used for this one time operation.`,
				},
				resource.Attribute{
					Name:        "endpoint",
					Description: `(Required) Defines the NITRO API endpoint prefix. Can use either ` + "`" + `http` + "`" + ` or ` + "`" + `https` + "`" + ` protocol.`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Optional) Defines the username that will be used by the NITRO API for authentication. Defaults to the value of the same argument of the provider currently in effect.`,
				},
				resource.Attribute{
					Name:        "password",
					Description: `(Required) Defines the password that will be used by the NITRO API for authentication. Defaults to the value of the same argument of the provider currently in effect.`,
				},
				resource.Attribute{
					Name:        "insecure_skip_verify",
					Description: `(Optional) Boolean variable that defines if an error should be thrown if the target ADC's TLS certificate is not trusted. When ` + "`" + `true` + "`" + ` the error will be ignored. When ` + "`" + `false` + "`" + ` such an error will cause the failure of any provider operation. Defaults to ` + "`" + `false` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "addsnip",
					Description: `(Optional) Boolean variable that determines if a node SNIP should be added to the CLIP before joining the cluster.`,
				},
				resource.Attribute{
					Name:        "snip_ipaddress",
					Description: `(Optional) Node SNIP address to add to the CLIP. Applied only when ` + "`" + `addsnip=true` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "snip_netmask",
					Description: `(Optional) Node SNIP netmask to add to the CLIP. Applied only when ` + "`" + `addsnip=true` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "vtysh_enable",
					Description: `(Optional) Boolean variable that determines if vtysh commands should be applied to the CLIP before node joins the custer.`,
				},
				resource.Attribute{
					Name:        "vtysh",
					Description: `(Optional) Vtysh commands to add to the CLIP before node joins the cluster. Applied only when ` + "`" + `vtysh_enable=true` + "`" + `. Cluster nodegroup supports the following:`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name of the nodegroup. The name uniquely identifies the nodegroup on the cluster.`,
				},
				resource.Attribute{
					Name:        "strict",
					Description: `(Optional) Specifies whether cluster nodes, that are not part of the nodegroup, will be used as backup for the nodegroup. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "sticky",
					Description: `(Optional) Only one node can be bound to nodegroup with this option enabled. It specifies whether to prempt the traffic for the entities bound to nodegroup when owner node goes down and rejoins the cluster. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) State of the nodegroup. All the nodes binding to this nodegroup must have the same state. Possible values: [ ACTIVE, SPARE, PASSIVE ]`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cluster. It has the same value as the ` + "`" + `clid` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cluster. It has the same value as the ` + "`" + `clid` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusterfiles_syncer",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `\_syncer

This resource is used to manually trigger the cluster files synchronization
operation.

It is the equivalent of running
` + "`" + `` + "`" + `` + "`" + `shell
sync cluster files
` + "`" + `` + "`" + `` + "`" + `
on the command prompt of the Cluster IP address.

By its nature this resource does not have a remote state to read or modify.

Any change in the local state will trigger the operation once more.



`,
			Keywords: []string{
				"cluster",
				"clusterfiles",
				"syncer",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "timestamp",
					Description: `(Required) A string representing the current time by convention. Its main purpose is to enable the user to trigger the operation again without having to manually taint the resource.`,
				},
				resource.Attribute{
					Name:        "mode",
					Description: `(Required) A list of values defining which directories and files will be synchronized. Possible values: [ all, bookmarks, ssl, htmlinjection, imports, misc, dns, krb, AAA, app\_catalog, all\_plus\_misc, all\_minus\_misc ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusterfiles\_syncer. It has the same value as the ` + "`" + `timestamp` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusterfiles\_syncer. It has the same value as the ` + "`" + `timestamp` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusterinstance",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusterinstanceresource is used to create clusterinstance.


`,
			Keywords: []string{
				"cluster",
				"clusterinstance",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "clid",
					Description: `(Required) Unique number that identifies the cluster. Minimum value = 1 Maximum value = 16`,
				},
				resource.Attribute{
					Name:        "deadinterval",
					Description: `(Optional) Amount of time, in seconds, after which nodes that do not respond to the heartbeats are assumed to be down.If the value is less than 3 sec, set the helloInterval parameter to 200 msec. Minimum value = 1 Maximum value = 60`,
				},
				resource.Attribute{
					Name:        "hellointerval",
					Description: `(Optional) Interval, in milliseconds, at which heartbeats are sent to each cluster node to check the health status.Set the value to 200 msec, if the deadInterval parameter is less than 3 sec. Minimum value = 200 Maximum value = 1000`,
				},
				resource.Attribute{
					Name:        "preemption",
					Description: `(Optional) Preempt a cluster node that is configured as a SPARE if an ACTIVE node becomes available. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "quorumtype",
					Description: `(Optional) Quorum Configuration Choices - "Majority" (recommended) requires majority of nodes to be online for the cluster to be UP. "None" relaxes this requirement. Possible values: [ MAJORITY, NONE ]`,
				},
				resource.Attribute{
					Name:        "inc",
					Description: `(Optional) This option is required if the cluster nodes reside on different networks. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "processlocal",
					Description: `(Optional) By turning on this option packets destined to a service in a cluster will not under go any steering. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "retainconnectionsoncluster",
					Description: `(Optional) This option enables you to retain existing connections on a node joining a Cluster system or when a node is being configured for passive timeout. By default, this option is disabled. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "backplanebasedview",
					Description: `(Optional) View based on heartbeat only on bkplane interface. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "syncstatusstrictmode",
					Description: `(Optional) strict mode for sync status of cluster. Depending on the the mode if there are any errors while applying config, sync status is displayed accordingly. By default the flag is disabled. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "nodegroup",
					Description: `(Optional) The node group in a Cluster system used for transition from L2 to L3. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusterinstance. It has the same value as the ` + "`" + `clid` + "`" + ` attribute. ## Import A clusterinstance can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusterinstance.tf_clusterinstance tf_csaction 1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusterinstance. It has the same value as the ` + "`" + `clid` + "`" + ` attribute. ## Import A clusterinstance can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusterinstance.tf_clusterinstance tf_csaction 1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternode",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternode resource is used to create clusternode.


`,
			Keywords: []string{
				"cluster",
				"clusternode",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Required) Unique number that identifies the cluster node.`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) Citrix ADC IP (NSIP) address of the appliance to add to the cluster. Must be an IPv4 address.`,
				},
				resource.Attribute{
					Name:        "backplane",
					Description: `(Optional) Interface through which the node communicates with the other nodes in the cluster. Must be specified in the three-tuple form n/c/u, where n represents the node ID and c/u refers to the interface on the appliance.`,
				},
				resource.Attribute{
					Name:        "clearnodegroupconfig",
					Description: `(Optional) Option to remove nodegroup config`,
				},
				resource.Attribute{
					Name:        "delay",
					Description: `(Optional) Applicable for Passive node and node becomes passive after this timeout (in minutes)`,
				},
				resource.Attribute{
					Name:        "nodegroup",
					Description: `(Optional) The default node group in a Cluster system.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Preference for selecting a node as the configuration coordinator. The node with the lowest priority value is selected as the configuration coordinator. When the current configuration coordinator goes down, the node with the next lowest priority is made the new configuration coordinator. When the original node comes back up, it will preempt the new configuration coordinator and take over as the configuration coordinator. Note: When priority is not configured for any of the nodes or if multiple nodes have the same priority, the cluster elects one of the nodes as the configuration coordinator.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Admin state of the cluster node. The available settings function as follows: ACTIVE - The node serves traffic. SPARE - The node does not serve traffic unless an ACTIVE node goes down. PASSIVE - The node does not serve traffic, unless you change its state. PASSIVE state is useful during temporary maintenance activities in which you want the node to take part in the consensus protocol but not to serve traffic.`,
				},
				resource.Attribute{
					Name:        "tunnelmode",
					Description: `(Optional) To set the tunnel mode ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternode. It has the same value as the ` + "`" + `nodeid` + "`" + ` attribute. ## Import A clusternode can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternode.tf_clusternode tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternode. It has the same value as the ` + "`" + `nodeid` + "`" + ` attribute. ## Import A clusternode can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternode.tf_clusternode tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternode_routemonitor_binding",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternode_routemonitor_binding resource is used to create clusternode_routemonitor_binding.


`,
			Keywords: []string{
				"cluster",
				"clusternode",
				"routemonitor",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "routemonitor",
					Description: `(Required) The IP address (IPv4 or IPv6).`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Requied) The netmask.`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Required) A number that uniquely identifies the cluster node. . Minimum value = 0 Maximum value = 31 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternode_routemonitor_binding. It is the concatenation of the ` + "`" + `nodeid` + "`" + ` and ` + "`" + `routemonitor` + "`" + ` attributes separated by a comma. ## Import A routemonitor can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternode_routemonitor_binding.tf_clusternode_routemonitor_binding 1,10.222.74.128 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternode_routemonitor_binding. It is the concatenation of the ` + "`" + `nodeid` + "`" + ` and ` + "`" + `routemonitor` + "`" + ` attributes separated by a comma. ## Import A routemonitor can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternode_routemonitor_binding.tf_clusternode_routemonitor_binding 1,10.222.74.128 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternodegroup",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternodegroup resource is used to create clusternodegroup.


`,
			Keywords: []string{
				"cluster",
				"clusternodegroup",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the nodegroup. The name uniquely identifies the nodegroup on the cluster. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "strict",
					Description: `(Optional) Specifies whether cluster nodes, that are not part of the nodegroup, will be used as backup for the nodegroup.`,
				},
				resource.Attribute{
					Name:        "sticky",
					Description: `(Optional) Only one node can be bound to nodegroup with this option enabled. It specifies whether to prempt the traffic for the entities bound to nodegroup when owner node goes down and rejoins the cluster.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) State of the nodegroup. All the nodes binding to this nodegroup must have the same state. ACTIVE/SPARE/PASSIVE. Possible values: [ ACTIVE, SPARE, PASSIVE ]`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority of Nodegroup. This priority is used for all the nodes bound to the nodegroup for Nodegroup selection. Minimum value = 0 Maximum value = 31 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternodegroup_authenticationvserver_binding",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternodegroup_authenticationvserver_binding resource is used to create clusternodegroup_authenticationvserver_binding.


`,
			Keywords: []string{
				"cluster",
				"clusternodegroup",
				"authenticationvserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vserver",
					Description: `(Required) vserver that need to be bound to this nodegroup.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the nodegroup. The name uniquely identifies the nodegroup on the cluster. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_authenticationvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_authenticationvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_authenticationvserver_binding.tf_clusternodegroup_authenticationvserver_binding my_authentication_group,my_authentication_server ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_authenticationvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_authenticationvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_authenticationvserver_binding.tf_clusternodegroup_authenticationvserver_binding my_authentication_group,my_authentication_server ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternodegroup_clusternode_binding",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternodegroup_clusternode_binding resource is used to create clusternodegroup_clusternode_binding.


`,
			Keywords: []string{
				"cluster",
				"clusternodegroup",
				"clusternode",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "node",
					Description: `(Required) Nodes in the nodegroup. Minimum value = 0 Maximum value = 31`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the nodegroup. The name uniquely identifies the nodegroup on the cluster. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_clusternode_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `node` + "`" + ` attributes seperated by a comma. ## Import A clusternodegroup_clusternode_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_clusternode_binding.tf_clusternodegroup_clusternode_binding my_group,2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_clusternode_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `node` + "`" + ` attributes seperated by a comma. ## Import A clusternodegroup_clusternode_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_clusternode_binding.tf_clusternodegroup_clusternode_binding my_group,2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternodegroup_crvserver_binding",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternodegroup_crvserver_binding resource is used to create clusternodegroup_crvserver_binding.


`,
			Keywords: []string{
				"cluster",
				"clusternodegroup",
				"crvserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vserver",
					Description: `(Required) vserver that need to be bound to this nodegroup.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the nodegroup. The name uniquely identifies the nodegroup on the cluster. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_crvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_crvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_crvserver_binding.tf_clusternodegroup_crvserver_binding my_cr_group,my_crvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_crvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_crvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_crvserver_binding.tf_clusternodegroup_crvserver_binding my_cr_group,my_crvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternodegroup_csvserver_binding",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternodegroup_csvserver_binding resource is used to create clusternodegroup_csvserver_binding.


`,
			Keywords: []string{
				"cluster",
				"clusternodegroup",
				"csvserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vserver",
					Description: `(Required) vserver that need to be bound to this nodegroup.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the nodegroup. The name uniquely identifies the nodegroup on the cluster. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_csvserver_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A clusternodegroup_csvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_csvserver_binding.tf_clusternodegroup_csvserver_binding my_cs_group,my_csvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_csvserver_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A clusternodegroup_csvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_csvserver_binding.tf_clusternodegroup_csvserver_binding my_cs_group,my_csvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternodegroup_gslbsite_binding",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternodegroup_gslbsite_binding resource is used to create clusternodegroup_gslbsite_binding.


`,
			Keywords: []string{
				"cluster",
				"clusternodegroup",
				"gslbsite",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "gslbsite",
					Description: `(Optional) vserver that need to be bound to this nodegroup.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name of the nodegroup. The name uniquely identifies the nodegroup on the cluster. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_gslbsite_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `gslbsite` + "`" + ` attributes. ## Import A clusternodegroup_gslbsite_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_gslbsite_binding.tf_clusternodegroup_gslbsite_binding my_group,my_local_site ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_gslbsite_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `gslbsite` + "`" + ` attributes. ## Import A clusternodegroup_gslbsite_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_gslbsite_binding.tf_clusternodegroup_gslbsite_binding my_group,my_local_site ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternodegroup_gslbvserver_binding",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternodegroup_gslbvserver_binding resource is used to create clusternodegroup_gslbvserver_binding.


`,
			Keywords: []string{
				"cluster",
				"clusternodegroup",
				"gslbvserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vserver",
					Description: `(Required) vserver that need to be bound to this nodegroup.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the nodegroup. The name uniquely identifies the nodegroup on the cluster. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_gslbvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_gslbvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_gslbvserver_binding.tf_clusternodegroup_gslbvserver_binding my_gslb_group,my_gslbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_gslbvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_gslbvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_gslbvserver_binding.tf_clusternodegroup_gslbvserver_binding my_gslb_group,my_gslbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternodegroup_lbvserver_binding",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternodegroup_lbvserver_binding resource is used to create clusternodegroup_lbvserver_binding.


`,
			Keywords: []string{
				"cluster",
				"clusternodegroup",
				"lbvserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vserver",
					Description: `(Required) vserver that need to be bound to this nodegroup.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the nodegroup. The name uniquely identifies the nodegroup on the cluster. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_lbvserver_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_lbvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_lbvserver_binding.tf_clusternodegroup_lbvserver_binding my_test_group,my_lbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_lbvserver_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_lbvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_lbvserver_binding.tf_clusternodegroup_lbvserver_binding my_test_group,my_lbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternodegroup_nslimitidentifier_binding",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternodegroup_nslimitidentifier_binding resource is used to create clusternodegroup_nslimitidentifier_binding.


`,
			Keywords: []string{
				"cluster",
				"clusternodegroup",
				"nslimitidentifier",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "identifiername",
					Description: `(Required) stream identifier and rate limit identifier that need to be bound to this nodegroup.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the nodegroup to which you want to bind a cluster node or an entity. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_nslimitidentifier_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `identifiername` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_nslimitidentifier_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_nslimitidentifier_binding.tf_clusternodegroup_nslimitidentifier_binding my_group,my_nslimitidentifier ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_nslimitidentifier_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `identifiername` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_nslimitidentifier_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_nslimitidentifier_binding.tf_clusternodegroup_nslimitidentifier_binding my_group,my_nslimitidentifier ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternodegroup_service_binding",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternodegroup_service_binding resource is used to create clusternodegroup_service_binding.


`,
			Keywords: []string{
				"cluster",
				"clusternodegroup",
				"service",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "service",
					Description: `(Required) name of the service bound to this nodegroup. The servicetype must be ADNS.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the nodegroup. The name uniquely identifies the nodegroup on the cluster. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_service_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `service` + "`" + ` attributes saparated by a comma. ## Import A clusternodegroup_service_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_service_binding.tf_clusternodegroup_service_binding my_gslb_group,tf_service ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_service_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `service` + "`" + ` attributes saparated by a comma. ## Import A clusternodegroup_service_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_service_binding.tf_clusternodegroup_service_binding my_gslb_group,tf_service ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternodegroup_streamidentifier_binding",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternodegroup_streamidentifier_binding resource is used to create clusternodegroup_streamidentifier_binding.


`,
			Keywords: []string{
				"cluster",
				"clusternodegroup",
				"streamidentifier",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "identifiername",
					Description: `(Required) stream identifier and rate limit identifier that need to be bound to this nodegroup.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the nodegroup to which you want to bind a cluster node or an entity. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_streamidentifier_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `identifiername` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_streamidentifier_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_streamidentifier_binding.tf_clusternodegroup_streamidentifier_binding my_group,my_identifier ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_streamidentifier_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `identifiername` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_streamidentifier_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_streamidentifier_binding.tf_clusternodegroup_streamidentifier_binding my_group,my_identifier ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_clusternodegroup_vpnvserver_binding",
			Category:         "Cluster",
			ShortDescription: ``,
			Description: `

The clusternodegroup_vpnvserver_binding resource is used to create clusternodegroup_vpnvserver_binding.


`,
			Keywords: []string{
				"cluster",
				"clusternodegroup",
				"vpnvserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vserver",
					Description: `(Required) vserver that need to be bound to this nodegroup.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the nodegroup. The name uniquely identifies the nodegroup on the cluster. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_vpnvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_vpnvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_vpnvserver_binding.tf_clusternodegroup_vpnvserver_binding my_vpn_group,my_vpnvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the clusternodegroup_vpnvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A clusternodegroup_vpnvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_clusternodegroup_vpnvserver_binding.tf_clusternodegroup_vpnvserver_binding my_vpn_group,my_vpnvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cmpaction",
			Category:         "Compression",
			ShortDescription: ``,
			Description: `

The cmpaction resource is used to create cmpaction.


`,
			Keywords: []string{
				"compression",
				"cmpaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the compression action. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Can be changed after the action is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my cmp action" or 'my cmp action'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "cmptype",
					Description: `(Required) Type of compression performed by this action. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "addvaryheader",
					Description: `(Optional) Control insertion of the Vary header in HTTP responses compressed by Citrix ADC. Intermediate caches store different versions of the response for different values of the headers present in the Vary response header. Possible values: [ GLOBAL, DISABLED, ENABLED ]`,
				},
				resource.Attribute{
					Name:        "varyheadervalue",
					Description: `(Optional) The value of the HTTP Vary header for compressed responses. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "deltatype",
					Description: `(Optional) The type of delta action (if delta type compression action is defined). Possible values: [ PERURL, PERPOLICY ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cmpaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A cmpaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cmpaction.tf_cmpaction my_cmpaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cmpaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A cmpaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cmpaction.tf_cmpaction my_cmpaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cmpglobal_cmppolicy_binding",
			Category:         "Compression",
			ShortDescription: ``,
			Description: `

The cmpglobal_cmppolicy_binding resource is used to create cmpglobal_cmppolicy_binding.


`,
			Keywords: []string{
				"compression",
				"cmpglobal",
				"cmppolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the globally bound HTTP compression policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Positive integer specifying the priority of the policy. The lower the number, the higher the priority. By default, polices within a label are evaluated in the order of their priority numbers. In the configuration utility, you can click the Priority field and edit the priority level or drag the entry to a new position in the list. If you drag the entry to a new position, the priority level is updated automatically.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) The current state of the policy binding. This attribute is relevant only for CLASSIC policies. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bind point to which the policy is bound. Possible values: [ REQ_OVERRIDE, REQ_DEFAULT, RES_OVERRIDE, RES_DEFAULT, HTTPQUIC_REQ_OVERRIDE, HTTPQUIC_REQ_DEFAULT, HTTPQUIC_RES_OVERRIDE, HTTPQUIC_RES_DEFAULT, NONE ]`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the priority of the next policy, within the policy label, to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or a policy label. After the invoked policies are evaluated, the flow returns to the policy with the next priority. Applicable only for default-syntax policies.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label invocation. This argument is relevant only for advanced (default-syntax) policies. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to invoke if the current policy rule evaluates to TRUE. Applicable only to advanced (default-syntax) policies. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cmpglobal_cmppolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A cmpglobal_cmppolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cmpglobal_cmppolicy_binding.tf_cmpglobal_cmppolicy_binding tf_cmppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cmpglobal_cmppolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A cmpglobal_cmppolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cmpglobal_cmppolicy_binding.tf_cmpglobal_cmppolicy_binding tf_cmppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cmpparameter",
			Category:         "Compression",
			ShortDescription: ``,
			Description: `

The cmpparameter resource is used to update cmpparameter.


`,
			Keywords: []string{
				"compression",
				"cmpparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "cmplevel",
					Description: `(Optional) Specify a compression level. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "quantumsize",
					Description: `(Optional) Minimum quantum of data to be filled before compression begins. Minimum value = 8 Maximum value = 63488`,
				},
				resource.Attribute{
					Name:        "servercmp",
					Description: `(Optional) Allow the server to send compressed data to the Citrix ADC. With the default setting, the Citrix ADC appliance handles all compression. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "heurexpiry",
					Description: `(Optional) Heuristic basefile expiry. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "heurexpirythres",
					Description: `(Optional) Threshold compression ratio for heuristic basefile expiry, multiplied by 100. For example, to set the threshold ratio to 1.25, specify 125. Minimum value = 1 Maximum value = 1000`,
				},
				resource.Attribute{
					Name:        "heurexpiryhistwt",
					Description: `(Optional) For heuristic basefile expiry, weightage to be given to historical delta compression ratio, specified as percentage. For example, to give 25% weightage to historical ratio (and therefore 75% weightage to the ratio for current delta compression transaction), specify 25. Minimum value = 1 Maximum value = 100`,
				},
				resource.Attribute{
					Name:        "minressize",
					Description: `(Optional) Smallest response size, in bytes, to be compressed.`,
				},
				resource.Attribute{
					Name:        "cmpbypasspct",
					Description: `(Optional) Citrix ADC CPU threshold after which compression is not performed. Range: 0 - 100. Minimum value = 0 Maximum value = 100`,
				},
				resource.Attribute{
					Name:        "cmponpush",
					Description: `(Optional) Citrix ADC does not wait for the quantum to be filled before starting to compress data. Upon receipt of a packet with a PUSH flag, the appliance immediately begins compression of the accumulated packets. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "policytype",
					Description: `(Optional) Type of policy. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "addvaryheader",
					Description: `(Optional) Control insertion of the Vary header in HTTP responses compressed by Citrix ADC. Intermediate caches store different versions of the response for different values of the headers present in the Vary response header. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "varyheadervalue",
					Description: `(Optional) The value of the HTTP Vary header for compressed responses. If this argument is not specified, a default value of "Accept-Encoding" will be used. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "externalcache",
					Description: `(Optional) Enable insertion of Cache-Control: private response directive to indicate response message is intended for a single user and must not be cached by a shared or proxy cache. Possible values: [ YES, NO ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cmpparameter. It is a unique string prefixed with ` + "`" + `tf-cmpparameter-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cmpparameter. It is a unique string prefixed with ` + "`" + `tf-cmpparameter-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cmppolicy",
			Category:         "Compression",
			ShortDescription: ``,
			Description: `

The cmppolicy resource is used to create compression policies.


`,
			Keywords: []string{
				"compression",
				"cmppolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name of the HTTP compression policy. Must begin with an ASCII alphabetic or underscore (\_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Can be changed after the policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my cmp policy" or 'my cmp policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Expression that determines which HTTP requests or responses match the compression policy. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "resaction",
					Description: `(Optional) The built-in or user-defined compression action to apply to the response when the policy matches a request or response. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the compression policy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A cmppolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cmppolicy.tf_cmppolicy tf_cmppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the compression policy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A cmppolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cmppolicy.tf_cmppolicy tf_cmppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cmppolicylabel",
			Category:         "Compression",
			ShortDescription: ``,
			Description: `

The cmppolicylabel resource is used to create cmppolicylabel.


`,
			Keywords: []string{
				"compression",
				"cmppolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name of the HTTP compression policy label. Must begin with a letter, number, or the underscore character (_). Additional characters allowed, after the first character, are the hyphen (-), period (.) pound sign (#), space ( ), at sign (@), equals (=), and colon (:). The name must be unique within the list of policy labels for compression policies. Can be renamed after the policy label is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my cmp policylabel" or 'my cmp policylabel'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) Type of packets (request packets or response) against which to match the policies bound to this policy label. Possible values: [ REQ, RES, HTTPQUIC_REQ, HTTPQUIC_RES ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cmppolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A cmppolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cmppolicylabel.tf_cmppolicylabel my_cmppolicy_label ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cmppolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A cmppolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cmppolicylabel.tf_cmppolicylabel my_cmppolicy_label ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cmppolicylabel_cmppolicy_binding",
			Category:         "Compression",
			ShortDescription: ``,
			Description: `

The cmppolicylabel_cmppolicy_binding resource is used to create cmppolicylabel_cmppolicy_binding.


`,
			Keywords: []string{
				"compression",
				"cmppolicylabel",
				"cmppolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) The compression policy name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or a user-defined policy label. After the invoked policies are evaluated, the flow returns to the policy with the next higher priority number in the original label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label invocation. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "invoke_labelname",
					Description: `(Optional) Name of the label to invoke if the current policy evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the HTTP compression policy label to which to bind the policy. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cmppolicylabel_cmppolicy_binding. It is the concatenation of ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A cmppolicylabel_cmppolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cmppolicylabel_cmppolicy_binding.tf_cmppolicylabel_cmppolicy_binding my_cmppolicy_label,tf_cmppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cmppolicylabel_cmppolicy_binding. It is the concatenation of ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A cmppolicylabel_cmppolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cmppolicylabel_cmppolicy_binding.tf_cmppolicylabel_cmppolicy_binding my_cmppolicy_label,tf_cmppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_contentinspectionaction",
			Category:         "CI",
			ShortDescription: ``,
			Description: `

The contentinspectionaction resource is used to create contentinspectionaction.


`,
			Keywords: []string{
				"ci",
				"contentinspectionaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the remote service action. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) Type of operation this action is going to perform. following actions are available to configure:`,
				},
				resource.Attribute{
					Name:        "icapprofilename",
					Description: `(Optional) Name of the ICAP profile to be attached to the contentInspection action.`,
				},
				resource.Attribute{
					Name:        "ifserverdown",
					Description: `(Optional) Name of the action to perform if the Vserver representing the remote service is not UP. This is not supported for NOINSPECTION Type. The Supported actions are:`,
				},
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address of remoteService`,
				},
				resource.Attribute{
					Name:        "servername",
					Description: `(Optional) Name of the LB vserver or service`,
				},
				resource.Attribute{
					Name:        "serverport",
					Description: `(Optional) Port of remoteService ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A contentinspectionaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectionaction.tf_contentinspectionaction my_ci_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A contentinspectionaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectionaction.tf_contentinspectionaction my_ci_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_contentinspectioncallout",
			Category:         "CI",
			ShortDescription: ``,
			Description: `

The contentinspectioncallout resource is used to create contentinspectioncallout.


`,
			Keywords: []string{
				"ci",
				"contentinspectioncallout",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the Content Inspection callout. Not case sensitive. Must begin with an ASCII letter or underscore (_) character, and must consist only of ASCII alphanumeric or underscore characters. Must not begin with 're' or 'xp' or be a word reserved for use as an expression qualifier prefix (such as HTTP) or enumeration value (such as ASCII). Must not be the name of an existing named expression, pattern set, dataset, stringmap, or callout.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) Type of the Content Inspection callout. It must be one of the following:`,
				},
				resource.Attribute{
					Name:        "returntype",
					Description: `(Required) Type of data that the target callout agent returns in response to the callout. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "resultexpr",
					Description: `(Required) Expression that extracts the callout results from the response sent by the CI callout agent. Must be a response based expression, that is, it must begin with ICAP.RES. The operations in this expression must match the return type. For example, if you configure a return type of TEXT, the result expression must be a text based expression, as in the following example: icap.res.header("ISTag")`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this Content Inspection callout.`,
				},
				resource.Attribute{
					Name:        "profilename",
					Description: `(Optional) Name of the Content Inspection profile. The type of the configured profile must match the type specified using -type argument.`,
				},
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address of Content Inspection server. Mutually exclusive with the server name parameter.`,
				},
				resource.Attribute{
					Name:        "servername",
					Description: `(Optional) Name of the load balancing or content switching virtual server or service to which the Content Inspection request is issued. Mutually exclusive with server IP address and port parameters. The service type must be TCP or SSL_TCP. If there are vservers and services with the same name, then vserver is selected.`,
				},
				resource.Attribute{
					Name:        "serverport",
					Description: `(Optional) Port of the Content Inspection server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectioncallout. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A contentinspectioncallout can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectioncallout.tf_contentinspectioncallout my_ci_callout ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectioncallout. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A contentinspectioncallout can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectioncallout.tf_contentinspectioncallout my_ci_callout ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_contentinspectionglobal_contentinspectionpolicy_binding",
			Category:         "CI",
			ShortDescription: ``,
			Description: `

The contentinspectionglobal_contentinspectionpolicy_binding resource is used to create contentinspectionglobal_contentinspectionpolicy_binding.


`,
			Keywords: []string{
				"ci",
				"contentinspectionglobal",
				"contentinspectionpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the contentInspection policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Terminate evaluation of policies bound to the current policy label, and then forward the request to the specified virtual server or evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of invocation. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) The bindpoint to which to policy is bound. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionglobal_contentinspectionpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A contentinspectionglobal_contentinspectionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectionglobal_contentinspectionpolicy_binding.tf_ci_binding my_ci_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionglobal_contentinspectionpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A contentinspectionglobal_contentinspectionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectionglobal_contentinspectionpolicy_binding.tf_ci_binding my_ci_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_contentinspectionparameter",
			Category:         "CI",
			ShortDescription: ``,
			Description: `

The contentinspectionparameter resource is used to create contentinspectionparameter.


`,
			Keywords: []string{
				"ci",
				"contentinspectionparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to perform if the result of policy evaluation is undefined (UNDEF). An UNDEF event indicates an error condition in evaluating the expression. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionparameter. It is a unique string prefixed with ` + "`" + `tf-contentinspectionparameter-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionparameter. It is a unique string prefixed with ` + "`" + `tf-contentinspectionparameter-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_contentinspectionpolicy",
			Category:         "CI",
			ShortDescription: ``,
			Description: `

The contentinspectionpolicy resource is used to create contentinspectionpolicy.


`,
			Keywords: []string{
				"ci",
				"contentinspectionpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the contentInspection policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Can be changed after the contentInspection policy is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my contentInspection policy" or 'my contentInspection policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression that the policy uses to determine whether to execute the specified action.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Name of the contentInspection action to perform if the request matches this contentInspection policy. There are also some built-in actions which can be used. These are:`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any type of information about this contentInspection policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of the messagelog action to use for requests that match this policy.`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to perform if the result of policy evaluation is undefined (UNDEF). An UNDEF event indicates an internal error condition. Only the above built-in actions can be used. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A contentinspectionpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectionpolicy.tf_contentinspectionpolicy my_ci_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A contentinspectionpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectionpolicy.tf_contentinspectionpolicy my_ci_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_contentinspectionpolicylabel",
			Category:         "CI",
			ShortDescription: ``,
			Description: `

The contentinspectionpolicylabel resource is used to create contentinspectionpolicylabel.


`,
			Keywords: []string{
				"ci",
				"contentinspectionpolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name for the contentInspection policy label. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the contentInspection policy label is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my contentInspection policy label" or 'my contentInspection policy label').`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) Type of packets (request or response packets) against which to match the policies bound to this policy label.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this contentInspection policy label. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A contentinspectionpolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectionpolicylabel.tf_contentinspectionpolicylabel my_ci_policylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A contentinspectionpolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectionpolicylabel.tf_contentinspectionpolicylabel my_ci_policylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_contentinspectionpolicylabel_contentinspectionpolicy_binding",
			Category:         "CI",
			ShortDescription: ``,
			Description: `

The contentinspectionpolicylabel_contentinspectionpolicy_binding resource is used to create contentinspectionpolicylabel_contentinspectionpolicy_binding.


`,
			Keywords: []string{
				"ci",
				"contentinspectionpolicylabel",
				"contentinspectionpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Suspend evaluation of policies bound to the current policy label, and then forward the request to the specified virtual server or evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "invoke_labelname",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the contentInspection policy label to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of invocation. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Name of the contentInspection policy to bind to the policy label.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Specifies the priority of the policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionpolicylabel_contentinspectionpolicy_binding. Itis the concatenation of ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A contentinspectionpolicylabel_contentinspectionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectionpolicylabel_contentinspectionpolicy_binding.tf_ci_binding my_ci_label,my_ci_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionpolicylabel_contentinspectionpolicy_binding. Itis the concatenation of ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A contentinspectionpolicylabel_contentinspectionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectionpolicylabel_contentinspectionpolicy_binding.tf_ci_binding my_ci_label,my_ci_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_contentinspectionprofile",
			Category:         "CI",
			ShortDescription: ``,
			Description: `

The contentinspectionprofile resource is used to create contentinspectionprofile.


`,
			Keywords: []string{
				"ci",
				"contentinspectionprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of a ContentInspection profile. Must begin with a letter, number, or the underscore \(_\) character. Other characters allowed, after the first character, are the hyphen \(-\), period \(.\), hash \(\#\), space \( \), at \(@\), colon \(:\), and equal \(=\) characters. The name of a IPS profile cannot be changed after it is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks \(for example, "my ips profile" or 'my ips profile'\).`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) Type of ContentInspection profile. Following types are available to configure: INLINEINSPECTION : To inspect the packets/requests using IPS. MIRROR : To forward cloned packets.`,
				},
				resource.Attribute{
					Name:        "egressinterface",
					Description: `(Optional) Egress interface for CI profile.It is a mandatory argument while creating an ContentInspection profile of type INLINEINSPECTION or MIRROR.`,
				},
				resource.Attribute{
					Name:        "egressvlan",
					Description: `(Optional) Egress Vlan for CI`,
				},
				resource.Attribute{
					Name:        "ingressinterface",
					Description: `(Optional) Ingress interface for CI profile.It is a mandatory argument while creating an ContentInspection profile of IPS type.`,
				},
				resource.Attribute{
					Name:        "ingressvlan",
					Description: `(Optional) Ingress Vlan for CI`,
				},
				resource.Attribute{
					Name:        "iptunnel",
					Description: `(Optional) IP Tunnel for CI profile. It is used while creating a ContentInspection profile of type MIRROR when the IDS device is in a different network ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A contentinspectionprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectionprofile.tf_contentinspectionprofile my_ci_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the contentinspectionprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A contentinspectionprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_contentinspectionprofile.tf_contentinspectionprofile my_ci_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crpolicy",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crpolicy resource is used to create CR policy.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name for the cache redirection policy. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Cannot be changed after the policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policy" or 'my policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression, or name of a named expression, against which traffic is evaluated. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Optional) Name of the built-in cache redirection action: CACHE/ORIGIN.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) The log action associated with the cache redirection policy ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crpolicy. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A crpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crpolicy.crpolicy crpolicy1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crpolicy. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A crpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crpolicy.crpolicy crpolicy1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver resource is used to create Cache Redirection Vserver.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the cache redirection virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the cache redirection virtual server is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my server" or 'my server').`,
				},
				resource.Attribute{
					Name:        "servicetype",
					Description: `(Required) Protocol (type of service) handled by the virtual server.`,
				},
				resource.Attribute{
					Name:        "appflowlog",
					Description: `(Optional) Enable logging of AppFlow information.`,
				},
				resource.Attribute{
					Name:        "arp",
					Description: `(Optional) Use ARP to determine the destination MAC address.`,
				},
				resource.Attribute{
					Name:        "backendssl",
					Description: `(Optional) Decides whether the backend connection made by Citrix ADC to the origin server will be HTTP or SSL. Applicable only for SSL type CR Forward proxy vserver.`,
				},
				resource.Attribute{
					Name:        "backupvserver",
					Description: `(Optional) Name of the backup virtual server to which traffic is forwarded if the active server becomes unavailable.`,
				},
				resource.Attribute{
					Name:        "cachetype",
					Description: `(Optional) Mode of operation for the cache redirection virtual server. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "cachevserver",
					Description: `(Optional) Name of the default cache virtual server to which to redirect requests (the default target of the cache redirection virtual server).`,
				},
				resource.Attribute{
					Name:        "clttimeout",
					Description: `(Optional) Time-out value, in seconds, after which to terminate an idle client connection.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comments associated with this virtual server.`,
				},
				resource.Attribute{
					Name:        "destinationvserver",
					Description: `(Optional) Destination virtual server for a transparent or forward proxy cache redirection virtual server.`,
				},
				resource.Attribute{
					Name:        "disableprimaryondown",
					Description: `(Optional) Continue sending traffic to a backup virtual server even after the primary virtual server comes UP from the DOWN state.`,
				},
				resource.Attribute{
					Name:        "dnsvservername",
					Description: `(Optional) Name of the DNS virtual server that resolves domain names arriving at the forward proxy virtual server. Note: This parameter applies only to forward proxy virtual servers, not reverse or transparent.`,
				},
				resource.Attribute{
					Name:        "domain",
					Description: `(Optional) Default domain for reverse proxies. Domains are configured to direct an incoming request from a specified source domain to a specified target domain. There can be several configured pairs of source and target domains. You can select one pair to be the default. If the host header or URL of an incoming request does not include a source domain, this option sends the request to the specified target domain.`,
				},
				resource.Attribute{
					Name:        "downstateflush",
					Description: `(Optional) Perform delayed cleanup of connections to this virtual server.`,
				},
				resource.Attribute{
					Name:        "format",
					Description: `(Optional) 0`,
				},
				resource.Attribute{
					Name:        "ghost",
					Description: `(Optional) 0`,
				},
				resource.Attribute{
					Name:        "httpprofilename",
					Description: `(Optional) Name of the profile containing HTTP configuration information for cache redirection virtual server.`,
				},
				resource.Attribute{
					Name:        "icmpvsrresponse",
					Description: `(Optional) Criterion for responding to PING requests sent to this virtual server. If ACTIVE, respond only if the virtual server is available. If PASSIVE, respond even if the virtual server is not available.`,
				},
				resource.Attribute{
					Name:        "ipset",
					Description: `(Optional) The list of IPv4/IPv6 addresses bound to ipset would form a part of listening service on the current cr vserver`,
				},
				resource.Attribute{
					Name:        "ipv46",
					Description: `(Optional) IPv4 or IPv6 address of the cache redirection virtual server. Usually a public IP address. Clients send connection requests to this IP address. Note: For a transparent cache redirection virtual server, use an asterisk (`,
				},
				resource.Attribute{
					Name:        "l2conn",
					Description: `(Optional) Use L2 parameters, such as MAC, VLAN, and channel to identify a connection.`,
				},
				resource.Attribute{
					Name:        "listenpolicy",
					Description: `(Optional) String specifying the listen policy for the cache redirection virtual server. Can be either an in-line expression or the name of a named expression.`,
				},
				resource.Attribute{
					Name:        "listenpriority",
					Description: `(Optional) Priority of the listen policy specified by the Listen Policy parameter. The lower the number, higher the priority.`,
				},
				resource.Attribute{
					Name:        "map",
					Description: `(Optional) Obsolete.`,
				},
				resource.Attribute{
					Name:        "netprofile",
					Description: `(Optional) Name of the network profile containing network configurations for the cache redirection virtual server.`,
				},
				resource.Attribute{
					Name:        "onpolicymatch",
					Description: `(Optional) Redirect requests that match the policy to either the cache or the origin server, as specified. Note: For this option to work, you must set the cache redirection type to POLICY.`,
				},
				resource.Attribute{
					Name:        "originusip",
					Description: `(Optional) Use the client's IP address as the source IP address in requests sent to the origin server. Note: You can enable this parameter to implement fully transparent CR deployment.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Port number of the virtual server.`,
				},
				resource.Attribute{
					Name:        "precedence",
					Description: `(Optional) Type of policy (URL or RULE) that takes precedence on the cache redirection virtual server. Applies only to cache redirection virtual servers that have both URL and RULE based policies. If you specify URL, URL based policies are applied first, in the following order: 1. Domain and exact URL 2. Domain, prefix and suffix 3. Domain and suffix 4. Domain and prefix 5. Domain only 6. Exact URL 7. Prefix and suffix 8. Suffix only 9. Prefix only 10. Default If you specify RULE, the rule based policies are applied before URL based policies are applied.`,
				},
				resource.Attribute{
					Name:        "probeport",
					Description: `(Optional) Citrix ADC provides support for external health check of the vserver status. Select port for HTTP/TCP monitring`,
				},
				resource.Attribute{
					Name:        "probeprotocol",
					Description: `(Optional) Citrix ADC provides support for external health check of the vserver status. Select HTTP or TCP probes for healthcheck`,
				},
				resource.Attribute{
					Name:        "probesuccessresponsecode",
					Description: `(Optional) HTTP code to return in SUCCESS case.`,
				},
				resource.Attribute{
					Name:        "range",
					Description: `(Optional) Number of consecutive IP addresses, starting with the address specified by the IPAddress parameter, to include in a range of addresses assigned to this virtual server.`,
				},
				resource.Attribute{
					Name:        "redirect",
					Description: `(Optional) Type of cache server to which to redirect HTTP requests. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "redirecturl",
					Description: `(Optional) URL of the server to which to redirect traffic if the cache redirection virtual server configured on the Citrix ADC becomes unavailable.`,
				},
				resource.Attribute{
					Name:        "reuse",
					Description: `(Optional) Reuse TCP connections to the origin server across client connections. Do not set this parameter unless the Service Type parameter is set to HTTP. If you set this parameter to OFF, the possible settings of the Redirect parameter function as follows:`,
				},
				resource.Attribute{
					Name:        "rhistate",
					Description: `(Optional) A host route is injected according to the setting on the virtual servers`,
				},
				resource.Attribute{
					Name:        "sopersistencetimeout",
					Description: `(Optional) Time-out, in minutes, for spillover persistence.`,
				},
				resource.Attribute{
					Name:        "sothreshold",
					Description: `(Optional) For CONNECTION (or) DYNAMICCONNECTION spillover, the number of connections above which the virtual server enters spillover mode. For BANDWIDTH spillover, the amount of incoming and outgoing traffic (in Kbps) before spillover. For HEALTH spillover, the percentage of active services (by weight) below which spillover occurs.`,
				},
				resource.Attribute{
					Name:        "srcipexpr",
					Description: `(Optional) Expression used to extract the source IP addresses from the requests originating from the cache. Can be either an in-line expression or the name of a named expression.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Initial state of the cache redirection virtual server.`,
				},
				resource.Attribute{
					Name:        "tcpprobeport",
					Description: `(Optional) Port number for external TCP probe. NetScaler provides support for external TCP health check of the vserver status over the selected port. This option is only supported for vservers assigned with an IPAddress or ipset.`,
				},
				resource.Attribute{
					Name:        "tcpprofilename",
					Description: `(Optional) Name of the profile containing TCP configuration information for the cache redirection virtual server.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "useoriginipportforcache",
					Description: `(Optional) Use origin ip/port while forwarding request to the cache. Change the destination IP, destination port of the request came to CR vserver to Origin IP and Origin Port and forward it to Cache`,
				},
				resource.Attribute{
					Name:        "useportrange",
					Description: `(Optional) Use a port number from the port range (set by using the set ns param command, or in the Create Virtual Server (Cache Redirection) dialog box) as the source port in the requests sent to the origin server.`,
				},
				resource.Attribute{
					Name:        "via",
					Description: `(Optional) Insert a via header in each HTTP request. In the case of a cache miss, the request is redirected from the cache server to the origin server. This header indicates whether the request is being sent from a cache server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver.crvserver my_vserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver.crvserver my_vserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_analyticsprofile_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_analyticsprofile_binding resource is used to create CRvserver Analyticsprofile Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"analyticsprofile",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "analyticsprofile",
					Description: `(Optional) Name of the analytics profile bound to the CR vserver.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_analyticsprofile_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_analyticsprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_analyticsprofile_binding.crvserver_analyticsprofile_binding my_vserver,new_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_analyticsprofile_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_analyticsprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_analyticsprofile_binding.crvserver_analyticsprofile_binding my_vserver,new_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_appflowpolicy_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_appflowpolicy_binding resource is used to create CRvserver Appflowpolicy Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"appflowpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) For a rewrite policy, the bind point to which to bind the policy. Note: This parameter applies only to rewrite policies, because content switching policies are evaluated only at request time.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority for the policy.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) Name of the virtual server to which content is forwarded. Applicable only if the policy is a map policy and the cache redirection virtual server is of type REVERSE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_appflowpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_appflowpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_appflowpolicy_binding.crvserver_appflowpolicy_binding my_vserver,tf_appflowpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_appflowpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_appflowpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_appflowpolicy_binding.crvserver_appflowpolicy_binding my_vserver,tf_appflowpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_appfwpolicy_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_appfwpolicy_binding resource is used to create CRvserver Appfwpolicy binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"appfwpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority for the policy.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) Name of the virtual server to which content is forwarded. Applicable only if the policy is a map policy and the cache redirection virtual server is of type REVERSE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_appfwpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_appfwpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_appfwpolicy_binding.crvserver_appfwpolicy_binding my_vserver,demo_appfwpolicy1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_appfwpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_appfwpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_appfwpolicy_binding.crvserver_appfwpolicy_binding my_vserver,demo_appfwpolicy1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_appqoepolicy_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_appqoepolicy_binding resource is used to create CRvserver Appqoepolicy Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"appqoepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority for the policy.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) Name of the virtual server to which content is forwarded. Applicable only if the policy is a map policy and the cache redirection virtual server is of type REVERSE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_appqoepolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_appqoepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_appqoepolicy_binding.crvserver_appqoepolicy_binding my_vserver,tf_appqoepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_appqoepolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_appqoepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_appqoepolicy_binding.crvserver_appqoepolicy_binding my_vserver,tf_appqoepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_cachepolicy_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_cachepolicy_binding resource is used to create CRvserver Cachepolicy Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"cachepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority for the policy.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) Name of the virtual server to which content is forwarded. Applicable only if the policy is a map policy and the cache redirection virtual server is of type REVERSE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_cachepolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_cachepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_cachepolicy_binding.crvserver_cachepolicy_binding my_vserver,tf_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_cachepolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_cachepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_cachepolicy_binding.crvserver_cachepolicy_binding my_vserver,tf_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_cmppolicy_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_cmppolicy_binding resource is used to create CRvserver CMP policy Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"cmppolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority for the policy.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) Name of the virtual server to which content is forwarded. Applicable only if the policy is a map policy and the cache redirection virtual server is of type REVERSE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_cmppolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_cmppolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_cmppolicy_binding.crvserver_cmppolicy_binding my_vserver,tf_cmppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_cmppolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_cmppolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_cmppolicy_binding.crvserver_cmppolicy_binding my_vserver,tf_cmppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_crpolicy_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_crpolicy_binding resource is used to create CRvserver CRpolicy Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"crpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority for the policy.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) Name of the virtual server to which content is forwarded. Applicable only if the policy is a map policy and the cache redirection virtual server is of type REVERSE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_crpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_crpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_crpolicy_binding.crvserver_crpolicy_binding my_vserver,crpolicy1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_crpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_crpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_crpolicy_binding.crvserver_crpolicy_binding my_vserver,crpolicy1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_cspolicy_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_cspolicy_binding resource is used to create CRvserver CSpolicy Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"cspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority for the policy.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) The CSW target server names. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_cspolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_cspolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_cspolicy_binding.crvserver_cspolicy_binding my_vserver,test_cspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_cspolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_cspolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_cspolicy_binding.crvserver_cspolicy_binding my_vserver,test_cspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_feopolicy_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_feopolicy_binding resource is used to create CRvserver Foepolicy Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"feopolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke a policy label if this policy's rule evaluates to TRUE (valid only for default-syntax policies such as application firewall, transform, integrated cache, rewrite, responder, and content switching).`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to be invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of label to be invoked.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority for the policy.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) Name of the virtual server to which content is forwarded. Applicable only if the policy is a map policy and the cache redirection virtual server is of type REVERSE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_feopolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_feopolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_feopolicy_binding.crvserver_feopolicy_binding my_vserver,tf_feopolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_feopolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_feopolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_feopolicy_binding.crvserver_feopolicy_binding my_vserver,tf_feopolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_filterpolicy_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_filterpolicy_binding resource is used to create CR vserver Filter policy Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"filterpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) For a rewrite policy, the bind point to which to bind the policy. Note: This parameter applies only to rewrite policies, because content switching policies are evaluated only at request time.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke a policy label if this policy's rule evaluates to TRUE (valid only for default-syntax policies such as application firewall, transform, integrated cache, rewrite, responder, and content switching).`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to be invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of label to be invoked.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority for the policy.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) Name of the virtual server to which content is forwarded. Applicable only if the policy is a map policy and the cache redirection virtual server is of type REVERSE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_filterpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_filterpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_filterpolicy_binding.crvserver_filterpolicy_binding my_vserver,tf_filterpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_filterpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_filterpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_filterpolicy_binding.crvserver_filterpolicy_binding my_vserver,tf_filterpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_icapolicy_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_icapolicy_binding resource is used to create CR vserver ICA policy Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"icapolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) For a rewrite policy, the bind point to which to bind the policy. Note: This parameter applies only to rewrite policies, because content switching policies are evaluated only at request time.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke a policy label if this policy's rule evaluates to TRUE (valid only for default-syntax policies such as application firewall, transform, integrated cache, rewrite, responder, and content switching).`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to be invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of label to be invoked.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority for the policy.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) Name of the virtual server to which content is forwarded. Applicable only if the policy is a map policy and the cache redirection virtual server is of type REVERSE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_icapolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_icapolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_icapolicy_binding.crvserver_icapolicy_binding my_v,tf_icapolicyserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_icapolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_icapolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_icapolicy_binding.crvserver_icapolicy_binding my_v,tf_icapolicyserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_lbvserver_binding",
			Category:         "cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_lbvserver_binding resource is used to create CRvserver LBvserver Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"lbvserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "lbvserver",
					Description: `(Optional) The Default target server name.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_lbvserver_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_lbvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_lbvserver_binding.crvserver_lbvserver_binding my_vserver,test_lbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_lbvserver_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_lbvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_lbvserver_binding.crvserver_lbvserver_binding my_vserver,test_lbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_policymap_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_policymap_binding resource is used to create CR vserver Policymap Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"policymap",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) For a rewrite policy, the bind point to which to bind the policy. Note: This parameter applies only to rewrite policies, because content switching policies are evaluated only at request time.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke a policy label if this policy's rule evaluates to TRUE (valid only for default-syntax policies such as application firewall, transform, integrated cache, rewrite, responder, and content switching).`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to be invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of label to be invoked.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) An unsigned integer that determines the priority of the policy relative to other policies bound to this cache redirection virtual server. The lower the value, higher the priority. Note: This option is available only when binding content switching, filtering, and compression policies to a cache redirection virtual server.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) The CSW target server names. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_policymap_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_policymap_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_policymap_binding.crvserver_policymap_binding my_vserver,ia_mappol123 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_policymap_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_policymap_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_policymap_binding.crvserver_policymap_binding my_vserver,ia_mappol123 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_responderpolicy_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_responderpolicy_binding resource is used to create CRvserver Responderpolicy Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"responderpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) For a rewrite policy, the bind point to which to bind the policy. Note: This parameter applies only to rewrite policies, because content switching policies are evaluated only at request time.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority for the policy.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) Name of the virtual server to which content is forwarded. Applicable only if the policy is a map policy and the cache redirection virtual server is of type REVERSE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_responderpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_responderpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_responderpolicy_binding.crvserver_responderpolicy_binding my_vserver,tf_responderpolicy1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_responderpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_responderpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_responderpolicy_binding.crvserver_responderpolicy_binding my_vserver,tf_responderpolicy1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_rewritepolicy_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_rewritepolicy_binding resource is used to create CRvserver Rewritepolicy Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"rewritepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority for the policy.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) Name of the virtual server to which content is forwarded. Applicable only if the policy is a map policy and the cache redirection virtual server is of type REVERSE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_rewritepolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_rewritepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_rewritepolicy_binding.crvserver_rewritepolicy_binding my_vserver,tf_rewrite_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_rewritepolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_rewritepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_rewritepolicy_binding.crvserver_rewritepolicy_binding my_vserver,tf_rewrite_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_crvserver_spilloverpolicy_binding",
			Category:         "Cache Redirection",
			ShortDescription: ``,
			Description: `

The crvserver_spilloverpolicy_binding resource is used to create CRvserver Spilloverpolicy Binding.


`,
			Keywords: []string{
				"cache",
				"redirection",
				"crvserver",
				"spilloverpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the cache redirection virtual server to which to bind the cache redirection policy.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke a policy label if this policy's rule evaluates to TRUE (valid only for default-syntax policies such as application firewall, transform, integrated cache, rewrite, responder, and content switching).`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to be invoked.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of label to be invoked.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority for the policy.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) Name of the virtual server to which content is forwarded. Applicable only if the policy is a map policy and the cache redirection virtual server is of type REVERSE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_spilloverpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_spilloverpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_spilloverpolicy_binding.crvserver_spilloverpolicy_binding my_vserver,tf_spilloverpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the crvserver_spilloverpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A crvserver_spilloverpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_crvserver_spilloverpolicy_binding.crvserver_spilloverpolicy_binding my_vserver,tf_spilloverpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csaction",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csaction resource is used to create content switching actions.


`,
			Keywords: []string{
				"content",
				"switching",
				"csaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching action.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the load balancing virtual server to which the content is switched.`,
				},
				resource.Attribute{
					Name:        "targetvserver",
					Description: `(Optional) Name of the VPN, GSLB or Authentication virtual server to which the content is switched.`,
				},
				resource.Attribute{
					Name:        "targetvserverexpr",
					Description: `(Optional) Expression that evaluates to the target load balancing virtual server to which the content is switched.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comment associated with this content switching action. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the content switching action. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A csaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csaction.tf_csaction tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the content switching action. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A csaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csaction.tf_csaction tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csparameter",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csparameter resource is used to modify the status of the state update parameter.


`,
			Keywords: []string{
				"content",
				"switching",
				"csparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "stateupdate",
					Description: `(Optional) Specifies whether the virtual server checks the attached load balancing server for state information. Possible values: [ ENABLED, DISABLED ]`,
				},
			},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cspolicy",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The resource is used to configure content switching policies.


`,
			Keywords: []string{
				"content",
				"switching",
				"cspolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Name of the content switching policy`,
				},
				resource.Attribute{
					Name:        "url",
					Description: `(Optional) URL string that is matched with the URL of a request. Can contain a wildcard character. Specify the string value in the following format: [[prefix] [`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Expression, or name of a named expression, against which traffic is evaluated.`,
				},
				resource.Attribute{
					Name:        "domain",
					Description: `(Optional) The domain name. The string value can range to 63 characters.`,
				},
				resource.Attribute{
					Name:        "boundto",
					Description: `(Optional) The boundto name. The string value can range to 63 characters.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Optional) Content switching action that names the target load balancing virtual server to which the traffic is switched.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) The log action associated with the content switching policy.`,
				},
				resource.Attribute{
					Name:        "csvserver",
					Description: `[DEPRECATED] Content switching vserver that this policy will bind to.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `[DEPRECATED] Targe load balancing vserver that will be used for the binding with the Content switching vserver.`,
				},
				resource.Attribute{
					Name:        "forcenew_id_set",
					Description: `(Optional) A list of terraform resource ids. Any change in the list of values will trigger the recreation of the cspolicy resource. Its main intent is to force the rebinding with the Content switching vserver defined in ` + "`" + `csvserver` + "`" + ` should it be deleted and recreated. The same applies for the LB vserver defined in ` + "`" + `targetlbvserver` + "`" + `. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cspolicy. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import An instance of the resource can be imported using its ` + "`" + `policyname` + "`" + `, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cspolicy.tf_cspolicy tf_cspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cspolicy. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import An instance of the resource can be imported using its ` + "`" + `policyname` + "`" + `, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_cspolicy.tf_cspolicy tf_cspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_cspolicylabel",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The cspolicylabel resource is used to create a content switching policy label.


`,
			Keywords: []string{
				"content",
				"switching",
				"cspolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name for the policy label. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. The label name must be unique within the list of policy labels for content switching. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policylabel" or 'my policylabel').`,
				},
				resource.Attribute{
					Name:        "cspolicylabeltype",
					Description: `(Required) Protocol supported by the policy label. All policies bound to the policy label must either match the specified protocol or be a subtype of that protocol. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cspolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the cspolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

This resource is used to manage Content switching virtual servers.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the content switching virtual server.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "servicetype",
					Description: `(Optional) Protocol used by the virtual server. Possible values: [ HTTP, SSL, TCP, FTP, RTSP, SSL\_TCP, UDP, DNS, SIP\_UDP, SIP\_TCP, SIP\_SSL, ANY, RADIUS, RDP, MYSQL, MSSQL, DIAMETER, SSL\_DIAMETER, DNS\_TCP, ORACLE, SMPP, PROXY, MONGO, MONGO\_TLS ]`,
				},
				resource.Attribute{
					Name:        "ipv46",
					Description: `(Optional) IP address of the content switching virtual server.`,
				},
				resource.Attribute{
					Name:        "targettype",
					Description: `(Optional) Virtual server target type. Possible values: [ GSLB ]`,
				},
				resource.Attribute{
					Name:        "dnsrecordtype",
					Description: `(Optional) Possible values: [ A, AAAA, CNAME, NAPTR ]`,
				},
				resource.Attribute{
					Name:        "persistenceid",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "persistencetype",
					Description: `(Optional) Type of persistence for the virtual server. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "ippattern",
					Description: `(Optional) IP address pattern, in dotted decimal notation, for identifying packets to be accepted by the virtual server. The IP Mask parameter specifies which part of the destination IP address is matched against the pattern. Mutually exclusive with the IP Address parameter. For example, if the IP pattern assigned to the virtual server is 198.51.100.0 and the IP mask is 255.255.240.0 (a forward mask), the first 20 bits in the destination IP addresses are matched with the first 20 bits in the pattern. The virtual server accepts requests with IP addresses that range from 198.51.96.1 to 198.51.111.254. You can also use a pattern such as 0.0.2.2 and a mask such as 0.0.255.255 (a reverse mask). If a destination IP address matches more than one IP pattern, the pattern with the longest match is selected, and the associated virtual server processes the request. For example, if the virtual servers, vs1 and vs2, have the same IP pattern, 0.0.100.128, but different IP masks of 0.0.255.255 and 0.0.224.255, a destination IP address of 198.51.100.128 has the longest match with the IP pattern of vs1. If a destination IP address matches two or more virtual servers to the same extent, the request is processed by the virtual server whose port number matches the port number in the request.`,
				},
				resource.Attribute{
					Name:        "ipmask",
					Description: `(Optional) IP mask, in dotted decimal notation, for the IP Pattern parameter. Can have leading or trailing non-zero octets (for example, 255.255.240.0 or 0.0.255.255). Accordingly, the mask specifies whether the first n bits or the last n bits of the destination IP address in a client request are to be matched with the corresponding bits in the IP pattern. The former is called a forward mask. The latter is called a reverse mask.`,
				},
				resource.Attribute{
					Name:        "range",
					Description: `(Optional) Number of consecutive IP addresses, starting with the address specified by the IP Address parameter, to include in a range of addresses assigned to this virtual server.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Port number for content switching virtual server.`,
				},
				resource.Attribute{
					Name:        "ipset",
					Description: `(Optional) The list of IPv4/IPv6 addresses bound to ipset would form a part of listening service on the current cs vserver.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Initial state of the load balancing virtual server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "stateupdate",
					Description: `(Optional) Enable state updates for a specific content switching virtual server. By default, the Content Switching virtual server is always UP, regardless of the state of the Load Balancing virtual servers bound to it. This parameter interacts with the global setting as follows: Global Level + Vserver Level = Result ENABLED + ENABLED = ENABLED ENABLED + DISABLED = ENABLED DISABLED + ENABLED = ENABLED DISABLED + DISABLED = DISABLED If you want to enable state updates for only some content switching virtual servers, be sure to disable the state update parameter. Possible values: [ ENABLED, DISABLED, UPDATEONBACKENDUPDATE ]`,
				},
				resource.Attribute{
					Name:        "cacheable",
					Description: `(Optional) Use this option to specify whether a virtual server, used for load balancing or content switching, routes requests to the cache redirection virtual server before sending it to the configured servers. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "redirecturl",
					Description: `(Optional) URL to which traffic is redirected if the virtual server becomes unavailable. The service type of the virtual server should be either HTTP or SSL. ~> Make sure that the domain in the URL does not match the domain specified for a content switching policy. If it does, requests are continuously redirected to the unavailable virtual server.`,
				},
				resource.Attribute{
					Name:        "clttimeout",
					Description: `(Optional) Idle time, in seconds, after which the client connection is terminated.`,
				},
				resource.Attribute{
					Name:        "precedence",
					Description: `(Optional) Type of precedence to use for both RULE-based and URL-based policies on the content switching virtual server. With the default (RULE) setting, incoming requests are evaluated against the rule-based content switching policies. If none of the rules match, the URL in the request is evaluated against the URL-based content switching policies. Possible values: [ RULE, URL ]`,
				},
				resource.Attribute{
					Name:        "casesensitive",
					Description: `(Optional) Consider case in URLs (for policies that use URLs instead of RULES). For example, with the ON setting, the URLs /a/1.html and /A/1.HTML are treated differently and can have different targets (set by content switching policies). With the OFF setting, /a/1.html and /A/1.HTML are switched to the same target. Possible values: [ ON, OFF ]`,
				},
				resource.Attribute{
					Name:        "somethod",
					Description: `(Optional) Type of spillover used to divert traffic to the backup virtual server when the primary virtual server reaches the spillover threshold. Connection spillover is based on the number of connections. Bandwidth spillover is based on the total Kbps of incoming and outgoing traffic. Possible values: [ CONNECTION, DYNAMICCONNECTION, BANDWIDTH, HEALTH, NONE ]`,
				},
				resource.Attribute{
					Name:        "sopersistence",
					Description: `(Optional) Maintain source-IP based persistence on primary and backup virtual servers. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sopersistencetimeout",
					Description: `(Optional) Time-out value, in minutes, for spillover persistence.`,
				},
				resource.Attribute{
					Name:        "sothreshold",
					Description: `(Optional) Depending on the spillover method, the maximum number of connections or the maximum total bandwidth (Kbps) that a virtual server can handle before spillover occurs.`,
				},
				resource.Attribute{
					Name:        "sobackupaction",
					Description: `(Optional) Action to be performed if spillover is to take effect, but no backup chain to spillover is usable or exists. Possible values: [ DROP, ACCEPT, REDIRECT ]`,
				},
				resource.Attribute{
					Name:        "redirectportrewrite",
					Description: `(Optional) State of port rewrite while performing HTTP redirect.Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "downstateflush",
					Description: `(Optional) Flush all active transactions associated with a virtual server whose state transitions from UP to DOWN. Do not enable this option for applications that must complete their transactions. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "backupvserver",
					Description: `(Optional) Name of the backup virtual server that you are configuring.`,
				},
				resource.Attribute{
					Name:        "disableprimaryondown",
					Description: `(Optional) Continue forwarding the traffic to backup virtual server even after the primary server comes UP from the DOWN state. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "insertvserveripport",
					Description: `(Optional) Insert the virtual server's VIP address and port number in the request header. Available values function as follows: VIPADDR - Header contains the vserver's IP address and port number without any translation. OFF - The virtual IP and port header insertion option is disabled. V6TOV4MAPPING - Header contains the mapped IPv4 address corresponding to the IPv6 address of the vserver and the port number. An IPv6 address can be mapped to a user-specified IPv4 address using the set ns ip6 command. Possible values: [ OFF, VIPADDR, V6TOV4MAPPING ]`,
				},
				resource.Attribute{
					Name:        "vipheader",
					Description: `(Optional) Name of virtual server IP and port header, for use with the VServer IP Port Insertion parameter.`,
				},
				resource.Attribute{
					Name:        "rtspnat",
					Description: `(Optional) Enable network address translation (NAT) for real-time streaming protocol (RTSP) connections. Possible values: [ ON, OFF ]`,
				},
				resource.Attribute{
					Name:        "authenticationhost",
					Description: `(Optional) FQDN of the authentication virtual server. The service type of the virtual server should be either HTTP or SSL.`,
				},
				resource.Attribute{
					Name:        "listenpolicy",
					Description: `(Optional) String specifying the listen policy for the content switching virtual server. Can be either the name of an existing expression or an in-line expression.`,
				},
				resource.Attribute{
					Name:        "listenpriority",
					Description: `(Optional) Integer specifying the priority of the listen policy. A higher number specifies a lower priority. If a request matches the listen policies of more than one virtual server the virtual server whose listen policy has the highest priority (the lowest priority number) accepts the request.`,
				},
				resource.Attribute{
					Name:        "authn401",
					Description: `(Optional) Enable HTTP 401-response based authentication. Possible values: [ ON, OFF ]`,
				},
				resource.Attribute{
					Name:        "authnvsname",
					Description: `(Optional) Name of authentication virtual server that authenticates the incoming user requests to this content switching virtual server.`,
				},
				resource.Attribute{
					Name:        "push",
					Description: `(Optional) Process traffic with the push virtual server that is bound to this content switching virtual server (specified by the Push VServer parameter). The service type of the push virtual server should be either HTTP or SSL. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "pushvserver",
					Description: `(Optional) Name of the load balancing virtual server, of type PUSH or SSL_PUSH, to which the server pushes updates received on the client-facing load balancing virtual server.`,
				},
				resource.Attribute{
					Name:        "pushlabel",
					Description: `(Optional) Expression for extracting the label from the response received from server. This string can be either an existing rule name or an inline expression. The service type of the virtual server should be either HTTP or SSL.`,
				},
				resource.Attribute{
					Name:        "pushmulticlients",
					Description: `(Optional) Allow multiple Web 2.0 connections from the same client to connect to the virtual server and expect updates. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "httpprofilename",
					Description: `(Optional) Name of the HTTP profile containing HTTP configuration settings for the virtual server. The service type of the virtual server should be either HTTP or SSL.`,
				},
				resource.Attribute{
					Name:        "dbprofilename",
					Description: `(Optional) Name of the DB profile.`,
				},
				resource.Attribute{
					Name:        "oracleserverversion",
					Description: `(Optional) Oracle server version. Possible values: [ 10G, 11G ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Information about this virtual server.`,
				},
				resource.Attribute{
					Name:        "mssqlserverversion",
					Description: `(Optional) The version of the MSSQL server. Possible values: [ 70, 2000, 2000SP1, 2005, 2008, 2008R2, 2012, 2014 ]`,
				},
				resource.Attribute{
					Name:        "l2conn",
					Description: `(Optional) Use L2 Parameters to identify a connection. Possible values: [ ON, OFF ]`,
				},
				resource.Attribute{
					Name:        "mysqlprotocolversion",
					Description: `(Optional) The protocol version returned by the mysql vserver.`,
				},
				resource.Attribute{
					Name:        "mysqlserverversion",
					Description: `(Optional) The server version string returned by the mysql vserver.`,
				},
				resource.Attribute{
					Name:        "mysqlcharacterset",
					Description: `(Optional) The character set returned by the mysql vserver.`,
				},
				resource.Attribute{
					Name:        "mysqlservercapabilities",
					Description: `(Optional) The server capabilities returned by the mysql vserver.`,
				},
				resource.Attribute{
					Name:        "appflowlog",
					Description: `(Optional) Enable logging appflow flow information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "netprofile",
					Description: `(Optional) The name of the network profile.`,
				},
				resource.Attribute{
					Name:        "icmpvsrresponse",
					Description: `(Optional) Can be active or passive. Possible values: [ PASSIVE, ACTIVE ]`,
				},
				resource.Attribute{
					Name:        "rhistate",
					Description: `(Optional) A host route is injected according to the setting on the virtual servers If set to PASSIVE on all the virtual servers that share the IP address, the appliance always injects the hostroute. If set to ACTIVE on all the virtual servers that share the IP address, the appliance injects even if one virtual server is UP. If set to ACTIVE on some virtual servers and PASSIVE on the others, the appliance, injects even if one virtual server set to ACTIVE is UP. Default value: PASSIVE Possible values: [ PASSIVE, ACTIVE ]`,
				},
				resource.Attribute{
					Name:        "authnprofile",
					Description: `(Optional) Name of the authentication profile to be used when authentication is turned on.`,
				},
				resource.Attribute{
					Name:        "dnsprofilename",
					Description: `(Optional) Name of the DNS profile to be associated with the VServer. DNS profile properties will applied to the transactions processed by a VServer. This parameter is valid only for DNS and DNS-TCP VServers.`,
				},
				resource.Attribute{
					Name:        "domainname",
					Description: `(Optional) Domain name for which to change the time to live (TTL) and/or backup service IP address.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "backupip",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "cookiedomain",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "cookietimeout",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "sitedomainttl",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "tcpprofilename",
					Description: `(Optional) Name of the TCP profile containing TCP configuration settings for the virtual server.`,
				},
				resource.Attribute{
					Name:        "ciphersuites",
					Description: `(Optional) List of ciphersuites to bind to the cs virtual server.`,
				},
				resource.Attribute{
					Name:        "ciphers",
					Description: `(Optional) List of ciphers to bind to the cs virtual server. Applicable only for cluster deployments of ADC.`,
				},
				resource.Attribute{
					Name:        "lbvserverbinding",
					Description: `(Optional) Name of lb vserver to bind to the cs vserver.`,
				},
				resource.Attribute{
					Name:        "sslprofile",
					Description: `(Optional) SSL profile to bind to cs vserver.`,
				},
				resource.Attribute{
					Name:        "snisslcertkeys",
					Description: `(Optional) List of SNI SSL certificates to bind to the cs vserver.`,
				},
				resource.Attribute{
					Name:        "sslcertkey",
					Description: `(Optional) SSL certificate to bind to this cs vserver.`,
				},
				resource.Attribute{
					Name:        "sslpolicybinding",
					Description: `(Optional) A block defining an ssl policy binding. See below for details. An ` + "`" + `sslpolicybinding` + "`" + ` block may contain the following attributes:`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) The name of the SSL policy binding.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority of the policies bound to this SSL service.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bind point to which to bind the policy. Possible Values: REQUEST, INTERCEPT_REQ and CLIENTHELLO_REQ. These bindpoints mean: 1. REQUEST: Policy evaluation will be done at appplication above SSL. This bindpoint is default and is used for actions based on clientauth and client cert. 2. INTERCEPT_REQ: Policy evaluation will be done during SSL handshake to decide whether to intercept or not. Actions allowed with this type are: INTERCEPT, BYPASS and RESET. 3. CLIENTHELLO_REQ: Policy evaluation will be done during handling of Client Hello Request. Action allowed with this type is: RESET, FORWARD and PICKCACERTGRP. Possible values: [ INTERCEPT_REQ, REQUEST, CLIENTHELLO_REQ ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag. This attribute is relevant only for ADVANCED policies.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label invocation. Possible values: [ vserver, service, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to invoke if the current policy rule evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import An instance of the resource can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver.tf_csvserver tf_csvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import An instance of the resource can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver.tf_csvserver tf_csvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_analyticsprofile_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_analyticsprofile_binding resource is used to bound Analytics Profile to csvserver.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"analyticsprofile",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "analyticsprofile",
					Description: `(Required) Name of the analytics profile bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_analyticsprofile_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `analyticsprofile` + "`" + ` attributes separated by a comma. ## Import A csvserver_analyticsprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shellterraform import terraform import citrixadc_csvserver_analyticsprofile_binding.tf_csvserver_analyticsprofile_binding tf_csvserver,ns_analytics_global_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_analyticsprofile_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `analyticsprofile` + "`" + ` attributes separated by a comma. ## Import A csvserver_analyticsprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shellterraform import terraform import citrixadc_csvserver_analyticsprofile_binding.tf_csvserver_analyticsprofile_binding tf_csvserver,ns_analytics_global_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_appfwpolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_appfwpolicy_binding resource is used to add csvserver_appfwpolicy_binding.

`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"appfwpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_appfwpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_appfwpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_appqoepolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_appqoepolicy_binding resource is used to add a appqoe policy to csvserver.

`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"appqoepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_appqoepolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_appqoepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_appqoepolicy_binding.tf_csvserver_appqoepolicy_binding tf_csvserver,tf_appqoepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_appqoepolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_appqoepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_appqoepolicy_binding.tf_csvserver_appqoepolicy_binding tf_csvserver,tf_appqoepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_auditnslogpolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_auditnslogpolicy_binding resource is used to bind an audit nslog policy to csvserver.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"auditnslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) For a rewrite policy, the bind point to which to bind the policy. Note: This parameter applies only to rewrite policies, because content switching policies are evaluated only at request time. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke a policy label if this policy's rule evaluates to TRUE (valid only for default-syntax policies such as application firewall, transform, integrated cache, rewrite, responder, and content switching).`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of label to be invoked. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to be invoked. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_auditnslogpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_auditnslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_auditnslogpolicy_binding.tf_csvserver_auditnslogpolicy_binding tf_csvserver,tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_auditnslogpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_auditnslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_auditnslogpolicy_binding.tf_csvserver_auditnslogpolicy_binding tf_csvserver,tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_auditsyslogpolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_auditsyslogpolicy_binding resource is used to bind an audit syslog policy to csvserver.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"auditsyslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) For a rewrite policy, the bind point to which to bind the policy. Note: This parameter applies only to rewrite policies, because content switching policies are evaluated only at request time. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke a policy label if this policy's rule evaluates to TRUE (valid only for default-syntax policies such as application firewall, transform, integrated cache, rewrite, responder, and content switching).`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of label to be invoked. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to be invoked. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_auditsyslogpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_auditsyslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_auditsyslogpolicy_binding.tf_csvserver_auditsyslogpolicy_binding tf_csvserver,tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_auditsyslogpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_auditsyslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_auditsyslogpolicy_binding.tf_csvserver_auditsyslogpolicy_binding tf_csvserver,tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_authorizationpolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_authorizationpolicy_binding resource is used to bind an authorization policy to csvserver.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"authorizationpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_authorizationpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_authorizationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_authorizationpolicy_binding.tf_csvserver_authorizationpolicy_binding tf_csvserver,tf_authorizationpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_authorizationpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_authorizationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_authorizationpolicy_binding.tf_csvserver_authorizationpolicy_binding tf_csvserver,tf_authorizationpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_botpolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_botpolicy_binding resource is used to bind a bot policy to csvserver.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"botpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) For a rewrite policy, the bind point to which to bind the policy. Note: This parameter applies only to rewrite policies, because content switching policies are evaluated only at request time. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_botpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_botpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_botpolicy_binding.tf_csvserver_botpolicy_binding tf_csvserver,tf_botpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_botpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_botpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_botpolicy_binding.tf_csvserver_botpolicy_binding tf_csvserver,tf_botpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_cachepolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_cachepolicy_binding resource is used to bind a cache policy to csvserver.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"cachepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_cachepolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_cachepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_cachepolicy_binding.tf_csvserver_cachepolicy_binding tf_csvserver,tf_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_cachepolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_cachepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_cachepolicy_binding.tf_csvserver_cachepolicy_binding tf_csvserver,tf_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_cmppolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `\_cmppolicy\_binding

The csvserver\_cmppolicy\_binding resource is used to create bindings between a content switching vserver and compression policy.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"cmppolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver\_cmppolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver\_cmppolicy\_binding can be imported using its id e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_cmppolicy_binding.tf_bind tf_csvserver,tf_cmppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver\_cmppolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver\_cmppolicy\_binding can be imported using its id e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_cmppolicy_binding.tf_bind tf_csvserver,tf_cmppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_contentinspectionpolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_contentinspectionpolicy_binding resource is used to bind a contentinspection policy to csvserver.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"contentinspectionpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_contentinspectionpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_contentinspectionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_contentinspectionpolicy_binding.tf_csvserver_contentinspectionpolicy_binding tf_csvserver,tf_contentinspectionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_contentinspectionpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_contentinspectionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_contentinspectionpolicy_binding.tf_csvserver_contentinspectionpolicy_binding tf_csvserver,tf_contentinspectionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_cspolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `\_cspolicy\_binding

The csvserver\_cspolicy\_binding resource is used to create bindings between a content switching virtual server and a content switcing policy.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"cspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) target vserver name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name of the content switching virtual server to which the content switching policy applies. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver\_cspolicy\_binding . It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver\_cspolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_cspolicy_binding.tf_csvscspolbind tf_csvserver,tf_cspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver\_cspolicy\_binding . It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver\_cspolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_cspolicy_binding.tf_csvscspolbind tf_csvserver,tf_cspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_feopolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_feopolicy_binding resource is used to bind a feo policy to csvserver.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"feopolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke a policy label if this policy's rule evaluates to TRUE (valid only for default-syntax policies such as application firewall, transform, integrated cache, rewrite, responder, and content switching).`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of label to be invoked. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to be invoked. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_feopolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_feopolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_feopolicy_binding.tf_csvserver_feopolicy_binding tf_csvserver,tf_feopolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_feopolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_feopolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_feopolicy_binding.tf_csvserver_feopolicy_binding tf_csvserver,tf_feopolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_filterpolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `\_filterpolicy\_binding

The csvserver\_filterpolicy\_binding resource is used to bind content switching virtual server with filter policies.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"filterpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) For a rewrite policy, the bind point to which to bind the policy. Note: This parameter applies only to rewrite policies, because content switching policies are evaluated only at request time. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke a policy label if this policy's rule evaluates to TRUE (valid only for default-syntax policies such as application firewall, transform, integrated cache, rewrite, responder, and content switching).`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of label to be invoked. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to be invoked. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver\_filterpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver\_filterpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_filterpolicy_binding.tf_bind tf_csvserver,tf_filterpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver\_filterpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver\_filterpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_filterpolicy_binding.tf_bind tf_csvserver,tf_filterpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_gslbvserver_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_gslbvserver_binding resource is used to bind a gslb vserver to csvserver.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"gslbvserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vserver",
					Description: `(Required) Name of the default gslb or vpn vserver bound to CS vserver of type GSLB/VPN. For Example: bind cs vserver cs1 -vserver gslb1 or bind cs vserver cs1 -vserver vpn1.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_gslbvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A csvserver_gslbvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_gslbvserver_binding.tf_csvserver_gslbvserver_binding tf_csvserver,tf_gslbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_gslbvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A csvserver_gslbvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_gslbvserver_binding.tf_csvserver_gslbvserver_binding tf_csvserver,tf_gslbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_responderpolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `\_responderpolicy\_binding

The csvserver\_responderpolicy\_binding resource is used to bind content switching virtual servers with responder policies


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"responderpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) For a rewrite policy, the bind point to which to bind the policy. Note: This parameter applies only to rewrite policies, because content switching policies are evaluated only at request time. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver\_responderpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver\_responderpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_responderpolicy_binding.tf_bind tf_csvserver,tf_responder_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver\_responderpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver\_responderpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_responderpolicy_binding.tf_bind tf_csvserver,tf_responder_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_rewritepolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `\_rewritepolicy\_binding

The csvserver\_rewritepolicy\_binding resource is used to bind content switching virtual servers to rewrite policies.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"rewritepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver\_rewritepolicy\_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` separated by a comma. ## Import A csvserver\_rewritepolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_rewritepolicy_binding.tf_bind tf_csvserver,tf_rewrite_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver\_rewritepolicy\_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` separated by a comma. ## Import A csvserver\_rewritepolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_rewritepolicy_binding.tf_bind tf_csvserver,tf_rewrite_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_spilloverpolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_spilloverpolicy_binding resource is used to bind a spillover policy to csvserver.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"spilloverpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke a policy label if this policy's rule evaluates to TRUE (valid only for default-syntax policies such as application firewall, transform, integrated cache, rewrite, responder, and content switching).`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of label to be invoked. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to be invoked. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_spilloverpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_spilloverpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_spilloverpolicy_binding.tf_csvserver_spilloverpolicy_binding tf_csvserver,tf_spilloverpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_spilloverpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_spilloverpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_spilloverpolicy_binding.tf_csvserver_spilloverpolicy_binding tf_csvserver,tf_spilloverpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_tmtrafficpolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_tmtrafficpolicy_binding resource is used to bind a tmtraffic policy to csvserver.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"tmtrafficpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) For a rewrite policy, the bind point to which to bind the policy. Note: This parameter applies only to rewrite policies, because content switching policies are evaluated only at request time. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke a policy label if this policy's rule evaluates to TRUE (valid only for default-syntax policies such as application firewall, transform, integrated cache, rewrite, responder, and content switching).`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of label to be invoked. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to be invoked. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_tmtrafficpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_tmtrafficpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_tmtrafficpolicy_binding.tf_csvserver_tmtrafficpolicy_binding tf_csvserver,tf_tmttrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_tmtrafficpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver_tmtrafficpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_tmtrafficpolicy_binding.tf_csvserver_tmtrafficpolicy_binding tf_csvserver,tf_tmttrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_transformpolicy_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `\_transformpolicy\_binding

The csvserver\_transformpolicy\_binding resource is used to bind content swtching virtual servers with transform policies.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"transformpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policies bound to this vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver\_transformpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver\_transformpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_transformpolicy_binding.tf_binding tf_csvserver,tf_trans_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver\_transformpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A csvserver\_transformpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_transformpolicy_binding.tf_binding tf_csvserver,tf_trans_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_csvserver_vpnvserver_binding",
			Category:         "Content Switching",
			ShortDescription: ``,
			Description: `

The csvserver_vpnvserver_binding resource is used to bind a vpnvserver to csvserver.


`,
			Keywords: []string{
				"content",
				"switching",
				"csvserver",
				"vpnvserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vserver",
					Description: `(Required) Name of the default gslb or vpn vserver bound to CS vserver of type GSLB/VPN. For Example: bind cs vserver cs1 -vserver gslb1 or bind cs vserver cs1 -vserver vpn1.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the content switching virtual server to which the content switching policy applies. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_vpnvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A csvserver_vpnvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_vpnvserver_binding.tf_csvserver_vpnvserver_binding tf_csvserver,tf_vpnvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the csvserver_vpnvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vserver` + "`" + ` attributes separated by a comma. ## Import A csvserver_vpnvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csvserver_vpnvserver_binding.tf_csvserver_vpnvserver_binding tf_csvserver,tf_vpnvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dbdbprofile",
			Category:         "DB",
			ShortDescription: ``,
			Description: `

The dbdbprofile resource is used to create dbdbprofile.


`,
			Keywords: []string{
				"db",
				"dbdbprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the database profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Cannot be changed after the profile is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my profile" or 'my profile'). . Minimum length = 1 Maximum length = 127`,
				},
				resource.Attribute{
					Name:        "interpretquery",
					Description: `(Optional) If ENABLED, inspect the query and update the connection information, if required. If DISABLED, forward the query to the server. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "stickiness",
					Description: `(Optional) If the queries are related to each other, forward to the same backend server. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "kcdaccount",
					Description: `(Optional) Name of the KCD account that is used for Windows authentication. Minimum length = 1 Maximum length = 127`,
				},
				resource.Attribute{
					Name:        "conmultiplex",
					Description: `(Optional) Use the same server-side connection for multiple client-side requests. Default is enabled. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "enablecachingconmuxoff",
					Description: `(Optional) Enable caching when connection multiplexing is OFF. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dbdbprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A dbdbprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dbdbprofile.tf_dbdbprofile my_dbprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dbdbprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A dbdbprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dbdbprofile.tf_dbdbprofile my_dbprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dbuser",
			Category:         "DB",
			ShortDescription: ``,
			Description: `

The dbuser resource is used to create dbuser.


`,
			Keywords: []string{
				"db",
				"dbuser",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "username",
					Description: `(Required) Name of the database user. Must be the same as the user name specified in the database. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "password",
					Description: `(Optional) Password for logging on to the database. Must be the same as the password specified in the database. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dbuser. It has the same value as the ` + "`" + `username` + "`" + ` attribute. ## Import A dbuser can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dbuser.tf_dbuser user1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dbuser. It has the same value as the ` + "`" + `username` + "`" + ` attribute. ## Import A dbuser can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dbuser.tf_dbuser user1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnsaaaarec",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnsaaaarec resource is used to create DNS aaaarec.


`,
			Keywords: []string{
				"dns",
				"dnsaaaarec",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "hostname",
					Description: `(Required) Domain name.`,
				},
				resource.Attribute{
					Name:        "ipv6address",
					Description: `(Required) One or more IPv6 addresses to assign to the domain name.`,
				},
				resource.Attribute{
					Name:        "ecssubnet",
					Description: `(Optional) Subnet for which the cached records need to be removed.`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to Live (TTL), in seconds, for the record. TTL is the time for which the record must be cached by DNS proxies. The specified TTL is applied to all the resource records that are of the same record type and belong to the specified domain name. For example, if you add an address record, with a TTL of 36000, to the domain name example.com, the TTLs of all the address records of example.com are changed to 36000. If the TTL is not specified, the Citrix ADC uses either the DNS zone's minimum TTL or, if the SOA record is not available on the appliance, the default value of 3600.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of records to display. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsaaaarec. It has the same value as the ` + "`" + `hostname` + "`" + ` attribute. ## Import A dnsaaaarec can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsaaaarec.dnsaaaarec www.adfihrwpi.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsaaaarec. It has the same value as the ` + "`" + `hostname` + "`" + ` attribute. ## Import A dnsaaaarec can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsaaaarec.dnsaaaarec www.adfihrwpi.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnsaction",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnsaction resource is used to create DNS action.


`,
			Keywords: []string{
				"dns",
				"dnsaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "actionname",
					Description: `(Required) Name of the dns action.`,
				},
				resource.Attribute{
					Name:        "actiontype",
					Description: `(Required) The type of DNS action that is being configured.`,
				},
				resource.Attribute{
					Name:        "dnsprofilename",
					Description: `(Optional) Name of the DNS profile to be associated with the transaction for which the action is chosen`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Optional) List of IP address to be returned in case of rewrite_response actiontype. They can be of IPV4 or IPV6 type. In case of set command We will remove all the IP address previously present in the action and will add new once given in set dns action command.`,
				},
				resource.Attribute{
					Name:        "preferredloclist",
					Description: `(Optional) The location list in priority order used for the given action.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to live, in seconds.`,
				},
				resource.Attribute{
					Name:        "viewname",
					Description: `(Optional) The view name that must be used for the given action. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsaction. It has the same value as the ` + "`" + `actionname` + "`" + ` attribute. ## Import A dnsaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsaction.dnsaction tf_action1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsaction. It has the same value as the ` + "`" + `actionname` + "`" + ` attribute. ## Import A dnsaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsaction.dnsaction tf_action1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnsaction64",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnsaction64 resource is used to create DNS action64.


`,
			Keywords: []string{
				"dns",
				"dnsaction64",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "actionname",
					Description: `(Required) Name of the dns64 action.`,
				},
				resource.Attribute{
					Name:        "prefix",
					Description: `(Required) The dns64 prefix to be used if the after evaluating the rules`,
				},
				resource.Attribute{
					Name:        "excluderule",
					Description: `(Optional) The expression to select the criteria for eliminating the corresponding ipv6 addresses from the response.`,
				},
				resource.Attribute{
					Name:        "mappedrule",
					Description: `(Optional) The expression to select the criteria for ipv4 addresses to be used for synthesis. Only if the mappedrule is evaluated to true the corresponding ipv4 address is used for synthesis using respective prefix, otherwise the A RR is discarded ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsaction64. It has the same value as the ` + "`" + `actionname` + "`" + ` attribute. ## Import A dnsaction64 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsaction64.dnsaction64 default_DNS64_action1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsaction64. It has the same value as the ` + "`" + `actionname` + "`" + ` attribute. ## Import A dnsaction64 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsaction64.dnsaction64 default_DNS64_action1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnsaddrec",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnsaddrec resource is used to create DNS addrec.


`,
			Keywords: []string{
				"dns",
				"dnsaddrec",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "hostname",
					Description: `(Required) Domain name.`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) One or more IPv4 addresses to assign to the domain name.`,
				},
				resource.Attribute{
					Name:        "ecssubnet",
					Description: `(Optional) Subnet for which the cached address records need to be removed.`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to Live (TTL), in seconds, for the record. TTL is the time for which the record must be cached by DNS proxies. The specified TTL is applied to all the resource records that are of the same record type and belong to the specified domain name. For example, if you add an address record, with a TTL of 36000, to the domain name example.com, the TTLs of all the address records of example.com are changed to 36000. If the TTL is not specified, the Citrix ADC uses either the DNS zone's minimum TTL or, if the SOA record is not available on the appliance, the default value of 3600.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) The address record type. The type can take 3 values: ADNS - If this is specified, all of the authoritative address records will be displayed. PROXY - If this is specified, all of the proxy address records will be displayed. ALL - If this is specified, all of the address records will be displayed. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsaddrec. It is the concatenation of ` + "`" + `hostname` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by a comma. ## Import A dnsaddrec can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsaddrec.dnsaddrec a.root-servers.net,65.200.211.129 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsaddrec. It is the concatenation of ` + "`" + `hostname` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by a comma. ## Import A dnsaddrec can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsaddrec.dnsaddrec a.root-servers.net,65.200.211.129 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnscnamerec",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnscnamerec resource is used to create DNS cnamerec.


`,
			Keywords: []string{
				"dns",
				"dnscnamerec",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "aliasname",
					Description: `(Required) Alias for the canonical domain name.`,
				},
				resource.Attribute{
					Name:        "canonicalname",
					Description: `(Required) Canonical domain name.`,
				},
				resource.Attribute{
					Name:        "ecssubnet",
					Description: `(Optional) Subnet for which the cached CNAME record need to be removed.`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to Live (TTL), in seconds, for the record. TTL is the time for which the record must be cached by DNS proxies. The specified TTL is applied to all the resource records that are of the same record type and belong to the specified domain name. For example, if you add an address record, with a TTL of 36000, to the domain name example.com, the TTLs of all the address records of example.com are changed to 36000. If the TTL is not specified, the Citrix ADC uses either the DNS zone's minimum TTL or, if the SOA record is not available on the appliance, the default value of 3600.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of records to display. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnscnamerec. It has the same value as the ` + "`" + `aliasname` + "`" + ` attribute. ## Import A dnscnamerec can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnscnamerec.dnscnamerec citrixadc.cloud.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnscnamerec. It has the same value as the ` + "`" + `aliasname` + "`" + ` attribute. ## Import A dnscnamerec can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnscnamerec.dnscnamerec citrixadc.cloud.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnsglobal_dnspolicy_binding",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnsglobal_dnspolicy_binding resource is used to create DNS global transform policy binding.


`,
			Keywords: []string{
				"dns",
				"dnsglobal",
				"dnspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the dns policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy with which it is bound. Maximum allowed priority should be less than 65535`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) 0`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to invoke if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label invocation.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of global bind point for which to show bound policies. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsglobal_dnspolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A dnsglobal_dnspolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsglobal_dnspolicy_binding.dnsglobal_dnspolicy_binding policy_A ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsglobal_dnspolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A dnsglobal_dnspolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsglobal_dnspolicy_binding.dnsglobal_dnspolicy_binding policy_A ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnskey",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnskey resource is used to create DNS key.


`,
			Keywords: []string{
				"dns",
				"dnskey",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "keyname",
					Description: `(Required) Name of the public-private key pair to publish in the zone.`,
				},
				resource.Attribute{
					Name:        "privatekey",
					Description: `(Required) File name of the private key.`,
				},
				resource.Attribute{
					Name:        "publickey",
					Description: `(Required) File name of the public key.`,
				},
				resource.Attribute{
					Name:        "algorithm",
					Description: `(Optional) Algorithm to generate for zone signing.`,
				},
				resource.Attribute{
					Name:        "expires",
					Description: `(Optional) Time period for which to consider the key valid, after the key is used to sign a zone.`,
				},
				resource.Attribute{
					Name:        "filenameprefix",
					Description: `(Optional) Common prefix for the names of the generated public and private key files and the Delegation Signer (DS) resource record. During key generation, the .key, .private, and .ds suffixes are appended automatically to the file name prefix to produce the names of the public key, the private key, and the DS record, respectively.`,
				},
				resource.Attribute{
					Name:        "keysize",
					Description: `(Optional) Size of the key, in bits.`,
				},
				resource.Attribute{
					Name:        "keytype",
					Description: `(Optional) Type of key to create.`,
				},
				resource.Attribute{
					Name:        "notificationperiod",
					Description: `(Optional) Time at which to generate notification of key expiration, specified as number of days, hours, or minutes before expiry. Must be less than the expiry period. The notification is an SNMP trap sent to an SNMP manager. To enable the appliance to send the trap, enable the DNSKEY-EXPIRY SNMP alarm.`,
				},
				resource.Attribute{
					Name:        "password",
					Description: `(Optional) Passphrase for reading the encrypted public/private DNS keys`,
				},
				resource.Attribute{
					Name:        "src",
					Description: `(Optional) URL (protocol, host, path, and file name) from where the DNS key file will be imported. NOTE: The import fails if the object to be imported is on an HTTPS server that requires client certificate authentication for access. This is a mandatory argument`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to Live (TTL), in seconds, for the DNSKEY resource record created in the zone. TTL is the time for which the record must be cached by the DNS proxies. If the TTL is not specified, either the DNS zone's minimum TTL or the default value of 3600 is used.`,
				},
				resource.Attribute{
					Name:        "units1",
					Description: `(Optional) Units for the expiry period.`,
				},
				resource.Attribute{
					Name:        "units2",
					Description: `(Optional) Units for the notification period.`,
				},
				resource.Attribute{
					Name:        "zonename",
					Description: `(Optional) Name of the zone for which to create a key. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnskey. It has the same value as the ` + "`" + `keyname` + "`" + ` attribute. ## Import A dnskey can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnskey.dnskey adckey_1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnskey. It has the same value as the ` + "`" + `keyname` + "`" + ` attribute. ## Import A dnskey can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnskey.dnskey adckey_1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnsmxrec",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnsmxrec resource is used to create DNS mxRec.


`,
			Keywords: []string{
				"dns",
				"dnsmxrec",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "domain",
					Description: `(Required) Domain name for which to add the MX record.`,
				},
				resource.Attribute{
					Name:        "mx",
					Description: `(Required) Host name of the mail exchange server.`,
				},
				resource.Attribute{
					Name:        "pref",
					Description: `(Required) Priority number to assign to the mail exchange server. A domain name can have multiple mail servers, with a priority number assigned to each server. The lower the priority number, the higher the mail server's priority. When other mail servers have to deliver mail to the specified domain, they begin with the mail server with the lowest priority number, and use other configured mail servers, in priority order, as backups.`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node.`,
				},
				resource.Attribute{
					Name:        "ecssubnet",
					Description: `(Optional) Subnet for which the cached MX record need to be removed.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to Live (TTL), in seconds, for the record. TTL is the time for which the record must be cached by DNS proxies. The specified TTL is applied to all the resource records that are of the same record type and belong to the specified domain name. For example, if you add an address record, with a TTL of 36000, to the domain name example.com, the TTLs of all the address records of example.com are changed to 36000. If the TTL is not specified, the Citrix ADC uses either the DNS zone's minimum TTL or, if the SOA record is not available on the appliance, the default value of 3600.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of records to display. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsmxrec. It has the same value as the ` + "`" + `domain` + "`" + ` attribute. ## Import A dnsmxrec can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsmxrec.dnsmxrec example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsmxrec. It has the same value as the ` + "`" + `domain` + "`" + ` attribute. ## Import A dnsmxrec can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsmxrec.dnsmxrec example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnsnameserver",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnsnameserver resource is used to create DNS nameserver.


`,
			Keywords: []string{
				"dns",
				"dnsnameserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "dnsvservername",
					Description: `(Required either) Name of a DNS virtual server. Overrides any IP address-based name servers configured on the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "ip",
					Description: `(Required either) IP address of an external name server or, if the Local parameter is set, IP address of a local DNS server (LDNS).`,
				},
				resource.Attribute{
					Name:        "dnsprofilename",
					Description: `(Optional) Name of the DNS profile to be associated with the name server`,
				},
				resource.Attribute{
					Name:        "local",
					Description: `(Optional) Mark the IP address as one that belongs to a local recursive DNS server on the Citrix ADC. The appliance recursively resolves queries received on an IP address that is marked as being local. For recursive resolution to work, the global DNS parameter, Recursion, must also be set. If no name server is marked as being local, the appliance functions as a stub resolver and load balances the name servers.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Administrative state of the name server.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Protocol used by the name server. UDP_TCP is not valid if the name server is a DNS virtual server configured on the appliance. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsnameserver. It is the concatenation of ` + "`" + `ip` + "`" + ` (or ` + "`" + `dnsvservername` + "`" + `) and ` + "`" + `type` + "`" + ` attributes seperated by comma. ## Import A dnsnameserver can be imported using its id , e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsnameserver.dnsnameserver 192.0.2.0,UDP ` + "`" + `or` + "`" + ` terraform import citrixadc_dnsnameserver.dnsnameserver dnsvservername1,UDP ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsnameserver. It is the concatenation of ` + "`" + `ip` + "`" + ` (or ` + "`" + `dnsvservername` + "`" + `) and ` + "`" + `type` + "`" + ` attributes seperated by comma. ## Import A dnsnameserver can be imported using its id , e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsnameserver.dnsnameserver 192.0.2.0,UDP ` + "`" + `or` + "`" + ` terraform import citrixadc_dnsnameserver.dnsnameserver dnsvservername1,UDP ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnsnaptrrec",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnsnaptrrec resource is used to create DNS naptrrec.


`,
			Keywords: []string{
				"dns",
				"dnsnaptrrec",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "domain",
					Description: `(Required) Name of the domain for the NAPTR record.`,
				},
				resource.Attribute{
					Name:        "order",
					Description: `(Required) An integer specifying the order in which the NAPTR records MUST be processed in order to accurately represent the ordered list of Rules. The ordering is from lowest to highest`,
				},
				resource.Attribute{
					Name:        "preference",
					Description: `(Required) An integer specifying the preference of this NAPTR among NAPTR records having same order. lower the number, higher the preference.`,
				},
				resource.Attribute{
					Name:        "ecssubnet",
					Description: `(Optional) Subnet for which the cached NAPTR record need to be removed.`,
				},
				resource.Attribute{
					Name:        "flags",
					Description: `(Optional) flags for this NAPTR.`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node.`,
				},
				resource.Attribute{
					Name:        "recordid",
					Description: `(Optional) Unique, internally generated record ID. View the details of the naptr record to obtain its record ID. Records can be removed by either specifying the domain name and record id OR by specifying domain name and all other naptr record attributes as was supplied during the add command.`,
				},
				resource.Attribute{
					Name:        "regexp",
					Description: `(Optional) The regular expression, that specifies the substitution expression for this NAPTR`,
				},
				resource.Attribute{
					Name:        "replacement",
					Description: `(Optional) The replacement domain name for this NAPTR.`,
				},
				resource.Attribute{
					Name:        "services",
					Description: `(Optional) Service Parameters applicable to this delegation path.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to Live (TTL), in seconds, for the record. TTL is the time for which the record must be cached by DNS proxies. The specified TTL is applied to all the resource records that are of the same record type and belong to the specified domain name. For example, if you add an address record, with a TTL of 36000, to the domain name example.com, the TTLs of all the address records of example.com are changed to 36000. If the TTL is not specified, the Citrix ADC uses either the DNS zone's minimum TTL or, if the SOA record is not available on the appliance, the default value of 3600.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of records to display. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsnaptrrec. It has the same value as the ` + "`" + `domain` + "`" + ` attribute. ## Import A ` + "`" + `dnsnaptrrec` + "`" + ` can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsnaptrrec.dnsnaptrrec example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsnaptrrec. It has the same value as the ` + "`" + `domain` + "`" + ` attribute. ## Import A ` + "`" + `dnsnaptrrec` + "`" + ` can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsnaptrrec.dnsnaptrrec example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnsnsrec",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnsnsrec resource is used to create dns name server records.


`,
			Keywords: []string{
				"dns",
				"dnsnsrec",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "domain",
					Description: `(Optional) Domain name.`,
				},
				resource.Attribute{
					Name:        "nameserver",
					Description: `(Optional) Host name of the name server to add to the domain.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to Live (TTL), in seconds, for the record. TTL is the time for which the record must be cached by DNS proxies. The specified TTL is applied to all the resource records that are of the same record type and belong to the specified domain name. For example, if you add an address record, with a TTL of 36000, to the domain name example.com, the TTLs of all the address records of example.com are changed to 36000. If the TTL is not specified, the Citrix ADC uses either the DNS zone's minimum TTL or, if the SOA record is not available on the appliance, the default value of 3600. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsnsrec. It is the concatenation of the ` + "`" + `domain` + "`" + ` and ` + "`" + `nameserver` + "`" + ` attributes separated by a comma. ## Import A dnsnsrec can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsnsrec.tf_dnsnsrec www.test.com,192.168.1.100 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsnsrec. It is the concatenation of the ` + "`" + `domain` + "`" + ` and ` + "`" + `nameserver` + "`" + ` attributes separated by a comma. ## Import A dnsnsrec can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsnsrec.tf_dnsnsrec www.test.com,192.168.1.100 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnsparameter",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnsparameter resource is used to configure DNS parameters on the target ADC.


`,
			Keywords: []string{
				"dns",
				"dnsparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "cacheecszeroprefix",
					Description: `(Optional) Cache ECS responses with a Scope Prefix length of zero. Such a cached response will be used for all queries with this domain name and any subnet. When disabled, ECS responses with Scope Prefix length of zero will be cached, but not tied to any subnet. This option has no effect if caching of ECS responses is disabled in the corresponding DNS profile.`,
				},
				resource.Attribute{
					Name:        "cachehitbypass",
					Description: `(Optional) This parameter is applicable only in proxy mode and if this parameter is enabled we will forward all the client requests to the backend DNS server and the response served will be cached on Citrix ADC`,
				},
				resource.Attribute{
					Name:        "cachenoexpire",
					Description: `(Optional) If this flag is set to YES, the existing entries in cache do not age out. On reaching the max limit the cache records are frozen`,
				},
				resource.Attribute{
					Name:        "cacherecords",
					Description: `(Optional) Cache resource records in the DNS cache. Applies to resource records obtained through proxy configurations only. End resolver and forwarder configurations always cache records in the DNS cache, and you cannot disable this behavior. When you disable record caching, the appliance stops caching server responses. However, cached records are not flushed. The appliance does not serve requests from the cache until record caching is enabled again.`,
				},
				resource.Attribute{
					Name:        "dns64timeout",
					Description: `(Optional) While doing DNS64 resolution, this parameter specifies the time to wait before sending an A query if no response is received from backend DNS server for AAAA query.`,
				},
				resource.Attribute{
					Name:        "dnsrootreferral",
					Description: `(Optional) Send a root referral if a client queries a domain name that is unrelated to the domains configured/cached on the Citrix ADC. If the setting is disabled, the appliance sends a blank response instead of a root referral. Applicable to domains for which the appliance is authoritative. Disable the parameter when the appliance is under attack from a client that is sending a flood of queries for unrelated domains.`,
				},
				resource.Attribute{
					Name:        "dnssec",
					Description: `(Optional) Enable or disable the Domain Name System Security Extensions (DNSSEC) feature on the appliance. Note: Even when the DNSSEC feature is enabled, forwarder configurations (used by internal Citrix ADC features such as SSL VPN and Cache Redirection for name resolution) do not support the DNSSEC OK (DO) bit in the EDNS0 OPT header.`,
				},
				resource.Attribute{
					Name:        "ecsmaxsubnets",
					Description: `(Optional) Maximum number of subnets that can be cached corresponding to a single domain. Subnet caching will occur for responses with EDNS Client Subnet (ECS) option. Caching of such responses can be disabled using DNS profile settings. A value of zero indicates that the number of subnets cached is limited only by existing memory constraints. The default value is zero.`,
				},
				resource.Attribute{
					Name:        "maxcachesize",
					Description: `(Optional) Maximum memory, in megabytes, that can be used for dns caching per Packet Engine.`,
				},
				resource.Attribute{
					Name:        "maxnegativecachesize",
					Description: `(Optional) Maximum memory, in megabytes, that can be used for caching of negative DNS responses per packet engine.`,
				},
				resource.Attribute{
					Name:        "maxnegcachettl",
					Description: `(Optional) Maximum time to live (TTL) for all negative records ( NXDONAIN and NODATA ) cached in the DNS cache by DNS proxy, end resolver, and forwarder configurations. If the TTL of a record that is to be cached is higher than the value configured for maxnegcacheTTL, the TTL of the record is set to the value of maxnegcacheTTL before caching. When you modify this setting, the new value is applied only to those records that are cached after the modification. The TTL values of existing records are not changed.`,
				},
				resource.Attribute{
					Name:        "maxpipeline",
					Description: `(Optional) Maximum number of concurrent DNS requests to allow on a single client connection, which is identified by the <clientip:port>-<vserver ip:port> tuple. A value of 0 (zero) applies no limit to the number of concurrent DNS requests allowed on a single client connection.`,
				},
				resource.Attribute{
					Name:        "maxttl",
					Description: `(Optional) Maximum time to live (TTL) for all records cached in the DNS cache by DNS proxy, end resolver, and forwarder configurations. If the TTL of a record that is to be cached is higher than the value configured for maxTTL, the TTL of the record is set to the value of maxTTL before caching. When you modify this setting, the new value is applied only to those records that are cached after the modification. The TTL values of existing records are not changed.`,
				},
				resource.Attribute{
					Name:        "maxudppacketsize",
					Description: `(Optional) Maximum UDP packet size that can be handled by Citrix ADC. This is the value advertised by Citrix ADC when responding as an authoritative server and it is also used when Citrix ADC queries other name servers as a forwarder. When acting as a proxy, requests from clients are limited by this parameter - if a request contains a size greater than this value in the OPT record, it will be replaced.`,
				},
				resource.Attribute{
					Name:        "minttl",
					Description: `(Optional) Minimum permissible time to live (TTL) for all records cached in the DNS cache by DNS proxy, end resolver, and forwarder configurations. If the TTL of a record that is to be cached is lower than the value configured for minTTL, the TTL of the record is set to the value of minTTL before caching. When you modify this setting, the new value is applied only to those records that are cached after the modification. The TTL values of existing records are not changed.`,
				},
				resource.Attribute{
					Name:        "namelookuppriority",
					Description: `(Optional) Type of lookup (DNS or WINS) to attempt first. If the first-priority lookup fails, the second-priority lookup is attempted. Used only by the SSL VPN feature.`,
				},
				resource.Attribute{
					Name:        "nxdomainratelimitthreshold",
					Description: `(Optional) Rate limit threshold for Non-Existant domain (NXDOMAIN) responses generated from Citrix ADC. Once the threshold is breached , DNS queries leading to NXDOMAIN response will be dropped. This threshold will not be applied for NXDOMAIN responses got from the backend. The threshold will be applied per packet engine and per second.`,
				},
				resource.Attribute{
					Name:        "recursion",
					Description: `(Optional) Function as an end resolver and recursively resolve queries for domains that are not hosted on the Citrix ADC. Also resolve queries recursively when the external name servers configured on the appliance (for a forwarder configuration) are unavailable. When external name servers are unavailable, the appliance queries a root server and resolves the request recursively, as it does for an end resolver configuration.`,
				},
				resource.Attribute{
					Name:        "resolutionorder",
					Description: `(Optional) Type of DNS queries (A, AAAA, or both) to generate during the routine functioning of certain Citrix ADC features, such as SSL VPN, cache redirection, and the integrated cache. The queries are sent to the external name servers that are configured for the forwarder function. If you specify both query types, you can also specify the order. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "retries",
					Description: `(Optional) Maximum number of retry attempts when no response is received for a query sent to a name server. Applies to end resolver and forwarder configurations.`,
				},
				resource.Attribute{
					Name:        "splitpktqueryprocessing",
					Description: `(Optional) Processing requests split across multiple packets ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsparameter. It is a unique string prefixed with "tf-dnsparameter-".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsparameter. It is a unique string prefixed with "tf-dnsparameter-".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnspolicy",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnspolicy resource is used to create DNS policy.


`,
			Keywords: []string{
				"dns",
				"dnspolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the DNS policy.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression against which DNS traffic is evaluated. Note:`,
				},
				resource.Attribute{
					Name:        "actionname",
					Description: `(Optional) Name of the DNS action to perform when the rule evaluates to TRUE. The built in actions function as follows:`,
				},
				resource.Attribute{
					Name:        "cachebypass",
					Description: `(Optional) By pass dns cache for this.`,
				},
				resource.Attribute{
					Name:        "drop",
					Description: `(Optional) The dns packet must be dropped.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of the messagelog action to use for requests that match this policy.`,
				},
				resource.Attribute{
					Name:        "preferredlocation",
					Description: `(Optional) The location used for the given policy. This is deprecated attribute. Please use -prefLocList`,
				},
				resource.Attribute{
					Name:        "preferredloclist",
					Description: `(Optional) The location list in priority order used for the given policy.`,
				},
				resource.Attribute{
					Name:        "viewname",
					Description: `(Optional) The view name that must be used for the given policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnspolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A dnspolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnspolicy.dnspolicy policy_A ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnspolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A dnspolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnspolicy.dnspolicy policy_A ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnspolicy64",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnspolicy64 resource is used to create DNS policy64.


`,
			Keywords: []string{
				"dns",
				"dnspolicy64",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the DNS64 policy.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression against which DNS traffic is evaluated. Note:`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Optional) Name of the DNS64 action to perform when the rule evaluates to TRUE. The built in actions function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnspolicy64. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A <resource> can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnspolicy64.dnspolicy64 policy_1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnspolicy64. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A <resource> can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnspolicy64.dnspolicy64 policy_1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnspolicylabel",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnspolicylabel resource is used to create DNS policylabel.


`,
			Keywords: []string{
				"dns",
				"dnspolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name of the dns policy label.`,
				},
				resource.Attribute{
					Name:        "transform",
					Description: `(Required) The type of transformations allowed by the policies bound to the label. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnspolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A dnspolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnspolicylabel.dnspolicylabel label1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnspolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A dnspolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnspolicylabel.dnspolicylabel label1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnspolicylabel_dnspolicy_binding",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnspolicylabel_dnspolicy_binding resource is used to create DNS policylabel policy binding


`,
			Keywords: []string{
				"dns",
				"dnspolicylabel",
				"dnspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The dns policy name.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name of the dns policy label.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Requireed) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "invoke_labelname",
					Description: `(Optional) Name of the label to invoke if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label invocation. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnspolicylabel_dnspolicy_binding. It has the same value as the ` + "`" + `policyname,labelname` + "`" + ` attributes. ## Import A dnspolicylabel_dnspolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnspolicylabel_dnspolicy_binding.dnspolicylabel_dnspolicy_binding policy_A,blue_label ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnspolicylabel_dnspolicy_binding. It has the same value as the ` + "`" + `policyname,labelname` + "`" + ` attributes. ## Import A dnspolicylabel_dnspolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnspolicylabel_dnspolicy_binding.dnspolicylabel_dnspolicy_binding policy_A,blue_label ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnsprofile",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnsprofile resource is used to create DNS profile.


`,
			Keywords: []string{
				"dns",
				"dnsprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "dnsprofilename",
					Description: `(Required) Name of the DNS profile`,
				},
				resource.Attribute{
					Name:        "cacheecsresponses",
					Description: `(Optional) Cache DNS responses with EDNS Client Subnet(ECS) option in the DNS cache. When disabled, the appliance stops caching responses with ECS option. This is relevant to proxy configuration. Enabling/disabling support of ECS option when Citrix ADC is authoritative for a GSLB domain is supported using a knob in GSLB vserver. In all other modes, ECS option is ignored.`,
				},
				resource.Attribute{
					Name:        "cachenegativeresponses",
					Description: `(Optional) Cache negative responses in the DNS cache. When disabled, the appliance stops caching negative responses except referral records. This applies to all configurations - proxy, end resolver, and forwarder. However, cached responses are not flushed. The appliance does not serve negative responses from the cache until this parameter is enabled again.`,
				},
				resource.Attribute{
					Name:        "cacherecords",
					Description: `(Optional) Cache resource records in the DNS cache. Applies to resource records obtained through proxy configurations only. End resolver and forwarder configurations always cache records in the DNS cache, and you cannot disable this behavior. When you disable record caching, the appliance stops caching server responses. However, cached records are not flushed. The appliance does not serve requests from the cache until record caching is enabled again.`,
				},
				resource.Attribute{
					Name:        "dnsanswerseclogging",
					Description: `(Optional) DNS answer section; if enabled, answer section in the response will be logged.`,
				},
				resource.Attribute{
					Name:        "dnserrorlogging",
					Description: `(Optional) DNS error logging; if enabled, whenever error is encountered in DNS module reason for the error will be logged.`,
				},
				resource.Attribute{
					Name:        "dnsextendedlogging",
					Description: `(Optional) DNS extended logging; if enabled, authority and additional section in the response will be logged.`,
				},
				resource.Attribute{
					Name:        "dnsquerylogging",
					Description: `(Optional) DNS query logging; if enabled, DNS query information such as DNS query id, DNS query flags , DNS domain name and DNS query type will be logged`,
				},
				resource.Attribute{
					Name:        "dropmultiqueryrequest",
					Description: `(Optional) Drop the DNS requests containing multiple queries. When enabled, DNS requests containing multiple queries will be dropped. In case of proxy configuration by default the DNS request containing multiple queries is forwarded to the backend and in case of ADNS and Resolver configuration NOCODE error response will be sent to the client. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsprofile. It has the same value as the ` + "`" + `dnprofilename` + "`" + ` attribute. ## Import A dnsprofile can be imported using its dnsprofilename, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsprofile.tf_add tf_profile1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsprofile. It has the same value as the ` + "`" + `dnprofilename` + "`" + ` attribute. ## Import A dnsprofile can be imported using its dnsprofilename, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsprofile.tf_add tf_profile1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnsptrrec",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnsptrrec resource is used to create DNS ptrRec.


`,
			Keywords: []string{
				"dns",
				"dnsptrrec",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "reversedomain",
					Description: `(Required) Reversed domain name representation of the IPv4 or IPv6 address for which to create the PTR record. Use the "in-addr.arpa." suffix for IPv4 addresses and the "ip6.arpa." suffix for IPv6 addresses.`,
				},
				resource.Attribute{
					Name:        "domain",
					Description: `(Required) Domain name for which to configure reverse mapping.`,
				},
				resource.Attribute{
					Name:        "ecssubnet",
					Description: `(Optional) Subnet for which the cached PTR record need to be removed.`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to Live (TTL), in seconds, for the record. TTL is the time for which the record must be cached by DNS proxies. The specified TTL is applied to all the resource records that are of the same record type and belong to the specified domain name. For example, if you add an address record, with a TTL of 36000, to the domain name example.com, the TTLs of all the address records of example.com are changed to 36000. If the TTL is not specified, the Citrix ADC uses either the DNS zone's minimum TTL or, if the SOA record is not available on the appliance, the default value of 3600.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of records to display. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsptrrec. It has the same value as the ` + "`" + `reversedomain` + "`" + ` attribute. ## Import A dnsptrrec can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsptrrec.tf_dnsptrrec 0.2.0.192.in-addr.arpa ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsptrrec. It has the same value as the ` + "`" + `reversedomain` + "`" + ` attribute. ## Import A dnsptrrec can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsptrrec.tf_dnsptrrec 0.2.0.192.in-addr.arpa ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnssoarec",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnssoarec resource is used to create dns SOA records.


`,
			Keywords: []string{
				"dns",
				"dnssoarec",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "domain",
					Description: `(Required) Domain name for which to add the SOA record.`,
				},
				resource.Attribute{
					Name:        "originserver",
					Description: `(Optional) Domain name of the name server that responds authoritatively for the domain.`,
				},
				resource.Attribute{
					Name:        "contact",
					Description: `(Optional) Email address of the contact to whom domain issues can be addressed. In the email address, replace the @ sign with a period (.). For example, enter domainadmin.example.com instead of domainadmin@example.com.`,
				},
				resource.Attribute{
					Name:        "serial",
					Description: `(Optional) The secondary server uses this parameter to determine whether it requires a zone transfer from the primary server.`,
				},
				resource.Attribute{
					Name:        "refresh",
					Description: `(Optional) Time, in seconds, for which a secondary server must wait between successive checks on the value of the serial number.`,
				},
				resource.Attribute{
					Name:        "retry",
					Description: `(Optional) Time, in seconds, between retries if a secondary server's attempt to contact the primary server for a zone refresh fails.`,
				},
				resource.Attribute{
					Name:        "expire",
					Description: `(Optional) Time, in seconds, after which the zone data on a secondary name server can no longer be considered authoritative because all refresh and retry attempts made during the period have failed. After the expiry period, the secondary server stops serving the zone. Typically one week. Not used by the primary server.`,
				},
				resource.Attribute{
					Name:        "minimum",
					Description: `(Optional) Default time to live (TTL) for all records in the zone. Can be overridden for individual records.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to Live (TTL), in seconds, for the record. TTL is the time for which the record must be cached by DNS proxies. The specified TTL is applied to all the resource records that are of the same record type and belong to the specified domain name. For example, if you add an address record, with a TTL of 36000, to the domain name example.com, the TTLs of all the address records of example.com are changed to 36000. If the TTL is not specified, the Citrix ADC uses either the DNS zone's minimum TTL or, if the SOA record is not available on the appliance, the default value of 3600.`,
				},
				resource.Attribute{
					Name:        "ecssubnet",
					Description: `(Optional) Subnet for which the cached SOA record need to be removed.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of records to display. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnssoarec. It has the same value as the ` + "`" + `domain` + "`" + ` attribute. ## Import A dnssoarec can be imported using its domain, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnssoarec.tf_dnssoarec hello.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnssoarec. It has the same value as the ` + "`" + `domain` + "`" + ` attribute. ## Import A dnssoarec can be imported using its domain, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnssoarec.tf_dnssoarec hello.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnssrvrec",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnssrvrec resource is used to create DNS srvrec.


`,
			Keywords: []string{
				"dns",
				"dnssrvrec",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "domain",
					Description: `(Required) Domain name, which, by convention, is prefixed by the symbolic name of the desired service and the symbolic name of the desired protocol, each with an underscore (_) prepended. For example, if an SRV-aware client wants to discover a SIP service that is provided over UDP, in the domain example.com, the client performs a lookup for _sip._udp.example.com.`,
				},
				resource.Attribute{
					Name:        "ecssubnet",
					Description: `(Optional) Subnet for which the cached SRV record need to be removed.`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Required) Port on which the target host listens for client requests.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Integer specifying the priority of the target host. The lower the number, the higher the priority. If multiple target hosts have the same priority, selection is based on the Weight parameter.`,
				},
				resource.Attribute{
					Name:        "target",
					Description: `(Required) Target host for the specified service.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to Live (TTL), in seconds, for the record. TTL is the time for which the record must be cached by DNS proxies. The specified TTL is applied to all the resource records that are of the same record type and belong to the specified domain name. For example, if you add an address record, with a TTL of 36000, to the domain name example.com, the TTLs of all the address records of example.com are changed to 36000. If the TTL is not specified, the Citrix ADC uses either the DNS zone's minimum TTL or, if the SOA record is not available on the appliance, the default value of 3600.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of records to display. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Required) Weight for the target host. Aids host selection when two or more hosts have the same priority. A larger number indicates greater weight. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnssrvrec. It has the same value as the ` + "`" + `domain` + "`" + ` attribute. ## Import A dnssrvrec can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnssrvrec.dnssrvrec example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnssrvrec. It has the same value as the ` + "`" + `domain` + "`" + ` attribute. ## Import A dnssrvrec can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnssrvrec.dnssrvrec example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnssuffix",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnssuffix resource is used to create DNS suffix.


`,
			Keywords: []string{
				"dns",
				"dnssuffix",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "Dnssuffix",
					Description: `(Required) Suffix to be appended when resolving domain names that are not fully qualified. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnssuffix. It has the same value as the ` + "`" + `dnssuffix` + "`" + ` attribute. ## Import A dnssuffix can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnssuffix.tf_dnssuffix tf_dnssuffix ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnssuffix. It has the same value as the ` + "`" + `dnssuffix` + "`" + ` attribute. ## Import A dnssuffix can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnssuffix.tf_dnssuffix tf_dnssuffix ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnstxtrec",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnstxtrec resource is used to create DNS txtrec.


`,
			Keywords: []string{
				"dns",
				"dnstxtrec",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "String",
					Description: `(Required) Information to store in the TXT resource record. Enclose the string in single or double quotation marks. A TXT resource record can contain up to six strings, each of which can contain up to 255 characters. If you want to add a string of more than 255 characters, evaluate whether splitting it into two or more smaller strings, subject to the six-string limit, works for you.`,
				},
				resource.Attribute{
					Name:        "domain",
					Description: `(Required) Name of the domain for the TXT record.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to Live (TTL), in seconds, for the record. TTL is the time for which the record must be cached by DNS proxies. The specified TTL is applied to all the resource records that are of the same record type and belong to the specified domain name. For example, if you add an address record, with a TTL of 36000, to the domain name example.com, the TTLs of all the address records of example.com are changed to 36000. If the TTL is not specified, the Citrix ADC uses either the DNS zone's minimum TTL or, if the SOA record is not available on the appliance, the default value of 3600. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnstxtrec. It has the same value as the ` + "`" + `domain` + "`" + ` attribute. ## Import A dnstxtrec can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnstxtrec.dnstxtrec example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnstxtrec. It has the same value as the ` + "`" + `domain` + "`" + ` attribute. ## Import A dnstxtrec can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnstxtrec.dnstxtrec example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnsview",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnsview resource is used to create DNS view.


`,
			Keywords: []string{
				"dns",
				"dnsview",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "viewname",
					Description: `(Required) Name for the DNS view. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsview. It has the same value as the ` + "`" + `viewname` + "`" + ` attribute. ## Import A dnsview can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsview.tf_dnsview view3 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnsview. It has the same value as the ` + "`" + `viewname` + "`" + ` attribute. ## Import A dnsview can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnsview.tf_dnsview view3 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_dnszone",
			Category:         "DNS",
			ShortDescription: ``,
			Description: `

The dnszone resource is used to create DNS zone.


`,
			Keywords: []string{
				"dns",
				"dnszone",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "zonename",
					Description: `(Required) Name of the zone to create.`,
				},
				resource.Attribute{
					Name:        "proxymode",
					Description: `(Reqiured) Deploy the zone in proxy mode. Enable in the following scenarios:`,
				},
				resource.Attribute{
					Name:        "dnssecoffload",
					Description: `(Optional) Enable dnssec offload for this zone.`,
				},
				resource.Attribute{
					Name:        "keyname",
					Description: `(Optional) Name of the public/private DNS key pair with which to sign the zone. You can sign a zone with up to four keys.`,
				},
				resource.Attribute{
					Name:        "nsec",
					Description: `(Optional) Enable nsec generation for dnssec offload.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of zone to display. Mutually exclusive with the DNS Zone (zoneName) parameter. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnszone. It has the same value as the ` + "`" + `zonename` + "`" + ` attribute. ## Import A dnszone can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnszone.dnszone tf_zone1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the dnszone. It has the same value as the ` + "`" + `zonename` + "`" + ` attribute. ## Import A dnszone can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_dnszone.dnszone tf_zone1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_extendedmemoryparam",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The extendedmemoryparam resource is used to create Parameter for extended memory used by LSN and Subscriber Store resource.


`,
			Keywords: []string{
				"basic",
				"extendedmemoryparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "memlimit",
					Description: `(Required) Amount of Citrix ADC memory to reserve for the memory used by LSN and Subscriber Session Store feature, in multiples of 2MB. Note: If you later reduce the value of this parameter, the amount of active memory is not reduced. Changing the configured memory limit can only increase the amount of active memory. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the extendedmemoryparam. It is a unique string prefixed with "tf-extendedmemoryparam-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the extendedmemoryparam. It is a unique string prefixed with "tf-extendedmemoryparam-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_feoaction",
			Category:         "Front-end-optimization",
			ShortDescription: ``,
			Description: `

The feoaction resource is used to create feoaction.


`,
			Keywords: []string{
				"front",
				"end",
				"optimization",
				"feoaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) The name of the front end optimization action. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "pageextendcache",
					Description: `(Optional) Extend the time period during which the browser can use the cached resource.`,
				},
				resource.Attribute{
					Name:        "cachemaxage",
					Description: `(Optional) Maxage for cache extension. Minimum value = 0 Maximum value = 360`,
				},
				resource.Attribute{
					Name:        "imgshrinktoattrib",
					Description: `(Optional) Shrink image dimensions as per the height and width attributes specified in the <img> tag.`,
				},
				resource.Attribute{
					Name:        "imggiftopng",
					Description: `(Optional) Convert GIF image formats to PNG formats.`,
				},
				resource.Attribute{
					Name:        "imgtowebp",
					Description: `(Optional) Convert JPEG, GIF, PNG image formats to WEBP format.`,
				},
				resource.Attribute{
					Name:        "imgtojpegxr",
					Description: `(Optional) Convert JPEG, GIF, PNG image formats to JXR format.`,
				},
				resource.Attribute{
					Name:        "imginline",
					Description: `(Optional) Inline images whose size is less than 2KB.`,
				},
				resource.Attribute{
					Name:        "cssimginline",
					Description: `(Optional) Inline small images (less than 2KB) referred within CSS files as background-URLs.`,
				},
				resource.Attribute{
					Name:        "jpgoptimize",
					Description: `(Optional) Remove non-image data such as comments from JPEG images.`,
				},
				resource.Attribute{
					Name:        "imglazyload",
					Description: `(Optional) Download images, only when the user scrolls the page to view them.`,
				},
				resource.Attribute{
					Name:        "cssminify",
					Description: `(Optional) Remove comments and whitespaces from CSSs.`,
				},
				resource.Attribute{
					Name:        "cssinline",
					Description: `(Optional) Inline CSS files, whose size is less than 2KB, within the main page.`,
				},
				resource.Attribute{
					Name:        "csscombine",
					Description: `(Optional) Combine one or more CSS files into one file.`,
				},
				resource.Attribute{
					Name:        "convertimporttolink",
					Description: `(Optional) Convert CSS import statements to HTML link tags.`,
				},
				resource.Attribute{
					Name:        "jsminify",
					Description: `(Optional) Remove comments and whitespaces from JavaScript.`,
				},
				resource.Attribute{
					Name:        "jsinline",
					Description: `(Optional) Convert linked JavaScript files (less than 2KB) to inline JavaScript files.`,
				},
				resource.Attribute{
					Name:        "htmlminify",
					Description: `(Optional) Remove comments and whitespaces from an HTML page.`,
				},
				resource.Attribute{
					Name:        "cssmovetohead",
					Description: `(Optional) Move any CSS file present within the body tag of an HTML page to the head tag.`,
				},
				resource.Attribute{
					Name:        "jsmovetoend",
					Description: `(Optional) Move any JavaScript present in the body tag to the end of the body tag.`,
				},
				resource.Attribute{
					Name:        "domainsharding",
					Description: `(Optional) Domain name of the server.`,
				},
				resource.Attribute{
					Name:        "dnsshards",
					Description: `(Optional) Set of domain names that replaces the parent domain.`,
				},
				resource.Attribute{
					Name:        "clientsidemeasurements",
					Description: `(Optional) Send AppFlow records about the web pages optimized by this action. The records provide FEO statistics, such as the number of HTTP requests that have been reduced for this page. You must enable the Appflow feature before enabling this parameter. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the feoaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A feoaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_feoaction.tf_feoaction my_feoaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the feoaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A feoaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_feoaction.tf_feoaction my_feoaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_feoglobal_feopolicy_binding",
			Category:         "Front-end-optimization",
			ShortDescription: ``,
			Description: `

The feoglobal_feopolicy_binding resource is used to create feoglobal_feopolicy_binding.


`,
			Keywords: []string{
				"front",
				"end",
				"optimization",
				"feoglobal",
				"feopolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the globally bound front end optimization policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority assigned to the policy binding.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQ_OVERRIDE, REQ_DEFAULT, RES_OVERRIDE, RES_DEFAULT, HTTPQUIC_REQ_OVERRIDE, HTTPQUIC_REQ_DEFAULT, NONE ]`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the feoglobal_feopolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A feoglobal_feopolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_feoglobal_feopolicy_binding.tf_feoglobal_feopolicy_binding my_feopolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the feoglobal_feopolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A feoglobal_feopolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_feoglobal_feopolicy_binding.tf_feoglobal_feopolicy_binding my_feopolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_feoparameter",
			Category:         "Front-end-optimization",
			ShortDescription: ``,
			Description: `

The feoparameter resource is used to update feoparameter.


`,
			Keywords: []string{
				"front",
				"end",
				"optimization",
				"feoparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "jpegqualitypercent",
					Description: `(Optional) The percentage value of a JPEG image quality to be reduced. Range: 0 - 100. Minimum value = 0 Maximum value = 100 Default value = 75`,
				},
				resource.Attribute{
					Name:        "cssinlinethressize",
					Description: `(Optional) Threshold value of the file size (in bytes) for converting external CSS files to inline CSS files. Minimum value = 1 Maximum value = 2048`,
				},
				resource.Attribute{
					Name:        "jsinlinethressize",
					Description: `(Optional) Threshold value of the file size (in bytes), for converting external JavaScript files to inline JavaScript files. Minimum value = 1 Maximum value = 2048`,
				},
				resource.Attribute{
					Name:        "imginlinethressize",
					Description: `(Optional) Maximum file size of an image (in bytes), for coverting linked images to inline images. Minimum value = 1 Maximum value = 2048 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the feoparameter. It is a unique string prefixed with ` + "`" + `tf-feoparameter-` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the feoparameter. It is a unique string prefixed with ` + "`" + `tf-feoparameter-` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_feopolicy",
			Category:         "Front-end-optimization",
			ShortDescription: ``,
			Description: `

The feopolicy resource is used to createfeopolicy.


`,
			Keywords: []string{
				"front",
				"end",
				"optimization",
				"feopolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) The name of the front end optimization policy. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) The rule associated with the front end optimization policy.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) The front end optimization action that has to be performed when the rule matches. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the feopolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A feopolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csaction.tf_csaction tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the feopolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A feopolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_csaction.tf_csaction tf_csaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_filteraction",
			Category:         "Filter",
			ShortDescription: ``,
			Description: `

The filteraction resource is used to create Filter Action Resource.


`,
			Keywords: []string{
				"filter",
				"filteraction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the filtering action. Must begin with a letter, number, or the underscore character (_). Other characters allowed, after the first character, are the hyphen (-), period (.) hash (#), space ( ), at sign (@), equals (=), and colon (:) characters. Choose a name that helps identify the type of action. The name of a filter action cannot be changed after it is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action').`,
				},
				resource.Attribute{
					Name:        "qual",
					Description: `(Required) Qualifier, which is the action to be performed. The qualifier cannot be changed after it is set. The available options function as follows: ADD - Adds the specified HTTP header. RESET - Terminates the connection, sending the appropriate termination notice to the user's browser. FORWARD - Redirects the request to the designated service. You must specify either a service name or a page, but not both. DROP - Silently deletes the request, without sending a response to the user's browser. CORRUPT - Modifies the designated HTTP header to prevent it from performing the function it was intended to perform, then sends the request/response to the server/browser. ERRORCODE. Returns the designated HTTP error code to the user's browser (for example, 404, the standard HTTP code for a non-existent Web page).`,
				},
				resource.Attribute{
					Name:        "page",
					Description: `(Optional) HTML page to return for HTTP requests (For use with the ERRORCODE qualifier).`,
				},
				resource.Attribute{
					Name:        "respcode",
					Description: `(Optional) Response code to be returned for HTTP requests (for use with the ERRORCODE qualifier).`,
				},
				resource.Attribute{
					Name:        "servicename",
					Description: `(Optional) Service to which to forward HTTP requests. Required if the qualifier is FORWARD.`,
				},
				resource.Attribute{
					Name:        "value",
					Description: `(Optional) String containing the header_name and header_value. If the qualifier is ADD, specify <header_name>:<header_value>. If the qualifier is CORRUPT, specify only the header_name ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the filteraction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A filteraction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_filteraction.tf_filteraction tf_filteraction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the filteraction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A filteraction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_filteraction.tf_filteraction tf_filteraction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_filterglobal_filterpolicy_binding",
			Category:         "Filter",
			ShortDescription: ``,
			Description: `

The filterglobal_filterpolicy_binding resource is used to bind a filter policy globally.


`,
			Keywords: []string{
				"filter",
				"filterglobal",
				"filterpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the filter policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority of the policy.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) State of the binding. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the filterglobal_filterpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A filterglobal_filterpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_filterglobal_filterpolicy_binding.tf_filterglobal tf_filterpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the filterglobal_filterpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A filterglobal_filterpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_filterglobal_filterpolicy_binding.tf_filterglobal tf_filterpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_filterpolicy",
			Category:         "Filter",
			ShortDescription: ``,
			Description: `

The filterpolicy resource is used to create filter policies.


`,
			Keywords: []string{
				"filter",
				"filterpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the filtering action. Must begin with a letter, number, or the underscore character (\_). Other characters allowed, after the first character, are the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), and colon (:) characters. Choose a name that helps identify the type of action. The name cannot be updated after the policy is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policy" or 'my policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Citrix ADC classic expression specifying the type of connections that match this policy.`,
				},
				resource.Attribute{
					Name:        "reqaction",
					Description: `(Optional) Name of the action to be performed on requests that match the policy. Cannot be specified if the rule includes condition to be evaluated for responses.`,
				},
				resource.Attribute{
					Name:        "resaction",
					Description: `(Optional) The action to be performed on the response. The string value can be a filter action created filter action or a built-in action. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the filterpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A filterpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_filterpolicy.tf_filterpolicy tf_filterpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the filterpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A filterpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_filterpolicy.tf_filterpolicy tf_filterpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_fis",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The fis resource is used to create fis resource.


`,
			Keywords: []string{
				"network",
				"fis",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the FIS to be created. Leading character must be a number or letter. Other characters allowed, after the first character, are @ _ - . (period) : (colon) # and space ( ). Note: In a cluster setup, the FIS name on each node must be unique.`,
				},
				resource.Attribute{
					Name:        "ownernode",
					Description: `(Optional) ID of the cluster node for which you are creating the FIS. Can be configured only through the cluster IP address. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the fis. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A fis can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_fis.tf_fis tf_fis ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the fis. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A fis can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_fis.tf_fis tf_fis ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_forwardingsession",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The forwardingsession resource is used to create session forward resource.


`,
			Keywords: []string{
				"network",
				"forwardingsession",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(required) Name for the forwarding session rule. Can begin with a letter, number, or the underscore character (_), and can consist of letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the rule is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my rule" or 'my rule').`,
				},
				resource.Attribute{
					Name:        "acl6name",
					Description: `(Optional) Name of any configured ACL6 whose action is ALLOW. The rule of the ACL6 is used as a forwarding session rule.`,
				},
				resource.Attribute{
					Name:        "aclname",
					Description: `(Optional) Name of any configured ACL whose action is ALLOW. The rule of the ACL is used as a forwarding session rule.`,
				},
				resource.Attribute{
					Name:        "connfailover",
					Description: `(Optional) Synchronize connection information with the secondary appliance in a high availability (HA) pair. That is, synchronize all connection-related information for the forwarding session.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) Subnet mask associated with the network.`,
				},
				resource.Attribute{
					Name:        "network",
					Description: `(Optional) An IPv4 network address or IPv6 prefix of a network from which the forwarded traffic originates or to which it is destined.`,
				},
				resource.Attribute{
					Name:        "processlocal",
					Description: `(Optional) Enabling this option on forwarding session will not steer the packet to flow processor. Instead, packet will be routed.`,
				},
				resource.Attribute{
					Name:        "sourceroutecache",
					Description: `(Optional) Cache the source ip address and mac address of the DA servers.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the forwardingsession. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A forwardingsession can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_forwardingsession.tf_forwarding tf_forwarding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the forwardingsession. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A forwardingsession can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_forwardingsession.tf_forwarding tf_forwarding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_gslbparameter",
			Category:         "GSLB",
			ShortDescription: ``,
			Description: `

The gslbparameter resource is used to create gslbparameter.


`,
			Keywords: []string{
				"gslb",
				"gslbparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "automaticconfigsync",
					Description: `(Optional) GSLB configuration will be synced automatically to remote gslb sites if enabled.`,
				},
				resource.Attribute{
					Name:        "dropldnsreq",
					Description: `(Optional) Drop LDNS requests if round-trip time (RTT) information is not available.`,
				},
				resource.Attribute{
					Name:        "gslbconfigsyncmonitor",
					Description: `(Optional) If enabled, remote gslb site's rsync port will be monitored and site is considered for configuration sync only when the monitor is successful.`,
				},
				resource.Attribute{
					Name:        "gslbsvcstatedelaytime",
					Description: `(Optional) Amount of delay in updating the state of GSLB service to DOWN when MEP goes down. This parameter is applicable only if monitors are not bound to GSLB services`,
				},
				resource.Attribute{
					Name:        "gslbsyncinterval",
					Description: `(Optional) Time duartion (in seconds) for which the gslb sync process will wait before checking for config changes.`,
				},
				resource.Attribute{
					Name:        "gslbsynclocfiles",
					Description: `(Optional) If disabled, Location files will not be synced to the remote sites as part of automatic sync.`,
				},
				resource.Attribute{
					Name:        "gslbsyncmode",
					Description: `(Optional) Mode in which configuration will be synced from master site to remote sites.`,
				},
				resource.Attribute{
					Name:        "ldnsentrytimeout",
					Description: `(Optional) Time, in seconds, after which an inactive LDNS entry is removed.`,
				},
				resource.Attribute{
					Name:        "ldnsmask",
					Description: `(Optional) The IPv4 network mask with which to create LDNS entries.`,
				},
				resource.Attribute{
					Name:        "ldnsprobeorder",
					Description: `(Optional) Order in which monitors should be initiated to calculate RTT.`,
				},
				resource.Attribute{
					Name:        "mepkeepalivetimeout",
					Description: `(Optional) Time duartion (in seconds) during which if no new packets received by Local gslb site from Remote gslb site then mark the MEP connection DOWN`,
				},
				resource.Attribute{
					Name:        "rtttolerance",
					Description: `(Optional) Tolerance, in milliseconds, for newly learned round-trip time (RTT) values. If the difference between the old RTT value and the newly computed RTT value is less than or equal to the specified tolerance value, the LDNS entry in the network metric table is not updated with the new RTT value. Prevents the exchange of metrics when variations in RTT values are negligible.`,
				},
				resource.Attribute{
					Name:        "svcstatelearningtime",
					Description: `(Optional) Time (in seconds) within which local or child site services remain in learning phase. GSLB site will enter the learning phase after reboot, HA failover, Cluster GSLB owner node changes or MEP being enabled on local node. Backup parent (if configured) will selectively move the adopted children's GSLB services to learning phase when primary parent goes down. While a service is in learning period, remote site will not honour the state and stats got through MEP for that service. State can be learnt from health monitor if bound explicitly.`,
				},
				resource.Attribute{
					Name:        "v6ldnsmasklen",
					Description: `(Optional) Mask for creating LDNS entries for IPv6 source addresses. The mask is defined as the number of leading bits to consider, in the source IP address, when creating an LDNS entry. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbparameter. It is a unique string prefixed with "tf-gslbparameter-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbparameter. It is a unique string prefixed with "tf-gslbparameter-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_gslbservice",
			Category:         "GSLB",
			ShortDescription: ``,
			Description: `

This resource is used to manage Global Server Load Balancing service.


`,
			Keywords: []string{
				"gslb",
				"gslbservice",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servicename",
					Description: `(Optional) Name for the GSLB service.`,
				},
				resource.Attribute{
					Name:        "cnameentry",
					Description: `(Optional) Canonical name of the GSLB service. Used in CNAME-based GSLB.`,
				},
				resource.Attribute{
					Name:        "ip",
					Description: `(Optional) IP address for the GSLB service. Should represent a load balancing, content switching, or VPN virtual server on the Citrix ADC, or the IP address of another load balancing device.`,
				},
				resource.Attribute{
					Name:        "servername",
					Description: `(Optional) Name of the server hosting the GSLB service.`,
				},
				resource.Attribute{
					Name:        "servicetype",
					Description: `(Optional) Type of service to create. Possible values: [ HTTP, FTP, TCP, UDP, SSL, SSL\_BRIDGE, SSL\_TCP, NNTP, ANY, SIP\_UDP, SIP\_TCP, SIP\_SSL, RADIUS, RDP, RTSP, MYSQL, MSSQL, ORACLE ]`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Port on which the load balancing entity represented by this GSLB service listens.`,
				},
				resource.Attribute{
					Name:        "publicip",
					Description: `(Optional) The public IP address that a NAT device translates to the GSLB service's private IP address. Optional.`,
				},
				resource.Attribute{
					Name:        "publicport",
					Description: `(Optional) The public port associated with the GSLB service's public IP address. The port is mapped to the service's private port number. Applicable to the local GSLB service.`,
				},
				resource.Attribute{
					Name:        "maxclient",
					Description: `(Optional) The maximum number of open connections that the service can support at any given time. A GSLB service whose connection count reaches the maximum is not considered when a GSLB decision is made, until the connection count drops below the maximum.`,
				},
				resource.Attribute{
					Name:        "healthmonitor",
					Description: `(Optional) Monitor the health of the GSLB service. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "sitename",
					Description: `(Optional) Name of the GSLB site to which the service belongs.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enable or disable the service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "cip",
					Description: `(Optional) In the request that is forwarded to the GSLB service, insert a header that stores the client's IP address. Client IP header insertion is used in connection-proxy based site persistence. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "cipheader",
					Description: `(Optional) Name for the HTTP header that stores the client's IP address. Used with the Client IP option. If client IP header insertion is enabled on the service and a name is not specified for the header, the Citrix ADC uses the name specified by the cipHeader parameter in the set ns param command or, in the GUI, the Client IP Header parameter in the Configure HTTP Parameters dialog box.`,
				},
				resource.Attribute{
					Name:        "sitepersistence",
					Description: `(Optional) Use cookie-based site persistence. Applicable only to HTTP and SSL GSLB services. Possible values: [ ConnectionProxy, HTTPRedirect, NONE ]`,
				},
				resource.Attribute{
					Name:        "cookietimeout",
					Description: `(Optional) Timeout value, in minutes, for the cookie, when cookie based site persistence is enabled.`,
				},
				resource.Attribute{
					Name:        "siteprefix",
					Description: `(Optional) The site's prefix string. When the service is bound to a GSLB virtual server, a GSLB site domain is generated internally for each bound service-domain pair by concatenating the site prefix of the service and the name of the domain. If the special string NONE is specified, the site-prefix string is unset. When implementing HTTP redirect site persistence, the Citrix ADC redirects GSLB requests to GSLB services by using their site domains.`,
				},
				resource.Attribute{
					Name:        "clttimeout",
					Description: `(Optional) Idle time, in seconds, after which a client connection is terminated. Applicable if connection proxy based site persistence is used.`,
				},
				resource.Attribute{
					Name:        "svrtimeout",
					Description: `(Optional) Idle time, in seconds, after which a server connection is terminated. Applicable if connection proxy based site persistence is used.`,
				},
				resource.Attribute{
					Name:        "maxbandwidth",
					Description: `(Optional) Integer specifying the maximum bandwidth allowed for the service. A GSLB service whose bandwidth reaches the maximum is not considered when a GSLB decision is made, until its bandwidth consumption drops below the maximum.`,
				},
				resource.Attribute{
					Name:        "downstateflush",
					Description: `(Optional) Flush all active transactions associated with the GSLB service when its state transitions from UP to DOWN. Do not enable this option for services that must complete their transactions. Applicable if connection proxy based site persistence is used. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "maxaaausers",
					Description: `(Optional) Maximum number of SSL VPN users that can be logged on concurrently to the VPN virtual server that is represented by this GSLB service. A GSLB service whose user count reaches the maximum is not considered when a GSLB decision is made, until the count drops below the maximum.`,
				},
				resource.Attribute{
					Name:        "monthreshold",
					Description: `(Optional) Monitoring threshold value for the GSLB service. If the sum of the weights of the monitors that are bound to this GSLB service and are in the UP state is not equal to or greater than this threshold value, the service is marked as DOWN.`,
				},
				resource.Attribute{
					Name:        "hashid",
					Description: `(Optional) Unique hash identifier for the GSLB service, used by hash based load balancing methods.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments that you might want to associate with the GSLB service.`,
				},
				resource.Attribute{
					Name:        "appflowlog",
					Description: `(Optional) Enable logging appflow flow information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "naptrreplacement",
					Description: `(Optional) The replacement domain name for this NAPTR.`,
				},
				resource.Attribute{
					Name:        "naptrorder",
					Description: `(Optional) An integer specifying the order in which the NAPTR records MUST be processed in order to accurately represent the ordered list of Rules. The ordering is from lowest to highest.`,
				},
				resource.Attribute{
					Name:        "naptrservices",
					Description: `(Optional) Service Parameters applicable to this delegation path.`,
				},
				resource.Attribute{
					Name:        "naptrdomainttl",
					Description: `(Optional) Modify the TTL of the internally created naptr domain.`,
				},
				resource.Attribute{
					Name:        "naptrpreference",
					Description: `(Optional) An integer specifying the preference of this NAPTR among NAPTR records having same order. lower the number, higher the preference.`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Optional) The new IP address of the service.`,
				},
				resource.Attribute{
					Name:        "viewname",
					Description: `(Optional) Name of the DNS view of the service. A DNS view is used in global server load balancing (GSLB) to return a predetermined IP address to a specific group of clients, which are identified by using a DNS policy.`,
				},
				resource.Attribute{
					Name:        "viewip",
					Description: `(Optional) IP address to be used for the given view.`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the monitor-service binding. A larger number specifies a greater weight. Contributes to the monitoring threshold, which determines the state of the service.`,
				},
				resource.Attribute{
					Name:        "monitornamesvc",
					Description: `(Optional) Name of the monitor to bind to the service.`,
				},
				resource.Attribute{
					Name:        "delay",
					Description: `(Optional) Delay to wait for service to be disabled.`,
				},
				resource.Attribute{
					Name:        "lbmonitorbinding",
					Description: `(Optional) A set of lb monitor blocks. Documented below Lb monitor supports the following:`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the monitor-service binding. A larger number specifies a greater weight. Contributes to the monitoring threshold, which determines the state of the service.`,
				},
				resource.Attribute{
					Name:        "monitor_name",
					Description: `(Optional) Monitor name.`,
				},
				resource.Attribute{
					Name:        "monstate",
					Description: `(Optional) State of the monitor bound to gslb service. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the glsbservice. It has the same value as the ` + "`" + `servicename` + "`" + ` attribute. ## Import An instance of the resource can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbservice.tf_gslbservice tf_gslbservice ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the glsbservice. It has the same value as the ` + "`" + `servicename` + "`" + ` attribute. ## Import An instance of the resource can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbservice.tf_gslbservice tf_gslbservice ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_gslbservice_dnsview_binding",
			Category:         "GSLB",
			ShortDescription: ``,
			Description: `

The gslbservice_dnsview_binding resource is used to create gslbservice_dnsview_binding.


`,
			Keywords: []string{
				"gslb",
				"gslbservice",
				"dnsview",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servicename",
					Description: `(Required) Name of the GSLB service.`,
				},
				resource.Attribute{
					Name:        "viewname",
					Description: `(Required) Name of the DNS view of the service. A DNS view is used in global server load balancing (GSLB) to return a predetermined IP address to a specific group of clients, which are identified by using a DNS policy.`,
				},
				resource.Attribute{
					Name:        "viewip",
					Description: `(Optional) IP address to be used for the given view ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbservice_dnsview_binding. It is the concatenation of the ` + "`" + `servicename` + "`" + ` and ` + "`" + `viewname` + "`" + ` attributes separated by a comma. ## Import A gslbservice_dnsview_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbservice_dnsview_binding.tf_gslbservice_dnsview_binding gslb1vservice,view1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbservice_dnsview_binding. It is the concatenation of the ` + "`" + `servicename` + "`" + ` and ` + "`" + `viewname` + "`" + ` attributes separated by a comma. ## Import A gslbservice_dnsview_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbservice_dnsview_binding.tf_gslbservice_dnsview_binding gslb1vservice,view1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_gslbservice_lbmonitor_binding",
			Category:         "GSLB",
			ShortDescription: ``,
			Description: `

The gslbservice_lbmonitor_binding resource is used to create gslbservice_lbmonitor_binding.


`,
			Keywords: []string{
				"gslb",
				"gslbservice",
				"lbmonitor",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servicename",
					Description: `(Required) Name of the GSLB service.`,
				},
				resource.Attribute{
					Name:        "monitor_name",
					Description: `(Required) Monitor name.`,
				},
				resource.Attribute{
					Name:        "monstate",
					Description: `(Optional) State of the monitor bound to gslb service.`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the monitor-service binding. A larger number specifies a greater weight. Contributes to the monitoring threshold, which determines the state of the service. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbservice_lbmonitor_binding is the concatenation of the ` + "`" + `servicename` + "`" + ` and ` + "`" + `monitor_name` + "`" + ` attributes separated by a comma. ## Import A gslbservice_lbmonitor_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbservice_lbmonitor_binding.tf_gslbservice_lbmonitor_binding test_gslb1vservice,test_monitor ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbservice_lbmonitor_binding is the concatenation of the ` + "`" + `servicename` + "`" + ` and ` + "`" + `monitor_name` + "`" + ` attributes separated by a comma. ## Import A gslbservice_lbmonitor_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbservice_lbmonitor_binding.tf_gslbservice_lbmonitor_binding test_gslb1vservice,test_monitor ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_gslbservicegroup",
			Category:         "GSLB",
			ShortDescription: ``,
			Description: `

The gslbservicegroup resource is used to create gslbservicegroup.


`,
			Keywords: []string{
				"gslb",
				"gslbservicegroup",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servicegroupname",
					Description: `(Required) Name of the GSLB service group. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Can be changed after the name is created.`,
				},
				resource.Attribute{
					Name:        "appflowlog",
					Description: `(Optional) Enable logging of AppFlow information for the specified GSLB service group.`,
				},
				resource.Attribute{
					Name:        "autoscale",
					Description: `(Optional) Auto scale option for a GSLB servicegroup`,
				},
				resource.Attribute{
					Name:        "cip",
					Description: `(Optional) Insert the Client IP header in requests forwarded to the GSLB service.`,
				},
				resource.Attribute{
					Name:        "cipheader",
					Description: `(Optional) Name of the HTTP header whose value must be set to the IP address of the client. Used with the Client IP parameter. If client IP insertion is enabled, and the client IP header is not specified, the value of Client IP Header parameter or the value set by the set ns config command is used as client's IP header name.`,
				},
				resource.Attribute{
					Name:        "clttimeout",
					Description: `(Optional) Time, in seconds, after which to terminate an idle client connection.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any information about the GSLB service group.`,
				},
				resource.Attribute{
					Name:        "delay",
					Description: `(Optional) The time allowed (in seconds) for a graceful shutdown. During this period, new connections or requests will continue to be sent to this service for clients who already have a persistent session on the system. Connections or requests from fresh or new clients who do not yet have a persistence sessions on the system will not be sent to the service. Instead, they will be load balanced among other available services. After the delay time expires, no new requests or connections will be sent to the service.`,
				},
				resource.Attribute{
					Name:        "downstateflush",
					Description: `(Optional) Flush all active transactions associated with all the services in the GSLB service group whose state transitions from UP to DOWN. Do not enable this option for applications that must complete their transactions.`,
				},
				resource.Attribute{
					Name:        "dup_weight",
					Description: `(Optional) weight of the monitor that is bound to GSLB servicegroup.`,
				},
				resource.Attribute{
					Name:        "graceful",
					Description: `(Optional) Wait for all existing connections to the service to terminate before shutting down the service.`,
				},
				resource.Attribute{
					Name:        "hashid",
					Description: `(Optional) The hash identifier for the service. This must be unique for each service. This parameter is used by hash based load balancing methods.`,
				},
				resource.Attribute{
					Name:        "healthmonitor",
					Description: `(Optional) Monitor the health of this GSLB service.Available settings function are as follows: YES - Send probes to check the health of the GSLB service. NO - Do not send probes to check the health of the GSLB service. With the NO option, the appliance shows the service as UP at all times.`,
				},
				resource.Attribute{
					Name:        "includemembers",
					Description: `(Optional) Display the members of the listed GSLB service groups in addition to their settings. Can be specified when no service group name is provided in the command. In that case, the details displayed for each service group are identical to the details displayed when a service group name is provided, except that bound monitors are not displayed.`,
				},
				resource.Attribute{
					Name:        "maxbandwidth",
					Description: `(Optional) Maximum bandwidth, in Kbps, allocated for all the services in the GSLB service group.`,
				},
				resource.Attribute{
					Name:        "maxclient",
					Description: `(Optional) Maximum number of simultaneous open connections for the GSLB service group.`,
				},
				resource.Attribute{
					Name:        "monitor_name_svc",
					Description: `(Optional) Name of the monitor bound to the GSLB service group. Used to assign a weight to the monitor.`,
				},
				resource.Attribute{
					Name:        "monthreshold",
					Description: `(Optional) Minimum sum of weights of the monitors that are bound to this GSLB service. Used to determine whether to mark a GSLB service as UP or DOWN.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Server port number.`,
				},
				resource.Attribute{
					Name:        "publicip",
					Description: `(Optional) The public IP address that a NAT device translates to the GSLB service's private IP address. Optional.`,
				},
				resource.Attribute{
					Name:        "publicport",
					Description: `(Optional) The public port associated with the GSLB service's public IP address. The port is mapped to the service's private port number. Applicable to the local GSLB service. Optional.`,
				},
				resource.Attribute{
					Name:        "servername",
					Description: `(Optional) Name of the server to which to bind the service group.`,
				},
				resource.Attribute{
					Name:        "servicetype",
					Description: `(Optional) Protocol used to exchange data with the GSLB service.`,
				},
				resource.Attribute{
					Name:        "sitename",
					Description: `(Optional) Name of the GSLB site to which the service group belongs.`,
				},
				resource.Attribute{
					Name:        "sitepersistence",
					Description: `(Optional) Use cookie-based site persistence. Applicable only to HTTP and SSL non-autoscale enabled GSLB servicegroups.`,
				},
				resource.Attribute{
					Name:        "siteprefix",
					Description: `(Optional) The site's prefix string. When the GSLB service group is bound to a GSLB virtual server, a GSLB site domain is generated internally for each bound serviceitem-domain pair by concatenating the site prefix of the service item and the name of the domain. If the special string NONE is specified, the site-prefix string is unset. When implementing HTTP redirect site persistence, the Citrix ADC redirects GSLB requests to GSLB services by using their site domains.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Initial state of the GSLB service group.`,
				},
				resource.Attribute{
					Name:        "svrtimeout",
					Description: `(Optional) Time, in seconds, after which to terminate an idle server connection.`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the servers in the service group. Specifies the capacity of the servers relative to the other servers in the load balancing configuration. The higher the weight, the higher the percentage of requests sent to the service. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbservicegroup. It has the same value as the ` + "`" + `servicegroupname` + "`" + ` attribute. ## Import A gslbservicegroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbservicegroup.tf_gslbservicegroup test_gslbvservicegroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbservicegroup. It has the same value as the ` + "`" + `servicegroupname` + "`" + ` attribute. ## Import A gslbservicegroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbservicegroup.tf_gslbservicegroup test_gslbvservicegroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_gslbservicegroup_lbmonitor_binding",
			Category:         "GSLB",
			ShortDescription: ``,
			Description: `


The gslbservicegroup_lbmonitor_binding resource is used to create gslbservicegroup_lbmonitor_binding.


`,
			Keywords: []string{
				"gslb",
				"gslbservicegroup",
				"lbmonitor",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servicegroupname",
					Description: `(Required) Name of the GSLB service group.`,
				},
				resource.Attribute{
					Name:        "monitor_name",
					Description: `(Required) Monitor name.`,
				},
				resource.Attribute{
					Name:        "hashid",
					Description: `(Optional) Unique numerical identifier used by hash based load balancing methods to identify a service.`,
				},
				resource.Attribute{
					Name:        "monstate",
					Description: `(Optional) Monitor state.`,
				},
				resource.Attribute{
					Name:        "passive",
					Description: `(Optional) Indicates if load monitor is passive. A passive load monitor does not remove service from LB decision when threshold is breached.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Port number of the GSLB service. Each service must have a unique port number.`,
				},
				resource.Attribute{
					Name:        "publicip",
					Description: `(Optional) The public IP address that a NAT device translates to the GSLB service's private IP address. Optional.`,
				},
				resource.Attribute{
					Name:        "publicport",
					Description: `(Optional) The public port associated with the GSLB service's public IP address. The port is mapped to the service's private port number. Applicable to the local GSLB service. Optional.`,
				},
				resource.Attribute{
					Name:        "siteprefix",
					Description: `(Optional) The site's prefix string. When the GSLB service group is bound to a GSLB virtual server, a GSLB site domain is generated internally for each bound serviceitem-domain pair by concatenating the site prefix of the service item and the name of the domain. If the special string NONE is specified, the site-prefix string is unset. When implementing HTTP redirect site persistence, the Citrix ADC redirects GSLB requests to GSLB services by using their site domains.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Initial state of the service after binding.`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the servers in the service group. Specifies the capacity of the servers relative to the other servers in the load balancing configuration. The higher the weight, the higher the percentage of requests sent to the service. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbservicegroup_lbmonitor_binding is the concatenation of the ` + "`" + `servicegroupname` + "`" + ` and ` + "`" + `monitor_name` + "`" + ` attributes separated by a comma. ## Import A gslbservicegroup_lbmonitor_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbservicegroup_lbmonitor_binding.tf_gslbservicegroup_lbmonitor_binding test_gslbvservicegroup,test_monitor ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbservicegroup_lbmonitor_binding is the concatenation of the ` + "`" + `servicegroupname` + "`" + ` and ` + "`" + `monitor_name` + "`" + ` attributes separated by a comma. ## Import A gslbservicegroup_lbmonitor_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbservicegroup_lbmonitor_binding.tf_gslbservicegroup_lbmonitor_binding test_gslbvservicegroup,test_monitor ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_gslbsite",
			Category:         "GSLB",
			ShortDescription: ``,
			Description: `

This resource is used to manage Global Service Load Balancing site.


`,
			Keywords: []string{
				"gslb",
				"gslbsite",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "sitename",
					Description: `(Optional) Name for the GSLB site.`,
				},
				resource.Attribute{
					Name:        "sitetype",
					Description: `(Optional) Type of site to create. If the type is not specified, the appliance automatically detects and sets the type on the basis of the IP address being assigned to the site. If the specified site IP address is owned by the appliance (for example, a MIP address or SNIP address), the site is a local site. Otherwise, it is a remote site. Possible values: [ REMOTE, LOCAL ]`,
				},
				resource.Attribute{
					Name:        "siteipaddress",
					Description: `(Optional) IP address for the GSLB site. The GSLB site uses this IP address to communicate with other GSLB sites. For a local site, use any IP address that is owned by the appliance (for example, a SNIP or MIP address, or the IP address of the ADNS service).`,
				},
				resource.Attribute{
					Name:        "publicip",
					Description: `(Optional) Public IP address for the local site. Required only if the appliance is deployed in a private address space and the site has a public IP address hosted on an external firewall or a NAT device.`,
				},
				resource.Attribute{
					Name:        "metricexchange",
					Description: `(Optional) Exchange metrics with other sites. Metrics are exchanged by using Metric Exchange Protocol (MEP). The appliances in the GSLB setup exchange health information once every second. If you disable metrics exchange, you can use only static load balancing methods (such as round robin, static proximity, or the hash-based methods), and if you disable metrics exchange when a dynamic load balancing method (such as least connection) is in operation, the appliance falls back to round robin. Also, if you disable metrics exchange, you must use a monitor to determine the state of GSLB services. Otherwise, the service is marked as DOWN. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "nwmetricexchange",
					Description: `(Optional) Exchange, with other GSLB sites, network metrics such as round-trip time (RTT), learned from communications with various local DNS (LDNS) servers used by clients. RTT information is used in the dynamic RTT load balancing method, and is exchanged every 5 seconds. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sessionexchange",
					Description: `(Optional) Exchange persistent session entries with other GSLB sites every five seconds. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "triggermonitor",
					Description: `(Optional) Specify the conditions under which the GSLB service must be monitored by a monitor, if one is bound. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "parentsite",
					Description: `(Optional) Parent site of the GSLB site, in a parent-child topology.`,
				},
				resource.Attribute{
					Name:        "clip",
					Description: `(Optional) Cluster IP address. Specify this parameter to connect to the remote cluster site for GSLB auto-sync. Note: The cluster IP address is defined when creating the cluster.`,
				},
				resource.Attribute{
					Name:        "publicclip",
					Description: `(Optional) IP address to be used to globally access the remote cluster when it is deployed behind a NAT. It can be same as the normal cluster IP address.`,
				},
				resource.Attribute{
					Name:        "naptrreplacementsuffix",
					Description: `(Optional) The naptr replacement suffix configured here will be used to construct the naptr replacement field in NAPTR record. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbsite. It has the same value as the ` + "`" + `sitename` + "`" + ` attribute. ## Import An instance of the resource can be imported using its sitename, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbsite.tf_site_local tf_site_local ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbsite. It has the same value as the ` + "`" + `sitename` + "`" + ` attribute. ## Import An instance of the resource can be imported using its sitename, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbsite.tf_site_local tf_site_local ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_gslbvserver",
			Category:         "GSLB",
			ShortDescription: ``,
			Description: `

This resource is used to manage Global Service Load Balancing vserver.


`,
			Keywords: []string{
				"gslb",
				"gslbvserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the GSLB virtual server.`,
				},
				resource.Attribute{
					Name:        "servicetype",
					Description: `(Optional) Protocol used by services bound to the virtual server. Possible values: [ HTTP, FTP, TCP, UDP, SSL, SSL\_BRIDGE, SSL\_TCP, NNTP, ANY, SIP\_UDP, SIP\_TCP, SIP\_SSL, RADIUS, RDP, RTSP, MYSQL, MSSQL, ORACLE ]`,
				},
				resource.Attribute{
					Name:        "iptype",
					Description: `(Optional) The IP type for this GSLB vserver. Possible values: [ IPV4, IPV6 ]`,
				},
				resource.Attribute{
					Name:        "dnsrecordtype",
					Description: `(Optional) DNS record type to associate with the GSLB virtual server's domain name. Possible values: [ A, AAAA, CNAME, NAPTR ]`,
				},
				resource.Attribute{
					Name:        "lbmethod",
					Description: `(Optional) Load balancing method for the GSLB virtual server. Possible values: [ ROUNDROBIN, LEASTCONNECTION, LEASTRESPONSETIME, SOURCEIPHASH, LEASTBANDWIDTH, LEASTPACKETS, STATICPROXIMITY, RTT, CUSTOMLOAD, API ]`,
				},
				resource.Attribute{
					Name:        "backupsessiontimeout",
					Description: `(Optional) A non zero value enables the feature whose minimum value is 2 minutes. The feature can be disabled by setting the value to zero. The created session is in effect for a specific client per domain.`,
				},
				resource.Attribute{
					Name:        "backuplbmethod",
					Description: `(Optional) Backup load balancing method. Becomes operational if the primary load balancing method fails or cannot be used. Valid only if the primary method is based on either round-trip time (RTT) or static proximity. Possible values: [ ROUNDROBIN, LEASTCONNECTION, LEASTRESPONSETIME, SOURCEIPHASH, LEASTBANDWIDTH, LEASTPACKETS, STATICPROXIMITY, RTT, CUSTOMLOAD, API ]`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) IPv4 network mask for use in the SOURCEIPHASH load balancing method.`,
				},
				resource.Attribute{
					Name:        "v6netmasklen",
					Description: `(Optional) Number of bits to consider, in an IPv6 source IP address, for creating the hash that is required by the SOURCEIPHASH load balancing method.`,
				},
				resource.Attribute{
					Name:        "tolerance",
					Description: `(Optional) Site selection tolerance, in milliseconds, for implementing the RTT load balancing method. If a site's RTT deviates from the lowest RTT by more than the specified tolerance, the site is not considered when the Citrix ADC makes a GSLB decision. The appliance implements the round robin method of global server load balancing between sites whose RTT values are within the specified tolerance. If the tolerance is 0 (zero), the appliance always sends clients the IP address of the site with the lowest RTT.`,
				},
				resource.Attribute{
					Name:        "persistencetype",
					Description: `(Optional) Use source IP address based persistence for the virtual server. After the load balancing method selects a service for the first packet, the IP address received in response to the DNS query is used for subsequent requests from the same client. Possible values: [ SOURCEIP, NONE ]`,
				},
				resource.Attribute{
					Name:        "persistenceid",
					Description: `(Optional) The persistence ID for the GSLB virtual server. The ID is a positive integer that enables GSLB sites to identify the GSLB virtual server, and is required if source IP address based or spill over based persistence is enabled on the virtual server.`,
				},
				resource.Attribute{
					Name:        "persistmask",
					Description: `(Optional) The optional IPv4 network mask applied to IPv4 addresses to establish source IP address based persistence.`,
				},
				resource.Attribute{
					Name:        "v6persistmasklen",
					Description: `(Optional) Number of bits to consider in an IPv6 source IP address when creating source IP address based persistence sessions.`,
				},
				resource.Attribute{
					Name:        "timeout",
					Description: `(Optional) Idle time, in minutes, after which a persistence entry is cleared.`,
				},
				resource.Attribute{
					Name:        "edr",
					Description: `(Optional) Send clients an empty DNS response when the GSLB virtual server is DOWN. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ecs",
					Description: `(Optional) If enabled, respond with EDNS Client Subnet (ECS) option in the response for a DNS query with ECS. The ECS address will be used for persistence and spillover persistence (if enabled) instead of the LDNS address. Persistence mask is ignored if ECS is enabled. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ecsaddrvalidation",
					Description: `(Optional) Validate if ECS address is a private or unroutable address and in such cases, use the LDNS IP. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mir",
					Description: `(Optional) Include multiple IP addresses in the DNS responses sent to clients. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "disableprimaryondown",
					Description: `(Optional) Continue to direct traffic to the backup chain even after the primary GSLB virtual server returns to the UP state. Used when spillover is configured for the virtual server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dynamicweight",
					Description: `(Optional) Specify if the appliance should consider the service count, service weights, or ignore both when using weight-based load balancing methods. The state of the number of services bound to the virtual server help the appliance to select the service. Possible values : [ SERVICECOUNT, SERVICEWEIGHT, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) State of the GSLB virtual server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "considereffectivestate",
					Description: `(Optional) If the primary state of all bound GSLB services is DOWN, consider the effective states of all the GSLB services, obtained through the Metrics Exchange Protocol (MEP), when determining the state of the GSLB virtual server. To consider the effective state, set the parameter to STATE\_ONLY. To disregard the effective state, set the parameter to NONE. The effective state of a GSLB service is the ability of the corresponding virtual server to serve traffic. The effective state of the load balancing virtual server, which is transferred to the GSLB service, is UP even if only one virtual server in the backup chain of virtual servers is in the UP state. Possible values: [ NONE, STATE_ONLY ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments that you might want to associate with the GSLB virtual server.`,
				},
				resource.Attribute{
					Name:        "somethod",
					Description: `(Optional) Type of threshold that, when exceeded, triggers spillover. Possible values: [ CONNECTION, DYNAMICCONNECTION, BANDWIDTH, HEALTH, NONE ]`,
				},
				resource.Attribute{
					Name:        "sopersistence",
					Description: `(Optional) If spillover occurs, maintain source IP address based persistence for both primary and backup GSLB virtual servers.Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sopersistencetimeout",
					Description: `(Optional) Timeout for spillover persistence, in minutes.`,
				},
				resource.Attribute{
					Name:        "sothreshold",
					Description: `(Optional) Threshold at which spillover occurs. Specify an integer for the CONNECTION spillover method, a bandwidth value in kilobits per second for the BANDWIDTH method (do not enter the units), or a percentage for the HEALTH method (do not enter the percentage symbol).`,
				},
				resource.Attribute{
					Name:        "sobackupaction",
					Description: `(Optional) Action to be performed if spillover is to take effect, but no backup chain to spillover is usable or exists. Possible values: [ DROP, ACCEPT, REDIRECT ]`,
				},
				resource.Attribute{
					Name:        "appflowlog",
					Description: `(Optional) Enable logging appflow flow information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "backupvserver",
					Description: `(Optional) Name of the backup GSLB virtual server to which the appliance should to forward requests if the status of the primary GSLB virtual server is down or exceeds its spillover threshold.`,
				},
				resource.Attribute{
					Name:        "servicename",
					Description: `(Optional) Name of the GSLB service for which to change the weight.`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the GSLB service.`,
				},
				resource.Attribute{
					Name:        "domainname",
					Description: `(Optional) Domain name for which to change the time to live (TTL) and/or backup service IP address.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to live (TTL) for the domain.`,
				},
				resource.Attribute{
					Name:        "backupip",
					Description: `(Optional) The IP address of the backup service for the specified domain name. Used when all the services bound to the domain are down, or when the backup chain of virtual servers is down.`,
				},
				resource.Attribute{
					Name:        "cookiedomain",
					Description: `(Optional) The cookie domain for the GSLB site. Used when inserting the GSLB site cookie in the HTTP response.`,
				},
				resource.Attribute{
					Name:        "cookietimeout",
					Description: `(Optional) Timeout, in minutes, for the GSLB site cookie.`,
				},
				resource.Attribute{
					Name:        "sitedomainttl",
					Description: `(Optional) TTL, in seconds, for all internally created site domains (created when a site prefix is configured on a GSLB service) that are associated with this virtual server.`,
				},
				resource.Attribute{
					Name:        "domain",
					Description: `(Optional) A set of domain binding blocks. Documented below.`,
				},
				resource.Attribute{
					Name:        "service",
					Description: `(Optional) A set of GSLB service biding blocks. Documented below. A domain binding supports the following:`,
				},
				resource.Attribute{
					Name:        "backupipflag",
					Description: `(Optional) The IP address of the backup service for the specified domain name. Used when all the services bound to the domain are down, or when the backup chain of virtual servers is down.`,
				},
				resource.Attribute{
					Name:        "cookietimeout",
					Description: `(Optional) Timeout, in minutes, for the GSLB site cookie.`,
				},
				resource.Attribute{
					Name:        "backupip",
					Description: `(Optional) The IP address of the backup service for the specified domain name. Used when all the services bound to the domain are down, or when the backup chain of virtual servers is down.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to live (TTL) for the domain.`,
				},
				resource.Attribute{
					Name:        "domainname",
					Description: `(Optional) Domain name for which to change the time to live (TTL) and/or backup service IP address.`,
				},
				resource.Attribute{
					Name:        "sitedomainttl",
					Description: `(Optional) TTL, in seconds, for all internally created site domains (created when a site prefix is configured on a GSLB service) that are associated with this virtual server.`,
				},
				resource.Attribute{
					Name:        "cookiedomain",
					Description: `(Optional) The cookie domain for the GSLB site. Used when inserting the GSLB site cookie in the HTTP response.`,
				},
				resource.Attribute{
					Name:        "cookiedomainflag",
					Description: `(Optional) The cookie domain for the GSLB site. Used when inserting the GSLB site cookie in the HTTP response.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name of the virtual server on which to perform the binding operation. A GSLB service binding supports the following:`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the GSLB service.`,
				},
				resource.Attribute{
					Name:        "servicename",
					Description: `(Optional) Name of the GSLB service for which to change the weight.`,
				},
				resource.Attribute{
					Name:        "domainname",
					Description: `(Optional) Domain name for which to change the time to live (TTL) and/or backup service IP address. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbvserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import An instance of the resource can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbvserver.tf_gslbvserver GSLB_East_Coast_Vserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbvserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import An instance of the resource can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbvserver.tf_gslbvserver GSLB_East_Coast_Vserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_gslbvserver_domain_binding",
			Category:         "GSLB",
			ShortDescription: ``,
			Description: `

The gslbvserver_domain_binding resource is used to create gslbvserver_domain_binding.


`,
			Keywords: []string{
				"gslb",
				"gslbvserver",
				"domain",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server on which to perform the binding operation.`,
				},
				resource.Attribute{
					Name:        "domainname",
					Description: `(Required) Domain name for which to change the time to live (TTL) and/or backup service IP address.`,
				},
				resource.Attribute{
					Name:        "backupip",
					Description: `(Optional) The IP address of the backup service for the specified domain name. Used when all the services bound to the domain are down, or when the backup chain of virtual servers is down.`,
				},
				resource.Attribute{
					Name:        "backupipflag",
					Description: `(Optional) The IP address of the backup service for the specified domain name. Used when all the services bound to the domain are down, or when the backup chain of virtual servers is down.`,
				},
				resource.Attribute{
					Name:        "cookie_domain",
					Description: `(Optional) The cookie domain for the GSLB site. Used when inserting the GSLB site cookie in the HTTP response.`,
				},
				resource.Attribute{
					Name:        "cookie_domainflag",
					Description: `(Optional) The cookie domain for the GSLB site. Used when inserting the GSLB site cookie in the HTTP response.`,
				},
				resource.Attribute{
					Name:        "cookietimeout",
					Description: `(Optional) Timeout, in minutes, for the GSLB site cookie.`,
				},
				resource.Attribute{
					Name:        "sitedomainttl",
					Description: `(Optional) TTL, in seconds, for all internally created site domains (created when a site prefix is configured on a GSLB service) that are associated with this virtual server.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to live (TTL) for the domain. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbvserver_domain_binding is the conatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `domainname` + "`" + ` attributes. ## Import A gslbvserver_domain_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbvserver_domain_binding.tf_gslbvserver_domain_binding GSLB-East-Coast-Vserver,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbvserver_domain_binding is the conatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `domainname` + "`" + ` attributes. ## Import A gslbvserver_domain_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbvserver_domain_binding.tf_gslbvserver_domain_binding GSLB-East-Coast-Vserver,www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_gslbvserver_gslbservice_binding",
			Category:         "GSLB",
			ShortDescription: ``,
			Description: `

The gslbvserver_gslbservice_binding resource is used to create gslbvserver_gslbservice_binding.


`,
			Keywords: []string{
				"gslb",
				"gslbvserver",
				"gslbservice",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server on which to perform the binding operation.`,
				},
				resource.Attribute{
					Name:        "servicename",
					Description: `(Required) Name of the GSLB service for which to change the weight.`,
				},
				resource.Attribute{
					Name:        "domainname",
					Description: `(Optional) Domain name for which to change the time to live (TTL) and/or backup service IP address.`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the GSLB service. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbvserver_gslbservice_binding is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `servicename` + "`" + ` attributes separated by a comma. ## Import A gslbvserver_gslbservice_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbvserver_gslbservice_binding.tf_gslbvserver_gslbservice_binding gslb_vserver,gslb1vservice ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbvserver_gslbservice_binding is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `servicename` + "`" + ` attributes separated by a comma. ## Import A gslbvserver_gslbservice_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbvserver_gslbservice_binding.tf_gslbvserver_gslbservice_binding gslb_vserver,gslb1vservice ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_gslbvserver_gslbservicegroup_binding",
			Category:         "GSLB",
			ShortDescription: ``,
			Description: `

The gslbvserver_gslbservicegroup_binding resource is used to create gslbvserver_gslbservicegroup_binding.


`,
			Keywords: []string{
				"gslb",
				"gslbvserver",
				"gslbservicegroup",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server on which to perform the binding operation.`,
				},
				resource.Attribute{
					Name:        "servicegroupname",
					Description: `(Required) The GSLB service group name bound to the selected GSLB virtual server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbvserver_gslbservicegroup_binding is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `servicegroupname` + "`" + ` attributes separated by a comma. ## Import A gslbvserver_gslbservicegroup_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbvserver_gslbservicegroup_binding.tf_gslbvserver_gslbservicegroup_binding GSLB-East-Coast-Vserver,test_gslbvservicegroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbvserver_gslbservicegroup_binding is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `servicegroupname` + "`" + ` attributes separated by a comma. ## Import A gslbvserver_gslbservicegroup_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbvserver_gslbservicegroup_binding.tf_gslbvserver_gslbservicegroup_binding GSLB-East-Coast-Vserver,test_gslbvservicegroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_gslbvserver_spilloverpolicy_binding",
			Category:         "GSLB",
			ShortDescription: ``,
			Description: `

The gslbvserver_spilloverpolicy_binding resource is used to create gslbvserver_spilloverpolicy_binding.


`,
			Keywords: []string{
				"gslb",
				"gslbvserver",
				"spilloverpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server on which to perform the binding operation.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the GSLB vserver.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE. o If gotoPriorityExpression is not present or if it is equal to END then the policy bank evaluation ends here o Else if the gotoPriorityExpression is equal to NEXT then the next policy in the priority order is evaluated. o Else gotoPriorityExpression is evaluated. The result of gotoPriorityExpression (which has to be a number) is processed as follows: - An UNDEF event is triggered if . gotoPriorityExpression cannot be evaluated . gotoPriorityExpression evaluates to number which is smaller than the maximum priority in the policy bank but is not same as any policy's priority . gotoPriorityExpression evaluates to a priority that is smaller than the current policy's priority - If the gotoPriorityExpression evaluates to the priority of the current policy then the next policy in the priority order is evaluated. - If the gotoPriorityExpression evaluates to the priority of a policy further ahead in the list then that policy will be evaluated next. This field is applicable only to rewrite and responder policies.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) The bindpoint to which the policy is bound ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbvserver_spilloverpolicy_binding is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A gslbvserver_spilloverpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbvserver_spilloverpolicy_binding.tf_gslbvserver_spilloverpolicy_binding gslb_vserver,tf_spilloverpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the gslbvserver_spilloverpolicy_binding is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A gslbvserver_spilloverpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_gslbvserver_spilloverpolicy_binding.tf_gslbvserver_spilloverpolicy_binding gslb_vserver,tf_spilloverpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_hafailover",
			Category:         "High Availability",
			ShortDescription: ``,
			Description: `

The hafailover resource is used to trigger the high availability fail over operation.


`,
			Keywords: []string{
				"high",
				"availability",
				"hafailover",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) IP address of the target High Availability node.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Required) Desired High Availability node state. Can be either ` + "`" + `Primary` + "`" + ` or ` + "`" + `Secondary` + "`" + `.`,
				},
				resource.Attribute{
					Name:        "force",
					Description: `(Optional) Force a failover without prompting for confirmation. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the hafailover resource. It is a unique string prefixed with "tf-hafailover-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the hafailover resource. It is a unique string prefixed with "tf-hafailover-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_hanode",
			Category:         "High Availability",
			ShortDescription: ``,
			Description: `

The hanode resource is used to create hanode.


`,
			Keywords: []string{
				"high",
				"availability",
				"hanode",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "hanode_id",
					Description: `(Required) Number that uniquely identifies the node. For self node, it will always be 0. Peer node values can range from 1-64.`,
				},
				resource.Attribute{
					Name:        "deadinterval",
					Description: `(Optional) Number of seconds after which a peer node is marked DOWN if heartbeat messages are not received from the peer node.`,
				},
				resource.Attribute{
					Name:        "failsafe",
					Description: `(Optional) Keep one node primary if both nodes fail the health check, so that a partially available node can back up data and handle traffic. This mode is set independently on each node.`,
				},
				resource.Attribute{
					Name:        "haprop",
					Description: `(Optional) Automatically propagate all commands from the primary to the secondary node, except the following:`,
				},
				resource.Attribute{
					Name:        "hastatus",
					Description: `(Optional) The HA status of the node. The HA status STAYSECONDARY is used to force the secondary device stay as secondary independent of the state of the Primary device. For example, in an existing HA setup, the Primary node has to be upgraded and this process would take few seconds. During the upgradation, it is possible that the Primary node may suffer from a downtime for a few seconds. However, the Secondary should not take over as the Primary node. Thus, the Secondary node should remain as Secondary even if there is a failure in the Primary node. STAYPRIMARY configuration keeps the node in primary state in case if it is healthy, even if the peer node was the primary node initially. If the node with STAYPRIMARY setting (and no peer node) is added to a primary node (which has this node as the peer) then this node takes over as the new primary and the older node becomes secondary. ENABLED state means normal HA operation without any constraints/preferences. DISABLED state disables the normal HA operation of the node.`,
				},
				resource.Attribute{
					Name:        "hasync",
					Description: `(Optional) Automatically maintain synchronization by duplicating the configuration of the primary node on the secondary node. This setting is not propagated. Automatic synchronization requires that this setting be enabled (the default) on the current secondary node. Synchronization uses TCP port 3010.`,
				},
				resource.Attribute{
					Name:        "hellointerval",
					Description: `(Optional) Interval, in milliseconds, between heartbeat messages sent to the peer node. The heartbeat messages are UDP packets sent to port 3003 of the peer node.`,
				},
				resource.Attribute{
					Name:        "inc",
					Description: `(Optional) This option is required if the HA nodes reside on different networks. When this mode is enabled, the following independent network entities and configurations are neither propagated nor synced to the other node: MIPs, SNIPs, VLANs, routes (except LLB routes), route monitors, RNAT rules (except any RNAT rule with a VIP as the NAT IP), and dynamic routing configurations. They are maintained independently on each node.`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Optional) The NSIP or NSIP6 address of the node to be added for an HA configuration. This setting is neither propagated nor synchronized.`,
				},
				resource.Attribute{
					Name:        "maxflips",
					Description: `(Optional) Max number of flips allowed before becoming sticky primary`,
				},
				resource.Attribute{
					Name:        "maxfliptime",
					Description: `(Optional) Interval after which flipping of node states can again start`,
				},
				resource.Attribute{
					Name:        "syncstatusstrictmode",
					Description: `(Optional) strict mode flag for sync status`,
				},
				resource.Attribute{
					Name:        "syncvlan",
					Description: `(Optional) Vlan on which HA related communication is sent. This include sync, propagation , connection mirroring , LB persistency config sync, persistent session sync and session state sync. However HA heartbeats can go all interfaces. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the hanode. It has the same value as the ` + "`" + `hanode_id` + "`" + ` attribute. ## Import A hanode can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_hanode.local_node 0 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the hanode. It has the same value as the ` + "`" + `hanode_id` + "`" + ` attribute. ## Import A hanode can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_hanode.local_node 0 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_hanode_routemonitor6_binding",
			Category:         "High Availability",
			ShortDescription: ``,
			Description: `

The hanode_routemonitor6_binding resource is used to create hanode_routemonitor6_binding.


`,
			Keywords: []string{
				"high",
				"availability",
				"hanode",
				"routemonitor6",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "hanode_id",
					Description: `(Required) Number that uniquely identifies the local node. The ID of the local node is always 0.`,
				},
				resource.Attribute{
					Name:        "routemonitor",
					Description: `(Required) The IP address (IPv4 or IPv6). ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the hanode_routemonitor6_binding. It is the concatenation of ` + "`" + `hanode_id` + "`" + ` and ` + "`" + `routemonitor` + "`" + ` attributes separated by a comma. ## Import A hanode_routemonitor6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_hanode_routemonitor6_binding.tf_hanode_routemonitor6_binding 0,fd7f:6bd8:cea9:f32d::/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the hanode_routemonitor6_binding. It is the concatenation of ` + "`" + `hanode_id` + "`" + ` and ` + "`" + `routemonitor` + "`" + ` attributes separated by a comma. ## Import A hanode_routemonitor6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_hanode_routemonitor6_binding.tf_hanode_routemonitor6_binding 0,fd7f:6bd8:cea9:f32d::/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_hanode_routemonitor_binding",
			Category:         "High Availability",
			ShortDescription: ``,
			Description: `

The hanode_routemonitor_binding resource is used to create hanode_routemonitor_binding.


`,
			Keywords: []string{
				"high",
				"availability",
				"hanode",
				"routemonitor",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `(Required) Number that uniquely identifies the local node. The ID of the local node is always 0.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Required) The netmask.`,
				},
				resource.Attribute{
					Name:        "routemonitor",
					Description: `(Required) The IP address (IPv4 or IPv6) Notice: this adress should be the network adress. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the hanode_routemonitor_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A hanode_routemonitor_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_hanode_routemonitor_binding.tfhanode_routemonitor_binding 0,10.222.74.128 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the hanode_routemonitor_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A hanode_routemonitor_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_hanode_routemonitor_binding.tfhanode_routemonitor_binding 0,10.222.74.128 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_icaaccessprofile",
			Category:         "Ica",
			ShortDescription: ``,
			Description: `

The icaaccessprofile resource is used to create icaaccessprofile.


`,
			Keywords: []string{
				"ica",
				"icaaccessprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the ICA accessprofile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the ICA accessprofile is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my ica accessprofile" or 'my ica accessprofile'). Each of the features can be configured as DEFAULT/DISABLED. Here, DISABLED means that the policy settings on the backend XenApp/XenDesktop server are overridden and the Citrix ADC makes the decision to deny access. Whereas DEFAULT means that the Citrix ADC allows the request to reach the XenApp/XenDesktop that takes the decision to allow/deny access based on the policy configured on it. For example, if ClientAudioRedirection is enabled on the backend XenApp/XenDesktop server, and the configured profile has ClientAudioRedirection as DISABLED, the Citrix ADC makes the decision to deny the request irrespective of the configuration on the backend. If the configured profile has ClientAudioRedirection as DEFAULT, then the Citrix ADC forwards the requests to the backend XenApp/XenDesktop server.It then makes the decision to allow/deny access based on the policy configured on it. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "connectclientlptports",
					Description: `(Optional) Allow Default access/Disable automatic connection of LPT ports from the client when the user logs on. Possible values: [ DEFAULT, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "clientaudioredirection",
					Description: `(Optional) Allow Default access/Disable applications hosted on the server to play sounds through a sound device installed on the client computer, also allows or prevents users to record audio input. Possible values: [ DEFAULT, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "localremotedatasharing",
					Description: `(Optional) Allow Default access/Disable file/data sharing via the Receiver for HTML5. Possible values: [ DEFAULT, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "clientclipboardredirection",
					Description: `(Optional) Allow Default access/Disable the clipboard on the client device to be mapped to the clipboard on the server. Possible values: [ DEFAULT, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "clientcomportredirection",
					Description: `(Optional) Allow Default access/Disable COM port redirection to and from the client. Possible values: [ DEFAULT, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "clientdriveredirection",
					Description: `(Optional) Allow Default access/Disables drive redirection to and from the client. Possible values: [ DEFAULT, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "clientprinterredirection",
					Description: `(Optional) Allow Default access/Disable client printers to be mapped to a server when a user logs on to a session. Possible values: [ DEFAULT, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "multistream",
					Description: `(Optional) Allow Default access/Disable the multistream feature for the specified users. Possible values: [ DEFAULT, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "clientusbdriveredirection",
					Description: `(Optional) Allow Default access/Disable the redirection of USB devices to and from the client. Possible values: [ DEFAULT, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the icaaccessprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A icaaccessprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_icaaccessprofile.tf_icaaccessprofile my_ica_accessprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the icaaccessprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A icaaccessprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_icaaccessprofile.tf_icaaccessprofile my_ica_accessprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_icaaction",
			Category:         "Ica",
			ShortDescription: ``,
			Description: `

The Icaaction resource is used to create Icaaction.


`,
			Keywords: []string{
				"ica",
				"icaaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the ICA action. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the ICA action is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my ica action" or 'my ica action'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "accessprofilename",
					Description: `(Optional) Name of the ica accessprofile to be associated with this action.`,
				},
				resource.Attribute{
					Name:        "latencyprofilename",
					Description: `(Optional) Name of the ica latencyprofile to be associated with this action. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the Icaaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A Icaaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_icaaction.tf_icaaction my_ica_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the Icaaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A Icaaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_icaaction.tf_icaaction my_ica_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_icaglobal_icapolicy_binding",
			Category:         "Ica",
			ShortDescription: ``,
			Description: `

The icaglobal_icapolicy_binding resource is used to create icaglobal_icapolicy_binding.


`,
			Keywords: []string{
				"ica",
				"icaglobal",
				"icapolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the ICA policy.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) Global bind point for which to show detailed information about the policies bound to the bind point. Possible values: [ ICA_REQ_OVERRIDE, ICA_REQ_DEFAULT ]`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the icaglobal_icapolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A icaglobal_icapolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_icaglobal_icapolicy_binding.tf_icaglobal_icapolicy_binding my_ica_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the icaglobal_icapolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A icaglobal_icapolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_icaglobal_icapolicy_binding.tf_icaglobal_icapolicy_binding my_ica_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_icalatencyprofile",
			Category:         "Ica",
			ShortDescription: ``,
			Description: `

The icalatencyprofile resource is used to create icalatencyprofile.


`,
			Keywords: []string{
				"ica",
				"icalatencyprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the ICA latencyprofile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the ICA latency profile is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my ica l7latencyprofile" or 'my ica l7latencyprofile'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "l7latencymonitoring",
					Description: `(Optional) Enable/Disable L7 Latency monitoring for L7 latency notifications. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "l7latencythresholdfactor",
					Description: `(Optional) L7 Latency threshold factor. This is the factor by which the active latency should be greater than the minimum observed value to determine that the latency is high and may need to be reported. Minimum value = 2 Maximum value = 65535`,
				},
				resource.Attribute{
					Name:        "l7latencywaittime",
					Description: `(Optional) L7 Latency Wait time. This is the time for which the Citrix ADC waits after the threshold is exceeded before it sends out a Notification to the Insight Center. Minimum value = 1 Maximum value = 65535`,
				},
				resource.Attribute{
					Name:        "l7latencynotifyinterval",
					Description: `(Optional) L7 Latency Notify Interval. This is the interval at which the Citrix ADC sends out notifications to the Insight Center after the wait time has passed. Minimum value = 1 Maximum value = 65535`,
				},
				resource.Attribute{
					Name:        "l7latencymaxnotifycount",
					Description: `(Optional) L7 Latency Max notify Count. This is the upper limit on the number of notifications sent to the Insight Center within an interval where the Latency is above the threshold. Minimum value = 1 Maximum value = 65535 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the icalatencyprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A icalatencyprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_icalatencyprofile.tf_icalatencyprofile my_ica_latencyprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the icalatencyprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A icalatencyprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_icalatencyprofile.tf_icalatencyprofile my_ica_latencyprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_icaparameter",
			Category:         "ICA",
			ShortDescription: ``,
			Description: `

The icaparameter resource is used to update icaparameter.


`,
			Keywords: []string{
				"ica",
				"icaparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "enablesronhafailover",
					Description: `(Optional) Enable/Disable Session Reliability on HA failover. The default value is No. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "edtpmtuddf",
					Description: `(Optional) Enable/Disable DF enforcement for EDT PMTUD Control Blocks.Default value: DISABLED Possible values = [ENABLED, DISABLED]`,
				},
				resource.Attribute{
					Name:        "hdxinsightnonnsap",
					Description: `(Optional) Enable/Disable HDXInsight for Non NSAP ICA Sessions. The default value is Yes. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "l7latencyfrequency",
					Description: `(Optional) Specify the time interval/period for which L7 Client Latency value is to be calculated. By default, L7 Client Latency is calculated for every packet. The default value is 0. Minimum value = 0 Maximum value = 60 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of theicaparameter. It is a unique string prefixed with ` + "`" + `tf-icaparameter-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of theicaparameter. It is a unique string prefixed with ` + "`" + `tf-icaparameter-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_icapolicy",
			Category:         "Ica",
			ShortDescription: ``,
			Description: `

The icapolicy resource is used to create icapolicy.


`,
			Keywords: []string{
				"ica",
				"icapolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the policy. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my ica policy" or 'my ica policy').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression or other value against which the traffic is evaluated. Must be a Boolean expression. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Name of the ica action to be associated with this policy.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any type of information about this ICA policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of the messagelog action to use for requests that match this policy.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the policy. Must begin with an ASCII alphabetic or underscore (_)character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), s pace, colon (:), at (@), equals (=), and hyphen (-) characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my ica policy" or 'my ica policy'). Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the icapolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A icapolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_icapolicy.tf_icapolicy my_ica_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the icapolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A icapolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_icapolicy.tf_icapolicy my_ica_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_inat",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The inat resource is used to create inbound nat resources.


`,
			Keywords: []string{
				"network",
				"inat",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the Inbound NAT (INAT) entry.`,
				},
				resource.Attribute{
					Name:        "publicip",
					Description: `(Optional) Public IP address of packets received on the Citrix ADC. Can be aNetScaler-owned VIP or VIP6 address.`,
				},
				resource.Attribute{
					Name:        "privateip",
					Description: `(Optional) IP address of the server to which the packet is sent by the Citrix ADC. Can be an IPv4 or IPv6 address.`,
				},
				resource.Attribute{
					Name:        "mode",
					Description: `(Optional) Stateless translation. Possible values: [ STATELESS ]`,
				},
				resource.Attribute{
					Name:        "tcpproxy",
					Description: `(Optional) Enable TCP proxy, which enables the Citrix ADC to optimize the RNAT TCP traffic by using Layer 4 features. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ftp",
					Description: `(Optional) Enable the FTP protocol on the server for transferring files between the client and the server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tftp",
					Description: `(Optional) To enable/disable TFTP (Default DISABLED). Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "usip",
					Description: `(Optional) Enable the Citrix ADC to retain the source IP address of packets before sending the packets to the server. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "usnip",
					Description: `(Optional) Enable the Citrix ADC to use a SNIP address as the source IP address of packets before sending the packets to the server. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "proxyip",
					Description: `(Optional) Unique IP address used as the source IP address in packets sent to the server. Must be a MIP or SNIP address.`,
				},
				resource.Attribute{
					Name:        "useproxyport",
					Description: `(Optional) Enable the Citrix ADC to proxy the source port of packets before sending the packets to the server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the inat resource. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import An inat can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_inat.inat_resource ip4ip ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the inat resource. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import An inat can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_inat.inat_resource ip4ip ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_inatparam",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The inatparam resource is used to create inatparam.


`,
			Keywords: []string{
				"network",
				"inatparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "nat46v6prefix",
					Description: `(Optional) The prefix used for translating packets received from private IPv6 servers into IPv4 packets. This prefix has a length of 96 bits (128-32 = 96). The IPv6 servers embed the destination IP address of the IPv4 servers or hosts in the last 32 bits of the destination IP address field of the IPv6 packets. The first 96 bits of the destination IP address field are set as the IPv6 NAT prefix. IPv6 packets addressed to this prefix have to be routed to the Citrix ADC to ensure that the IPv6-IPv4 translation is done by the appliance.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "nat46ignoretos",
					Description: `(Optional) Ignore TOS. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "nat46zerochecksum",
					Description: `(Optional) Calculate checksum for UDP packets with zero checksum. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "nat46v6mtu",
					Description: `(Optional) MTU setting for the IPv6 side. If the incoming IPv4 packet greater than this, either fragment or send icmp need fragmentation error. Minimum value = 1280 Maximum value = 9216`,
				},
				resource.Attribute{
					Name:        "nat46fragheader",
					Description: `(Optional) When disabled, translator will not insert IPv6 fragmentation header for non fragmented IPv4 packets. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the inatparam. It is a unique string prefixed with "tf-inatparam-".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the inatparam. It is a unique string prefixed with "tf-inatparam-".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_installer",
			Category:         "Utility",
			ShortDescription: ``,
			Description: `

The installer resource is used to install updated version build onto a target ADC.


`,
			Keywords: []string{
				"utility",
				"installer",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "url",
					Description: `(Optional) Url for the build file. Must be in the following formats: http://[user]:[password]@host/path/to/file https://[user]:[password]@host/path/to/file sftp://[user]:[password]@host/path/to/file scp://[user]:[password]@host/path/to/file ftp://[user]:[password]@host/path/to/file file://path/to/file.`,
				},
				resource.Attribute{
					Name:        "y",
					Description: `(Optional) Do not prompt for yes/no before rebooting.`,
				},
				resource.Attribute{
					Name:        "l",
					Description: `(Optional) Use this flag to enable callhome.`,
				},
				resource.Attribute{
					Name:        "enhancedupgrade",
					Description: `(Optional) Use this flag for upgrading from/to enhancement mode.`,
				},
				resource.Attribute{
					Name:        "resizeswapvar",
					Description: `(Optional) Use this flag to change swap size on ONLY 64bit nCore/MCNS/VMPE systems NON-VPX systems.`,
				},
				resource.Attribute{
					Name:        "wait_until_reachable",
					Description: `(Optional) Boolean value to determine if the resource should wait for the ADC to become reachable after the build is installed.`,
				},
				resource.Attribute{
					Name:        "reachable_timeout",
					Description: `(Optional) Time period to wait untill the target ADC becomes reachable. Default value "10m"`,
				},
				resource.Attribute{
					Name:        "reachable_poll_delay",
					Description: `(Optional) Time delay before the first poll. Must be sufficiently large to allow the ADC to start reboot. Default value "60s".`,
				},
				resource.Attribute{
					Name:        "reachable_poll_interval",
					Description: `(Optional) Time interval between polls for reachability. Default value "60s".`,
				},
				resource.Attribute{
					Name:        "reachable_poll_timeout",
					Description: `(Optional) Time period to wait before the http poll request times out. Default value "20s". ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the installer. It is a random string prefixed with "tf-installer-".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the installer. It is a random string prefixed with "tf-installer-".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_interface",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The interface resource is used to create network interfaces.


`,
			Keywords: []string{
				"network",
				"interface",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "interface_id",
					Description: `(Required) Interface number, in C/U format, where C can take one of the following values: 0 - Indicates a management interface. 1 - Indicates a 1 Gbps port. 10 - Indicates a 10 Gbps port. LA - Indicates a link aggregation port. LO - Indicates a loop back port. U is a unique integer for representing an interface in a particular port group.`,
				},
				resource.Attribute{
					Name:        "speed",
					Description: `(Optional) Ethernet speed of the interface, in Mbps. Notes: If you set the speed as AUTO, the Citrix ADC attempts to auto-negotiate or auto-sense the link speed of the interface when it is UP. You must enable auto negotiation on the interface. If you set a speed other than AUTO, you must specify the same speed for the peer network device. Mismatched speed and duplex settings between the peer devices of a link lead to link errors, packet loss, and other errors. Some interfaces do not support certain speeds. If you specify an unsupported speed, an error message appears. Possible values: [ AUTO, 10, 100, 1000, 10000, 25000, 40000, 50000, 100000 ]`,
				},
				resource.Attribute{
					Name:        "duplex",
					Description: `(Optional) The duplex mode for the interface. Notes: If you set the duplex mode to AUTO, the Citrix ADC attempts to auto-negotiate the duplex mode of the interface when it is UP. You must enable auto negotiation on the interface. If you set a duplex mode other than AUTO, you must specify the same duplex mode for the peer network device. Mismatched speed and duplex settings between the peer devices of a link lead to link errors, packet loss, and other errors. Possible values: [ AUTO, HALF, FULL ]`,
				},
				resource.Attribute{
					Name:        "flowctl",
					Description: `(Optional) 802.3x flow control setting for the interface. The 802.3x specification does not define flow control for 10 Mbps and 100 Mbps speeds, but if a Gigabit Ethernet interface operates at those speeds, the flow control settings can be applied. The flow control setting that is finally applied to an interface depends on auto-negotiation. With the ON option, the peer negotiates the flow control, but the appliance then forces two-way flow control for the interface. Possible values: [ OFF, RX, TX, RXTX, ON ]`,
				},
				resource.Attribute{
					Name:        "autoneg",
					Description: `(Optional) Auto-negotiation state of the interface. With the ENABLED setting, the Citrix ADC auto-negotiates the speed and duplex settings with the peer network device on the link. The Citrix ADC appliance auto-negotiates the settings of only those parameters (speed or duplex mode) for which the value is set as AUTO. Possible values: [ DISABLED, ENABLED ]`,
				},
				resource.Attribute{
					Name:        "hamonitor",
					Description: `(Optional) In a High Availability (HA) configuration, monitor the interface for failure events. In an HA configuration, an interface that has HA MON enabled and is not bound to any Failover Interface Set (FIS), is a critical interface. Failure or disabling of any critical interface triggers HA failover. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "haheartbeat",
					Description: `(Optional) In a High Availability (HA) or Cluster configuration, configure the interface for sending heartbeats. In an HA or Cluster configuration, an interface that has HA Heartbeat disabled should not send the heartbeats. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "mtu",
					Description: `(Optional) The maximum transmission unit (MTU) is the largest packet size, measured in bytes excluding 14 bytes ethernet header and 4 bytes crc, that can be transmitted and received by this interface. Default value of MTU is 1500 on all the interface of Citrix ADC any value configured more than 1500 on the interface will make the interface as jumbo enabled. In case of cluster backplane interface MTU value will be changed to 1514 by default, user has to change the backplane interface value to maximum mtu configured on any of the interface in cluster system plus 14 bytes more for backplane interface if Jumbo is enabled on any of the interface in a cluster system. Changing the backplane will bring back the MTU of backplane interface to default value of 1500. If a channel is configured as backplane then the same holds true for channel as well as member interfaces.`,
				},
				resource.Attribute{
					Name:        "ringsize",
					Description: `(Optional) The receive ringsize of the interface. A higher number provides more number of buffers in handling incoming traffic.`,
				},
				resource.Attribute{
					Name:        "ringtype",
					Description: `(Optional) The receive ringtype of the interface (Fixed or Elastic). A fixed ring type pre-allocates configured number of buffers irrespective of traffic rate. In contrast, an elastic ring, expands and shrinks based on incoming traffic rate. Possible values: [ Elastic, Fixed ]`,
				},
				resource.Attribute{
					Name:        "tagall",
					Description: `(Optional) Add a four-byte 802.1q tag to every packet sent on this interface. The ON setting applies the tag for this interface's native VLAN. OFF applies the tag for all VLANs other than the native VLAN. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "trunk",
					Description: `(Optional) This argument is deprecated by tagall. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "trunkmode",
					Description: `(Optional) Accept and send 802.1q VLAN tagged packets, based on Allowed Vlan List of this interface. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "lacpmode",
					Description: `(Optional) Bind the interface to a LA channel created by the Link Aggregation control protocol (LACP). Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "lacpkey",
					Description: `(Optional) Integer identifying the LACP LA channel to which the interface is to be bound. For an LA channel of the Citrix ADC, this digit specifies the variable x of an LA channel in LA/x notation, where x can range from 1 to 8. For example, if you specify 3 as the LACP key for an LA channel, the interface is bound to the LA channel LA/3. For an LA channel of a cluster configuration, this digit specifies the variable y of a cluster LA channel in CLA/(y-4) notation, where y can range from 5 to 8. For example, if you specify 6 as the LACP key for a cluster LA channel, the interface is bound to the cluster LA channel CLA/2.`,
				},
				resource.Attribute{
					Name:        "lagtype",
					Description: `(Optional) Type of entity (Citrix ADC or cluster configuration) for which to create the channel. Possible values: [ NODE, CLUSTER ]`,
				},
				resource.Attribute{
					Name:        "lacppriority",
					Description: `(Optional) LACP port priority, expressed as an integer. The lower the number, the higher the priority. The Citrix ADC limits the number of interfaces in an LA channel to sixteen.`,
				},
				resource.Attribute{
					Name:        "lacptimeout",
					Description: `(Optional) Interval at which the Citrix ADC sends LACPDU messages to the peer device on the LA channel. Available settings function as follows: LONG - 30 seconds. SHORT - 1 second. Possible values: [ LONG, SHORT ]`,
				},
				resource.Attribute{
					Name:        "ifalias",
					Description: `(Optional) Alias name for the interface. Used only to enhance readability. To perform any operations, you have to specify the interface ID.`,
				},
				resource.Attribute{
					Name:        "throughput",
					Description: `(Optional) Low threshold value for the throughput of the interface, in Mbps. In an HA configuration, failover is triggered if the interface has HA MON enabled and the throughput is below the specified the threshold.`,
				},
				resource.Attribute{
					Name:        "linkredundancy",
					Description: `(Optional) Link Redundancy for Cluster LAG. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "bandwidthhigh",
					Description: `(Optional) High threshold value for the bandwidth usage of the interface, in Mbps. The Citrix ADC generates an SNMP trap message when the bandwidth usage of the interface is greater than or equal to the specified high threshold value.`,
				},
				resource.Attribute{
					Name:        "bandwidthnormal",
					Description: `(Optional) Normal threshold value for the bandwidth usage of the interface, in Mbps. When the bandwidth usage of the interface becomes less than or equal to the specified normal threshold after exceeding the high threshold, the Citrix ADC generates an SNMP trap message to indicate that the bandwidth usage has returned to normal.`,
				},
				resource.Attribute{
					Name:        "lldpmode",
					Description: `(Optional) Link Layer Discovery Protocol (LLDP) mode for an interface. The resultant LLDP mode of an interface depends on the LLDP mode configured at the global and the interface levels. Possible values: [ NONE, TRANSMITTER, RECEIVER, TRANSCEIVER ]`,
				},
				resource.Attribute{
					Name:        "lrsetpriority",
					Description: `(Optional) LRSET port priority, expressed as an integer ranging from 1 to 1024. The highest priority is 1. The Citrix ADC limits the number of interfaces in an LRSET to 8. Within a LRSET the highest LR Priority Interface is considered as the first candidate for the Active interface, if the interface is UP.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Link state of the interface (UP/DOWN). Default value: ENABLED Possible values = [ENABLED, DISABLED] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the interface. It has the same value as the ` + "`" + `interface_id` + "`" + ` attribute. ## Import A interface can be imported using its interface\_id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_interface.tf_interface 1/1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the interface. It has the same value as the ` + "`" + `interface_id` + "`" + ` attribute. ## Import A interface can be imported using its interface\_id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_interface.tf_interface 1/1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_interfacepair",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The interfacepair resource is used to create interfacepair.


`,
			Keywords: []string{
				"network",
				"interfacepair",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "interface_id",
					Description: `(Required) The Interface pair id. Minimum value = 1 Maximum value = 255`,
				},
				resource.Attribute{
					Name:        "ifnum",
					Description: `(Required) The constituent interfaces in the interface pair. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the interfacepair. It has the same value as the ` + "`" + `interface_id` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the interfacepair. It has the same value as the ` + "`" + `interface_id` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ip6tunnel",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The ip6tunnel resource is used to create ip6 Tunnel resource.


`,
			Keywords: []string{
				"network",
				"ip6tunnel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the IPv6 Tunnel. Cannot be changed after the service group is created. Must begin with a number or letter, and can consist of letters, numbers, and the @ _ - . (period) : (colon) # and space ( ) characters. Minimum length = 1 Maximum length = 31`,
				},
				resource.Attribute{
					Name:        "remote",
					Description: `(Required) An IPv6 address of the remote Citrix ADC used to set up the tunnel. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "local",
					Description: `(Required) An IPv6 address of the local Citrix ADC used to set up the tunnel.`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for the tunnel. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ip6tunnel. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A ip6tunnel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ip6tunnel.tf_ip6tunnel tf_ip6tunnel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ip6tunnel. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A ip6tunnel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ip6tunnel.tf_ip6tunnel tf_ip6tunnel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ip6tunnelparam",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The ip6tunnelparam resource is used to create ip6 tunnel parameter resource.


`,
			Keywords: []string{
				"network",
				"ip6tunnelparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "srcip",
					Description: `(Optional) Common source IPv6 address for all IPv6 tunnels. Must be a SNIP6 or VIP6 address. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "dropfrag",
					Description: `(Optional) Drop any packet that requires fragmentation. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "dropfragcputhreshold",
					Description: `(Optional) Threshold value, as a percentage of CPU usage, at which to drop packets that require fragmentation. Applies only if dropFragparameter is set to NO. Minimum value = 1 Maximum value = 100`,
				},
				resource.Attribute{
					Name:        "srciproundrobin",
					Description: `(Optional) Use a different source IPv6 address for each new session through a particular IPv6 tunnel, as determined by round robin selection of one of the SNIP6 addresses. This setting is ignored if a common global source IPv6 address has been specified for all the IPv6 tunnels. This setting does not apply to a tunnel for which a source IPv6 address has been specified. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "useclientsourceipv6",
					Description: `(Optional) Use client source IPv6 address as source IPv6 address for outer tunnel IPv6 header. Possible values: [ YES, NO ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ip6tunnelparam. It is a unique string prefixed with "tf-ip6tunnelparam-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ip6tunnelparam. It is a unique string prefixed with "tf-ip6tunnelparam-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ipsecalgprofile",
			Category:         "IPSECALG",
			ShortDescription: ``,
			Description: `

The ipsecalgprofile resource is used to create ipsecalgprofile.


`,
			Keywords: []string{
				"ipsecalg",
				"ipsecalgprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) The name of the ipsec alg profile. Minimum length = 1 Maximum length = 32`,
				},
				resource.Attribute{
					Name:        "ikesessiontimeout",
					Description: `(Optional) IKE session timeout in minutes. Minimum value = 1 Maximum value = 1440`,
				},
				resource.Attribute{
					Name:        "espsessiontimeout",
					Description: `(Optional) ESP session timeout in minutes. Minimum value = 1 Maximum value = 1440`,
				},
				resource.Attribute{
					Name:        "espgatetimeout",
					Description: `(Optional) Timeout ESP in seconds as no ESP packets are seen after IKE negotiation. Minimum value = 3 Maximum value = 1200`,
				},
				resource.Attribute{
					Name:        "connfailover",
					Description: `(Optional) Mode in which the connection failover feature must operate for the IPSec Alg. After a failover, established UDP connections and ESP packet flows are kept active and resumed on the secondary appliance. Recomended setting is ENABLED. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipsecalgprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A ipsecalgprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ipsecalgprofile.tf_ipsecalgprofile my_ipsecalgprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipsecalgprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A ipsecalgprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ipsecalgprofile.tf_ipsecalgprofile my_ipsecalgprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ipsecparameter",
			Category:         "IPsec",
			ShortDescription: ``,
			Description: `

The ipsecparameter resource is used to update ipsecparameter.


`,
			Keywords: []string{
				"ipsec",
				"ipsecparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ikeversion",
					Description: `(Optional) IKE Protocol Version. Possible values: [ V1, V2 ]`,
				},
				resource.Attribute{
					Name:        "encalgo",
					Description: `(Optional) Type of encryption algorithm (Note: Selection of AES enables AES128). Possible values: [ AES, 3DES, AES192, AES256 ]`,
				},
				resource.Attribute{
					Name:        "hashalgo",
					Description: `(Optional) Type of hashing algorithm. Possible values: [ HMAC_SHA1, HMAC_SHA256, HMAC_SHA384, HMAC_SHA512, HMAC_MD5 ]`,
				},
				resource.Attribute{
					Name:        "lifetime",
					Description: `(Optional) Lifetime of IKE SA in seconds. Lifetime of IPSec SA will be (lifetime of IKE SA/8). Minimum value = 480 Maximum value = 31536000`,
				},
				resource.Attribute{
					Name:        "livenesscheckinterval",
					Description: `(Optional) Number of seconds after which a notify payload is sent to check the liveliness of the peer. Additional retries are done as per retransmit interval setting. Zero value disables liveliness checks. Minimum value = 0 Maximum value = 64999`,
				},
				resource.Attribute{
					Name:        "replaywindowsize",
					Description: `(Optional) IPSec Replay window size for the data traffic. Minimum value = 0 Maximum value = 16384`,
				},
				resource.Attribute{
					Name:        "ikeretryinterval",
					Description: `(Optional) IKE retry interval for bringing up the connection. Minimum value = 60 Maximum value = 3600`,
				},
				resource.Attribute{
					Name:        "perfectforwardsecrecy",
					Description: `(Optional) Enable/Disable PFS. Possible values: [ enable, disable ]`,
				},
				resource.Attribute{
					Name:        "retransmissiontime",
					Description: `(Optional) The interval in seconds to retry sending the IKE messages to peer, three consecutive attempts are done with doubled interval after every failure, increases for every retransmit till 6 retransmits. Minimum value = 1 Maximum value = 99 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipsecparameter. It is a unique string prefixed with ` + "`" + `tf-ipsecparameter-` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipsecparameter. It is a unique string prefixed with ` + "`" + `tf-ipsecparameter-` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ipsecprofile",
			Category:         "IPsec",
			ShortDescription: ``,
			Description: `

The ipsecprofile resource is used to create ipsecprofile.


`,
			Keywords: []string{
				"ipsec",
				"ipsecprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) The name of the ipsec profile. Minimum length = 1 Maximum length = 32`,
				},
				resource.Attribute{
					Name:        "ikeversion",
					Description: `(Optional) IKE Protocol Version. Possible values: [ V1, V2 ]`,
				},
				resource.Attribute{
					Name:        "encalgo",
					Description: `(Optional) Type of encryption algorithm (Note: Selection of AES enables AES128). Possible values: [ AES, 3DES, AES192, AES256 ]`,
				},
				resource.Attribute{
					Name:        "hashalgo",
					Description: `(Optional) Type of hashing algorithm. Possible values: [ HMAC_SHA1, HMAC_SHA256, HMAC_SHA384, HMAC_SHA512, HMAC_MD5 ]`,
				},
				resource.Attribute{
					Name:        "lifetime",
					Description: `(Optional) Lifetime of IKE SA in seconds. Lifetime of IPSec SA will be (lifetime of IKE SA/8). Minimum value = 480 Maximum value = 31536000`,
				},
				resource.Attribute{
					Name:        "psk",
					Description: `(Optional) Pre shared key value.`,
				},
				resource.Attribute{
					Name:        "publickey",
					Description: `(Optional) Public key file path.`,
				},
				resource.Attribute{
					Name:        "privatekey",
					Description: `(Optional) Private key file path.`,
				},
				resource.Attribute{
					Name:        "peerpublickey",
					Description: `(Optional) Peer public key file path.`,
				},
				resource.Attribute{
					Name:        "livenesscheckinterval",
					Description: `(Optional) Number of seconds after which a notify payload is sent to check the liveliness of the peer. Additional retries are done as per retransmit interval setting. Zero value disables liveliness checks. Minimum value = 0 Maximum value = 64999`,
				},
				resource.Attribute{
					Name:        "replaywindowsize",
					Description: `(Optional) IPSec Replay window size for the data traffic. Minimum value = 0 Maximum value = 16384`,
				},
				resource.Attribute{
					Name:        "ikeretryinterval",
					Description: `(Optional) IKE retry interval for bringing up the connection. Minimum value = 60 Maximum value = 3600`,
				},
				resource.Attribute{
					Name:        "retransmissiontime",
					Description: `(Optional) The interval in seconds to retry sending the IKE messages to peer, three consecutive attempts are done with doubled interval after every failure. Minimum value = 1 Maximum value = 99`,
				},
				resource.Attribute{
					Name:        "perfectforwardsecrecy",
					Description: `(Optional) Enable/Disable PFS. Possible values: [ enable, disable ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipsecprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A ipsecprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ipsecprofile.tf_ipsecprofile my_ipsecprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipsecprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A ipsecprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ipsecprofile.tf_ipsecprofile my_ipsecprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ipset",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The ipset resource is used to create ip set resources.


`,
			Keywords: []string{
				"network",
				"ipset",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the IP set. Cannot be changed after the IP set is created. Choose a name that helps identify the IP set.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "nsipbinding",
					Description: `(Optional) A set of ipv4 addresses that will be bound to this ipset.`,
				},
				resource.Attribute{
					Name:        "nsip6binding",
					Description: `(Optional) A set of ipv6 addresses that will be bound to this ipset. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipset. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A ipset can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ipset.tf_ipset tf_ipset ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipset. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A ipset can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ipset.tf_ipset tf_ipset ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ipset_nsip6_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The ipset_nsip6_binding resource is used to create ipset_nsip6_binding.


`,
			Keywords: []string{
				"network",
				"ipset",
				"nsip6",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) One or more IP addresses bound to the IP set. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the IP set to which to bind IP addresses. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipset_nsip6_binding. It has the same value as the ` + "`" + `name` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by a comma. ## Import A ipset_nsip6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ipset_nsip6_binding.tf_ipset_nsip6_binding tf_ipset,2003:db8:100::fb/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipset_nsip6_binding. It has the same value as the ` + "`" + `name` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by a comma. ## Import A ipset_nsip6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ipset_nsip6_binding.tf_ipset_nsip6_binding tf_ipset,2003:db8:100::fb/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ipset_nsip_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The ipset_nsip_binding resource is used to create ipset_nsip_binding.


`,
			Keywords: []string{
				"network",
				"ipset",
				"nsip",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) One or more IP addresses bound to the IP set. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the IP set to which to bind IP addresses. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipset_nsip_binding. It has the same value as the ` + "`" + `name` + "`" + `and ` + "`" + `ipaddress` + "`" + ` attributes separated by a comma. ## Import A ipset_nsip_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ipset_nsip_binding.tfipset_nsip_binding tf_test_ipset,10.1.1.1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipset_nsip_binding. It has the same value as the ` + "`" + `name` + "`" + `and ` + "`" + `ipaddress` + "`" + ` attributes separated by a comma. ## Import A ipset_nsip_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ipset_nsip_binding.tfipset_nsip_binding tf_test_ipset,10.1.1.1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_iptunnel",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The iptunnel resource is used to create ipv4 network tunnels.


`,
			Keywords: []string{
				"network",
				"iptunnel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the IP tunnel. Leading character must be a number or letter. Other characters allowed, after the first character, are @ _ - . (period) : (colon) # and space ( ).`,
				},
				resource.Attribute{
					Name:        "remote",
					Description: `(Optional) Public IPv4 address, of the remote device, used to set up the tunnel. For this parameter, you can alternatively specify a network address.`,
				},
				resource.Attribute{
					Name:        "remotesubnetmask",
					Description: `(Optional) Subnet mask of the remote IP address of the tunnel.`,
				},
				resource.Attribute{
					Name:        "local",
					Description: `(Optional) Type of Citrix ADC owned public IPv4 address, configured on the local Citrix ADC and used to set up the tunnel.`,
				},
				resource.Attribute{
					Name:        "protocol",
					Description: `(Optional) Name of the protocol to be used on this tunnel. Possible values: [ IPIP, GRE, IPSEC, UDP ]`,
				},
				resource.Attribute{
					Name:        "grepayload",
					Description: `(Optional) The payload GRE will carry. Possible values: [ ETHERNETwithDOT1Q, ETHERNET, IP ]`,
				},
				resource.Attribute{
					Name:        "ipsecprofilename",
					Description: `(Optional) Name of IPSec profile to be associated.`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) The vlan for mulicast packets.`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for the iptunnel. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the iptunnel. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A iptunnel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_iptunnel.tf_iptunnel tf_iptunnel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the iptunnel. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A iptunnel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_iptunnel.tf_iptunnel tf_iptunnel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_iptunnelparam",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The iptunnelparam resource is used to create ip tunnel parameter resource.


`,
			Keywords: []string{
				"network",
				"iptunnelparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "srcip",
					Description: `(Optional) Common source-IP address for all tunnels. For a specific tunnel, this global setting is overridden if you have specified another source IP address. Must be a MIP or SNIP address. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "dropfrag",
					Description: `(Optional) Drop any IP packet that requires fragmentation before it is sent through the tunnel. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "dropfragcputhreshold",
					Description: `(Optional) Threshold value, as a percentage of CPU usage, at which to drop packets that require fragmentation to use the IP tunnel. Applies only if dropFragparameter is set to NO. The default value, 0, specifies that this parameter is not set. Minimum value = 1 Maximum value = 100`,
				},
				resource.Attribute{
					Name:        "srciproundrobin",
					Description: `(Optional) Use a different source IP address for each new session through a particular IP tunnel, as determined by round robin selection of one of the SNIP addresses. This setting is ignored if a common global source IP address has been specified for all the IP tunnels. This setting does not apply to a tunnel for which a source IP address has been specified. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "enablestrictrx",
					Description: `(Optional) Strict PBR check for IPSec packets received through tunnel. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "enablestricttx",
					Description: `(Optional) Strict PBR check for packets to be sent IPSec protected. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "mac",
					Description: `(Optional) The shared MAC used for shared IP between cluster nodes/HA peers.`,
				},
				resource.Attribute{
					Name:        "useclientsourceip",
					Description: `(Optional) Use client source IP as source IP for outer tunnel IP header. Possible values: [ YES, NO ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the iptunnelparam. It is a unique string prefixed with "tf-iptunnelparam-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the iptunnelparam. It is a unique string prefixed with "tf-iptunnelparam-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ipv6",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The ipv6 resource is used to create ipv6.


`,
			Keywords: []string{
				"network",
				"ipv6",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ralearning",
					Description: `(Optional) Enable the Citrix ADC to learn about various routes from Router Advertisement (RA) and Router Solicitation (RS) messages sent by the routers. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "routerredirection",
					Description: `(Optional) Enable the Citrix ADC to do Router Redirection. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ndbasereachtime",
					Description: `(Optional) Base reachable time of the Neighbor Discovery (ND6) protocol. The time, in milliseconds, that the Citrix ADC assumes an adjacent device is reachable after receiving a reachability confirmation. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "ndretransmissiontime",
					Description: `(Optional) Retransmission time of the Neighbor Discovery (ND6) protocol. The time, in milliseconds, between retransmitted Neighbor Solicitation (NS) messages, to an adjacent device. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "natprefix",
					Description: `(Optional) Prefix used for translating packets from private IPv6 servers to IPv4 packets. This prefix has a length of 96 bits (128-32 = 96). The IPv6 servers embed the destination IP address of the IPv4 servers or hosts in the last 32 bits of the destination IP address field of the IPv6 packets. The first 96 bits of the destination IP address field are set as the IPv6 NAT prefix. IPv6 packets addressed to this prefix have to be routed to the Citrix ADC to ensure that the IPv6-IPv4 translation is done by the appliance.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "dodad",
					Description: `(Optional) Enable the Citrix ADC to do Duplicate Address Detection (DAD) for all the Citrix ADC owned IPv6 addresses regardless of whether they are obtained through stateless auto configuration, DHCPv6, or manual configuration. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "usipnatprefix",
					Description: `(Optional) IPV6 NATPREFIX used in NAT46 scenario when USIP is turned on. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipv6. It is a unique string prefixed with "tf-ipv6-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ipv6. It is a unique string prefixed with "tf-ipv6-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_l2param",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The l2param resource is used to update l2param.


`,
			Keywords: []string{
				"network",
				"l2param",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "mbfpeermacupdate",
					Description: `(Optional) When mbf_instant_learning is enabled, learn any changes in peer's MAC after this time interval, which is in 10ms ticks.`,
				},
				resource.Attribute{
					Name:        "maxbridgecollision",
					Description: `(Optional) Maximum bridge collision for loop detection .`,
				},
				resource.Attribute{
					Name:        "bdggrpproxyarp",
					Description: `(Optional) Set/reset proxy ARP in bridge group deployment. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "bdgsetting",
					Description: `(Optional) Bridging settings for C2C behavior. If enabled, each PE will learn MAC entries independently. Otherwise, when L2 mode is ON, learned MAC entries on a PE will be broadcasted to all other PEs. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "garponvridintf",
					Description: `(Optional) Send GARP messagess on VRID-configured interfaces upon failover . Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "macmodefwdmypkt",
					Description: `(Optional) Allows MAC mode vserver to pick and forward the packets even if it is destined to Citrix ADC owned VIP. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "usemymac",
					Description: `(Optional) Use Citrix ADC MAC for all outgoing packets. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "proxyarp",
					Description: `(Optional) Proxies the ARP as Citrix ADC MAC for FreeBSD. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "garpreply",
					Description: `(Optional) Set/reset REPLY form of GARP . Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mbfinstlearning",
					Description: `(Optional) Enable instant learning of MAC changes in MBF mode. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "rstintfonhafo",
					Description: `(Optional) Enable the reset interface upon HA failover. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "skipproxyingbsdtraffic",
					Description: `(Optional) Control source parameters (IP and Port) for FreeBSD initiated traffic. If Enabled, source parameters are retained. Else proxy the source parameters based on next hop. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "returntoethernetsender",
					Description: `(Optional) Return to ethernet sender. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "stopmacmoveupdate",
					Description: `(Optional) Stop Update of server mac change to NAT sessions. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "bridgeagetimeout",
					Description: `(Optional) Time-out value for the bridge table entries, in seconds. The new value applies only to the entries that are dynamically learned after the new value is set. Previously existing bridge table entries expire after the previously configured time-out value. Minimum value = 60 Maximum value = 300`,
				},
				resource.Attribute{
					Name:        "usenetprofilebsdtraffic",
					Description: `(Optional) Control source parameters (IP and Port) for FreeBSD initiated traffic. If enabled proxy the source parameters based on netprofile source ip. If netprofile does not have ip configured, then it will continue to use NSIP as earlier. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the l2param. It is a unique string prefixed with "tf-l2param-".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the l2param. It is a unique string prefixed with "tf-l2param-".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_l3param",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The l3param resource is used to update l3param.


`,
			Keywords: []string{
				"network",
				"l3param",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "srcnat",
					Description: `(Optional) Perform NAT if only the source is in the private network. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "icmpgenratethreshold",
					Description: `(Optional) NS generated ICMP pkts per 10ms rate threshold.`,
				},
				resource.Attribute{
					Name:        "overridernat",
					Description: `(Optional) USNIP/USIP settings override RNAT settings for configured service/virtual server traffic.. . Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dropdfflag",
					Description: `(Optional) Enable dropping the IP DF flag. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "miproundrobin",
					Description: `(Optional) Enable round robin usage of mapped IPs. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "externalloopback",
					Description: `(Optional) Enable external loopback. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tnlpmtuwoconn",
					Description: `(Optional) Enable/Disable learning PMTU of IP tunnel when ICMP error does not contain connection information. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "usipserverstraypkt",
					Description: `(Optional) Enable detection of stray server side pkts in USIP mode. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "forwardicmpfragments",
					Description: `(Optional) Enable forwarding of ICMP fragments. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dropipfragments",
					Description: `(Optional) Enable dropping of IP fragments. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "acllogtime",
					Description: `(Optional) Parameter to tune acl logging time. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "implicitaclallow",
					Description: `(Optional) Do not apply ACLs for internal ports. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dynamicrouting",
					Description: `(Optional) Enable/Disable Dynamic routing on partition. This configuration is not applicable to default partition. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ipv6dynamicrouting",
					Description: `(Optional) Enable/Disable IPv6 Dynamic routing. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "allowclasseipv4",
					Description: `(Optional) Enable/Disable IPv4 Class E address clients. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the l3param. It is a unique string prefixed with "tf-l3param-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the l3param. It is a unique string prefixed with "tf-l3param-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_l4param",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The l4param resource is used to create Layer 4 related parameter resource.


`,
			Keywords: []string{
				"network",
				"l4param",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "l2connmethod",
					Description: `(Optional) Layer 2 connection method based on the combination of channel number, MAC address and VLAN. It is tuned with l2conn param of lb vserver. If l2conn of lb vserver is ON then method specified here will be used to identify a connection in addition to the 4-tuple (<source IP>:<source port>::<destination IP>:<destination port>). Possible values: [ Channel, Vlan, VlanChannel, Mac, MacChannel, MacVlan, MacVlanChannel ]`,
				},
				resource.Attribute{
					Name:        "l4switch",
					Description: `(Optional) In L4 switch topology, always clients and servers are on the same side. Enable l4switch to allow such connections. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the l4param. It is a unique string prefixed with "tf-l4param-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the l4param. It is a unique string prefixed with "tf-l4param-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lacp",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The lacp resource is used to configure aggregation control protocol lacp.


`,
			Keywords: []string{
				"network",
				"lacp",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "syspriority",
					Description: `(Required) Priority number that determines which peer device of an LACP LA channel can have control over the LA channel. This parameter is globally applied to all LACP channels on the Citrix ADC. The lower the number, the higher the priority. Minimum value = 1 Maximum value = 65535`,
				},
				resource.Attribute{
					Name:        "ownernode",
					Description: `(Required) The owner node in a cluster for which we want to set the lacp priority. Owner node can vary from 0 to 31. Ownernode value of 254 is used for Cluster. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lacp. It has the same value as the ` + "`" + `ownernode` + "`" + ` attribute. ## Import A lacp can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lacp.tf_lacp 0 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lacp. It has the same value as the ` + "`" + `ownernode` + "`" + ` attribute. ## Import A lacp can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lacp.tf_lacp 0 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbgroup",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbgroup resource is used to create an lb group entity.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbgroup",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the load balancing virtual server group.`,
				},
				resource.Attribute{
					Name:        "persistencetype",
					Description: `(Optional) Type of persistence for the group. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "persistencebackup",
					Description: `(Optional) Type of backup persistence for the group. Possible values: [ SOURCEIP, NONE ]`,
				},
				resource.Attribute{
					Name:        "backuppersistencetimeout",
					Description: `(Optional) Time period, in minutes, for which backup persistence is in effect.`,
				},
				resource.Attribute{
					Name:        "persistmask",
					Description: `(Optional) Persistence mask to apply to source IPv4 addresses when creating source IP based persistence sessions.`,
				},
				resource.Attribute{
					Name:        "cookiename",
					Description: `(Optional) Use this parameter to specify the cookie name for COOKIE peristence type. It specifies the name of cookie with a maximum of 32 characters. If not specified, cookie name is internally generated.`,
				},
				resource.Attribute{
					Name:        "v6persistmasklen",
					Description: `(Optional) Persistence mask to apply to source IPv6 addresses when creating source IP based persistence sessions.`,
				},
				resource.Attribute{
					Name:        "cookiedomain",
					Description: `(Optional) Domain attribute for the HTTP cookie.`,
				},
				resource.Attribute{
					Name:        "timeout",
					Description: `(Optional) Time period for which a persistence session is in effect.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Expression, or name of a named expression, against which traffic is evaluated. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "usevserverpersistency",
					Description: `(Optional) Use this parameter to enable vserver level persistence on group members. This allows member vservers to have their own persistence, but need to be compatible with other members persistence rules. When this setting is enabled persistence sessions created by any of the members can be shared by other member vservers. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mastervserver",
					Description: `(Optional) When USE_VSERVER_PERSISTENCE is enabled, one can use this setting to designate a member vserver as master which is responsible to create the persistence sessions.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the load balancing virtual server group. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbgroup. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lbgroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbgroup.tf_lbgroup tf_lbgroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbgroup. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lbgroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbgroup.tf_lbgroup tf_lbgroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbgroup_lbvserver_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbgroup_lbvserver_binding resource is used to add a lbvserver to lbgroup.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbgroup",
				"lbvserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vservername",
					Description: `(Required) Virtual server name.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the load balancing virtual server group. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my lbgroup" or 'my lbgroup'). ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbgroup_lbvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vservername` + "`" + ` attributes separated by a comma. ## Import A lbgroup_lbvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbgroup_lbvserver_binding.tf_lbvserverbinding tf_lbgroup,tf_lbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbgroup_lbvserver_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `vservername` + "`" + ` attributes separated by a comma. ## Import A lbgroup_lbvserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbgroup_lbvserver_binding.tf_lbvserverbinding tf_lbgroup,tf_lbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbmetrictable",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbmetrictable resource is used to create metric table.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbmetrictable",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "metrictable",
					Description: `(Optional) Name for the metric table. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my metrictable" or 'my metrictable'). ## Import An lbmetrictable can be imported using its id, e.g. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbmetrictable. It has the same value as the ` + "`" + `metrictable` + "`" + ` attribute. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_metrictable.tf_metrictable tf_metrictable ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbmetrictable. It has the same value as the ` + "`" + `metrictable` + "`" + ` attribute. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_metrictable.tf_metrictable tf_metrictable ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbmetrictable_metric_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbmetrictable_metric_binding resource is used to bind metric to lb metrictable.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbmetrictable",
				"metric",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "metric",
					Description: `(Required) Name of the metric for which to change the SNMP OID. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "Snmpoid",
					Description: `(Required) New SNMP OID of the metric. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "metrictable",
					Description: `(Required) Name of the metric table. Minimum length = 1 Maximum length = 31 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbmetrictable_metric_binding. It is the concatenation of the ` + "`" + `metrictable` + "`" + ` and ` + "`" + `metric` + "`" + ` attributes separated by a comma. ## Import A lbmetrictable_metric_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbmetrictable_metric_binding.tf_bind Table-Custom,2.3.6.4.5 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbmetrictable_metric_binding. It is the concatenation of the ` + "`" + `metrictable` + "`" + ` and ` + "`" + `metric` + "`" + ` attributes separated by a comma. ## Import A lbmetrictable_metric_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbmetrictable_metric_binding.tf_bind Table-Custom,2.3.6.4.5 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbmonitor",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbmonitor resource is used to create load balancing monitors.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbmonitor",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "monitorname",
					Description: `(Optional) Name for the monitor.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of monitor that you want to create. Possible values: [ PING, TCP, HTTP, TCP-ECV, HTTP-ECV, UDP-ECV, DNS, FTP, LDNS-PING, LDNS-TCP, LDNS-DNS, RADIUS, USER, HTTP-INLINE, SIP-UDP, SIP-TCP, LOAD, FTP-EXTENDED, SMTP, SNMP, NNTP, MYSQL, MYSQL-ECV, MSSQL-ECV, ORACLE-ECV, LDAP, POP3, CITRIX-XML-SERVICE, CITRIX-WEB-INTERFACE, DNS-TCP, RTSP, ARP, CITRIX-AG, CITRIX-AAC-LOGINPAGE, CITRIX-AAC-LAS, CITRIX-XD-DDC, ND6, CITRIX-WI-EXTENDED, DIAMETER, RADIUS_ACCOUNTING, STOREFRONT, APPC, SMPP, CITRIX-XNC-ECV, CITRIX-XDM, CITRIX-STA-SERVICE, CITRIX-STA-SERVICE-NHOP ]`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Optional) Action to perform when the response to an inline monitor (a monitor of type HTTP-INLINE) indicates that the service is down. A service monitored by an inline monitor is considered DOWN if the response code is not one of the codes that have been specified for the Response Code parameter. Available settings function as follows: NONE - Do not take any action. However, the show service command and the show lb monitor command indicate the total number of responses that were checked and the number of consecutive error responses received after the last successful probe. LOG - Log the event in NSLOG or SYSLOG. DOWN - Mark the service as being down, and then do not direct any traffic to the service until the configured down time has expired. Persistent connections to the service are terminated as soon as the service is marked as DOWN. Also, log the event in NSLOG or SYSLOG. Possible values: [ NONE, LOG, DOWN ]`,
				},
				resource.Attribute{
					Name:        "respcode",
					Description: `(Optional) Response codes for which to mark the service as UP. For any other response code, the action performed depends on the monitor type. HTTP monitors and RADIUS monitors mark the service as DOWN, while HTTP-INLINE monitors perform the action indicated by the Action parameter.`,
				},
				resource.Attribute{
					Name:        "httprequest",
					Description: `(Optional) HTTP request to send to the server (for example, "HEAD /file.html").`,
				},
				resource.Attribute{
					Name:        "rtsprequest",
					Description: `(Optional) RTSP request to send to the server (for example, "OPTIONS \`,
				},
				resource.Attribute{
					Name:        "customheaders",
					Description: `(Optional) Custom header string to include in the monitoring probes.`,
				},
				resource.Attribute{
					Name:        "maxforwards",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "sipmethod",
					Description: `(Optional) SIP method to use for the query. Applicable only to monitors of type SIP-UDP. Possible values: [ OPTIONS, INVITE, REGISTER ]`,
				},
				resource.Attribute{
					Name:        "sipuri",
					Description: `(Optional) SIP URI string to send to the service (for example, sip:sip.test). Applicable only to monitors of type SIP-UDP.`,
				},
				resource.Attribute{
					Name:        "sipreguri",
					Description: `(Optional) SIP user to be registered. Applicable only if the monitor is of type SIP-UDP and the SIP Method parameter is set to REGISTER.`,
				},
				resource.Attribute{
					Name:        "send",
					Description: `(Optional) String to send to the service. Applicable to TCP-ECV, HTTP-ECV, and UDP-ECV monitors.`,
				},
				resource.Attribute{
					Name:        "recv",
					Description: `(Optional) String expected from the server for the service to be marked as UP. Applicable to TCP-ECV, HTTP-ECV, and UDP-ECV monitors.`,
				},
				resource.Attribute{
					Name:        "query",
					Description: `(Optional) Domain name to resolve as part of monitoring the DNS service (for example, example.com).`,
				},
				resource.Attribute{
					Name:        "querytype",
					Description: `(Optional) Type of DNS record for which to send monitoring queries. Set to Address for querying A records, AAAA for querying AAAA records, and Zone for querying the SOA record. Possible values: [ Address, Zone, AAAA ]`,
				},
				resource.Attribute{
					Name:        "scriptname",
					Description: `(Optional) Path and name of the script to execute. The script must be available on the Citrix ADC, in the /nsconfig/monitors/ directory.`,
				},
				resource.Attribute{
					Name:        "scriptargs",
					Description: `(Optional) String of arguments for the script. The string is copied verbatim into the request.`,
				},
				resource.Attribute{
					Name:        "dispatcherip",
					Description: `(Optional) IP address of the dispatcher to which to send the probe.`,
				},
				resource.Attribute{
					Name:        "dispatcherport",
					Description: `(Optional) Port number on which the dispatcher listens for the monitoring probe.`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Optional) User name with which to probe the RADIUS, NNTP, FTP, FTP-EXTENDED, MYSQL, MSSQL, POP3, CITRIX-AG, CITRIX-XD-DDC, CITRIX-WI-EXTENDED, CITRIX-XNC or CITRIX-XDM server.`,
				},
				resource.Attribute{
					Name:        "password",
					Description: `(Optional) Password that is required for logging on to the RADIUS, NNTP, FTP, FTP-EXTENDED, MYSQL, MSSQL, POP3, CITRIX-AG, CITRIX-XD-DDC, CITRIX-WI-EXTENDED, CITRIX-XNC-ECV or CITRIX-XDM server. Used in conjunction with the user name specified for the User Name parameter.`,
				},
				resource.Attribute{
					Name:        "secondarypassword",
					Description: `(Optional) Secondary password that users might have to provide to log on to the Access Gateway server. Applicable to CITRIX-AG monitors.`,
				},
				resource.Attribute{
					Name:        "logonpointname",
					Description: `(Optional) Name of the logon point that is configured for the Citrix Access Gateway Advanced Access Control software. Required if you want to monitor the associated login page or Logon Agent. Applicable to CITRIX-AAC-LAS and CITRIX-AAC-LOGINPAGE monitors.`,
				},
				resource.Attribute{
					Name:        "lasversion",
					Description: `(Optional) Version number of the Citrix Advanced Access Control Logon Agent. Required by the CITRIX-AAC-LAS monitor.`,
				},
				resource.Attribute{
					Name:        "radkey",
					Description: `(Optional) Authentication key (shared secret text string) for RADIUS clients and servers to exchange. Applicable to monitors of type RADIUS and RADIUS_ACCOUNTING.`,
				},
				resource.Attribute{
					Name:        "radnasid",
					Description: `(Optional) NAS-Identifier to send in the Access-Request packet. Applicable to monitors of type RADIUS.`,
				},
				resource.Attribute{
					Name:        "radnasip",
					Description: `(Optional) Network Access Server (NAS) IP address to use as the source IP address when monitoring a RADIUS server. Applicable to monitors of type RADIUS and RADIUS_ACCOUNTING.`,
				},
				resource.Attribute{
					Name:        "radaccounttype",
					Description: `(Optional) Account Type to be used in Account Request Packet. Applicable to monitors of type RADIUS_ACCOUNTING.`,
				},
				resource.Attribute{
					Name:        "radframedip",
					Description: `(Optional) Source ip with which the packet will go out . Applicable to monitors of type RADIUS_ACCOUNTING.`,
				},
				resource.Attribute{
					Name:        "radapn",
					Description: `(Optional) Called Station Id to be used in Account Request Packet. Applicable to monitors of type RADIUS_ACCOUNTING.`,
				},
				resource.Attribute{
					Name:        "radmsisdn",
					Description: `(Optional) Calling Stations Id to be used in Account Request Packet. Applicable to monitors of type RADIUS_ACCOUNTING.`,
				},
				resource.Attribute{
					Name:        "radaccountsession",
					Description: `(Optional) Account Session ID to be used in Account Request Packet. Applicable to monitors of type RADIUS_ACCOUNTING.`,
				},
				resource.Attribute{
					Name:        "lrtm",
					Description: `(Optional) Calculate the least response times for bound services. If this parameter is not enabled, the appliance does not learn the response times of the bound services. Also used for LRTM load balancing. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "deviation",
					Description: `(Optional) Time value added to the learned average response time in dynamic response time monitoring (DRTM). When a deviation is specified, the appliance learns the average response time of bound services and adds the deviation to the average. The final value is then continually adjusted to accommodate response time variations over time. Specified in milliseconds, seconds, or minutes.`,
				},
				resource.Attribute{
					Name:        "units1",
					Description: `(Optional) Unit of measurement for the Deviation parameter. Cannot be changed after the monitor is created. Possible values: [ SEC, MSEC, MIN ]`,
				},
				resource.Attribute{
					Name:        "interval",
					Description: `(Optional) Time interval between two successive probes. Must be greater than the value of Response Time-out.`,
				},
				resource.Attribute{
					Name:        "units3",
					Description: `(Optional) monitor interval units. Possible values: [ SEC, MSEC, MIN ]`,
				},
				resource.Attribute{
					Name:        "resptimeout",
					Description: `(Optional) Amount of time for which the appliance must wait before it marks a probe as FAILED. Must be less than the value specified for the Interval parameter. Note: For UDP-ECV monitors for which a receive string is not configured, response timeout does not apply. For UDP-ECV monitors with no receive string, probe failure is indicated by an ICMP port unreachable error received from the service.`,
				},
				resource.Attribute{
					Name:        "units4",
					Description: `(Optional) monitor response timeout units. Possible values: [ SEC, MSEC, MIN ]`,
				},
				resource.Attribute{
					Name:        "resptimeoutthresh",
					Description: `(Optional) Response time threshold, specified as a percentage of the Response Time-out parameter. If the response to a monitor probe has not arrived when the threshold is reached, the appliance generates an SNMP trap called monRespTimeoutAboveThresh. After the response time returns to a value below the threshold, the appliance generates a monRespTimeoutBelowThresh SNMP trap. For the traps to be generated, the "MONITOR-RTO-THRESHOLD" alarm must also be enabled.`,
				},
				resource.Attribute{
					Name:        "retries",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "failureretries",
					Description: `(Optional) Number of retries that must fail, out of the number specified for the Retries parameter, for a service to be marked as DOWN. For example, if the Retries parameter is set to 10 and the Failure Retries parameter is set to 6, out of the ten probes sent, at least six probes must fail if the service is to be marked as DOWN. The default value of 0 means that all the retries must fail if the service is to be marked as DOWN.`,
				},
				resource.Attribute{
					Name:        "alertretries",
					Description: `(Optional) Number of consecutive probe failures after which the appliance generates an SNMP trap called monProbeFailed.`,
				},
				resource.Attribute{
					Name:        "successretries",
					Description: `(Optional) Number of consecutive successful probes required to transition a service's state from DOWN to UP.`,
				},
				resource.Attribute{
					Name:        "downtime",
					Description: `(Optional) Time duration for which to wait before probing a service that has been marked as DOWN. Expressed in milliseconds, seconds, or minutes.`,
				},
				resource.Attribute{
					Name:        "units2",
					Description: `(Optional) Unit of measurement for the Down Time parameter. Cannot be changed after the monitor is created. Possible values: [ SEC, MSEC, MIN ]`,
				},
				resource.Attribute{
					Name:        "destip",
					Description: `(Optional) IP address of the service to which to send probes. If the parameter is set to 0, the IP address of the server to which the monitor is bound is considered the destination IP address.`,
				},
				resource.Attribute{
					Name:        "destport",
					Description: `(Optional) TCP or UDP port to which to send the probe. If the parameter is set to 0, the port number of the service to which the monitor is bound is considered the destination port. For a monitor of type USER, however, the destination port is the port number that is included in the HTTP request sent to the dispatcher. Does not apply to monitors of type PING.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) State of the monitor. The DISABLED setting disables not only the monitor being configured, but all monitors of the same type, until the parameter is set to ENABLED. If the monitor is bound to a service, the state of the monitor is not taken into account when the state of the service is determined. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "reverse",
					Description: `(Optional) Mark a service as DOWN, instead of UP, when probe criteria are satisfied, and as UP instead of DOWN when probe criteria are not satisfied. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "transparent",
					Description: `(Optional) The monitor is bound to a transparent device such as a firewall or router. The state of a transparent device depends on the responsiveness of the services behind it. If a transparent device is being monitored, a destination IP address must be specified. The probe is sent to the specified IP address by using the MAC address of the transparent device. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "iptunnel",
					Description: `(Optional) Send the monitoring probe to the service through an IP tunnel. A destination IP address must be specified. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "tos",
					Description: `(Optional) Probe the service by encoding the destination IP address in the IP TOS (6) bits. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "tosid",
					Description: `(Optional) The TOS ID of the specified destination IP. Applicable only when the TOS parameter is set.`,
				},
				resource.Attribute{
					Name:        "secure",
					Description: `(Optional) Use a secure SSL connection when monitoring a service. Applicable only to TCP based monitors. The secure option cannot be used with a CITRIX-AG monitor, because a CITRIX-AG monitor uses a secure connection by default. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "validatecred",
					Description: `(Optional) Validate the credentials of the Xen Desktop DDC server user. Applicable to monitors of type CITRIX-XD-DDC. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "domain",
					Description: `(Optional) Domain in which the XenDesktop Desktop Delivery Controller (DDC) servers or Web Interface servers are present. Required by CITRIX-XD-DDC and CITRIX-WI-EXTENDED monitors for logging on to the DDC servers and Web Interface servers, respectively.`,
				},
				resource.Attribute{
					Name:        "group",
					Description: `(Optional) Name of a newsgroup available on the NNTP service that is to be monitored. The appliance periodically generates an NNTP query for the name of the newsgroup and evaluates the response. If the newsgroup is found on the server, the service is marked as UP. If the newsgroup does not exist or if the search fails, the service is marked as DOWN. Applicable to NNTP monitors.`,
				},
				resource.Attribute{
					Name:        "filename",
					Description: `(Optional) Name of a file on the FTP server. The appliance monitors the FTP service by periodically checking the existence of the file on the server. Applicable to FTP-EXTENDED monitors.`,
				},
				resource.Attribute{
					Name:        "basedn",
					Description: `(Optional) The base distinguished name of the LDAP service, from where the LDAP server can begin the search for the attributes in the monitoring query. Required for LDAP service monitoring.`,
				},
				resource.Attribute{
					Name:        "binddn",
					Description: `(Optional) The distinguished name with which an LDAP monitor can perform the Bind operation on the LDAP server. Optional. Applicable to LDAP monitors.`,
				},
				resource.Attribute{
					Name:        "filter",
					Description: `(Optional) Filter criteria for the LDAP query. Optional.`,
				},
				resource.Attribute{
					Name:        "attribute",
					Description: `(Optional) Attribute to evaluate when the LDAP server responds to the query. Success or failure of the monitoring probe depends on whether the attribute exists in the response. Optional.`,
				},
				resource.Attribute{
					Name:        "database",
					Description: `(Optional) Name of the database to connect to during authentication.`,
				},
				resource.Attribute{
					Name:        "oraclesid",
					Description: `(Optional) Name of the service identifier that is used to connect to the Oracle database during authentication.`,
				},
				resource.Attribute{
					Name:        "sqlquery",
					Description: `(Optional) SQL query for a MYSQL-ECV or MSSQL-ECV monitor. Sent to the database server after the server authenticates the connection.`,
				},
				resource.Attribute{
					Name:        "evalrule",
					Description: `(Optional) Expression that evaluates the database server's response to a MYSQL-ECV or MSSQL-ECV monitoring query. Must produce a Boolean result. The result determines the state of the server. If the expression returns TRUE, the probe succeeds. For example, if you want the appliance to evaluate the error message to determine the state of the server, use the rule MYSQL.RES.ROW(10) .TEXT_ELEM(2).EQ("MySQL").`,
				},
				resource.Attribute{
					Name:        "mssqlprotocolversion",
					Description: `(Optional) Version of MSSQL server that is to be monitored. Possible values: [ 70, 2000, 2000SP1, 2005, 2008, 2008R2, 2012, 2014 ]`,
				},
				resource.Attribute{
					Name:        "snmpoid",
					Description: `(Optional) SNMP OID for SNMP monitors.`,
				},
				resource.Attribute{
					Name:        "snmpcommunity",
					Description: `(Optional) Community name for SNMP monitors.`,
				},
				resource.Attribute{
					Name:        "snmpthreshold",
					Description: `(Optional) Threshold for SNMP monitors.`,
				},
				resource.Attribute{
					Name:        "snmpversion",
					Description: `(Optional) SNMP version to be used for SNMP monitors. Possible values: [ V1, V2 ]`,
				},
				resource.Attribute{
					Name:        "metrictable",
					Description: `(Optional) Metric table to which to bind metrics.`,
				},
				resource.Attribute{
					Name:        "application",
					Description: `(Optional) Name of the application used to determine the state of the service. Applicable to monitors of type CITRIX-XML-SERVICE.`,
				},
				resource.Attribute{
					Name:        "sitepath",
					Description: `(Optional) URL of the logon page. For monitors of type CITRIX-WEB-INTERFACE, to monitor a dynamic page under the site path, terminate the site path with a slash (/). Applicable to CITRIX-WEB-INTERFACE, CITRIX-WI-EXTENDED and CITRIX-XDM monitors.`,
				},
				resource.Attribute{
					Name:        "storename",
					Description: `(Optional) Store Name. For monitors of type STOREFRONT, STORENAME is an optional argument defining storefront service store name. Applicable to STOREFRONT monitors.`,
				},
				resource.Attribute{
					Name:        "storefrontacctservice",
					Description: `(Optional) Enable/Disable probing for Account Service. Applicable only to Store Front monitors. For multi-tenancy configuration users my skip account service. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "hostname",
					Description: `(Optional) Hostname in the FQDN format (Example: porche.cars.org). Applicable to STOREFRONT monitors.`,
				},
				resource.Attribute{
					Name:        "netprofile",
					Description: `(Optional) Name of the network profile.`,
				},
				resource.Attribute{
					Name:        "originhost",
					Description: `(Optional) Origin-Host value for the Capabilities-Exchange-Request (CER) message to use for monitoring Diameter servers.`,
				},
				resource.Attribute{
					Name:        "originrealm",
					Description: `(Optional) Origin-Realm value for the Capabilities-Exchange-Request (CER) message to use for monitoring Diameter servers.`,
				},
				resource.Attribute{
					Name:        "hostipaddress",
					Description: `(Optional) Host-IP-Address value for the Capabilities-Exchange-Request (CER) message to use for monitoring Diameter servers. If Host-IP-Address is not specified, the appliance inserts the mapped IP (MIP) address or subnet IP (SNIP) address from which the CER request (the monitoring probe) is sent.`,
				},
				resource.Attribute{
					Name:        "vendorid",
					Description: `(Optional) Vendor-Id value for the Capabilities-Exchange-Request (CER) message to use for monitoring Diameter servers.`,
				},
				resource.Attribute{
					Name:        "productname",
					Description: `(Optional) Product-Name value for the Capabilities-Exchange-Request (CER) message to use for monitoring Diameter servers.`,
				},
				resource.Attribute{
					Name:        "firmwarerevision",
					Description: `(Optional) Firmware-Revision value for the Capabilities-Exchange-Request (CER) message to use for monitoring Diameter servers.`,
				},
				resource.Attribute{
					Name:        "inbandsecurityid",
					Description: `(Optional) Inband-Security-Id for the Capabilities-Exchange-Request (CER) message to use for monitoring Diameter servers. Possible values: [ NO_INBAND_SECURITY, TLS ]`,
				},
				resource.Attribute{
					Name:        "vendorspecificvendorid",
					Description: `(Optional) Vendor-Id to use in the Vendor-Specific-Application-Id grouped attribute-value pair (AVP) in the monitoring CER message. To specify Auth-Application-Id or Acct-Application-Id in Vendor-Specific-Application-Id, use vendorSpecificAuthApplicationIds or vendorSpecificAcctApplicationIds, respectively. Only one Vendor-Id is supported for all the Vendor-Specific-Application-Id AVPs in a CER monitoring message.`,
				},
				resource.Attribute{
					Name:        "kcdaccount",
					Description: `(Optional) KCD Account used by MSSQL monitor.`,
				},
				resource.Attribute{
					Name:        "storedb",
					Description: `(Optional) Store the database list populated with the responses to monitor probes. Used in database specific load balancing if MSSQL-ECV/MYSQL-ECV monitor is configured. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "storefrontcheckbackendservices",
					Description: `(Optional) This option will enable monitoring of services running on storefront server. Storefront services are monitored by probing to a Windows service that runs on the Storefront server and exposes details of which storefront services are running. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "trofscode",
					Description: `(Optional) Code expected when the server is under maintenance.`,
				},
				resource.Attribute{
					Name:        "trofsstring",
					Description: `(Optional) String expected from the server for the service to be marked as trofs. Applicable to HTTP-ECV/TCP-ECV monitors.`,
				},
				resource.Attribute{
					Name:        "sslprofile",
					Description: `(Optional) SSL Profile associated with the monitor.`,
				},
				resource.Attribute{
					Name:        "metric",
					Description: `(Optional) Metric name in the metric table, whose setting is changed. A value zero disables the metric and it will not be used for load calculation.`,
				},
				resource.Attribute{
					Name:        "metricthreshold",
					Description: `(Optional) Threshold to be used for that metric.`,
				},
				resource.Attribute{
					Name:        "metricweight",
					Description: `(Optional) The weight for the specified service metric with respect to others.`,
				},
				resource.Attribute{
					Name:        "servicename",
					Description: `(Optional) The name of the service to which the monitor is bound.`,
				},
				resource.Attribute{
					Name:        "servicegroupname",
					Description: `(Optional) The name of the service group to which the monitor is to be bound. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbmonitor. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lbmonitor can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbmonitor.tf_lbmonitor tf_lbmonitor ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbmonitor. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lbmonitor can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbmonitor.tf_lbmonitor tf_lbmonitor ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbmonitor_metric_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `\_metric\_binding

The lbmonitor\_metric\_binding resource is used bind load balancing monitor to metric.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbmonitor",
				"metric",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "metric",
					Description: `(Required) Metric name in the metric table, whose setting is changed. A value zero disables the metric and it will not be used for load calculation.`,
				},
				resource.Attribute{
					Name:        "metricweight",
					Description: `(Optional) The weight for the specified service metric with respect to others.`,
				},
				resource.Attribute{
					Name:        "metricthreshold",
					Description: `(Optional) Threshold to be used for that metric.`,
				},
				resource.Attribute{
					Name:        "monitorname",
					Description: `(Required) Name of the monitor. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbmonitor\_metric\_binding. It is the concatenation of the ` + "`" + `monitorname` + "`" + ` and ` + "`" + `metric` + "`" + ` attributes separated by a comma. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbmonitor_metric_binding.tf_lbmonitor_metric_binding tf_lbmonitor_metric_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbmonitor\_metric\_binding. It is the concatenation of the ` + "`" + `monitorname` + "`" + ` and ` + "`" + `metric` + "`" + ` attributes separated by a comma. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbmonitor_metric_binding.tf_lbmonitor_metric_binding tf_lbmonitor_metric_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbmonitor_sslcertkey_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbmonitor_sslcertkey_bindingresource is used to add an sslcertkey to lbmonitor.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbmonitor",
				"sslcertkey",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "certkeyname",
					Description: `(Required) The name of the certificate bound to the monitor.`,
				},
				resource.Attribute{
					Name:        "ca",
					Description: `(Optional) The rule for use of CRL corresponding to this CA certificate during client authentication. If crlCheck is set to Mandatory, the system will deny all SSL clients if the CRL is missing, expired - NextUpdate date is in the past, or is incomplete with remote CRL refresh enabled. If crlCheck is set to optional, the system will allow SSL clients in the above error cases.However, in any case if the client certificate is revoked in the CRL, the SSL client will be denied access.`,
				},
				resource.Attribute{
					Name:        "crlcheck",
					Description: `(Optional) The state of the CRL check parameter. (Mandatory/Optional). Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "ocspcheck",
					Description: `(Optional) The state of the OCSP check parameter. (Mandatory/Optional). Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "monitorname",
					Description: `(Required) Name of the monitor. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbmonitor_sslcertkey_binding. It has the same value as the concatenation of the ` + "`" + `monitorname` + "`" + ` and ` + "`" + `certkeyname` + "`" + ` attributes separated by a comma. ## Import A lbmonitor\_sslcertkey\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbmonitor_sslcertkey_binding.tf_lbmonitor_sslcertkey_binding tf_monitor,tf_sslcertkey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbmonitor_sslcertkey_binding. It has the same value as the concatenation of the ` + "`" + `monitorname` + "`" + ` and ` + "`" + `certkeyname` + "`" + ` attributes separated by a comma. ## Import A lbmonitor\_sslcertkey\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbmonitor_sslcertkey_binding.tf_lbmonitor_sslcertkey_binding tf_monitor,tf_sslcertkey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbparameter",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbparameter resource is used to set load balancing parameters.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "httponlycookieflag",
					Description: `(Optional) Include the HttpOnly attribute in persistence cookies. The HttpOnly attribute limits the scope of a cookie to HTTP requests and helps mitigate the risk of cross-site scripting attacks. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "usesecuredpersistencecookie",
					Description: `(Optional) Encode persistence cookie values using SHA2 hash. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "useencryptedpersistencecookie",
					Description: `(Optional) Encode persistence cookie values using SHA2 hash. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "cookiepassphrase",
					Description: `(Optional) Use this parameter to specify the passphrase used to generate secured persistence cookie value. It specifies the passphrase with a maximum of 31 characters.`,
				},
				resource.Attribute{
					Name:        "consolidatedlconn",
					Description: `(Optional) To find the service with the fewest connections, the virtual server uses the consolidated connection statistics from all the packet engines. The NO setting allows consideration of only the number of connections on the packet engine that received the new connection. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "useportforhashlb",
					Description: `(Optional) Include the port number of the service when creating a hash for hash based load balancing methods. With the NO setting, only the IP address of the service is considered when creating a hash. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "preferdirectroute",
					Description: `(Optional) Perform route lookup for traffic received by the Citrix ADC, and forward the traffic according to configured routes. Do not set this parameter if you want a wildcard virtual server to direct packets received by the appliance to an intermediary device, such as a firewall, even if their destination is directly connected to the appliance. Route lookup is performed after the packets have been processed and returned by the intermediary device. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "startuprrfactor",
					Description: `(Optional) Number of requests, per service, for which to apply the round robin load balancing method before switching to the configured load balancing method, thus allowing services to ramp up gradually to full load. Until the specified number of requests is distributed, the Citrix ADC is said to be implementing the slow start mode (or startup round robin). Implemented for a virtual server when one of the following is true:`,
				},
				resource.Attribute{
					Name:        "monitorskipmaxclient",
					Description: `(Optional) When a monitor initiates a connection to a service, do not check to determine whether the number of connections to the service has reached the limit specified by the service's Max Clients setting. Enables monitoring to continue even if the service has reached its connection limit. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "monitorconnectionclose",
					Description: `(Optional) Close monitoring connections by sending the service a connection termination message with the specified bit set. Possible values: [ RESET, FIN ]`,
				},
				resource.Attribute{
					Name:        "vserverspecificmac",
					Description: `(Optional) Allow a MAC-mode virtual server to accept traffic returned by an intermediary device, such as a firewall, to which the traffic was previously forwarded by another MAC-mode virtual server. The second virtual server can then distribute that traffic across the destination server farm. Also useful when load balancing Branch Repeater appliances. Note: The second virtual server can also send the traffic to another set of intermediary devices, such as another set of firewalls. If necessary, you can configure multiple MAC-mode virtual servers to pass traffic successively through multiple sets of intermediary devices. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "allowboundsvcremoval",
					Description: `(Optional) This is used, to enable/disable the option of svc/svcgroup removal, if it is bound to one or more vserver. If it is enabled, the svc/svcgroup can be removed, even if it bound to vservers. If disabled, an error will be thrown, when the user tries to remove a svc/svcgroup without unbinding from its vservers. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "retainservicestate",
					Description: `(Optional) This option is used to retain the original state of service or servicegroup member when an enable server command is issued. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "dbsttl",
					Description: `(Optional) Specify the TTL for DNS record for domain based service. The default value of ttl is 0 which indicates to use the TTL received in DNS response for monitors.`,
				},
				resource.Attribute{
					Name:        "maxpipelinenat",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "literaladccookieattribute",
					Description: `(Optional) String configured as LiteralADCCookieAttribute will be appended as attribute for Citrix ADC cookie (for example: LB cookie persistence , GSLB site persistence, CS cookie persistence, LB group cookie persistence). Sample usage - set lb parameter -LiteralADCCookieAttribute ";SameSite=None".`,
				},
				resource.Attribute{
					Name:        "computedadccookieattribute",
					Description: `(Optional) ComputedADCCookieAttribute accepts ns variable as input in form of string starting with $ (to understand how to configure ns variable, please check man add ns variable). policies can be configured to modify this variable for every transaction and the final value of the variable after policy evaluation will be appended as attribute to Citrix ADC cookie (for example: LB cookie persistence , GSLB sitepersistence, CS cookie persistence, LB group cookie persistence). Only one of ComputedADCCookieAttribute, LiteralADCCookieAttribute can be set. Sample usage - add ns variable lbvar -type TEXT(100) -scope Transaction add ns assignment lbassign -variable $lbvar -set "\\";SameSite=Strict\\"" add rewrite policy lbpol <valid policy expression> lbassign bind rewrite global lbpol 100 next -type RES_OVERRIDE set lb param -ComputedADCCookieAttribute "$lbvar" For incoming client request, if above policy evaluates TRUE, then SameSite=Strict will be appended to ADC generated cookie.`,
				},
				resource.Attribute{
					Name:        "storemqttclientidandusername",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "lbhashalgorithm",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "dropmqttjumbomessage",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "lbhashfingers",
					Description: `(Optional) ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbparameter. It is a unique string prefixed with "tf-lbparameter"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbparameter. It is a unique string prefixed with "tf-lbparameter"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbprofile",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The Lbprofile resource is used to set load balancing parameters in a profile.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "lbprofilename",
					Description: `(Required) Name of the LB profile.`,
				},
				resource.Attribute{
					Name:        "dbslb",
					Description: `(Optional) Enable database specific load balancing for MySQL and MSSQL service types. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "processlocal",
					Description: `(Optional) By turning on this option packets destined to a vserver in a cluster will not under go any steering. Turn this option for single pa cket request response mode or when the upstream device is performing a proper RSS for connection based distribution. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "httponlycookieflag",
					Description: `(Optional) Include the HttpOnly attribute in persistence cookies. The HttpOnly attribute limits the scope of a cookie to HTTP requests and helps mitigate the risk of cross-site scripting attacks. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "cookiepassphrase",
					Description: `(Optional) Use this parameter to specify the passphrase used to generate secured persistence cookie value. It specifies the passphrase with a maximum of 31 characters.`,
				},
				resource.Attribute{
					Name:        "usesecuredpersistencecookie",
					Description: `(Optional) Encode persistence cookie values using SHA2 hash. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "useencryptedpersistencecookie",
					Description: `(Optional) Encode persistence cookie values using SHA2 hash. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "literaladccookieattribute",
					Description: `(Optional) String configured as LiteralADCCookieAttribute will be appended as attribute for Citrix ADC cookie (for example: LB cookie persistence , GSLB site persistence, CS cookie persistence, LB group cookie persistence). Sample usage - add lb profile lbprof -LiteralADCCookieAttribute ";SameSite=None".`,
				},
				resource.Attribute{
					Name:        "computedadccookieattribute",
					Description: `(Optional) ComputedADCCookieAttribute accepts ns variable as input in form of string starting with $ (to understand how to configure ns variable, please check man add ns variable). policies can be configured to modify this variable for every transaction and the final value of the variable after policy evaluation will be appended as attribute to Citrix ADC cookie (for example: LB cookie persistence , GSLB sitepersistence, CS cookie persistence, LB group cookie persistence). Only one of ComputedADCCookieAttribute, LiteralADCCookieAttribute can be set. Sample usage - add ns variable lbvar -type TEXT(100) -scope Transaction add ns assignment lbassign -variable $lbvar -set "\\";SameSite=Strict\\"" add rewrite policy lbpol <valid policy expression> lbassign bind rewrite global lbpol 100 next -type RES_OVERRIDE add lb profile lbprof -ComputedADCCookieAttribute "$lbvar" For incoming client request, if above policy evaluates TRUE, then SameSite=Strict will be appended to ADC generated cookie.`,
				},
				resource.Attribute{
					Name:        "storemqttclientidandusername",
					Description: `(Optional) This option allows to store the MQTT clientid and username in transactional logs. Default value: NO Possible values : [YES, NO]`,
				},
				resource.Attribute{
					Name:        "lbhashalgorithm",
					Description: `(Optional) This option dictates the hashing algorithm used for hash based LB methods (URLHASH, DOMAINHASH, SOURCEIPHASH, DESTINATIONIPHASH, SRCIPDESTIPHASH, SRCIPSRCPORTHASH, TOKEN, USER_TOKEN, CALLIDHASH). Default value: [DEFAULT] Possible values : [DEFAULT, PRAC, JARH]`,
				},
				resource.Attribute{
					Name:        "lbhashfingers",
					Description: `(Optional) This option is used to specify the number of fingers to be used in PRAC and JARH algorithms for hash based LB methods. Increasing the number of fingers might give better distribution of traffic at the expense of additional memory. Default value: 256 Minimum value = 1 Maximum value = 1024 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbprofile. It has the same value as the ` + "`" + `lbprofilename` + "`" + ` attribute. ## Import A lbprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbprofile.tf_lbprofile tf_lbprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbprofile. It has the same value as the ` + "`" + `lbprofilename` + "`" + ` attribute. ## Import A lbprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbprofile.tf_lbprofile tf_lbprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbroute",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbroute resource is used to bind a route VIP to the route structure.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbroute",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "network",
					Description: `(Required) The IP address of the network to which the route belongs.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Required) The netmask to which the route belongs.`,
				},
				resource.Attribute{
					Name:        "gatewayname",
					Description: `(Required) The name of the route.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbroute. It is the concatenation of the ` + "`" + `network` + "`" + `, ` + "`" + `netmask` + "`" + ` and ` + "`" + `gatewayname` + "`" + ` attributes separated by commas. ## Import An lbroute can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbroute.tf_lbroute 55.0.0.0,255.0.0.0,tf_lbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbroute. It is the concatenation of the ` + "`" + `network` + "`" + `, ` + "`" + `netmask` + "`" + ` and ` + "`" + `gatewayname` + "`" + ` attributes separated by commas. ## Import An lbroute can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbroute.tf_lbroute 55.0.0.0,255.0.0.0,tf_lbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbroute6",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbroute6 resource is used to configure lbroute6.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbroute6",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "network",
					Description: `(Required) The destination network.`,
				},
				resource.Attribute{
					Name:        "gatewayname",
					Description: `(Required) The name of the route.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbroute6. It has the same value as the ` + "`" + `gatewayname` + "`" + ` attribute. ## Import A lbroute6 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbroute6.tf_lbroute6 tf_lbroute6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbroute6. It has the same value as the ` + "`" + `gatewayname` + "`" + ` attribute. ## Import A lbroute6 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbroute6.tf_lbroute6 tf_lbroute6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbsipparameters",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbsipparameters resource is used to configure the global SIP parameters.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbsipparameters",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "rnatsrcport",
					Description: `(Optional) Port number with which to match the source port in server-initiated SIP traffic. The rport parameter is added, without a value, to SIP packets that have a matching source port number, and CALL-ID based persistence is implemented for the responses received by the virtual server.`,
				},
				resource.Attribute{
					Name:        "rnatdstport",
					Description: `(Optional) Port number with which to match the destination port in server-initiated SIP traffic. The rport parameter is added, without a value, to SIP packets that have a matching destination port number, and CALL-ID based persistence is implemented for the responses received by the virtual server.`,
				},
				resource.Attribute{
					Name:        "retrydur",
					Description: `(Optional) Time, in seconds, for which a client must wait before initiating a connection after receiving a 503 Service Unavailable response from the SIP server. The time value is sent in the "Retry-After" header in the 503 response.`,
				},
				resource.Attribute{
					Name:        "addrportvip",
					Description: `(Optional) Add the rport parameter to the VIA headers of SIP requests that virtual servers receive from clients or servers. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sip503ratethreshold",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "rnatsecuresrcport",
					Description: `(Optional) Port number with which to match the source port in server-initiated SIP over SSL traffic. The rport parameter is added, without a value, to SIP packets that have a matching source port number, and CALL-ID based persistence is implemented for the responses received by the virtual server. Range 1 - 65535`,
				},
				resource.Attribute{
					Name:        "rnatsecuredstport",
					Description: `(Optional) Port number with which to match the destination port in server-initiated SIP over SSL traffic. The rport parameter is added, without a value, to SIP packets that have a matching destination port number, and CALL-ID based persistence is implemented for the responses received by the virtual server. Range 1 - 65535`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbsipparameters. It is a unique string prefixed with "tf_lbsipparameters"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbsipparameters. It is a unique string prefixed with "tf_lbsipparameters"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver resource is used to create load balancing virtual servers.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the virtual server.`,
				},
				resource.Attribute{
					Name:        "servicetype",
					Description: `(Optional) Protocol used by the service (also called the service type). Possible values: [ HTTP, FTP, TCP, UDP, SSL, SSL_BRIDGE, SSL_TCP, DTLS, NNTP, DNS, DHCPRA, ANY, SIP_UDP, SIP_TCP, SIP_SSL, DNS_TCP, RTSP, PUSH, SSL_PUSH, RADIUS, RDP, MYSQL, MSSQL, DIAMETER, SSL_DIAMETER, TFTP, ORACLE, SMPP, SYSLOGTCP, SYSLOGUDP, FIX, SSL_FIX, PROXY, USER_TCP, USER_SSL_TCP, QUIC, IPFIX, LOGSTREAM, MONGO, MONGO_TLS ]`,
				},
				resource.Attribute{
					Name:        "ipv46",
					Description: `(Optional) IPv4 or IPv6 address to assign to the virtual server.`,
				},
				resource.Attribute{
					Name:        "ippattern",
					Description: `(Optional) IP address pattern, in dotted decimal notation, for identifying packets to be accepted by the virtual server. The IP Mask parameter specifies which part of the destination IP address is matched against the pattern. Mutually exclusive with the IP Address parameter. For example, if the IP pattern assigned to the virtual server is 198.51.100.0 and the IP mask is 255.255.240.0 (a forward mask), the first 20 bits in the destination IP addresses are matched with the first 20 bits in the pattern. The virtual server accepts requests with IP addresses that range from 198.51.96.1 to 198.51.111.254. You can also use a pattern such as 0.0.2.2 and a mask such as 0.0.255.255 (a reverse mask). If a destination IP address matches more than one IP pattern, the pattern with the longest match is selected, and the associated virtual server processes the request. For example, if virtual servers vs1 and vs2 have the same IP pattern, 0.0.100.128, but different IP masks of 0.0.255.255 and 0.0.224.255, a destination IP address of 198.51.100.128 has the longest match with the IP pattern of vs1. If a destination IP address matches two or more virtual servers to the same extent, the request is processed by the virtual server whose port number matches the port number in the request.`,
				},
				resource.Attribute{
					Name:        "ipmask",
					Description: `(Optional) IP mask, in dotted decimal notation, for the IP Pattern parameter. Can have leading or trailing non-zero octets (for example, 255.255.240.0 or 0.0.255.255). Accordingly, the mask specifies whether the first n bits or the last n bits of the destination IP address in a client request are to be matched with the corresponding bits in the IP pattern. The former is called a forward mask. The latter is called a reverse mask.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Port number for the virtual server. Range 1 - 65535`,
				},
				resource.Attribute{
					Name:        "ipset",
					Description: `(Optional) The list of IPv4/IPv6 addresses bound to ipset would form a part of listening service on the current lb vserver.`,
				},
				resource.Attribute{
					Name:        "range",
					Description: `(Optional) Number of IP addresses that the appliance must generate and assign to the virtual server. The virtual server then functions as a network virtual server, accepting traffic on any of the generated IP addresses. The IP addresses are generated automatically, as follows:`,
				},
				resource.Attribute{
					Name:        "persistencetype",
					Description: `(Optional) Type of persistence for the virtual server. Available settings function as follows: SOURCEIP - Connections from the same client IP address belong to the same persistence session. COOKIEINSERT - Connections that have the same HTTP Cookie, inserted by a Set-Cookie directive from a server, belong to the same persistence session. SSLSESSION - Connections that have the same SSL Session ID belong to the same persistence session. CUSTOMSERVERID - Connections with the same server ID form part of the same session. For this persistence type, set the Server ID (CustomServerID) parameter for each service and configure the Rule parameter to identify the server ID in a request. RULE - All connections that match a user defined rule belong to the same persistence session. URLPASSIVE - Requests that have the same server ID in the URL query belong to the same persistence session. The server ID is the hexadecimal representation of the IP address and port of the service to which the request must be forwarded. This persistence type requires a rule to identify the server ID in the request. DESTIP - Connections to the same destination IP address belong to the same persistence session. SRCIPDESTIP - Connections that have the same source IP address and destination IP address belong to the same persistence session. CALLID - Connections that have the same CALL-ID SIP header belong to the same persistence session. RTSPSID - Connections that have the same RTSP Session ID belong to the same persistence session. FIXSESSION - Connections that have the same SenderCompID and TargetCompID values belong to the same persistence session. USERSESSION - Persistence session is created based on the persistence parameter value provided from an extension. Possible values: [ SOURCEIP, COOKIEINSERT, SSLSESSION, RULE, URLPASSIVE, CUSTOMSERVERID, DESTIP, SRCIPDESTIP, CALLID, RTSPSID, DIAMETER, FIXSESSION, USERSESSION, NONE ]`,
				},
				resource.Attribute{
					Name:        "timeout",
					Description: `(Optional) Time period for which a persistence session is in effect.`,
				},
				resource.Attribute{
					Name:        "persistencebackup",
					Description: `(Optional) Backup persistence type for the virtual server. Becomes operational if the primary persistence mechanism fails. Possible values: [ SOURCEIP, NONE ]`,
				},
				resource.Attribute{
					Name:        "backuppersistencetimeout",
					Description: `(Optional) Time period for which backup persistence is in effect.`,
				},
				resource.Attribute{
					Name:        "lbmethod",
					Description: `(Optional) Load balancing method. The available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "hashlength",
					Description: `(Optional) Number of bytes to consider for the hash value used in the URLHASH and DOMAINHASH load balancing methods.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) IPv4 subnet mask to apply to the destination IP address or source IP address when the load balancing method is DESTINATIONIPHASH or SOURCEIPHASH.`,
				},
				resource.Attribute{
					Name:        "v6netmasklen",
					Description: `(Optional) Number of bits to consider in an IPv6 destination or source IP address, for creating the hash that is required by the DESTINATIONIPHASH and SOURCEIPHASH load balancing methods.`,
				},
				resource.Attribute{
					Name:        "backuplbmethod",
					Description: `(Optional) Backup load balancing method. Becomes operational if the primary load balancing me thod fails or cannot be used. Valid only if the primary method is based on static proximity. Possible values: [ ROUNDROBIN, LEASTCONNECTION, LEASTRESPONSETIME, SOURCEIPHASH, LEASTBANDWIDTH, LEASTPACKETS, CUSTOMLOAD ]`,
				},
				resource.Attribute{
					Name:        "cookiename",
					Description: `(Optional) Use this parameter to specify the cookie name for COOKIE peristence type. It specifies the name of cookie with a maximum of 32 characters. If not specified, cookie name is internally generated.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Expression, or name of a named expression, against which traffic is evaluated. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "listenpolicy",
					Description: `(Optional) Expression identifying traffic accepted by the virtual server. Can be either an expression (for example, CLIENT.IP.DST.IN_SUBNET(192.0.2.0/24) or the name of a named expression. In the above example, the virtual server accepts all requests whose destination IP address is in the 192.0.2.0/24 subnet.`,
				},
				resource.Attribute{
					Name:        "listenpriority",
					Description: `(Optional) Integer specifying the priority of the listen policy. A higher number specifies a lower priority. If a request matches the listen policies of more than one virtual server the virtual server whose listen policy has the highest priority (the lowest priority number) accepts the request.`,
				},
				resource.Attribute{
					Name:        "resrule",
					Description: `(Optional) Expression specifying which part of a server's response to use for creating rule based persistence sessions (persistence type RULE). Can be either an expression or the name of a named expression. Example: HTTP.RES.HEADER("setcookie").VALUE(0).TYPECAST_NVLIST_T('=',';').VALUE("server1").`,
				},
				resource.Attribute{
					Name:        "persistmask",
					Description: `(Optional) Persistence mask for IP based persistence types, for IPv4 virtual servers.`,
				},
				resource.Attribute{
					Name:        "v6persistmasklen",
					Description: `(Optional) Persistence mask for IP based persistence types, for IPv6 virtual servers.`,
				},
				resource.Attribute{
					Name:        "pq",
					Description: `(Optional) Use priority queuing on the virtual server. based persistence types, for IPv6 virtual servers. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "sc",
					Description: `(Optional) Use SureConnect on the virtual server. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "rtspnat",
					Description: `(Optional) Use network address translation (NAT) for RTSP data connections. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "m",
					Description: `(Optional) Redirection mode for load balancing. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "tosid",
					Description: `(Optional) TOS ID of the virtual server. Applicable only when the load balancing redirection mode is set to TOS.`,
				},
				resource.Attribute{
					Name:        "datalength",
					Description: `(Optional) Length of the token to be extracted from the data segment of an incoming packet, for use in the token method of load balancing. The length of the token, specified in bytes, must not be greater than 24 KB. Applicable to virtual servers of type TCP.`,
				},
				resource.Attribute{
					Name:        "dataoffset",
					Description: `(Optional) Offset to be considered when extracting a token from the TCP payload. Applicable to virtual servers, of type TCP, using the token method of load balancing. Must be within the first 24 KB of the TCP payload.`,
				},
				resource.Attribute{
					Name:        "sessionless",
					Description: `(Optional) Perform load balancing on a per-packet basis, without establishing sessions. Recommended for load balancing of intrusion detection system (IDS) servers and scenarios involving direct server return (DSR), where session information is unnecessary. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "trofspersistence",
					Description: `(Optional) When value is ENABLED, Trofs persistence is honored. When value is DISABLED, Trofs persistence is not honored. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) State of the load balancing virtual server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "connfailover",
					Description: `(Optional) Mode in which the connection failover feature must operate for the virtual server. After a failover, established TCP connections and UDP packet flows are kept active and resumed on the secondary appliance. Clients remain connected to the same servers. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "redirurl",
					Description: `(Optional) URL to which to redirect traffic if the virtual server becomes unavailable. WARNING! Make sure that the domain in the URL does not match the domain specified for a content switching policy. If it does, requests are continuously redirected to the unavailable virtual server.`,
				},
				resource.Attribute{
					Name:        "cacheable",
					Description: `(Optional) Route cacheable requests to a cache redirection virtual server. The load balancing virtual server can forward requests only to a transparent cache redirection virtual server that has an IP address and port combination of \`,
				},
				resource.Attribute{
					Name:        "clttimeout",
					Description: `(Optional) Idle time, in seconds, after which a client connection is terminated.`,
				},
				resource.Attribute{
					Name:        "somethod",
					Description: `(Optional) Type of threshold that, when exceeded, triggers spillover. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "sopersistence",
					Description: `(Optional) If spillover occurs, maintain source IP address based persistence for both primary and backup virtual servers. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sopersistencetimeout",
					Description: `(Optional) Timeout for spillover persistence, in minutes.`,
				},
				resource.Attribute{
					Name:        "healththreshold",
					Description: `(Optional) Threshold in percent of active services below which vserver state is made down. If this threshold is 0, vserver state will be up even if one bound service is up.`,
				},
				resource.Attribute{
					Name:        "sothreshold",
					Description: `(Optional) Threshold at which spillover occurs. Specify an integer for the CONNECTION spillover method, a bandwidth value in kilobits per second for the BANDWIDTH method (do not enter the units), or a percentage for the HEALTH method (do not enter the percentage symbol).`,
				},
				resource.Attribute{
					Name:        "sobackupaction",
					Description: `(Optional) Action to be performed if spillover is to take effect, but no backup chain to spillover is usable or exists. Possible values: [ DROP, ACCEPT, REDIRECT ]`,
				},
				resource.Attribute{
					Name:        "redirectportrewrite",
					Description: `(Optional) Rewrite the port and change the protocol to ensure successful HTTP redirects from services. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "downstateflush",
					Description: `(Optional) Flush all active transactions associated with a virtual server whose state transitions from UP to DOWN. Do not enable this option for applications that must complete their transactions. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "backupvserver",
					Description: `(Optional) Name of the backup virtual server to which to forward requests if the primary virtual server goes DOWN or reaches its spillover threshold.`,
				},
				resource.Attribute{
					Name:        "disableprimaryondown",
					Description: `(Optional) If the primary virtual server goes down, do not allow it to return to primary status until manually enabled. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "insertvserveripport",
					Description: `(Optional) Insert an HTTP header, whose value is the IP address and port number of the virtual server, before forwarding a request to the server. The format of the header is <vipHeader>: <virtual server IP address>\_<port number >, where vipHeader is the name that you specify for the header. If the virtual server has an IPv6 address, the address in the header is enclosed in brackets ([ and ]) to separate it from the port number. If you have mapped an IPv4 address to a virtual server's IPv6 address, the value of this parameter determines which IP address is inserted in the header, as follows:`,
				},
				resource.Attribute{
					Name:        "vipheader",
					Description: `(Optional) Name for the inserted header. The default name is vip-header.`,
				},
				resource.Attribute{
					Name:        "authenticationhost",
					Description: `(Optional) Fully qualified domain name (FQDN) of the authentication virtual server to which the user must be redirected for authentication. Make sure that the Authentication parameter is set to ENABLED.`,
				},
				resource.Attribute{
					Name:        "authentication",
					Description: `(Optional) Enable or disable user authentication. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "authn401",
					Description: `(Optional) Enable or disable user authentication with HTTP 401 responses. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "authnvsname",
					Description: `(Optional) Name of an authentication virtual server with which to authenticate users.`,
				},
				resource.Attribute{
					Name:        "push",
					Description: `(Optional) Process traffic with the push virtual server that is bound to this load balancing virtual server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "pushvserver",
					Description: `(Optional) Name of the load balancing virtual server, of type PUSH or SSL_PUSH, to which the server pushes updates received on the load balancing virtual server that you are configuring.`,
				},
				resource.Attribute{
					Name:        "pushlabel",
					Description: `(Optional) Expression for extracting a label from the server's response. Can be either an expression or the name of a named expression.`,
				},
				resource.Attribute{
					Name:        "pushmulticlients",
					Description: `(Optional) Allow multiple Web 2.0 connections from the same client to connect to the virtual server and expect updates. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "tcpprofilename",
					Description: `(Optional) Name of the TCP profile whose settings are to be applied to the virtual server.`,
				},
				resource.Attribute{
					Name:        "httpprofilename",
					Description: `(Optional) Name of the HTTP profile whose settings are to be applied to the virtual server.`,
				},
				resource.Attribute{
					Name:        "dbprofilename",
					Description: `(Optional) Name of the DB profile whose settings are to be applied to the virtual server.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments that you might want to associate with the virtual server.`,
				},
				resource.Attribute{
					Name:        "l2conn",
					Description: `(Optional) Use Layer 2 parameters (channel number, MAC address, and VLAN ID) in addition to the 4-tuple (<source IP>:<source port>::<destination IP>:<destination port>) that is used to identify a connection. Allows multiple TCP and non-TCP connections with the same 4-tuple to co-exist on the Citrix ADC. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "oracleserverversion",
					Description: `(Optional) Oracle server version. Possible values: [ 10G, 11G ]`,
				},
				resource.Attribute{
					Name:        "mssqlserverversion",
					Description: `(Optional) For a load balancing virtual server of type MSSQL, the Microsoft SQL Server version. Set this parameter if you expect some clients to run a version different from the version of the database. This setting provides compatibility between the client-side and server-side connections by ensuring that all communication conforms to the server's version. Possible values: [ 70, 2000, 2000SP1, 2005, 2008, 2008R2, 2012, 2014 ]`,
				},
				resource.Attribute{
					Name:        "mysqlprotocolversion",
					Description: `(Optional) MySQL protocol version that the virtual server advertises to clients.`,
				},
				resource.Attribute{
					Name:        "mysqlserverversion",
					Description: `(Optional) MySQL server version string that the virtual server advertises to clients.`,
				},
				resource.Attribute{
					Name:        "mysqlcharacterset",
					Description: `(Optional) Character set that the virtual server advertises to clients.`,
				},
				resource.Attribute{
					Name:        "mysqlservercapabilities",
					Description: `(Optional) Server capabilities that the virtual server advertises to clients.`,
				},
				resource.Attribute{
					Name:        "appflowlog",
					Description: `(Optional) Apply AppFlow logging to the virtual server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "netprofile",
					Description: `(Optional) Name of the network profile to associate with the virtual server. If you set this parameter, the virtual server uses only the IP addresses in the network profile as source IP addresses when initiating connections with servers.`,
				},
				resource.Attribute{
					Name:        "icmpvsrresponse",
					Description: `(Optional) How the Citrix ADC responds to ping requests received for an IP address that is common to one or more virtual servers. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "rhistate",
					Description: `(Optional) Route Health Injection (RHI) functionality of the NetSaler appliance for advertising the route of the VIP address associated with the virtual server. When Vserver RHI Level (RHI) parameter is set to VSVR\_CNTRLD, the following are different RHI behaviors for the VIP address on the basis of RHIstate (RHI STATE) settings on the virtual servers associated with the VIP address:`,
				},
				resource.Attribute{
					Name:        "newservicerequest",
					Description: `(Optional) Number of requests, or percentage of the load on existing services, by which to increase the load on a new service at each interval in slow-start mode. A non-zero value indicates that slow-start is applicable. A zero value indicates that the global RR startup parameter is applied. Changing the value to zero will cause services currently in slow start to take the full traffic as determined by the LB method. Subsequently, any new services added will use the global RR factor.`,
				},
				resource.Attribute{
					Name:        "newservicerequestunit",
					Description: `(Optional) Units in which to increment load at each interval in slow-start mode. Possible values: [ PER_SECOND, PERCENT ]`,
				},
				resource.Attribute{
					Name:        "newservicerequestincrementinterval",
					Description: `(Optional) Interval, in seconds, between successive increments in the load on a new service or a service whose state has just changed from DOWN to UP. A value of 0 (zero) specifies manual slow start.`,
				},
				resource.Attribute{
					Name:        "minautoscalemembers",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "maxautoscalemembers",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "skippersistency",
					Description: `(Optional) This argument decides the behavior incase the service which is selected from an existing persistence session has reached threshold. Possible values: [ Bypass, ReLb, None ]`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "authnprofile",
					Description: `(Optional) Name of the authentication profile to be used when authentication is turned on.`,
				},
				resource.Attribute{
					Name:        "macmoderetainvlan",
					Description: `(Optional) This option is used to retain vlan information of incoming packet when macmode is enabled. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dbslb",
					Description: `(Optional) Enable database specific load balancing for MySQL and MSSQL service types. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dns64",
					Description: `(Optional) This argument is for enabling/disabling the dns64 on lbvserver. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "bypassaaaa",
					Description: `(Optional) If this option is enabled while resolving DNS64 query AAAA queries are not sent to back end dns server. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "recursionavailable",
					Description: `(Optional) When set to YES, this option causes the DNS replies from this vserver to have the RA bit turned on. Typically one would set this option to YES, when the vserver is load balancing a set of DNS servers thatsupport recursive queries. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "processlocal",
					Description: `(Optional) By turning on this option packets destined to a vserver in a cluster will not under go any steering. Turn this option for single packet request response mode or when the upstream device is performing a proper RSS for connection based distribution. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dnsprofilename",
					Description: `(Optional) Name of the DNS profile to be associated with the VServer. DNS profile properties will be applied to the transactions processed by a VServer. This parameter is valid only for DNS and DNS-TCP VServers.`,
				},
				resource.Attribute{
					Name:        "lbprofilename",
					Description: `(Optional) Name of the LB profile which is associated to the vserver.`,
				},
				resource.Attribute{
					Name:        "redirectfromport",
					Description: `(Optional) Port number for the virtual server, from which we absorb the traffic for http redirect. Range 1 - 65535`,
				},
				resource.Attribute{
					Name:        "httpsredirecturl",
					Description: `(Optional) URL to which to redirect traffic if the traffic is recieved from redirect port.`,
				},
				resource.Attribute{
					Name:        "retainconnectionsoncluster",
					Description: `(Optional) This option enables you to retain existing connections on a node joining a Cluster system or when a node is being configured for passive timeout. By default, this option is disabled. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the specified service.`,
				},
				resource.Attribute{
					Name:        "servicename",
					Description: `(Optional) Service to bind to the virtual server.`,
				},
				resource.Attribute{
					Name:        "redirurlflags",
					Description: `(Optional) The redirect URL to be unset.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the virtual server.`,
				},
				resource.Attribute{
					Name:        "sslcertkey",
					Description: `(Optoinal) SSL certificate key to be bound to the lb vserver.`,
				},
				resource.Attribute{
					Name:        "ciphersuites",
					Description: `(Optional) A set of ciphersuites to be bound to the lb vserver.`,
				},
				resource.Attribute{
					Name:        "ciphers",
					Description: `(Optional) A set of ciphers to be bound to the lb vserver. This is only relevant for cluster deployments of ADC. In all other cases it is ignored.`,
				},
				resource.Attribute{
					Name:        "snisslcertkeys",
					Description: `(Optional) A set of SNI ssl certificates bound to the lb vserver.`,
				},
				resource.Attribute{
					Name:        "sslprofile",
					Description: `(Optional) A SSL profile to bind to this lb vserver.`,
				},
				resource.Attribute{
					Name:        "sslpolicybinding",
					Description: `(Optional) SSL policy bound to the lb vserver block. Documented below SSL policy binding supports the following:`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) The name of the SSL policy binding.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority of the policies bound to this SSL service.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bind point to which to bind the policy. Possible Values: REQUEST, INTERCEPT_REQ and CLIENTHELLO_REQ. These bindpoints mean: 1. REQUEST: Policy evaluation will be done at appplication above SSL. This bindpoint is default and is used for actions based on clientauth and client cert. 2. INTERCEPT_REQ: Policy evaluation will be done during SSL handshake to decide whether to intercept or not. Actions allowed with this type are: INTERCEPT, BYPASS and RESET. 3. CLIENTHELLO_REQ: Policy evaluation will be done during handling of Client Hello Request. Action allowed with this type is: RESET, FORWARD and PICKCACERTGRP. Possible values: [ INTERCEPT_REQ, REQUEST, CLIENTHELLO_REQ ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag. This attribute is relevant only for ADVANCED policies.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label invocation. Possible values: [ vserver, service, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to invoke if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "quicbridgeprofilename",
					Description: `(Optional) Name of the QUIC Bridge profile whose settings are to be applied to the virtual server. Refer [quicbridgeprofile](./quicbridgeprofile.md) for usage. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lbvserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver.tf_lbvserver tf_lbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lbvserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver.tf_lbvserver tf_lbvserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_analyticsprofile_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_analyticsprofile_binding resource is used to bound Analytics Profile to lbvserver.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"analyticsprofile",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "analyticsprofile",
					Description: `(Required) Name of the analytics profile bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_analyticsprofile_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `analyticsprofile` + "`" + ` attributes separated by a comma. ## Import A lbvserver_analyticsprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_analyticsprofile_binding.tf_lbvserver_analyticsprofile_binding tf_lbvserver_analyticsprofile_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_analyticsprofile_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `analyticsprofile` + "`" + ` attributes separated by a comma. ## Import A lbvserver_analyticsprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_analyticsprofile_binding.tf_lbvserver_analyticsprofile_binding tf_lbvserver_analyticsprofile_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_appflowpolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_appflowpolicy_binding resource is used to add AppFlow policies to lbvserver.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"appflowpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_appflowpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_appflowpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_appflowpolicy_binding.tf_lbvserver_appflowpolicy_binding tf_lbvserver,tf_appflowpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_appflowpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_appflowpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_appflowpolicy_binding.tf_lbvserver_appflowpolicy_binding tf_lbvserver,tf_appflowpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_appfwpolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_appfwpolicy_binding resource is used to add AppFw policies to lbvserver.

`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"appfwpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). .`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_appfwpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_appfwpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_appqoepolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_appqoepolicy_binding resource is used to bind load balancing virtual servers with appqoe policies.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"appqoepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). .`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke. Applicable only to rewrite, videooptimization and cache policies. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the virtual server or user-defined policy label to invoke if the policy evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_appqoepolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_appqoepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_appqoepolicy_binding.tf_lbvserver_appqoepolicy_binding tf_lbvserver_appqoepolicy_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_appqoepolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_appqoepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_appqoepolicy_binding.tf_lbvserver_appqoepolicy_binding tf_lbvserver_appqoepolicy_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_auditsyslogpolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_auditsyslogpolicy_binding resource is used to bind load balancing virtual servers with audit syslog policies.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"auditsyslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). .`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applicable only to compression, rewrite, videooptimization and cache policies. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke. Applicable only to rewrite, videooptimization and cache policies. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the virtual server or user-defined policy label to invoke if the policy evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_auditsyslogpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_auditsyslogpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_auditsyslogpolicy_binding.tf_lbvserver_auditsyslogpolicy_binding tf_lbvserver_auditsyslogpolicy_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_auditsyslogpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_auditsyslogpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_auditsyslogpolicy_binding.tf_lbvserver_auditsyslogpolicy_binding tf_lbvserver_auditsyslogpolicy_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_authorizationpolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_authorizationpolicy_bindingresource is used to add an authorization policy to lbmonitor.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"authorizationpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_authorizationpolicy_binding. It has the same value as the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_authorizationpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_authorizationpolicy_binding.tf_lbvserver_authorizationpolicy_binding test_lbvserver,tf_authorizationpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_authorizationpolicy_binding. It has the same value as the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_authorizationpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_authorizationpolicy_binding.tf_lbvserver_authorizationpolicy_binding test_lbvserver,tf_authorizationpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_botpolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description:      ``,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"botpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). .`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applicable only to compression, rewrite, videooptimization and cache policies. Possible values: [ REQUEST, RESPONSE ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the citrixadc_lbvserver_botpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A citrixadc_lbvserver_botpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_citrixadc_lbvserver_botpolicy_binding.tf_citrixadc_lbvserver_botpolicy_binding tf_citrixadc_lbvserver_botpolicy_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the citrixadc_lbvserver_botpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A citrixadc_lbvserver_botpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_citrixadc_lbvserver_botpolicy_binding.tf_citrixadc_lbvserver_botpolicy_binding tf_citrixadc_lbvserver_botpolicy_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_cachepolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_cachepolicy_binding resource is used to create add a cache policy to lbvserver.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"cachepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_cachepolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_cachepolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_cachepolicy_binding.tf_lbvserver_cachepolicy_binding tf_lbvserver,tf_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_cachepolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_cachepolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_cachepolicy_binding.tf_lbvserver_cachepolicy_binding tf_lbvserver,tf_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_cmppolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `\_cmppolicy\_binding

The lbvserver\_cmppolicy\_binding resource is used to bind load balancing virtual servers with compression policies.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"cmppolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (\_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_cmppolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_cmppolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_cmppolicy_binding.tf_bind tf_lbvserver,tf_cmppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_cmppolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_cmppolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_cmppolicy_binding.tf_bind tf_lbvserver,tf_cmppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_contentinspectionpolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_contentinspectionpolicy_binding resource is used to add a content inspection policy to lbvserver.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"contentinspectionpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_contentinspectionpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_contentinspectionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_contentinspectionpolicy_binding.tf_lbvserver_contentinspectionpolicy_binding tf_lbvserver,tf_contentinspectionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_contentinspectionpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_contentinspectionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_contentinspectionpolicy_binding.tf_lbvserver_contentinspectionpolicy_binding tf_lbvserver,tf_contentinspectionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_dnspolicy64_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_dnspolicy64_binding resource is used to add a dns policy64 to lbvserver.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"dnspolicy64",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). .`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applicable only to compression, rewrite, videooptimization and cache policies. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke. Applicable only to rewrite, videooptimization and cache policies. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the virtual server or user-defined policy label to invoke if the policy evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_dnspolicy64_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_dnspolicy64_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_dnspolicy64_binding.tf_lbvserver_dnspolicy64_binding tf_lbvserver,tf_dnspolicy64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_dnspolicy64_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_dnspolicy64_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_dnspolicy64_binding.tf_lbvserver_dnspolicy64_binding tf_lbvserver,tf_dnspolicy64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_feopolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_feopolicy_binding resource is used to add a front end optimization policy to lbvserver.

`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"feopolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). .`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke. Applicable only to rewrite, videooptimization and cache policies. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the virtual server or user-defined policy label to invoke if the policy evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_feopolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_feopolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_feopolicy_binding.tf_lbvserver_feopolicy_binding tf_lbvserver,tf_feopolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_feopolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_feopolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_feopolicy_binding.tf_lbvserver_feopolicy_binding tf_lbvserver,tf_feopolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_filterpolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `\_filterpolicy\_binding

The lbvserver\_filterpolicy\_binding resource is used to bind load balancing virtual servers to filter policies.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"filterpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (\_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). .`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applicable only to compression, rewrite, videooptimization and cache policies. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke. Applicable only to rewrite, videooptimization and cache policies. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the virtual server or user-defined policy label to invoke if the policy evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_filterpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_filterpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_filterpolicy_binding.tf_bind tf_lbvserver,tf_filterpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_filterpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_filterpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_filterpolicy_binding.tf_bind tf_lbvserver,tf_filterpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_responderpolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `\_responderpolicy\_binding

The lbvserver\_responderpolicy\_binding resource is used to bind load balancing virtual servers to responder policies.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"responderpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (\_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). .`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applicable only to compression, rewrite, videooptimization and cache policies. Possible values: [ REQUEST, RESPONSE ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_responderpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_responderpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_responderpolicy_binding.tf_bind tf_lbvserver,tf_responder_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_responderpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_responderpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_responderpolicy_binding.tf_bind tf_lbvserver,tf_responder_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_rewritepolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `\_rewritepolicy\_binding

The lbvserver\_rewritepolicy\_binding resource is used to bind load balancing virtual servers to rewrite policies.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"rewritepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (\_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_rewritepolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_rewritepolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_rewritepolicy_binding.tf_bind tf_lbvserver,tf_rewrite_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_rewritepolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_rewritepolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_rewritepolicy_binding.tf_bind tf_lbvserver,tf_rewrite_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_service_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `\_service\_binding

The lbvserver\_service\_binding resource is used to bind load balancing virtual servers to services.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"service",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servicename",
					Description: `(Required) Service to bind to the virtual server.`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the specified service.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (\_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_service\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `servicename` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_service\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_service_binding.tf_binding tf_lbvserver,tf_service ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_service\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `servicename` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_service\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_service_binding.tf_binding tf_lbvserver,tf_service ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_servicegroup_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `\_servicegroup\_binding

The lbvserver\_servicegroup\_binding resource is used to bind servicegroups to lb vservers.

If a binding between lbvserver and servicegroup is set this way the ` + "`" + `lbvservers` + "`" + ` option
of ` + "`" + `resource_citrixadc_servicegroup` + "`" + ` should not be set for the same servicegroup.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"servicegroup",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servicegroupname",
					Description: `(Required) The service group name bound to the selected load balancing virtual server.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (\_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_servicegroup\_binding. It is the concatenation of the name and servicegroupname attributes separated by a comma. ## Import A lbvserver\_servicegroup\_binding can be imported using its id. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_servicegroup_binding.tf_binding tf_lbvserver,tf_servicegroupname ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_servicegroup\_binding. It is the concatenation of the name and servicegroupname attributes separated by a comma. ## Import A lbvserver\_servicegroup\_binding can be imported using its id. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_servicegroup_binding.tf_binding tf_lbvserver,tf_servicegroupname ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_spilloverpolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_spilloverpolicy_binding resource is used to add a spillover policy to lbvserver.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"spilloverpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). .`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke. Applicable only to rewrite, videooptimization and cache policies. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the virtual server or user-defined policy label to invoke if the policy evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_spilloverpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_spilloverpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_spilloverpolicy_binding.tf_lbvserver_spilloverpolicy_binding tf_lbvserver,tf_spilloverpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_spilloverpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_spilloverpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_spilloverpolicy_binding.tf_lbvserver_spilloverpolicy_binding tf_lbvserver,tf_spilloverpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_tmtrafficpolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_tmtrafficpolicy_binding is used to add a tmtraffic policy to lbvserver.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"tmtrafficpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). .`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applicable only to compression, rewrite, videooptimization and cache policies. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke. Applicable only to rewrite, videooptimization and cache policies. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the virtual server or user-defined policy label to invoke if the policy evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_tmtrafficpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_tmtrafficpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_tmtrafficpolicy_binding.tf_lbvserver_tmtrafficpolicy_binding tf_lbvserver,tf_tmttrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_tmtrafficpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_tmtrafficpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_tmtrafficpolicy_binding.tf_lbvserver_tmtrafficpolicy_binding tf_lbvserver,tf_tmttrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_transformpolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `\_transformpolicy\_binding

The lbvserver\_transformpolicy\_binding resource is used to bind load balancing virtual servers to transform policies.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"transformpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (\_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_transformpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_transformpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_transformpolicy_binding.tf_binding tf_lbvserver,tf_trans_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver\_transformpolicy\_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver\_transformpolicy\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_transformpolicy_binding.tf_binding tf_lbvserver,tf_trans_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_videooptimizationdetectionpolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_videooptimizationdetectionpolicy_binding resource is used to add a videooptimizationdetection policy to lbvserver.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"videooptimizationdetectionpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_videooptimizationdetectionpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_videooptimizationdetectionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_videooptimizationdetectionpolicy_binding.tf_vopolicy_binding tf_lbvserver,tf_vop ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_videooptimizationdetectionpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_videooptimizationdetectionpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_videooptimizationdetectionpolicy_binding.tf_vopolicy_binding tf_lbvserver,tf_vop ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lbvserver_videooptimizationpacingpolicy_binding",
			Category:         "Load Balancing",
			ShortDescription: ``,
			Description: `

The lbvserver_videooptimizationpacingpolicy_bindingresource is used to add a videooptimizationpacing policy to lbvserver.


`,
			Keywords: []string{
				"load",
				"balancing",
				"lbvserver",
				"videooptimizationpacingpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the policy bound to the LB vserver.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Can be changed after the virtual server is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_videooptimizationpacingpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_videooptimizationpacingpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_videooptimizationpacingpolicy_binding.tf_lbvserver_videooptimizationpacingpolicy_binding tf_lbvserver,tf_pacingpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lbvserver_videooptimizationpacingpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A lbvserver_videooptimizationpacingpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lbvserver_videooptimizationpacingpolicy_binding.tf_lbvserver_videooptimizationpacingpolicy_binding tf_lbvserver,tf_pacingpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_linkset",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The linkset resource is used to create Link sets.


`,
			Keywords: []string{
				"network",
				"linkset",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "linkset_id",
					Description: `(Required) Unique identifier for the linkset. Must be of the form LS/x, where x can be an integer from 1 to 32.`,
				},
				resource.Attribute{
					Name:        "interfacebinding",
					Description: `(Optional) A set of interfaces that are bound to the linkset. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the linkset. It has the same value as the ` + "`" + `linkset_id` + "`" + ` attribute. ## Import A linkset can be imported using its ` + "`" + `linskset_id` + "`" + ` attribute, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_linkset.tf_linkset LS/1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the linkset. It has the same value as the ` + "`" + `linkset_id` + "`" + ` attribute. ## Import A linkset can be imported using its ` + "`" + `linskset_id` + "`" + ` attribute, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_linkset.tf_linkset LS/1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_linkset_channel_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The linkset_channel_binding resource is used to create linkset_channel_binding.


`,
			Keywords: []string{
				"network",
				"linkset",
				"channel",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "linkset_id",
					Description: `(Required) ID of the linkset to which to bind the interfaces.`,
				},
				resource.Attribute{
					Name:        "ifnum",
					Description: `(Required) The interfaces to be bound to the linkset. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the linkset_channel_binding. It is the concatenation of ` + "`" + `linkset_id` + "`" + ` and ` + "`" + `ifnum` + "`" + ` attributes separated by a comma. ## Import A linkset_channel_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_linkset_channel_binding.tf_linkset_channel_binding LS/3,0/LA/2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the linkset_channel_binding. It is the concatenation of ` + "`" + `linkset_id` + "`" + ` and ` + "`" + `ifnum` + "`" + ` attributes separated by a comma. ## Import A linkset_channel_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_linkset_channel_binding.tf_linkset_channel_binding LS/3,0/LA/2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lldpparam",
			Category:         "LLDP",
			ShortDescription: ``,
			Description: `

The lldpparam resource is used to update lldpparam.


`,
			Keywords: []string{
				"lldp",
				"lldpparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "holdtimetxmult",
					Description: `(Optional) A multiplier for calculating the duration for which the receiving device stores the LLDP information in its database before discarding or removing it. The duration is calculated as the holdtimeTxMult (Holdtime Multiplier) parameter value multiplied by the timer (Timer) parameter value. Minimum value = 1 Maximum value = 20`,
				},
				resource.Attribute{
					Name:        "timer",
					Description: `(Optional) Interval, in seconds, between LLDP packet data units (LLDPDUs). that the Citrix ADC sends to a directly connected device. Minimum value = 1 Maximum value = 3000`,
				},
				resource.Attribute{
					Name:        "mode",
					Description: `(Optional) Global mode of Link Layer Discovery Protocol (LLDP) on the Citrix ADC. The resultant LLDP mode of an interface depends on the LLDP mode configured at the global and the interface levels. Possible values: [ NONE, TRANSMITTER, RECEIVER, TRANSCEIVER ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lldpparam. It is a unique string prefixed with ` + "`" + `tf-lldpparam-` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lldpparam. It is a unique string prefixed with ` + "`" + `tf-lldpparam-` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_location",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The location resource is used to create location resource.


`,
			Keywords: []string{
				"basic",
				"location",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipfrom",
					Description: `(Required) First IP address in the range, in dotted decimal notation.`,
				},
				resource.Attribute{
					Name:        "ipto",
					Description: `(Required) Last IP address in the range, in dotted decimal notation.`,
				},
				resource.Attribute{
					Name:        "preferredlocation",
					Description: `(Required) String of qualifiers, in dotted notation, describing the geographical location of the IP address range. Each qualifier is more specific than the one that precedes it, as in continent.country.region.city.isp.organization. For example, "NA.US.CA.San Jose.ATT.citrix". Note: A qualifier that includes a dot (.) or space ( ) must be enclosed in double quotation marks.`,
				},
				resource.Attribute{
					Name:        "latitude",
					Description: `(Optional) Numerical value, in degrees, specifying the latitude of the geographical location of the IP address-range. Note: Longitude and latitude parameters are used for selecting a service with the static proximity GSLB method. If they are not specified, selection is based on the qualifiers specified for the location.`,
				},
				resource.Attribute{
					Name:        "longitude",
					Description: `(Optional) Numerical value, in degrees, specifying the longitude of the geographical location of the IP address-range. Note: Longitude and latitude parameters are used for selecting a service with the static proximity GSLB method. If they are not specified, selection is based on the qualifiers specified for the location. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the location. It has the same value as the ` + "`" + `ipfrom` + "`" + ` attribute. ## Import A location can be imported using its ipfrom, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_location.tf_location 2.3.2.4 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the location. It has the same value as the ` + "`" + `ipfrom` + "`" + ` attribute. ## Import A location can be imported using its ipfrom, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_location.tf_location 2.3.2.4 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_locationfile",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The locationfile resource is used to create locationfile.


`,
			Keywords: []string{
				"basic",
				"locationfile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "locationfile",
					Description: `(Required) Name of the location file, with or without absolute path. If the path is not included, the default path (/var/netscaler/locdb) is assumed. In a high availability setup, the static database must be stored in the same location on both Citrix ADCs.`,
				},
				resource.Attribute{
					Name:        "format",
					Description: `(Required) Format of the location file. Required for the Citrix ADC to identify how to read the location file. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the locationfile. It has the same value as the ` + "`" + `locationfile` + "`" + ` attribute. ## Import A locationfile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_locationfile.tf_locationfile /var/netscaler/inbuilt_db/Citrix_Netscaler_InBuilt_GeoIP_DB_IPv4 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the locationfile. It has the same value as the ` + "`" + `locationfile` + "`" + ` attribute. ## Import A locationfile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_locationfile.tf_locationfile /var/netscaler/inbuilt_db/Citrix_Netscaler_InBuilt_GeoIP_DB_IPv4 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_locationfile6",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The locationfile6 resource is used to create locationfile6.


`,
			Keywords: []string{
				"basic",
				"locationfile6",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "locationfile",
					Description: `(Required) Name of the IPv6 location file, with or without absolute path. If the path is not included, the default path (/var/netscaler/locdb) is assumed. In a high availability setup, the static database must be stored in the same location on both Citrix ADCs.`,
				},
				resource.Attribute{
					Name:        "format",
					Description: `(Required) Format of the IPv6 location file. Required for the Citrix ADC to identify how to read the location file. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the locationfile6. It has the same value as the ` + "`" + `locationfile` + "`" + ` attribute. ## Import A locationfile6 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_locationfile6.tf_locationfile6 /var/netscaler/inbuilt_db/Citrix_Netscaler_InBuilt_GeoIP_DB_IPv6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the locationfile6. It has the same value as the ` + "`" + `locationfile` + "`" + ` attribute. ## Import A locationfile6 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_locationfile6.tf_locationfile6 /var/netscaler/inbuilt_db/Citrix_Netscaler_InBuilt_GeoIP_DB_IPv6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_locationfile6_import",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The locationfile6_import resource is used to import locationfile.


`,
			Keywords: []string{
				"basic",
				"locationfile6",
				"import",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "locationfile",
					Description: `(Required) Name of the IPv6 location file, with or without absolute path. If the path is not included, the default path (/var/netscaler/locdb) is assumed. In a high availability setup, the static database must be stored in the same location on both Citrix ADCs.`,
				},
				resource.Attribute{
					Name:        "src",
					Description: `(Required) URL \(protocol, host, path, and file name\) from where the location file will be imported. NOTE: The import fails if the object to be imported is on an HTTPS server that requires client certificate authentication for access. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the locationfile. It is a unique string prefixed with ` + "`" + `tf-locationfile6-` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the locationfile. It is a unique string prefixed with ` + "`" + `tf-locationfile6-` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_locationfile_import",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The locationfile_import resource is used to import locationfile.


`,
			Keywords: []string{
				"basic",
				"locationfile",
				"import",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "locationfile",
					Description: `(Required) Name of the location file, with or without absolute path. If the path is not included, the default path (/var/netscaler/locdb) is assumed. In a high availability setup, the static database must be stored in the same location on both Citrix ADCs.`,
				},
				resource.Attribute{
					Name:        "src",
					Description: `(Required) URL \(protocol, host, path, and file name\) from where the location file will be imported. NOTE: The import fails if the object to be imported is on an HTTPS server that requires client certificate authentication for access. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the locationfile. It is a unique string prefixed with ` + "`" + `tf-locationfile-e` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the locationfile. It is a unique string prefixed with ` + "`" + `tf-locationfile-e` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_locationparameter",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The locationparameter resource is used to create location parameter resource.


`,
			Keywords: []string{
				"basic",
				"locationparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "context",
					Description: `(Optional) Context for describing locations. In geographic context, qualifier labels are assigned by default in the following sequence: Continent.Country.Region.City.ISP.Organization. In custom context, the qualifiers labels can have any meaning that you designate. Possible values: [ geographic, custom ]`,
				},
				resource.Attribute{
					Name:        "q1label",
					Description: `(Optional) Label specifying the meaning of the first qualifier. Can be specified for custom context only. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "q2label",
					Description: `(Optional) Label specifying the meaning of the second qualifier. Can be specified for custom context only. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "q3label",
					Description: `(Optional) Label specifying the meaning of the third qualifier. Can be specified for custom context only. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "q4label",
					Description: `(Optional) Label specifying the meaning of the fourth qualifier. Can be specified for custom context only. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "q5label",
					Description: `(Optional) Label specifying the meaning of the fifth qualifier. Can be specified for custom context only. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "q6label",
					Description: `(Optional) Label specifying the meaning of the sixth qualifier. Can be specified for custom context only. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "matchwildcardtoany",
					Description: `(Optional) Indicates whether wildcard qualifiers should match any other qualifier including non-wildcard while evaluating location based expressions. Yes - Wildcard qualifiers match any other qualifiers. No - Wildcard qualifiers do not match non-wildcard qualifiers, but match other wildcard qualifiers. Expression - Wildcard qualifiers in an expression match any qualifier in an LDNS location, wildcard qualifiers in the LDNS location do not match non-wildcard qualifiers in an expression. Possible values: [ YES, NO, Expression ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the locationparameter. It is a unique string prefixed with "tf-locationparameter-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the locationparameter. It is a unique string prefixed with "tf-locationparameter-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnappsattributes",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnappsattributes resource is used to create lsnappsattributes.


`,
			Keywords: []string{
				"lsn",
				"lsnappsattributes",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the LSN Application Port ATTRIBUTES. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN application profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn application profile1" or 'lsn application profile1').`,
				},
				resource.Attribute{
					Name:        "transportprotocol",
					Description: `(Required) Name of the protocol(TCP,UDP) for which the parameters of this LSN application port ATTRIBUTES applies`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) This is used for Displaying Port/Port range in CLI/Nitro.Lowport, Highport values are populated and used for displaying.Port numbers or range of port numbers to match against the destination port of the incoming packet from a subscriber. When the destination port is matched, the LSN application profile is applied for the LSN session. Separate a range of ports with a hyphen. For example, 40-90.`,
				},
				resource.Attribute{
					Name:        "sessiontimeout",
					Description: `(Optional) Timeout, in seconds, for an idle LSN session. If an LSN session is idle for a time that exceeds this value, the Citrix ADC removes the session.This timeout does not apply for a TCP LSN session when a FIN or RST message is received from either of the endpoints. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnappsattributes. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lsnappsattributes can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnappsattributes.tf_lsnappsattributes my_lsn_appattributes ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnappsattributes. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lsnappsattributes can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnappsattributes.tf_lsnappsattributes my_lsn_appattributes ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnappsprofile",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnappsprofile resource is used to create lsnappsprofile.


`,
			Keywords: []string{
				"lsn",
				"lsnappsprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "transportprotocol",
					Description: `(Required) Name of the protocol for which the parameters of this LSN application profile applies.`,
				},
				resource.Attribute{
					Name:        "appsprofilename",
					Description: `(Required) Name for the LSN application profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN application profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn application profile1" or 'lsn application profile1').`,
				},
				resource.Attribute{
					Name:        "filtering",
					Description: `(Optional) Type of filter to apply to packets originating from external hosts. Consider an example of an LSN mapping that includes the mapping of subscriber IP:port (X:x), NAT IP:port (N:n), and external host IP:port (Y:y). Available options function as follows:`,
				},
				resource.Attribute{
					Name:        "ippooling",
					Description: `(Optional) NAT IP address allocation options for sessions associated with the same subscriber. Available options function as follows:`,
				},
				resource.Attribute{
					Name:        "l2info",
					Description: `(Optional) Enable l2info by creating natpcbs for LSN, which enables the Citrix ADC to use L2CONN/MBF with LSN.`,
				},
				resource.Attribute{
					Name:        "mapping",
					Description: `(Optional) Type of LSN mapping to apply to subsequent packets originating from the same subscriber IP address and port. Consider an example of an LSN mapping that includes the mapping of the subscriber IP:port (X:x), NAT IP:port (N:n), and external host IP:port (Y:y). Available options function as follows:`,
				},
				resource.Attribute{
					Name:        "tcpproxy",
					Description: `(Optional) Enable TCP proxy, which enables the Citrix ADC to optimize the TCP traffic by using Layer 4 features.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) ID of the traffic domain through which the Citrix ADC sends the outbound traffic after performing LSN. If you do not specify an ID, the ADC sends the outbound traffic through the default traffic domain, which has an ID of 0. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnappsprofile. It has the same value as the ` + "`" + `appsprofilename` + "`" + ` attribute. ## Import A lsnappsprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnappsprofile.tf_lsnappsprofile my_lsn_appsprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnappsprofile. It has the same value as the ` + "`" + `appsprofilename` + "`" + ` attribute. ## Import A lsnappsprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnappsprofile.tf_lsnappsprofile my_lsn_appsprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnappsprofile_lsnappsattributes_binding",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnappsprofile_lsnappsattributes_bindingresource is used to create lsnappsprofile_lsnappsattributes_binding.


`,
			Keywords: []string{
				"lsn",
				"lsnappsprofile",
				"lsnappsattributes",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "appsattributesname",
					Description: `(Required) Name of the LSN application port ATTRIBUTES command to bind to the specified LSN Appsprofile. Properties of the Appsprofile will be applicable to this APPSATTRIBUTES`,
				},
				resource.Attribute{
					Name:        "appsprofilename",
					Description: `(Required) Name for the LSN application profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN application profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn application profile1" or 'lsn application profile1'). ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnappsprofile_lsnappsattributes_binding. It is the concatenation of ` + "`" + `appsprofilename` + "`" + ` and ` + "`" + `appsattributesname` + "`" + ` attributes separated by a comma. ## Import A lsnappsprofile_lsnappsattributes_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnappsprofile_lsnappsattributes_binding.tf_lsnappsprofile_lsnappsattributes_binding my_lsn_profile,my_lsn_appattributes ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnappsprofile_lsnappsattributes_binding. It is the concatenation of ` + "`" + `appsprofilename` + "`" + ` and ` + "`" + `appsattributesname` + "`" + ` attributes separated by a comma. ## Import A lsnappsprofile_lsnappsattributes_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnappsprofile_lsnappsattributes_binding.tf_lsnappsprofile_lsnappsattributes_binding my_lsn_profile,my_lsn_appattributes ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnappsprofile_port_binding",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnappsprofile_port_binding resource is used to createlsnappsprofile_port_binding.


`,
			Keywords: []string{
				"lsn",
				"lsnappsprofile",
				"port",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "appsprofilename",
					Description: `(Optional) Name for the LSN application profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN application profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn application profile1" or 'lsn application profile1').`,
				},
				resource.Attribute{
					Name:        "lsnport",
					Description: `(Optional) Port numbers or range of port numbers to match against the destination port of the incoming packet from a subscriber. When the destination port is matched, the LSN application profile is applied for the LSN session. Separate a range of ports with a hyphen. For example, 40-90. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnappsprofile_port_binding. It is the concatenation of ` + "`" + `appsprofilename` + "`" + ` and ` + "`" + `lsnport` + "`" + ` attributes separated by a comma. ## Import A lsnappsprofile_port_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnappsprofile_port_binding.tf_lsnappsprofile_port_binding my_lsn_profile,80 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnappsprofile_port_binding. It is the concatenation of ` + "`" + `appsprofilename` + "`" + ` and ` + "`" + `lsnport` + "`" + ` attributes separated by a comma. ## Import A lsnappsprofile_port_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnappsprofile_port_binding.tf_lsnappsprofile_port_binding my_lsn_profile,80 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnclient",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnclient resource is used to create lsnclient.


`,
			Keywords: []string{
				"lsn",
				"lsnclient",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "clientname",
					Description: `(Required) Name for the LSN client entity. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN client is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn client1" or 'lsn client1'). . Minimum length = 1 Maximum length = 127 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnclient>. It has the same value as the ` + "`" + `clientname` + "`" + ` attribute. ## Import A lsnclient can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnclient.tf_lsnclient my_lsnclient ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnclient>. It has the same value as the ` + "`" + `clientname` + "`" + ` attribute. ## Import A lsnclient can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnclient.tf_lsnclient my_lsnclient ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnclient_network6_binding",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnclient_network6_binding resource is used to create lsnclient_network6_binding.


`,
			Keywords: []string{
				"lsn",
				"lsnclient",
				"network6",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "clientname",
					Description: `(Required) Name for the LSN client entity. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN client is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn client1" or 'lsn client1').`,
				},
				resource.Attribute{
					Name:        "network6",
					Description: `(Required) IPv6 address(es) of the LSN subscriber(s) or subscriber network(s) on whose traffic you want the Citrix ADC to perform Large Scale NAT.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) ID of the traffic domain on which this subscriber or the subscriber network (as specified by the network parameter) belongs. If you do not specify an ID, the subscriber or the subscriber network becomes part of the default traffic domain. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnclient_network6_binding. It is the concatenation of ` + "`" + `clientname` + "`" + ` and ` + "`" + `network6` + "`" + ` attributes separated by a comma. ## Import A lsnclient_network6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnclient_network6_binding.tf_lsnclient_network6_binding my_lsn_client ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnclient_network6_binding. It is the concatenation of ` + "`" + `clientname` + "`" + ` and ` + "`" + `network6` + "`" + ` attributes separated by a comma. ## Import A lsnclient_network6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnclient_network6_binding.tf_lsnclient_network6_binding my_lsn_client ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnclient_network_binding",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnclient_network_binding resource is used to create lsnclient_network_binding.


`,
			Keywords: []string{
				"lsn",
				"lsnclient",
				"network",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "clientname",
					Description: `(Required) Name for the LSN client entity. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN client is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn client1" or 'lsn client1').`,
				},
				resource.Attribute{
					Name:        "network",
					Description: `(Required) IPv4 address(es) of the LSN subscriber(s) or subscriber network(s) on whose traffic you want the Citrix ADC to perform Large Scale NAT.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) Subnet mask for the IPv4 address specified in the Network parameter.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) ID of the traffic domain on which this subscriber or the subscriber network (as specified by the network parameter) belongs. If you do not specify an ID, the subscriber or the subscriber network becomes part of the default traffic domain. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnclient_network_binding. It is the concatenation of ` + "`" + `clientname` + "`" + ` and ` + "`" + `network` + "`" + ` attributes separated by a comma. ## Import A lsnclient_network_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnclient_network_binding.tf_lsnclient_network_binding my_lsnclient,10.222.74.160 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnclient_network_binding. It is the concatenation of ` + "`" + `clientname` + "`" + ` and ` + "`" + `network` + "`" + ` attributes separated by a comma. ## Import A lsnclient_network_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnclient_network_binding.tf_lsnclient_network_binding my_lsnclient,10.222.74.160 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnclient_nsacl6_binding",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnclient_nsacl6_binding resource is used to create lsnclient_nsacl6_binding.


`,
			Keywords: []string{
				"lsn",
				"lsnclient",
				"nsacl6",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "acl6name",
					Description: `(Required) Name of any configured extended ACL6 whose action is ALLOW. The condition specified in the extended ACL6 rule is used as the condition for the LSN client.`,
				},
				resource.Attribute{
					Name:        "clientname",
					Description: `(Required) Name for the LSN client entity. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN client is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn client1" or 'lsn client1').`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) ID of the traffic domain on which this subscriber or the subscriber network (as specified by the network parameter) belongs. If you do not specify an ID, the subscriber or the subscriber network becomes part of the default traffic domain. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnclient_nsacl6_binding. It is the concatenation of ` + "`" + `clientname` + "`" + ` and ` + "`" + `acl6name` + "`" + ` attributes separated by a comma. ## Import A lsnclient_nsacl6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnclient_nsacl6_binding.tf_lsnclient_nsacl6_binding my_lsn_client,my_acl6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnclient_nsacl6_binding. It is the concatenation of ` + "`" + `clientname` + "`" + ` and ` + "`" + `acl6name` + "`" + ` attributes separated by a comma. ## Import A lsnclient_nsacl6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnclient_nsacl6_binding.tf_lsnclient_nsacl6_binding my_lsn_client,my_acl6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnclient_nsacl_binding",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnclient_nsacl_binding resource is used to create lsnclient_nsacl_binding.


`,
			Keywords: []string{
				"lsn",
				"lsnclient",
				"nsacl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "aclname",
					Description: `(Required) Name(s) of any configured extended ACL(s) whose action is ALLOW. The condition specified in the extended ACL rule identifies the traffic from an LSN subscriber for which the Citrix ADC is to perform large scale NAT.`,
				},
				resource.Attribute{
					Name:        "clientname",
					Description: `(Required) Name for the LSN client entity. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN client is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn client1" or 'lsn client1').`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) ID of the traffic domain on which this subscriber or the subscriber network (as specified by the network parameter) belongs. If you do not specify an ID, the subscriber or the subscriber network becomes part of the default traffic domain. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnclient_nsacl_binding. It is the concatenation of ` + "`" + `clientname` + "`" + ` and ` + "`" + `aclname` + "`" + ` attributes separated by a comma. ## Import A lsnclient_nsacl_binding> can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnclient_nsacl_binding.tf_lsnclient_nsacl_binding my_lsnclient,my_acl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnclient_nsacl_binding. It is the concatenation of ` + "`" + `clientname` + "`" + ` and ` + "`" + `aclname` + "`" + ` attributes separated by a comma. ## Import A lsnclient_nsacl_binding> can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnclient_nsacl_binding.tf_lsnclient_nsacl_binding my_lsnclient,my_acl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsngroup",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsngroup resource is used to create lsngroup.


`,
			Keywords: []string{
				"lsn",
				"lsngroup",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name for the LSN group. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN group is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn group1" or 'lsn group1').`,
				},
				resource.Attribute{
					Name:        "clientname",
					Description: `(Required) Name of the LSN client entity to be associated with the LSN group. You can associate only one LSN client entity with an LSN group.You cannot remove this association or replace with another LSN client entity once the LSN group is created.`,
				},
				resource.Attribute{
					Name:        "allocpolicy",
					Description: `(Optional) NAT IP and PORT block allocation policy for Deterministic NAT. Supported Policies are, 1: PORTS: Port blocks from single NATIP will be allocated to LSN subscribers sequentially. After all blocks are exhausted, port blocks from next NATIP will be allocated and so on. 2: IPADDRS(Default): One port block from each NATIP will be allocated and once all the NATIPs are over second port block from each NATIP will be allocated and so on. To understand better if we assume port blocks of all NAT IPs as two dimensional array, PORTS policy follows "row major order" and IPADDRS policy follows "column major order" while allocating port blocks. Example: Client IPs: 2.2.2.1, 2.2.2.2 and 2.2.2.3 NAT IPs and PORT Blocks: 4.4.4.1:PB1, PB2, PB3,., PBn 4.4.4.2: PB1, PB2, PB3,., PBn PORTS Policy: 2.2.2.1 => 4.4.4.1:PB1 2.2.2.2 => 4.4.4.1:PB2 2.2.2.3 => 4.4.4.1:PB3 IPADDRS Policy: 2.2.2.1 => 4.4.4.1:PB1 2.2.2.2 => 4.4.4.2:PB1 2.2.2.3 => 4.4.4.1:PB2`,
				},
				resource.Attribute{
					Name:        "ftp",
					Description: `(Optional) Enable Application Layer Gateway (ALG) for the FTP protocol. For some application-layer protocols, the IP addresses and protocol port numbers are usually communicated in the packet's payload. When acting as an ALG, the Citrix ADC changes the packet's payload to ensure that the protocol continues to work over LSN. Note: The Citrix ADC also includes ALG for ICMP and TFTP protocols. ALG for the ICMP protocol is enabled by default, and there is no provision to disable it. ALG for the TFTP protocol is disabled by default. ALG is enabled automatically for an LSN group when you bind a UDP LSN application profile, with endpoint-independent-mapping, endpoint-independent filtering, and destination port as 69 (well-known port for TFTP), to the LSN group.`,
				},
				resource.Attribute{
					Name:        "ftpcm",
					Description: `(Optional) Enable the FTP connection mirroring for specified LSN group. Connection mirroring (CM or connection failover) refers to keeping active an established TCP or UDP connection when a failover occurs.`,
				},
				resource.Attribute{
					Name:        "ip6profile",
					Description: `(Optional) Name of the LSN ip6 profile to associate with the specified LSN group. An ip6 profile can be associated with a group only during group creation. By default, no LSN ip6 profile is associated with an LSN group during its creation. Only one ip6profile can be associated with a group.`,
				},
				resource.Attribute{
					Name:        "logging",
					Description: `(Optional) Log mapping entries and sessions created or deleted for this LSN group. The Citrix ADC logs LSN sessions for this LSN group only when both logging and session logging parameters are enabled. The ADC uses its existing syslog and audit log framework to log LSN information. You must enable global level LSN logging by enabling the LSN parameter in the related NSLOG action and SYLOG action entities. When the Logging parameter is enabled, the Citrix ADC generates log messages related to LSN mappings and LSN sessions of this LSN group. The ADC then sends these log messages to servers associated with the NSLOG action and SYSLOG actions entities. A log message for an LSN mapping entry consists of the following information:`,
				},
				resource.Attribute{
					Name:        "nattype",
					Description: `(Optional) Type of NAT IP address and port allocation (from the bound LSN pools) for subscribers: Available options function as follows:`,
				},
				resource.Attribute{
					Name:        "portblocksize",
					Description: `(Optional) Size of the NAT port block to be allocated for each subscriber. To set this parameter for Dynamic NAT, you must enable the port block allocation parameter in the bound LSN pool. For Deterministic NAT, the port block allocation parameter is always enabled, and you cannot disable it. In Dynamic NAT, the Citrix ADC allocates a random NAT port block, from the available NAT port pool of an NAT IP address, for each subscriber. For a subscriber, if all the ports are allocated from the subscriber's allocated port block, the ADC allocates a new random port block for the subscriber. The default port block size is 256 for Deterministic NAT, and 0 for Dynamic NAT.`,
				},
				resource.Attribute{
					Name:        "pptp",
					Description: `(Optional) Enable the PPTP Application Layer Gateway.`,
				},
				resource.Attribute{
					Name:        "rtspalg",
					Description: `(Optional) Enable the RTSP ALG.`,
				},
				resource.Attribute{
					Name:        "sessionlogging",
					Description: `(Optional) Log sessions created or deleted for the LSN group. The Citrix ADC logs LSN sessions for this LSN group only when both logging and session logging parameters are enabled. A log message for an LSN session consists of the following information:`,
				},
				resource.Attribute{
					Name:        "sessionsync",
					Description: `(Optional) In a high availability (HA) deployment, synchronize information of all LSN sessions related to this LSN group with the secondary node. After a failover, established TCP connections and UDP packet flows are kept active and resumed on the secondary node (new primary). For this setting to work, you must enable the global session synchronization parameter.`,
				},
				resource.Attribute{
					Name:        "sipalg",
					Description: `(Optional) Enable the SIP ALG.`,
				},
				resource.Attribute{
					Name:        "snmptraplimit",
					Description: `(Optional) Maximum number of SNMP Trap messages that can be generated for the LSN group in one minute. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup. It has the same value as the ` + "`" + `groupname` + "`" + ` attribute. ## Import A lsngroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup.tf_lsngroup my_lsngroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup. It has the same value as the ` + "`" + `groupname` + "`" + ` attribute. ## Import A lsngroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup.tf_lsngroup my_lsngroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsngroup_lsnappsprofile_binding",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsngroup_lsnappsprofile_binding resource is used to create lsngroup_lsnappsprofile_binding.


`,
			Keywords: []string{
				"lsn",
				"lsngroup",
				"lsnappsprofile",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "appsprofilename",
					Description: `(Required) Name of the LSN application profile to bind to the specified LSN group. For each set of destination ports, bind a profile for each protocol for which you want to specify settings. By default, one LSN application profile with default settings for TCP, UDP, and ICMP protocols for all destination ports is bound to an LSN group during its creation. This profile is called a default application profile. When you bind an LSN application profile, with a specified set of destination ports, to an LSN group, the bound profile overrides the default LSN application profile for that protocol at that set of destination ports.`,
				},
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name for the LSN group. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN group is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn group1" or 'lsn group1'). ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup_lsnappsprofile_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `appsprofilename` + "`" + ` attributes separated by a comma. ## Import A lsngroup_lsnappsprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup_lsnappsprofile_binding.tf_lsngroup_lsnappsprofile_binding my_lsn_group,my_lsn_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup_lsnappsprofile_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `appsprofilename` + "`" + ` attributes separated by a comma. ## Import A lsngroup_lsnappsprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup_lsnappsprofile_binding.tf_lsngroup_lsnappsprofile_binding my_lsn_group,my_lsn_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsngroup_lsnhttphdrlogprofile_binding",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsngroup_lsnhttphdrlogprofile_binding resource is used to create lsngroup_lsnhttphdrlogprofile_binding.


`,
			Keywords: []string{
				"lsn",
				"lsngroup",
				"lsnhttphdrlogprofile",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name for the LSN group. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN group is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn group1" or 'lsn group1').`,
				},
				resource.Attribute{
					Name:        "httphdrlogprofilename",
					Description: `(Required) The name of the LSN HTTP header logging Profile. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup_lsnhttphdrlogprofile_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `httphdrlogprofilename` + "`" + ` attributes separated by a comma. ## Import A lsngroup_lsnhttphdrlogprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup_lsnhttphdrlogprofile_binding.tf_lsngroup_lsnhttphdrlogprofile_binding my_lsn_group,my_httplogprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup_lsnhttphdrlogprofile_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `httphdrlogprofilename` + "`" + ` attributes separated by a comma. ## Import A lsngroup_lsnhttphdrlogprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup_lsnhttphdrlogprofile_binding.tf_lsngroup_lsnhttphdrlogprofile_binding my_lsn_group,my_httplogprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsngroup_lsnlogprofile_binding",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsngroup_lsnlogprofile_binding resource is used to create lsngroup_lsnlogprofile_binding.


`,
			Keywords: []string{
				"lsn",
				"lsngroup",
				"lsnlogprofile",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name for the LSN group. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN group is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn group1" or 'lsn group1').`,
				},
				resource.Attribute{
					Name:        "logprofilename",
					Description: `(Required) The name of the LSN logging Profile. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup_lsnlogprofile_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `logprofilename` + "`" + ` attributes separated by a comma. ## Import A lsngroup_lsnlogprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup_lsnlogprofile_binding.tf_lsngroup_lsnlogprofile_binding my_lsn_group,my_lsn_logprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup_lsnlogprofile_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `logprofilename` + "`" + ` attributes separated by a comma. ## Import A lsngroup_lsnlogprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup_lsnlogprofile_binding.tf_lsngroup_lsnlogprofile_binding my_lsn_group,my_lsn_logprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsngroup_lsnpool_binding",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsngroup_lsnpool_binding resource is used to create lsngroup_lsnpool_binding.


`,
			Keywords: []string{
				"lsn",
				"lsngroup",
				"lsnpool",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name for the LSN group. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN group is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn group1" or 'lsn group1').`,
				},
				resource.Attribute{
					Name:        "poolname",
					Description: `(Required) Name of the LSN pool to bind to the specified LSN group. Only LSN Pools and LSN groups with the same NAT type settings can be bound together. Multiples LSN pools can be bound to an LSN group. For Deterministic NAT, pools bound to an LSN group cannot be bound to other LSN groups. For Dynamic NAT, pools bound to an LSN group can be bound to multiple LSN groups. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup_lsnpool_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `poolname` + "`" + ` attributes separated by a comma. ## Import A lsngroup_lsnpool_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup_lsnpool_binding.tf_lsngroup_lsnpool_binding my_lsn_group,my_pool ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup_lsnpool_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `poolname` + "`" + ` attributes separated by a comma. ## Import A lsngroup_lsnpool_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup_lsnpool_binding.tf_lsngroup_lsnpool_binding my_lsn_group,my_pool ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsngroup_lsntransportprofile_binding",
			Category:         "Lsn",
			ShortDescription: ``,
			Description: `

The lsngroup_lsntransportprofile_binding resource is used to create lsngroup_lsntransportprofile_binding.


`,
			Keywords: []string{
				"lsn",
				"lsngroup",
				"lsntransportprofile",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name for the LSN group. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN group is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn group1" or 'lsn group1').`,
				},
				resource.Attribute{
					Name:        "transportprofilename",
					Description: `(Required) Name of the LSN transport profile to bind to the specified LSN group. Bind a profile for each protocol for which you want to specify settings. By default, one LSN transport profile with default settings for TCP, UDP, and ICMP protocols is bound to an LSN group during its creation. This profile is called a default transport. An LSN transport profile that you bind to an LSN group overrides the default LSN transport profile for that protocol. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup_lsntransportprofile_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `transportprofilename` + "`" + ` attributes separated by a comma. ## Import A lsngroup_lsntransportprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup_lsntransportprofile_binding.tf_lsngroup_lsntransportprofile_binding my_lsn_group,my_lsntransportfile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup_lsntransportprofile_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `transportprofilename` + "`" + ` attributes separated by a comma. ## Import A lsngroup_lsntransportprofile_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup_lsntransportprofile_binding.tf_lsngroup_lsntransportprofile_binding my_lsn_group,my_lsntransportfile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsngroup_pcpserver_binding",
			Category:         "Lsn",
			ShortDescription: ``,
			Description: `

The lsngroup_pcpserver_binding resource is used to create lsngroup_pcpserver_binding.


`,
			Keywords: []string{
				"lsn",
				"lsngroup",
				"pcpserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name for the LSN group. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN group is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn group1" or 'lsn group1').`,
				},
				resource.Attribute{
					Name:        "pcpserver",
					Description: `(Required) Name of the PCP server to be associated with lsn group. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup_pcpserver_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `pcpserver` + "`" + ` attributes separated by a comma. ## Import A lsngroup_pcpserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup_pcpserver_binding.tf_lsngroup_pcpserver_binding my_lsn_group,my_pcpserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsngroup_pcpserver_binding. It is the concatenation of ` + "`" + `groupname` + "`" + ` and ` + "`" + `pcpserver` + "`" + ` attributes separated by a comma. ## Import A lsngroup_pcpserver_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsngroup_pcpserver_binding.tf_lsngroup_pcpserver_binding my_lsn_group,my_pcpserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnhttphdrlogprofile",
			Category:         "Lsn",
			ShortDescription: ``,
			Description: `

The lsnhttphdrlogprofile resource is used to create lsnhttphdrlogprofile.


`,
			Keywords: []string{
				"lsn",
				"lsnhttphdrlogprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "httphdrlogprofilename",
					Description: `(Required) The name of the HTTP header logging Profile.`,
				},
				resource.Attribute{
					Name:        "loghost",
					Description: `(Optional) Host information is logged if option is enabled.`,
				},
				resource.Attribute{
					Name:        "logmethod",
					Description: `(Optional) HTTP method information is logged if option is enabled.`,
				},
				resource.Attribute{
					Name:        "logurl",
					Description: `(Optional) URL information is logged if option is enabled.`,
				},
				resource.Attribute{
					Name:        "logversion",
					Description: `(Optional) Version information is logged if option is enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnhttphdrlogprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lsnhttphdrlogprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnhttphdrlogprofile.tf_lsnhttphdrlogprofile my_lsn_httphdrlogprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnhttphdrlogprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lsnhttphdrlogprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnhttphdrlogprofile.tf_lsnhttphdrlogprofile my_lsn_httphdrlogprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnip6profile",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnip6profile resource is used to create lsnip6profile.


`,
			Keywords: []string{
				"lsn",
				"lsnip6profile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the LSN ip6 profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN ip6 profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn ip6 profile1" or 'lsn ip6 profile1').`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) IPv6 translation type for which to set the LSN IP6 profile parameters.`,
				},
				resource.Attribute{
					Name:        "natprefix",
					Description: `(Optional) IPv6 address(es) of the LSN subscriber(s) or subscriber network(s) on whose traffic you want the Citrix ADC to perform Large Scale NAT.`,
				},
				resource.Attribute{
					Name:        "network6",
					Description: `(Optional) IPv6 address of the Citrix ADC AFTR device ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnip6profile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lsnip6profile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnip6profile.tf_lsnip6profile my_lsn_ip6profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnip6profile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lsnip6profile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnip6profile.tf_lsnip6profile my_lsn_ip6profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnlogprofile",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnlogprofile resource is used to create lsnlogprofile.


`,
			Keywords: []string{
				"lsn",
				"lsnlogprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "logprofilename",
					Description: `(Required) The name of the logging Profile.`,
				},
				resource.Attribute{
					Name:        "analyticsprofile",
					Description: `(Optional) Name of the Analytics Profile attached to this lsn profile.`,
				},
				resource.Attribute{
					Name:        "logcompact",
					Description: `(Optional) Logs in Compact Logging format if option is enabled.`,
				},
				resource.Attribute{
					Name:        "logipfix",
					Description: `(Optional) Logs in IPFIX format if option is enabled.`,
				},
				resource.Attribute{
					Name:        "logsessdeletion",
					Description: `(Optional) LSN Session deletion will not be logged if disabled.`,
				},
				resource.Attribute{
					Name:        "logsubscrinfo",
					Description: `(Optional) Subscriber ID information is logged if option is enabled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnlogprofile. It has the same value as the ` + "`" + `logprofilename` + "`" + ` attribute. ## Import A lsnlogprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnlogprofile.tf_lsnlogprofile my_lsn_logprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnlogprofile. It has the same value as the ` + "`" + `logprofilename` + "`" + ` attribute. ## Import A lsnlogprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnlogprofile.tf_lsnlogprofile my_lsn_logprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnparameter",
			Category:         "Lsn",
			ShortDescription: ``,
			Description: `

The lsnparameter resource is used to create lsnparameter.


`,
			Keywords: []string{
				"lsn",
				"lsnparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "sessionsync",
					Description: `(Optional) Synchronize all LSN sessions with the secondary node in a high availability (HA) deployment (global synchronization). After a failover, established TCP connections and UDP packet flows are kept active and resumed on the secondary node (new primary). The global session synchronization parameter and session synchronization parameters (group level) of all LSN groups are enabled by default. For a group, when both the global level and the group level LSN session synchronization parameters are enabled, the primary node synchronizes information of all LSN sessions related to this LSN group with the secondary node.`,
				},
				resource.Attribute{
					Name:        "subscrsessionremoval",
					Description: `(Optional) LSN global setting for controlling subscriber aware session removal, when this is enabled, when ever the subscriber info is deleted from subscriber database, sessions corresponding to that subscriber will be removed. if this setting is disabled, subscriber sessions will be timed out as per the idle time out settings. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnparameter. It is a unique string prefixed with ` + "`" + `tf-lsnparameter-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnparameter. It is a unique string prefixed with ` + "`" + `tf-lsnparameter-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnpool",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnpool resource is used to create lsnpool.


`,
			Keywords: []string{
				"lsn",
				"lsnpool",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "poolname",
					Description: `(Required) Name for the LSN pool. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN pool is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn pool1" or 'lsn pool1').`,
				},
				resource.Attribute{
					Name:        "maxportrealloctmq",
					Description: `(Optional) Maximum number of ports for which the port reallocation timeout applies for each NAT IP address. In other words, the maximum deallocated-port queue size for which the reallocation timeout applies for each NAT IP address. When the queue size is full, the next port deallocated is reallocated immediately for a new LSN session.`,
				},
				resource.Attribute{
					Name:        "nattype",
					Description: `(Optional) Type of NAT IP address and port allocation (from the LSN pools bound to an LSN group) for subscribers (of the LSN client entity bound to the LSN group): Available options function as follows:`,
				},
				resource.Attribute{
					Name:        "portblockallocation",
					Description: `(Optional) Allocate a random NAT port block, from the available NAT port pool of an NAT IP address, for each subscriber when the NAT allocation is set as Dynamic NAT. For any connection initiated from a subscriber, the Citrix ADC allocates a NAT port from the subscriber's allocated NAT port block to create the LSN session. You must set the port block size in the bound LSN group. For a subscriber, if all the ports are allocated from the subscriber's allocated port block, the Citrix ADC allocates a new random port block for the subscriber. For Deterministic NAT, this parameter is enabled by default, and you cannot disable it.`,
				},
				resource.Attribute{
					Name:        "portrealloctimeout",
					Description: `(Optional) The waiting time, in seconds, between deallocating LSN NAT ports (when an LSN mapping is removed) and reallocating them for a new LSN session. This parameter is necessary in order to prevent collisions between old and new mappings and sessions. It ensures that all established sessions are broken instead of redirected to a different subscriber. This is not applicable for ports used in:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnpool. It has the same value as the ` + "`" + `poolname` + "`" + ` attribute. ## Import A lsnpool can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnpool.tf_lsnpool my_lsn_pool ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnpool. It has the same value as the ` + "`" + `poolname` + "`" + ` attribute. ## Import A lsnpool can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnpool.tf_lsnpool my_lsn_pool ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnrtspalgprofile",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnrtspalgprofile resource is used to create lsnrtspalgprofile.


`,
			Keywords: []string{
				"lsn",
				"lsnrtspalgprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "rtspalgprofilename",
					Description: `(Required) The name of the RTSPALG Profile.`,
				},
				resource.Attribute{
					Name:        "rtspportrange",
					Description: `(Required) port for the RTSP`,
				},
				resource.Attribute{
					Name:        "rtspidletimeout",
					Description: `(Optional) Idle timeout for the rtsp sessions in seconds.`,
				},
				resource.Attribute{
					Name:        "rtsptransportprotocol",
					Description: `(Optional) RTSP ALG Profile transport protocol type. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnrtspalgprofile. It has the same value as the ` + "`" + `rtspalgprofilename` + "`" + ` attribute. ## Import A lsnrtspalgprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnrtspalgprofile.tf_lsnrtspalgprofile my_lsn_rtspalgprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnrtspalgprofile. It has the same value as the ` + "`" + `rtspalgprofilename` + "`" + ` attribute. ## Import A lsnrtspalgprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnrtspalgprofile.tf_lsnrtspalgprofile my_lsn_rtspalgprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnsipalgprofile",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnsipalgprofile resource is used to create lsnsipalgprofile.


`,
			Keywords: []string{
				"lsn",
				"lsnsipalgprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "sipalgprofilename",
					Description: `(Required) The name of the SIPALG Profile.`,
				},
				resource.Attribute{
					Name:        "siptransportprotocol",
					Description: `(Required) SIP ALG Profile transport protocol type.`,
				},
				resource.Attribute{
					Name:        "datasessionidletimeout",
					Description: `(Optional) Idle timeout for the data channel sessions in seconds.`,
				},
				resource.Attribute{
					Name:        "opencontactpinhole",
					Description: `(Optional) ENABLE/DISABLE ContactPinhole creation.`,
				},
				resource.Attribute{
					Name:        "openrecordroutepinhole",
					Description: `(Optional) ENABLE/DISABLE RecordRoutePinhole creation.`,
				},
				resource.Attribute{
					Name:        "openregisterpinhole",
					Description: `(Optional) ENABLE/DISABLE RegisterPinhole creation.`,
				},
				resource.Attribute{
					Name:        "openroutepinhole",
					Description: `(Optional) ENABLE/DISABLE RoutePinhole creation.`,
				},
				resource.Attribute{
					Name:        "openviapinhole",
					Description: `(Optional) ENABLE/DISABLE ViaPinhole creation.`,
				},
				resource.Attribute{
					Name:        "registrationtimeout",
					Description: `(Optional) SIP registration timeout in seconds.`,
				},
				resource.Attribute{
					Name:        "rport",
					Description: `(Optional) ENABLE/DISABLE rport.`,
				},
				resource.Attribute{
					Name:        "sipdstportrange",
					Description: `(Optional) Destination port range for SIP_UDP and SIP_TCP.`,
				},
				resource.Attribute{
					Name:        "sipsessiontimeout",
					Description: `(Optional) SIP control channel session timeout in seconds.`,
				},
				resource.Attribute{
					Name:        "sipsrcportrange",
					Description: `(Optional) Source port range for SIP_UDP and SIP_TCP. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnsipalgprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lsnsipalgprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnsipalgprofile.tf_lsnsipalgprofile my_lsn_sipalgprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnsipalgprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lsnsipalgprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnsipalgprofile.tf_lsnsipalgprofile my_lsn_sipalgprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsnstatic",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsnstatic resource is used to create lsnstatic.


`,
			Keywords: []string{
				"lsn",
				"lsnstatic",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the LSN static mapping entry. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN group is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn static1" or 'lsn static1').`,
				},
				resource.Attribute{
					Name:        "subscrip",
					Description: `(Required) IPv4(NAT44 & DS-Lite)/IPv6(NAT64) address of an LSN subscriber for the LSN static mapping entry.`,
				},
				resource.Attribute{
					Name:        "subscrport",
					Description: `(Required) Port of the LSN subscriber for the LSN mapping entry.`,
				},
				resource.Attribute{
					Name:        "transportprotocol",
					Description: `(Required) Protocol for the LSN mapping entry.`,
				},
				resource.Attribute{
					Name:        "destip",
					Description: `(Optional) Destination IP address for the LSN mapping entry.`,
				},
				resource.Attribute{
					Name:        "dsttd",
					Description: `(Optional) ID of the traffic domain through which the destination IP address for this LSN mapping entry is reachable from the Citrix ADC. If you do not specify an ID, the destination IP address is assumed to be reachable through the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "natip",
					Description: `(Optional) IPv4 address, already existing on the Citrix ADC as type LSN, to be used as NAT IP address for this mapping entry.`,
				},
				resource.Attribute{
					Name:        "natport",
					Description: `(Optional) NAT port for this LSN mapping entry.`,
				},
				resource.Attribute{
					Name:        "nattype",
					Description: `(Optional) Type of sessions to be displayed.`,
				},
				resource.Attribute{
					Name:        "network6",
					Description: `(Optional) B4 address in DS-Lite setup`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) ID of the traffic domain to which the subscriber belongs. If you do not specify an ID, the subscriber is assumed to be a part of the default traffic domain. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnstatic. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lsnstatic can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnstatic.tf_lsnstatic my_lsn_static ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsnstatic. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A lsnstatic can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsnstatic.tf_lsnstatic my_lsn_static ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_lsntransportprofile",
			Category:         "LSN",
			ShortDescription: ``,
			Description: `

The lsntransportprofile resource is used to create lsntransportprofile.


`,
			Keywords: []string{
				"lsn",
				"lsntransportprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "transportprofilename",
					Description: `(Required) Name for the LSN transport profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the LSN transport profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "lsn transport profile1" or 'lsn transport profile1').`,
				},
				resource.Attribute{
					Name:        "transportprotocol",
					Description: `(Required) Protocol for which to set the LSN transport profile parameters.`,
				},
				resource.Attribute{
					Name:        "finrsttimeout",
					Description: `(Optional) Timeout, in seconds, for a TCP LSN session after a FIN or RST message is received from one of the endpoints. If a TCP LSN session is idle (after the Citrix ADC receives a FIN or RST message) for a time that exceeds this value, the Citrix ADC ADC removes the session. Since the LSN feature of the Citrix ADC does not maintain state information of any TCP LSN sessions, this timeout accommodates the transmission of the FIN or RST, and ACK messages from the other endpoint so that both endpoints can properly close the connection.`,
				},
				resource.Attribute{
					Name:        "groupsessionlimit",
					Description: `(Optional) Maximum number of concurrent LSN sessions(for the specified protocol) allowed for all subscriber of a group to which this profile has bound. This limit will get split across the Citrix ADCs packet engines and rounded down. When the number of LSN sessions reaches the limit for a group in packet engine, the Citrix ADC does not allow the subscriber of that group to open additional sessions through that packet engine.`,
				},
				resource.Attribute{
					Name:        "portpreserveparity",
					Description: `(Optional) Enable port parity between a subscriber port and its mapped LSN NAT port. For example, if a subscriber initiates a connection from an odd numbered port, the Citrix ADC allocates an odd numbered LSN NAT port for this connection. You must set this parameter for proper functioning of protocols that require the source port to be even or odd numbered, for example, in peer-to-peer applications that use RTP or RTCP protocol.`,
				},
				resource.Attribute{
					Name:        "portpreserverange",
					Description: `(Optional) If a subscriber initiates a connection from a well-known port (0-1023), allocate a NAT port from the well-known port range (0-1023) for this connection. For example, if a subscriber initiates a connection from port 80, the Citrix ADC can allocate port 100 as the NAT port for this connection. This parameter applies to dynamic NAT without port block allocation. It also applies to Deterministic NAT if the range of ports allocated includes well-known ports. When all the well-known ports of all the available NAT IP addresses are used in different subscriber's connections (LSN sessions), and a subscriber initiates a connection from a well-known port, the Citrix ADC drops this connection.`,
				},
				resource.Attribute{
					Name:        "portquota",
					Description: `(Optional) Maximum number of LSN NAT ports to be used at a time by each subscriber for the specified protocol. For example, each subscriber can be limited to a maximum of 500 TCP NAT ports. When the LSN NAT mappings for a subscriber reach the limit, the Citrix ADC does not allocate additional NAT ports for that subscriber.`,
				},
				resource.Attribute{
					Name:        "sessionquota",
					Description: `(Optional) Maximum number of concurrent LSN sessions allowed for each subscriber for the specified protocol. When the number of LSN sessions reaches the limit for a subscriber, the Citrix ADC does not allow the subscriber to open additional sessions.`,
				},
				resource.Attribute{
					Name:        "sessiontimeout",
					Description: `(Optional) Timeout, in seconds, for an idle LSN session. If an LSN session is idle for a time that exceeds this value, the Citrix ADC removes the session. This timeout does not apply for a TCP LSN session when a FIN or RST message is received from either of the endpoints.`,
				},
				resource.Attribute{
					Name:        "stuntimeout",
					Description: `(Optional) STUN protocol timeout`,
				},
				resource.Attribute{
					Name:        "syncheck",
					Description: `(Optional) Silently drop any non-SYN packets for connections for which there is no LSN-NAT session present on the Citrix ADC. If you disable this parameter, the Citrix ADC accepts any non-SYN packets and creates a new LSN session entry for this connection. Following are some reasons for the Citrix ADC to receive such packets:`,
				},
				resource.Attribute{
					Name:        "synidletimeout",
					Description: `(Optional) SYN Idle timeout ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsntransportprofile. It has the same value as the ` + "`" + `transportprofilename` + "`" + ` attribute. ## Import A lsntransportprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsntransportprofile.tf_lsntransportprofile my_lsn_transportprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the lsntransportprofile. It has the same value as the ` + "`" + `transportprofilename` + "`" + ` attribute. ## Import A lsntransportprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_lsntransportprofile.tf_lsntransportprofile my_lsn_transportprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_mapbmr",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The mapbmr resource is used to create MAP-T Basic Mapping rule resource.


`,
			Keywords: []string{
				"network",
				"mapbmr",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the Basic Mapping Rule. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the MAP Basic Mapping Rule is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "add network MapBmr bmr1 -natprefix 2005::/64 -EAbitLength 16 -psidoffset 6 -portsharingratio 8" ). The Basic Mapping Rule information allows a MAP BR to determine source IPv4 address from the IPv6 packet sent from MAP CE device. Also it allows to determine destination IPv6 address of MAP CE before sending packets to MAP CE. Minimum length = 1 Maximum length = 127`,
				},
				resource.Attribute{
					Name:        "ruleipv6prefix",
					Description: `(Required) IPv6 prefix of Customer Edge(CE) device.MAP-T CE will send ipv6 packets with this ipv6 prefix as source ipv6 address prefix.`,
				},
				resource.Attribute{
					Name:        "psidoffset",
					Description: `(Optional) Start bit position of Port Set Identifier(PSID) value in Embedded Address (EA) bits. Minimum value = 1 Maximum value = 15`,
				},
				resource.Attribute{
					Name:        "eabitlength",
					Description: `(Optional) The Embedded Address (EA) bit field encodes the CE-specific IPv4 address and port information. The EA bit field, which is unique for a given Rule IPv6 prefix. Minimum value = 2 Maximum value = 47`,
				},
				resource.Attribute{
					Name:        "psidlength",
					Description: `(Optional) Length of Port Set IdentifierPort Set Identifier(PSID) in Embedded Address (EA) bits. Minimum value = 1 Maximum value = 16 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the mapbmr. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A mapbmr can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_mapbmr.tf_mapbmr tf_mapbmr ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the mapbmr. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A mapbmr can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_mapbmr.tf_mapbmr tf_mapbmr ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_mapbmr_bmrv4network_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The mapbmr_bmrv4network_binding resource is used to bind bmrv4network that can be bound to mapbmr.


`,
			Keywords: []string{
				"network",
				"mapbmr",
				"bmrv4network",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the Basic Mapping Rule. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the MAP Basic Mapping Rule is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "add network MapBmr bmr1 -natprefix 2005::/64 -EAbitLength 16 -psidoffset 6 -portsharingratio 8" ). The Basic Mapping Rule information allows a MAP BR to determine source IPv4 address from the IPv6 packet sent from MAP CE device. Also it allows to determine destination IPv6 address of MAP CE before sending packets to MAP CE. Minimum length = 1 Maximum length = 127`,
				},
				resource.Attribute{
					Name:        "network",
					Description: `(Required) IPv4 NAT address range of Customer Edge (CE). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) Subnet mask for the IPv4 address specified in the Network parameter. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the mapbmr_bmrv4network_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `network` + "`" + ` attributes separated by comma. ## Import A mapbmr_bmrv4network_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_mapbmr_bmrv4network_binding.tf_binding tf_mapbmr,1.2.3.0 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the mapbmr_bmrv4network_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `network` + "`" + ` attributes separated by comma. ## Import A mapbmr_bmrv4network_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_mapbmr_bmrv4network_binding.tf_binding tf_mapbmr,1.2.3.0 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_mapdmr",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The mapdmr resource is used to create MAP-T Default Mapping rule resource.


`,
			Keywords: []string{
				"network",
				"mapdmr",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the Default Mapping Rule. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the MAP Default Mapping Rule is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "add network MapDmr map1 -BRIpv6Prefix 2003::/96"). Default Mapping Rule (DMR) is defined in terms of the IPv6 prefix advertised by one or more BRs, which provide external connectivity. A typical MAP-T CE will install an IPv4 default route using this rule. A BR will use this rule when translating all outside IPv4 source addresses to the IPv6 MAP domain. Minimum length = 1 Maximum length = 127`,
				},
				resource.Attribute{
					Name:        "bripv6prefix",
					Description: `(Required) IPv6 prefix of Border Relay (Citrix ADC) device.MAP-T CE will send ipv6 packets to this ipv6 prefix.The DMR IPv6 prefix length SHOULD be 64 bits long by default and in any case MUST NOT exceed 96 bits. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the mapdmr. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A mapdmr can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_mapdmr.tf_mapdmr tf_mapdmr ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the mapdmr. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A mapdmr can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_mapdmr.tf_mapdmr tf_mapdmr ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_mapdomain",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The mapdomain resource is used to create MAP-T Map Domain resource.


`,
			Keywords: []string{
				"network",
				"mapdomain",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the MAP Domain. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the MAP Domain is created . The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "add network MapDomain map1"). Minimum length = 1 Maximum length = 127`,
				},
				resource.Attribute{
					Name:        "mapdmrname",
					Description: `(Required) Default Mapping rule name. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the mapdomain. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A mapdomain can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_mapdomain.tf_mapdomain tf_mapdomain ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the mapdomain. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A mapdomain can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_mapdomain.tf_mapdomain tf_mapdomain ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_mapdomain_mapbmr_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The mapdomain_mapbmr_binding resource is used to bind mapbmr to the mapdomain resource.


`,
			Keywords: []string{
				"network",
				"mapdomain",
				"mapbmr",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the MAP Domain. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the MAP Domain is created . The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "add network MapDomain map1"). Minimum length = 1 Maximum length = 127`,
				},
				resource.Attribute{
					Name:        "mapbmrname",
					Description: `(Required) Basic Mapping rule name. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the mapdomain_mapbmr_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `mapbmrname` + "`" + ` attributes separated by comma. ## Import A mapdomain_mapbmr_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_mapdomain_mapbmr_binding.tf_binding tf_mapdomain,tf_mapbmr ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the mapdomain_mapbmr_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `mapbmrname` + "`" + ` attributes separated by comma. ## Import A mapdomain_mapbmr_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_mapdomain_mapbmr_binding.tf_binding tf_mapdomain,tf_mapbmr ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nat64",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The nat64 resource is used to create nat64 config resource.


`,
			Keywords: []string{
				"network",
				"nat64",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the NAT64 rule. Must begin with a letter, number, or the underscore character (_), and can consist of letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore characters. Cannot be changed after the rule is created. Choose a name that helps identify the NAT64 rule. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "acl6name",
					Description: `(Required) Name of any configured ACL6 whose action is ALLOW. IPv6 Packets matching the condition of this ACL6 rule and destination IP address of these packets matching the NAT64 IPv6 prefix are considered for NAT64 translation. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "netprofile",
					Description: `(Optional) Name of the configured netprofile. The Citrix ADC selects one of the IP address in the netprofile as the source IP address of the translated IPv4 packet to be sent to the IPv4 server. Minimum length = 1 Maximum length = 127 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nat64. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nat64 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nat64.tf_nat64 tf_nat64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nat64. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nat64 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nat64.tf_nat64 tf_nat64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nat64param",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The nat64param resource is used to create NAT64 parameter resource.


`,
			Keywords: []string{
				"network",
				"nat64param",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "nat64ignoretos",
					Description: `(Optional) Ignore TOS. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "nat64zerochecksum",
					Description: `(Optional) Calculate checksum for UDP packets with zero checksum. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "nat64v6mtu",
					Description: `(Optional) MTU setting for the IPv6 side. If the incoming IPv4 packet greater than this, either fragment or send icmp need fragmentation error. Minimum value = 1280 Maximum value = 9216`,
				},
				resource.Attribute{
					Name:        "nat64fragheader",
					Description: `(Optional) When disabled, translator will not insert IPv6 fragmentation header for non fragmented IPv4 packets. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nat64param. It is a unique string prefixed with "tf-nat64param-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nat64param. It is a unique string prefixed with "tf-nat64param-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nd6",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The nd6 resource is used to create nd6.


`,
			Keywords: []string{
				"network",
				"nd6",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "neighbor",
					Description: `(Required) Link-local IPv6 address of the adjacent network device to add to the ND6 table.`,
				},
				resource.Attribute{
					Name:        "mac",
					Description: `(Required) MAC address of the adjacent network device.`,
				},
				resource.Attribute{
					Name:        "ifnum",
					Description: `(Optional) Interface through which the adjacent network device is available, specified in slot/port notation (for example, 1/3). Use spaces to separate multiple entries.`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) Integer value that uniquely identifies the VLAN on which the adjacent network device exists. Minimum value = 1 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "vxlan",
					Description: `(Optional) ID of the VXLAN on which the IPv6 address of this ND6 entry is reachable. Minimum value = 1 Maximum value = 16777215`,
				},
				resource.Attribute{
					Name:        "vtep",
					Description: `(Optional) IP address of the VXLAN tunnel endpoint (VTEP) through which the IPv6 address of this ND6 entry is reachable. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node. Minimum value = 0 Maximum value = 31 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nd6. It has the same value as the ` + "`" + `neighbor` + "`" + ` attribute. ## Import A nd6 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nd6.tf_nd6 2001::3 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nd6. It has the same value as the ` + "`" + `neighbor` + "`" + ` attribute. ## Import A nd6 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nd6.tf_nd6 2001::3 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nd6ravariables",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The nd6ravariables resource is used to update nd6ravariables.


`,
			Keywords: []string{
				"network",
				"nd6ravariables",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vlan",
					Description: `(Required) The VLAN number. Minimum value = 1 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "ceaserouteradv",
					Description: `(Optional) Cease router advertisements on this vlan. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "sendrouteradv",
					Description: `(Optional) whether the router sends periodic RAs and responds to Router Solicitations. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "srclinklayeraddroption",
					Description: `(Optional) Include source link layer address option in RA messages. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "onlyunicastrtadvresponse",
					Description: `(Optional) Send only Unicast Router Advertisements in respond to Router Solicitations. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "managedaddrconfig",
					Description: `(Optional) Value to be placed in the Managed address configuration flag field. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "otheraddrconfig",
					Description: `(Optional) Value to be placed in the Other configuration flag field. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "currhoplimit",
					Description: `(Optional) Current Hop limit. Minimum value = 0 Maximum value = 255`,
				},
				resource.Attribute{
					Name:        "maxrtadvinterval",
					Description: `(Optional) Maximum time allowed between unsolicited multicast RAs, in seconds. Minimum value = 4 Maximum value = 1800`,
				},
				resource.Attribute{
					Name:        "minrtadvinterval",
					Description: `(Optional) Minimum time interval between RA messages, in seconds. Minimum value = 3 Maximum value = 1350`,
				},
				resource.Attribute{
					Name:        "linkmtu",
					Description: `(Optional) The Link MTU. Minimum value = 0 Maximum value = 1500`,
				},
				resource.Attribute{
					Name:        "reachabletime",
					Description: `(Optional) Reachable time, in milliseconds. Minimum value = 0 Maximum value = 3600000`,
				},
				resource.Attribute{
					Name:        "retranstime",
					Description: `(Optional) Retransmission time, in milliseconds.`,
				},
				resource.Attribute{
					Name:        "defaultlifetime",
					Description: `(Optional) Default life time, in seconds. Minimum value = 0 Maximum value = 9000 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nd6ravariables. It has the same value as the ` + "`" + `vlan` + "`" + ` attribute. ## Import A nd6ravariables can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nd6ravariables.tf_nd6ravariables 1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nd6ravariables. It has the same value as the ` + "`" + `vlan` + "`" + ` attribute. ## Import A nd6ravariables can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nd6ravariables.tf_nd6ravariables 1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nd6ravariables_onlinkipv6prefix_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The nd6ravariables_onlinkipv6prefix_binding resource is used to create nd6ravariables_onlinkipv6prefix_binding.


`,
			Keywords: []string{
				"network",
				"nd6ravariables",
				"onlinkipv6prefix",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipv6prefix",
					Description: `(Required) Onlink prefixes for RA messages.`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Required) The VLAN number. Minimum value = 1 Maximum value = 4094 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nd6ravariables_onlinkipv6prefix_binding. It has the same value as the ` + "`" + `vlan` + "`" + ` and ` + "`" + `ipv6prefix` + "`" + ` attributes separated by a comma. ## Import A nd6ravariables_onlinkipv6prefix_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nd6ravariables_onlinkipv6prefix_binding.tf_nd6ravariables_onlinkipv6prefix_binding 1,2003::/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nd6ravariables_onlinkipv6prefix_binding. It has the same value as the ` + "`" + `vlan` + "`" + ` and ` + "`" + `ipv6prefix` + "`" + ` attributes separated by a comma. ## Import A nd6ravariables_onlinkipv6prefix_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nd6ravariables_onlinkipv6prefix_binding.tf_nd6ravariables_onlinkipv6prefix_binding 1,2003::/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_netbridge",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The netbridge resource is used to create network bridge resource.


`,
			Keywords: []string{
				"network",
				"netbridge",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) The name of the network bridge.`,
				},
				resource.Attribute{
					Name:        "vxlanvlanmap",
					Description: `(Optional) The vlan to vxlan mapping to be applied to this netbridge. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netbridge. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A netbridge can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netbridge.tf_netbridge tf_netbridge ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netbridge. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A netbridge can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netbridge.tf_netbridge tf_netbridge ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_netbridge_iptunnel_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The netbridge_iptunnel_binding resource is used to bind iptunnel to the netbridge resource.


`,
			Keywords: []string{
				"network",
				"netbridge",
				"iptunnel",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "tunnel",
					Description: `(Required) The name of the tunnel that is a part of this bridge.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) The name of the network bridge. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netbridge_iptunnel_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `tunnel` + "`" + ` attributes separated by comma. ## Import A netbridge_iptunnel_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netbridge_iptunnel_binding.tf_binding tf_netbridge,tf_iptunnel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netbridge_iptunnel_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `tunnel` + "`" + ` attributes separated by comma. ## Import A netbridge_iptunnel_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netbridge_iptunnel_binding.tf_binding tf_netbridge,tf_iptunnel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_netbridge_nsip6_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The netbridge_nsip6_binding resource is used to create netbridge_nsip6_binding.


`,
			Keywords: []string{
				"network",
				"netbridge",
				"nsip6",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) The subnet that is extended by this network bridge. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) The name of the network bridge.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) The network mask for the subnet. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netbridge_nsip6_binding. It has the same value as the ` + "`" + `name` + "`" + ` and ` + "`" + `ipaddress` + "`" + `attributes separated by a comma. ## Import A netbridge_nsip6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netbridge_nsip6_binding.tf_netbridge_nsip6_binding my_netbridge,dea:97c5:d381:e72b::/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netbridge_nsip6_binding. It has the same value as the ` + "`" + `name` + "`" + ` and ` + "`" + `ipaddress` + "`" + `attributes separated by a comma. ## Import A netbridge_nsip6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netbridge_nsip6_binding.tf_netbridge_nsip6_binding my_netbridge,dea:97c5:d381:e72b::/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_netbridge_nsip_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The netbridge_nsip_binding resource is used to create netbridge_nsip_binding.


`,
			Keywords: []string{
				"network",
				"netbridge",
				"nsip",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) The subnet that is extended by this network bridge. Notice, this value must have the network ip address of the subnet Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Required) The network mask for the subnet.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) The name of the network bridge. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netbridge_nsip_binding. It has the same value as the ` + "`" + `name` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by a comma. ## Import A netbridge_nsip_bindingcan be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netbridge_nsip_binding.tf_netbridge_nsip_binding my_netbridge,10.222.74.128 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netbridge_nsip_binding. It has the same value as the ` + "`" + `name` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by a comma. ## Import A netbridge_nsip_bindingcan be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netbridge_nsip_binding.tf_netbridge_nsip_binding my_netbridge,10.222.74.128 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_netbridge_vlan_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The netbridge_vlan_binding resource is used to bind vlan to netbridge resource.


`,
			Keywords: []string{
				"network",
				"netbridge",
				"vlan",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) The name of the network bridge.`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Required) The VLAN that is extended by this network bridge. Minimum value = 1 Maximum value = 4094 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netbridge_vlan_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `vlan` + "`" + ` attributes separated by comma. ## Import A netbridge_vlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netbridge_vlan_binding.tf_binding tf_netbridge,20 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netbridge_vlan_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `vlan` + "`" + ` attributes separated by comma. ## Import A netbridge_vlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netbridge_vlan_binding.tf_binding tf_netbridge,20 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_netprofile",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The netprofile resource is used to create nework profiles.


`,
			Keywords: []string{
				"network",
				"netprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the net profile. Cannot be changed after the profile is created. Choose a name that helps identify the net profile.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "srcip",
					Description: `(Optional) IP address or the name of an IP set.`,
				},
				resource.Attribute{
					Name:        "srcippersistency",
					Description: `(Optional) When the net profile is associated with a virtual server or its bound services, this option enables the Citrix ADC to use the same address, specified in the net profile, to communicate to servers for all sessions initiated from a particular client to the virtual server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "overridelsn",
					Description: `(Optional) USNIP/USIP settings override LSN settings for configured service/virtual server traffic.. . Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mbf",
					Description: `(Optional) Response will be sent using learnt info if enabled. When creating a netprofile, if you do not set this parameter, the netprofile inherits the global MBF setting (available in the enable ns mode and disable ns mode CLI commands, or in the System > Settings > Configure modes > Configure Modes dialog box). However, you can override this setting after you create the netprofile. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "proxyprotocol",
					Description: `(Optional) Proxy Protocol Action (Enabled/Disabled). Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "proxyprotocoltxversion",
					Description: `(Optional) Proxy Protocol Version (V1/V2). Possible values: [ V1, V2 ]`,
				},
				resource.Attribute{
					Name:        "proxyprotocolaftertlshandshake",
					Description: `(Optional) ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A netprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netprofile.tf_netprofile tf_netprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A netprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netprofile.tf_netprofile tf_netprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_netprofile_natrule_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The netprofile_natrule_binding resource is used to bind natrule to netprofile.


`,
			Keywords: []string{
				"network",
				"netprofile",
				"natrule",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the netprofile to which to bind port ranges.`,
				},
				resource.Attribute{
					Name:        "natrule",
					Description: `(Required) IPv4 network address on whose traffic you want the Citrix ADC to do rewrite ip prefix.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) 0`,
				},
				resource.Attribute{
					Name:        "rewriteip",
					Description: `(Optional) 0 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netprofile_natrule_binding. Itis the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `natrule` + "`" + ` attributes separated by comma. ## Import A netprofile_natrule_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netprofile_natrule_binding.tf_binding tf_netprofile,10.10.10.10 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netprofile_natrule_binding. Itis the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `natrule` + "`" + ` attributes separated by comma. ## Import A netprofile_natrule_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netprofile_natrule_binding.tf_binding tf_netprofile,10.10.10.10 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_netprofile_srcportset_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The netprofile_srcportset_binding resource is used to bind srcportset to netprofile.


`,
			Keywords: []string{
				"network",
				"netprofile",
				"srcportset",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the netprofile to which to bind port ranges.`,
				},
				resource.Attribute{
					Name:        "srcportrange",
					Description: `(Required) When the source port range is configured and associated with the netprofile bound to a service group, Citrix ADC will choose a port from the range configured for connection establishment at the backend servers. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netprofile_srcportset_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `srcportrange` + "`" + ` attributes separated by comma. ## Import A netprofile_srcportset_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netprofile_srcportset_binding.tf_binding tf_netprofile,2000 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the netprofile_srcportset_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `srcportrange` + "`" + ` attributes separated by comma. ## Import A netprofile_srcportset_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_netprofile_srcportset_binding.tf_binding tf_netprofile,2000 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nitro_resource",
			Category:         "Generic",
			ShortDescription: ``,
			Description: `\_resource

The nitro\_resource resource is used to generically create NITRO resources.

It will handle the creation, update and deletion of the resource in the manner
described by the workflow map entry referenced in the configuration block.

The execution is governed by the data found in the corresponding workflow entry.

Browse through the workflows.yaml file to see what endpoints are available.

The workflows.yaml file can be found [here](https://github.com/citrix/terraform-provider-citrixadc/blob/master/citrixadc/testdata/workflows.yaml).

`,
			Keywords: []string{
				"generic",
				"nitro",
				"resource",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "workflows_file",
					Description: `(Required) The path to the workflows yaml file that contains the workflow definitions.`,
				},
				resource.Attribute{
					Name:        "workflow",
					Description: `(Required) The map key which points to the specific entry to use from the workflows map.`,
				},
				resource.Attribute{
					Name:        "attributes",
					Description: `(Optional) The map containing the attributes of the resource. Any change to these attribute values will trigger an update operation.`,
				},
				resource.Attribute{
					Name:        "non_updateable_attributes",
					Description: `(Optional) The map containing the non updateable attributes of the resource. Any change to these attribute values will trigger delete and re create of the resource. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nitro\_resource. Depending on the workflow type this can be a single identifying attributes or a pair of attributes separated by a comma ` + "`" + `,` + "`" + `. ## Import A nitro\_resource can be imported using its id ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nitro_resource.tf_object object_id terraform import citrixadc_nitro_resource.tf_biding primary_id,secondary_id ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nitro\_resource. Depending on the workflow type this can be a single identifying attributes or a pair of attributes separated by a comma ` + "`" + `,` + "`" + `. ## Import A nitro\_resource can be imported using its id ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nitro_resource.tf_object object_id terraform import citrixadc_nitro_resource.tf_biding primary_id,secondary_id ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsacl",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsacl resource is used to create ADC acls.


`,
			Keywords: []string{
				"ns",
				"nsacl",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "aclname",
					Description: `(Optional) Name for the extended ACL rule.`,
				},
				resource.Attribute{
					Name:        "aclaction",
					Description: `(Optional) Action to perform on incoming IPv4 packets that match the extended ACL rule. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "srcipop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "srcipval",
					Description: `(Optional) IP address or range of IP addresses to match against the source IP address of an incoming IPv4 packet. In the command line interface, separate the range with a hyphen. For example:10.102.29.30-10.102.29.189.`,
				},
				resource.Attribute{
					Name:        "srcportop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "srcportval",
					Description: `(Optional) Port number or range of port numbers to match against the source port number of an incoming IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 40-90.`,
				},
				resource.Attribute{
					Name:        "destipop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "destipval",
					Description: `(Optional) IP address or range of IP addresses to match against the destination IP address of an incoming IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 10.102.29.30-10.102.29.189.`,
				},
				resource.Attribute{
					Name:        "destportop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "destportval",
					Description: `(Optional) Port number or range of port numbers to match against the destination port number of an incoming IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 40-90. Note: The destination port can be specified only for TCP and UDP protocols.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Number of seconds, in multiples of four, after which the extended ACL rule expires. If you do not want the extended ACL rule to expire, do not specify a TTL value.`,
				},
				resource.Attribute{
					Name:        "srcmac",
					Description: `(Optional) MAC address to match against the source MAC address of an incoming IPv4 packet.`,
				},
				resource.Attribute{
					Name:        "srcmacmask",
					Description: `(Optional) Used to define range of Source MAC address. It takes string of 0 and 1, 0s are for exact match and 1s for wildcard. For matching first 3 bytes of MAC address, srcMacMask value "000000111111". .`,
				},
				resource.Attribute{
					Name:        "protocol",
					Description: `(Optional) Protocol to match against the protocol of an incoming IPv4 packet. Possible values: [ ICMP, IGMP, TCP, EGP, IGP, ARGUS, UDP, RDP, RSVP, EIGRP, L2TP, ISIS, GGP, IPoverIP, ST, CBT, BBN-RCC-M, NVP-II, PUP, EMCON, XNET, CHAOS, MUX, DCN-MEAS, HMP, PRM, XNS-IDP, TRUNK-1, TRUNK-2, LEAF-1, LEAF-2, IRTP, ISO-TP4, NETBLT, MFE-NSP, MERIT-INP, SEP, 3PC, IDPR, XTP, DDP, IDPR-CMTP, TP++, IL, IPv6, SDRP, IPv6-Route, IPv6-Frag, IDRP, GRE, MHRP, BNA, ESP, AH, I-NLSP, SWIPE, NARP, MOBILE, TLSP, SKIP, ICMPV6, IPv6-NoNx, IPv6-Opts, Any-Host-Internal-Protocol, CFTP, Any-Local-Network, SAT-EXPAK, KRYPTOLAN, RVD, IPPC, Any-Distributed-File-System, TFTP, VISA, IPCV, CPNX, CPHB, WSN, PVP, BR-SAT-MO, SUN-ND, WB-MON, WB-EXPAK, ISO-IP, VMTP, SECURE-VM, VINES, TTP, NSFNET-IG, DGP, TCF, OSPFIGP, Sprite-RP, LARP, MTP, AX.25, IPIP, MICP, SCC-SP, ETHERIP, Any-Private-Encryption-Scheme, GMTP, IFMP, PNNI, PIM, ARIS, SCPS, QNX, A/N, IPComp, SNP, Compaq-Pe, IPX-in-IP, VRRP, PGM, Any-0-Hop-Protocol, ENCAP, DDX, IATP, STP, SRP, UTI, SMP, SM, PTP, FIRE, CRTP, CRUDP, SSCOPMCE, IPLT, SPS, PIPE, SCTP, FC, RSVP-E2E-IGNORE, Mobility-Header, UDPLite ]`,
				},
				resource.Attribute{
					Name:        "protocolnumber",
					Description: `(Optional) Protocol to match against the protocol of an incoming IPv4 packet.`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) ID of the VLAN. The Citrix ADC applies the ACL rule only to the incoming packets of the specified VLAN. If you do not specify a VLAN ID, the appliance applies the ACL rule to the incoming packets on all VLANs.`,
				},
				resource.Attribute{
					Name:        "vxlan",
					Description: `(Optional) ID of the VXLAN. The Citrix ADC applies the ACL rule only to the incoming packets of the specified VXLAN. If you do not specify a VXLAN ID, the appliance applies the ACL rule to the incoming packets on all VXLANs.`,
				},
				resource.Attribute{
					Name:        "interface",
					Description: `(Optional) ID of an interface. The Citrix ADC applies the ACL rule only to the incoming packets from the specified interface. If you do not specify any value, the appliance applies the ACL rule to the incoming packets of all interfaces.`,
				},
				resource.Attribute{
					Name:        "established",
					Description: `(Optional) Allow only incoming TCP packets that have the ACK or RST bit set, if the action set for the ACL rule is ALLOW and these packets match the other conditions in the ACL rule.`,
				},
				resource.Attribute{
					Name:        "icmptype",
					Description: `(Optional) ICMP Message type to match against the message type of an incoming ICMP packet. For example, to block DESTINATION UNREACHABLE messages, you must specify 3 as the ICMP type. Note: This parameter can be specified only for the ICMP protocol.`,
				},
				resource.Attribute{
					Name:        "icmpcode",
					Description: `(Optional) Code of a particular ICMP message type to match against the ICMP code of an incoming ICMP packet. For example, to block DESTINATION HOST UNREACHABLE messages, specify 3 as the ICMP type and 1 as the ICMP code. If you set this parameter, you must set the ICMP Type parameter.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the extended ACL rule that determines the order in which it is evaluated relative to the other extended ACL rules. If you do not specify priorities while creating extended ACL rules, the ACL rules are evaluated in the order in which they are created.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enable or disable the extended ACL rule. After you apply the extended ACL rules, the Citrix ADC compares incoming packets against the enabled extended ACL rules. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "logstate",
					Description: `(Optional) Enable or disable logging of events related to the extended ACL rule. The log messages are stored in the configured syslog or auditlog server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ratelimit",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "dfdhash",
					Description: `(Optional) Specifies the type hashmethod to be applied, to steer the packet to the FP of the packet. Possible values: [ SIP-SPORT-DIP-DPORT, SIP, DIP, SIP-DIP, SIP-SPORT, DIP-DPORT ]`,
				},
				resource.Attribute{
					Name:        "stateful",
					Description: `(Optional) If stateful option is enabled, transparent sessions are created for the traffic hitting this ACL and not hitting any other features like LB, INAT etc. . Possible values: [ YES, NO ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsacl. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nsacl can be imported using its ` + "`" + `aclname` + "`" + ` attribute, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsacl.tf_nsacl tf_nsacl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsacl. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nsacl can be imported using its ` + "`" + `aclname` + "`" + ` attribute, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsacl.tf_nsacl tf_nsacl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsacl6",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsacl6 resource is used to create ACL6 entry resource.


`,
			Keywords: []string{
				"ns",
				"nsacl6",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "acl6name",
					Description: `(Required) Name for the ACL6 rule. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "acl6action",
					Description: `(Required) Action to perform on the incoming IPv6 packets that match the ACL6 rule. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "srcipv6",
					Description: `(Optional) IP address or range of IP addresses to match against the source IP address of an incoming IPv6 packet. In the command line interface, separate the range with a hyphen.`,
				},
				resource.Attribute{
					Name:        "srcipop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "srcipv6val",
					Description: `(Optional) Source IPv6 address (range).`,
				},
				resource.Attribute{
					Name:        "srcport",
					Description: `(Optional) Port number or range of port numbers to match against the source port number of an incoming IPv6 packet. In the command line interface, separate the range with a hyphen. For example: 40-90. Note: The destination port can be specified only for TCP and UDP protocols.`,
				},
				resource.Attribute{
					Name:        "srcportop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "srcportval",
					Description: `(Optional) Source port (range). Maximum length = 65535`,
				},
				resource.Attribute{
					Name:        "destipv6",
					Description: `(Optional) IP address or range of IP addresses to match against the destination IP address of an incoming IPv6 packet. In the command line interface, separate the range with a hyphen.`,
				},
				resource.Attribute{
					Name:        "destipop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "destipv6val",
					Description: `(Optional) Destination IPv6 address (range).`,
				},
				resource.Attribute{
					Name:        "destport",
					Description: `(Optional) Port number or range of port numbers to match against the destination port number of an incoming IPv6 packet. In the command line interface, separate the range with a hyphen. For example: 40-90. Note: The destination port can be specified only for TCP and UDP protocols.`,
				},
				resource.Attribute{
					Name:        "destportop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "destportval",
					Description: `(Optional) Destination port (range). Maximum length = 65535`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Time to expire this ACL6 (in seconds). Minimum value = 1 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "srcmac",
					Description: `(Optional) MAC address to match against the source MAC address of an incoming IPv6 packet.`,
				},
				resource.Attribute{
					Name:        "srcmacmask",
					Description: `(Optional) Used to define range of Source MAC address. It takes string of 0 and 1, 0s are for exact match and 1s for wildcard. For matching first 3 bytes of MAC address, srcMacMask value "000000111111". .`,
				},
				resource.Attribute{
					Name:        "protocol",
					Description: `(Optional) Protocol, identified by protocol name, to match against the protocol of an incoming IPv6 packet. Possible values: [ ICMPV6, TCP, UDP, ICMP, IGMP, EGP, IGP, ARGUS, RDP, RSVP, EIGRP, L2TP, ISIS, GGP, IPoverIP, ST, CBT, BBN-RCC-M, NVP-II, PUP, EMCON, XNET, CHAOS, MUX, DCN-MEAS, HMP, PRM, XNS-IDP, TRUNK-1, TRUNK-2, LEAF-1, LEAF-2, IRTP, ISO-TP4, NETBLT, MFE-NSP, MERIT-INP, SEP, 3PC, IDPR, XTP, DDP, IDPR-CMTP, TP++, IL, IPv6, SDRP, IPv6-Route, IPv6-Frag, IDRP, GRE, MHRP, BNA, ESP, AH, I-NLSP, SWIPE, NARP, MOBILE, TLSP, SKIP, IPv6-NoNx, IPv6-Opts, Any-Host-Internal-Protocol, CFTP, Any-Local-Network, SAT-EXPAK, KRYPTOLAN, RVD, IPPC, Any-Distributed-File-System, TFTP, VISA, IPCV, CPNX, CPHB, WSN, PVP, BR-SAT-MO, SUN-ND, WB-MON, WB-EXPAK, ISO-IP, VMTP, SECURE-VM, VINES, TTP, NSFNET-IG, DGP, TCF, OSPFIGP, Sprite-RP, LARP, MTP, AX.25, IPIP, MICP, SCC-SP, ETHERIP, Any-Private-Encryption-Scheme, GMTP, IFMP, PNNI, PIM, ARIS, SCPS, QNX, A/N, IPComp, SNP, Compaq-Pe, IPX-in-IP, VRRP, PGM, Any-0-Hop-Protocol, ENCAP, DDX, IATP, STP, SRP, UTI, SMP, SM, PTP, FIRE, CRTP, CRUDP, SSCOPMCE, IPLT, SPS, PIPE, SCTP, FC, RSVP-E2E-IGNORE, Mobility-Header, UDPLite ]`,
				},
				resource.Attribute{
					Name:        "protocolnumber",
					Description: `(Optional) Protocol, identified by protocol number, to match against the protocol of an incoming IPv6 packet. Minimum value = 1 Maximum value = 255`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) ID of the VLAN. The Citrix ADC applies the ACL6 rule only to the incoming packets on the specified VLAN. If you do not specify a VLAN ID, the appliance applies the ACL6 rule to the incoming packets on all VLANs. Minimum value = 1 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "vxlan",
					Description: `(Optional) ID of the VXLAN. The Citrix ADC applies the ACL6 rule only to the incoming packets on the specified VXLAN. If you do not specify a VXLAN ID, the appliance applies the ACL6 rule to the incoming packets on all VXLANs. Minimum value = 1 Maximum value = 16777215`,
				},
				resource.Attribute{
					Name:        "Interface",
					Description: `(Optional) ID of an interface. The Citrix ADC applies the ACL6 rule only to the incoming packets from the specified interface. If you do not specify any value, the appliance applies the ACL6 rule to the incoming packets from all interfaces.`,
				},
				resource.Attribute{
					Name:        "established",
					Description: `(Optional) Allow only incoming TCP packets that have the ACK or RST bit set if the action set for the ACL6 rule is ALLOW and these packets match the other conditions in the ACL6 rule.`,
				},
				resource.Attribute{
					Name:        "icmptype",
					Description: `(Optional) ICMP Message type to match against the message type of an incoming IPv6 ICMP packet. For example, to block DESTINATION UNREACHABLE messages, you must specify 3 as the ICMP type. Note: This parameter can be specified only for the ICMP protocol. Minimum value = 0 Maximum value = 65536`,
				},
				resource.Attribute{
					Name:        "icmpcode",
					Description: `(Optional) Code of a particular ICMP message type to match against the ICMP code of an incoming IPv6 ICMP packet. For example, to block DESTINATION HOST UNREACHABLE messages, specify 3 as the ICMP type and 1 as the ICMP code. If you set this parameter, you must set the ICMP Type parameter. Minimum value = 0 Maximum value = 65536`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the ACL6 rule, which determines the order in which it is evaluated relative to the other ACL6 rules. If you do not specify priorities while creating ACL6 rules, the ACL6 rules are evaluated in the order in which they are created. Minimum value = 1 Maximum value = 81920`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) State of the ACL6. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of the acl6 ,default will be CLASSIC. Available options as follows:`,
				},
				resource.Attribute{
					Name:        "dfdhash",
					Description: `(Optional) Specifies the type of hashmethod to be applied, to steer the packet to the FP of the packet. Possible values: [ SIP-SPORT-DIP-DPORT, SIP, DIP, SIP-DIP, SIP-SPORT, DIP-DPORT ]`,
				},
				resource.Attribute{
					Name:        "dfdprefix",
					Description: `(Optional) hashprefix to be applied to SIP/DIP to generate rsshash FP.eg 128 => hash calculated on the complete IP. Minimum value = 1 Maximum value = 128`,
				},
				resource.Attribute{
					Name:        "stateful",
					Description: `(Optional) If stateful option is enabled, transparent sessions are created for the traffic hitting this ACL6 and not hitting any other features like LB, INAT etc. . Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "logstate",
					Description: `(Optional) Enable or disable logging of events related to the ACL6 rule. The log messages are stored in the configured syslog or auditlog server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ratelimit",
					Description: `(Optional) Maximum number of log messages to be generated per second. If you set this parameter, you must enable the Log State parameter. Minimum value = 1 Maximum value = 10000`,
				},
				resource.Attribute{
					Name:        "aclaction",
					Description: `(Optional) Action associated with the ACL6. Possible values: [ BRIDGE, DENY, ALLOW ]`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the ACL6 rule. Must begin with an ASCII alphabetic or underscore \(_\) character, and must contain only ASCII alphanumeric, underscore, hash \(\#\), period \(.\), space, colon \(:\), at \(@\), equals \(=\), and hyphen \(-\) characters. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsacl6. It has the same value as the ` + "`" + `acl6name` + "`" + ` attribute. ## Import A nsacl6 can be imported using its acl6name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsacl6.tf_nsacl6 tf_nsacl6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsacl6. It has the same value as the ` + "`" + `acl6name` + "`" + ` attribute. ## Import A nsacl6 can be imported using its acl6name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsacl6.tf_nsacl6 tf_nsacl6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsacls",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsacls resource is used to create a set of ADC acls.


`,
			Keywords: []string{
				"ns",
				"nsacls",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "aclsname",
					Description: `(Optional) Name for the acls resource.`,
				},
				resource.Attribute{
					Name:        "acl",
					Description: `(Optional) A set of block defining acls. The acl block supports the following:`,
				},
				resource.Attribute{
					Name:        "aclname",
					Description: `(Required) Name for the extended ACL rule.`,
				},
				resource.Attribute{
					Name:        "aclaction",
					Description: `(Optional) Action to perform on incoming IPv4 packets that match the extended ACL rule. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "srcipop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "srcipval",
					Description: `(Optional) IP address or range of IP addresses to match against the source IP address of an incoming IPv4 packet. In the command line interface, separate the range with a hyphen. For example:10.102.29.30-10.102.29.189.`,
				},
				resource.Attribute{
					Name:        "srcportop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "srcportval",
					Description: `(Optional) Port number or range of port numbers to match against the source port number of an incoming IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 40-90.`,
				},
				resource.Attribute{
					Name:        "destipop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "destipval",
					Description: `(Optional) IP address or range of IP addresses to match against the destination IP address of an incoming IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 10.102.29.30-10.102.29.189.`,
				},
				resource.Attribute{
					Name:        "destportop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "destportval",
					Description: `(Optional) Port number or range of port numbers to match against the destination port number of an incoming IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 40-90. Note: The destination port can be specified only for TCP and UDP protocols.`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Number of seconds, in multiples of four, after which the extended ACL rule expires. If you do not want the extended ACL rule to expire, do not specify a TTL value.`,
				},
				resource.Attribute{
					Name:        "srcmac",
					Description: `(Optional) MAC address to match against the source MAC address of an incoming IPv4 packet.`,
				},
				resource.Attribute{
					Name:        "protocol",
					Description: `(Optional) Protocol to match against the protocol of an incoming IPv4 packet. Possible values: [ ICMP, IGMP, TCP, EGP, IGP, ARGUS, UDP, RDP, RSVP, EIGRP, L2TP, ISIS, GGP, IPoverIP, ST, CBT, BBN-RCC-M, NVP-II, PUP, EMCON, XNET, CHAOS, MUX, DCN-MEAS, HMP, PRM, XNS-IDP, TRUNK-1, TRUNK-2, LEAF-1, LEAF-2, IRTP, ISO-TP4, NETBLT, MFE-NSP, MERIT-INP, SEP, 3PC, IDPR, XTP, DDP, IDPR-CMTP, TP++, IL, IPv6, SDRP, IPv6-Route, IPv6-Frag, IDRP, GRE, MHRP, BNA, ESP, AH, I-NLSP, SWIPE, NARP, MOBILE, TLSP, SKIP, ICMPV6, IPv6-NoNx, IPv6-Opts, Any-Host-Internal-Protocol, CFTP, Any-Local-Network, SAT-EXPAK, KRYPTOLAN, RVD, IPPC, Any-Distributed-File-System, TFTP, VISA, IPCV, CPNX, CPHB, WSN, PVP, BR-SAT-MO, SUN-ND, WB-MON, WB-EXPAK, ISO-IP, VMTP, SECURE-VM, VINES, TTP, NSFNET-IG, DGP, TCF, OSPFIGP, Sprite-RP, LARP, MTP, AX.25, IPIP, MICP, SCC-SP, ETHERIP, Any-Private-Encryption-Scheme, GMTP, IFMP, PNNI, PIM, ARIS, SCPS, QNX, A/N, IPComp, SNP, Compaq-Pe, IPX-in-IP, VRRP, PGM, Any-0-Hop-Protocol, ENCAP, DDX, IATP, STP, SRP, UTI, SMP, SM, PTP, FIRE, CRTP, CRUDP, SSCOPMCE, IPLT, SPS, PIPE, SCTP, FC, RSVP-E2E-IGNORE, Mobility-Header, UDPLite ]`,
				},
				resource.Attribute{
					Name:        "protocolnumber",
					Description: `(Optional) Protocol to match against the protocol of an incoming IPv4 packet.`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) ID of the VLAN. The Citrix ADC applies the ACL rule only to the incoming packets of the specified VLAN. If you do not specify a VLAN ID, the appliance applies the ACL rule to the incoming packets on all VLANs.`,
				},
				resource.Attribute{
					Name:        "interface",
					Description: `(Optional) ID of an interface. The Citrix ADC applies the ACL rule only to the incoming packets from the specified interface. If you do not specify any value, the appliance applies the ACL rule to the incoming packets of all interfaces.`,
				},
				resource.Attribute{
					Name:        "established",
					Description: `(Optional) Allow only incoming TCP packets that have the ACK or RST bit set, if the action set for the ACL rule is ALLOW and these packets match the other conditions in the ACL rule.`,
				},
				resource.Attribute{
					Name:        "icmptype",
					Description: `(Optional) ICMP Message type to match against the message type of an incoming ICMP packet. For example, to block DESTINATION UNREACHABLE messages, you must specify 3 as the ICMP type. Note: This parameter can be specified only for the ICMP protocol.`,
				},
				resource.Attribute{
					Name:        "icmpcode",
					Description: `(Optional) Code of a particular ICMP message type to match against the ICMP code of an incoming ICMP packet. For example, to block DESTINATION HOST UNREACHABLE messages, specify 3 as the ICMP type and 1 as the ICMP code. If you set this parameter, you must set the ICMP Type parameter.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the extended ACL rule that determines the order in which it is evaluated relative to the other extended ACL rules. If you do not specify priorities while creating extended ACL rules, the ACL rules are evaluated in the order in which they are created.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enable or disable the extended ACL rule. After you apply the extended ACL rules, the Citrix ADC compares incoming packets against the enabled extended ACL rules. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "logstate",
					Description: `(Optional) Enable or disable logging of events related to the extended ACL rule. The log messages are stored in the configured syslog or auditlog server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ratelimit",
					Description: `(Optional) ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsacls. It has the same value as the ` + "`" + `aclsname` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsacls. It has the same value as the ` + "`" + `aclsname` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsappflowcollector",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsappflowcollector resource is used to create appflowCollector resource.


`,
			Keywords: []string{
				"ns",
				"nsappflowcollector",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the AppFlow collector. Minimum length = 1 Maximum length = 127`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) The IPv4 address of the AppFlow collector.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) The UDP port on which the AppFlow collector is listening. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsappflowcollector. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nsappflowcollector can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsappflowcollector.tf_appflowcollector tf_appflowcollector ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsappflowcollector. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nsappflowcollector can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsappflowcollector.tf_appflowcollector tf_appflowcollector ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsassignment",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsassignment resource is used to create assignment resource.


`,
			Keywords: []string{
				"ns",
				"nsassignment",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the assignment. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Can be changed after the assignment is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my assignment" or my assignment).`,
				},
				resource.Attribute{
					Name:        "variable",
					Description: `(Required) Left hand side of the assigment, of the form $variable-name (for a singleton variabled) or $variable-name[key-expression], where key-expression is an expression that evaluates to a text string and provides the key to select a map entry.`,
				},
				resource.Attribute{
					Name:        "set",
					Description: `(Optional) Right hand side of the assignment. The expression is evaluated and assigned to the left hand variable.`,
				},
				resource.Attribute{
					Name:        "Add",
					Description: `(Optional) Right hand side of the assignment. The expression is evaluated and added to the left hand variable.`,
				},
				resource.Attribute{
					Name:        "sub",
					Description: `(Optional) Right hand side of the assignment. The expression is evaluated and subtracted from the left hand variable.`,
				},
				resource.Attribute{
					Name:        "append",
					Description: `(Optional) Right hand side of the assignment. The expression is evaluated and appended to the left hand variable.`,
				},
				resource.Attribute{
					Name:        "clear",
					Description: `(Optional) Clear the variable value. Deallocates a text value, and for a map, the text key.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comment. Can be used to preserve information about this rewrite action.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the assignment. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Can be changed after the rewrite policy is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my assignment" or my assignment). Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsassignment. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nsassignment can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsassignment.tf_nsassignment tf_nsassignment ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsassignment. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nsassignment can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsassignment.tf_nsassignment tf_nsassignment ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nscapacity",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nscapacity resource is used to apply licenses to a target ADC from a license server.


`,
			Keywords: []string{
				"ns",
				"nscapacity",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "bandwidth",
					Description: `(Optional) System bandwidth limit.`,
				},
				resource.Attribute{
					Name:        "platform",
					Description: `(Optional) appliance platform type. Possible values: [ VS10, VE10, VP10, VS25, VE25, VP25, VS200, VE200, VP200, VS1000, VE1000, VP1000, VS3000, VE3000, VP3000, VS5000, VE5000, VP5000, VS8000, VE8000, VP8000, VS10000, VE10000, VP10000, VS15000, VE15000, VP15000, VS25000, VE25000, VP25000, VS40000, VE40000, VP40000, VS100000, VE100000, VP100000, CP1000 ]`,
				},
				resource.Attribute{
					Name:        "vcpu",
					Description: `(Optional) licensed using vcpu pool.`,
				},
				resource.Attribute{
					Name:        "edition",
					Description: `(Optional) Product edition. Possible values: [ Standard, Enterprise, Platinum ]`,
				},
				resource.Attribute{
					Name:        "unit",
					Description: `(Optional) Bandwidth unit. Possible values: [ Gbps, Mbps ]`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nscapacity. It is a unique string prefixed with ` + "`" + `tf-nscapacity-` + "`" + ` ## Import A nscapacity can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nscapacity.tf_pooled tf-nscapacity-<some_random_string> ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nscapacity. It is a unique string prefixed with ` + "`" + `tf-nscapacity-` + "`" + ` ## Import A nscapacity can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nscapacity.tf_pooled tf-nscapacity-<some_random_string> ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsconfig_clear",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsconfig_clear resource is used to apply the clear operation for ns config.


`,
			Keywords: []string{
				"ns",
				"nsconfig",
				"clear",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "force",
					Description: `(Required) Configurations will be cleared without prompting for confirmation.`,
				},
				resource.Attribute{
					Name:        "level",
					Description: `(Required) Types of configurations to be cleared.`,
				},
				resource.Attribute{
					Name:        "rbaconfig",
					Description: `(Required) RBA configurations and TACACS policies bound to system global will not be cleared if RBA is set to NO.This option is applicable only for BASIC level of clear configuration.Default is YES, which will clear rba configurations. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "timestamp",
					Description: `(Required) the timestamp of the operation. Can be any string. Used to force the operation again if all other attributes have remained the same. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsconfig_clear. It has the same value as the ` + "`" + `timestamp` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsconfig_clear. It has the same value as the ` + "`" + `timestamp` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsconfig_save",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsconfig_save resource is used to apply the save operation for ns config.


`,
			Keywords: []string{
				"ns",
				"nsconfig",
				"save",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "all",
					Description: `(Optional) Use this option to do saveconfig for all partitions.`,
				},
				resource.Attribute{
					Name:        "timestamp",
					Description: `(Required) the timestamp of the operation. Can be any string. Used to force the operation again if all other attributes have remained the same.`,
				},
				resource.Attribute{
					Name:        "concurrent_save_ok",
					Description: `(Optional) Boolean value signifying if a concurrent save error should be toleratted. When set to ` + "`" + `true` + "`" + ` a process of retries will take place waiting for the resource to return no error.`,
				},
				resource.Attribute{
					Name:        "concurrent_save_retries",
					Description: `(Optional) Number of retries after which we throw an error for the concurrent save error code.`,
				},
				resource.Attribute{
					Name:        "concurrent_save_timeout",
					Description: `(Optional) Time period after which we throw an error for the concurrent save error code.`,
				},
				resource.Attribute{
					Name:        "concurrent_save_interval",
					Description: `(Optional) Time period between tries to save the resource when processing the save error workflow.`,
				},
				resource.Attribute{
					Name:        "save_on_destroy",
					Description: `(Optional) Boolean flag. If set to ` + "`" + `true` + "`" + ` then the save configuration operation will be applied during the destroy operation. Defaults to ` + "`" + `false` + "`" + `. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsconfig_save. It has the same value as the ` + "`" + `timestamp` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsconfig_save. It has the same value as the ` + "`" + `timestamp` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsconfig_update",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsconfig_update resource is used to apply the update operation for ns config.


`,
			Keywords: []string{
				"ns",
				"nsconfig",
				"update",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Optional) IP address of the Citrix ADC. Commonly referred to as NSIP address. This parameter is mandatory to bring up the appliance.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) Netmask corresponding to the IP address. This parameter is mandatory to bring up the appliance.`,
				},
				resource.Attribute{
					Name:        "nsvlan",
					Description: `(Optional) VLAN (NSVLAN) for the subnet on which the IP address resides.`,
				},
				resource.Attribute{
					Name:        "ifnum",
					Description: `(Optional) Interfaces of the appliances that must be bound to the NSVLAN.`,
				},
				resource.Attribute{
					Name:        "tagged",
					Description: `(Optional) Specifies that the interfaces will be added as 802.1q tagged interfaces. Packets sent on these interface on this VLAN will have an additional 4-byte 802.1q tag which identifies the VLAN. To use 802.1q tagging, the switch connected to the appliance's interfaces must also be configured for tagging. Possible values: [ YES, NO ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsconfig_update. It is a random string prefixed with "tf-nsconfig-update"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsconfig_update. It is a random string prefixed with "tf-nsconfig-update"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsconsoleloginprompt",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsconsoleloginprompt resource is used to create console prompt resource.


`,
			Keywords: []string{
				"ns",
				"nsconsoleloginprompt",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "promptstring",
					Description: `(Required) Console login prompt string. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsconsoleloginprompt. It is a unique string prefixed with "tf-nsconsoleloginprompt-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsconsoleloginprompt. It is a unique string prefixed with "tf-nsconsoleloginprompt-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nscqaparam",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nscqaparam resource is used to update nscqaparam.


`,
			Keywords: []string{
				"ns",
				"nscqaparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "harqretxdelay",
					Description: `(Optional) HARQ retransmission delay (in ms). Minimum value = 1 Maximum value = 64000`,
				},
				resource.Attribute{
					Name:        "net1label",
					Description: `(Optional) Name of the network label. Maximum length = 15`,
				},
				resource.Attribute{
					Name:        "minrttnet1",
					Description: `(Optional) MIN RTT (in ms) for the first network. Minimum value = 0 Maximum value = 6400`,
				},
				resource.Attribute{
					Name:        "lr1coeflist",
					Description: `(Optional) coefficients values for Label1.`,
				},
				resource.Attribute{
					Name:        "lr1probthresh",
					Description: `(Optional) Probability threshold values for LR model to differentiate between NET1 and reset(NET2 and NET3). Minimum value = 0 Maximum value = 1`,
				},
				resource.Attribute{
					Name:        "net1cclscale",
					Description: `(Optional) Three congestion level scores limits corresponding to None, Low, Medium.`,
				},
				resource.Attribute{
					Name:        "net1csqscale",
					Description: `(Optional) Three signal quality level scores limits corresponding to Excellent, Good, Fair.`,
				},
				resource.Attribute{
					Name:        "net1logcoef",
					Description: `(Optional) Connection quality ranking Log coefficients of network 1.`,
				},
				resource.Attribute{
					Name:        "net2label",
					Description: `(Optional) Name of the network label 2. Maximum length = 15`,
				},
				resource.Attribute{
					Name:        "minrttnet2",
					Description: `(Optional) MIN RTT (in ms) for the second network. Minimum value = 0 Maximum value = 6400`,
				},
				resource.Attribute{
					Name:        "lr2coeflist",
					Description: `(Optional) coefficients values for Label 2.`,
				},
				resource.Attribute{
					Name:        "lr2probthresh",
					Description: `(Optional) Probability threshold values for LR model to differentiate between NET2 and NET3. Minimum value = 0 Maximum value = 1`,
				},
				resource.Attribute{
					Name:        "net2cclscale",
					Description: `(Optional) Three congestion level scores limits corresponding to None, Low, Medium.`,
				},
				resource.Attribute{
					Name:        "net2csqscale",
					Description: `(Optional) Three signal quality level scores limits corresponding to Excellent, Good, Fair.`,
				},
				resource.Attribute{
					Name:        "net2logcoef",
					Description: `(Optional) Connnection quality ranking Log coefficients of network 2.`,
				},
				resource.Attribute{
					Name:        "net3label",
					Description: `(Optional) Name of the network label 3. Maximum length = 15`,
				},
				resource.Attribute{
					Name:        "minrttnet3",
					Description: `(Optional) MIN RTT (in ms) for the third network. Minimum value = 0 Maximum value = 6400`,
				},
				resource.Attribute{
					Name:        "net3cclscale",
					Description: `(Optional) Three congestion level scores limits corresponding to None, Low, Medium.`,
				},
				resource.Attribute{
					Name:        "net3csqscale",
					Description: `(Optional) Three signal quality level scores limits corresponding to Excellent, Good, Fair.`,
				},
				resource.Attribute{
					Name:        "net3logcoef",
					Description: `(Optional) Connection quality ranking Log coefficients of network 3. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nscqaparam. It is a unique string prefixed with ` + "`" + `tf-nscqaparam-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nscqaparam. It is a unique string prefixed with ` + "`" + `tf-nscqaparam-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsdhcpparams",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsdhcpparams resource is used to configure DHCP parameters resource.


`,
			Keywords: []string{
				"ns",
				"nsdhcpparams",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "dhcpclient",
					Description: `(Optional) Enables DHCP client to acquire IP address from the DHCP server in the next boot. When set to OFF, disables the DHCP client in the next boot. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "saveroute",
					Description: `(Optional) DHCP acquired routes are saved on the Citrix ADC. Possible values: [ on, off ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsdhcpparams. It is a unique string prefixed with "tf-nsdhcpparams-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsdhcpparams. It is a unique string prefixed with "tf-nsdhcpparams-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsdiameter",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsdiameter resource is used to create Diameter Parameters resource.


`,
			Keywords: []string{
				"ns",
				"nsdiameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "identity",
					Description: `(Optional) DiameterIdentity to be used by NS. DiameterIdentity is used to identify a Diameter node uniquely. Before setting up diameter configuration, Citrix ADC (as a Diameter node) MUST be assigned a unique DiameterIdentity. example => set ns diameter -identity netscaler.com Now whenever Citrix ADC needs to use identity in diameter messages. It will use 'netscaler.com' as Origin-Host AVP as defined in RFC3588 . Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "realm",
					Description: `(Optional) Diameter Realm to be used by NS. example => set ns diameter -realm com Now whenever Citrix ADC system needs to use realm in diameter messages. It will use 'com' as Origin-Realm AVP as defined in RFC3588 . Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "serverclosepropagation",
					Description: `(Optional) when a Server connection goes down, whether to close the corresponding client connection if there were requests pending on the server. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "ownernode",
					Description: `(Optional) ID of the cluster node for which the diameter id is set, can be configured only through CLIP. Minimum value = 0 Maximum value = 31 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsdiameter. It is a unique string prefixed with "tf-nsdiameter-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsdiameter. It is a unique string prefixed with "tf-nsdiameter-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsencryptionkey",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsencryptionkey resource is used to create encryption key resource.


`,
			Keywords: []string{
				"ns",
				"nsencryptionkey",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Key name. This follows the same syntax rules as other expression entity names: It must begin with an alpha character (A-Z or a-z) or an underscore (_). The rest of the characters must be alpha, numeric (0-9) or underscores. It cannot be re or xp (reserved for regular and XPath expressions). It cannot be an expression reserved word (e.g. SYS or HTTP). It cannot be used for an existing expression object (HTTP callout, patset, dataset, stringmap, or named expression). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "method",
					Description: `(Required) Cipher method to be used to encrypt and decrypt content. NONE - no encryption or decryption is performed The output of ENCRYPT() and DECRYPT() is the same as the input. RC4 - the RC4 stream cipher with a 128 bit (16 byte) key; RC4 is now considered insecure and should only be used if required by existing applciations. DES[-<mode>] - the Data Encryption Standard (DES) block cipher with a 64-bit (8 byte) key, with 56 data bits and 8 parity bits. DES is considered less secure than DES3 or AES so it should only be used if required by an existing applicastion. The optional mode is described below; DES without a mode is equivalent to DES-CBC. DES3[-<mode>] - the Triple Data Encryption Standard (DES) block cipher with a 192-bit (24 byte) key. The optional mode is described below; DES3 without a mode is equivalent to DES3-CBC. AES<keysize>[-<mode>] - the Advanced Encryption Standard block cipher, available with 128 bit (16 byte), 192 bit (24 byte), and 256 bit (32 byte) keys. The optional mode is described below; AES<keysize> without a mode is equivalent to AES<keysize>-CBC. For a block cipher, the <mode> specifies how multiple blocks of plaintext are encrypted and how the Initialization Vector (IV) is used. Choices are CBC (Cipher Block Chaining) - Each block of plaintext is XORed with the previous ciphertext block, or IV for the first block, before being encrypted. Padding is required if the plaintext is not a multiple of the cipher block size. CFB (Cipher Feedback) - The previous ciphertext block, or the IV for the first block, is encrypted and the output is XORed with the current plaintext block to create the current ciphertext block. The 128-bit version of CFB is provided. Padding is not required. OFB (Output Feedback) - A keystream is generated by applying the cipher successfully to the IV and XORing the keystream blocks with the plaintext. Padding is not required. ECB (Electronic Codebook) - Each block of plaintext is independently encrypted. An IV is not used. Padding is required. This mode is considered less secure than the other modes because the same plaintext always produces the same encrypted text and should only be used if required by an existing application. Possible values: [ NONE, RC4, DES3, AES128, AES192, AES256, DES, DES-CBC, DES-CFB, DES-OFB, DES-ECB, DES3-CBC, DES3-CFB, DES3-OFB, DES3-ECB, AES128-CBC, AES128-CFB, AES128-OFB, AES128-ECB, AES192-CBC, AES192-CFB, AES192-OFB, AES192-ECB, AES256-CBC, AES256-CFB, AES256-OFB, AES256-ECB ]`,
				},
				resource.Attribute{
					Name:        "keyvalue",
					Description: `(Optional) The hex-encoded key value. The length is determined by the cipher method: RC4 - 16 bytes DES - 8 bytes (all modes) DES3 - 24 bytes (all modes) AES128 - 16 bytes (all modes) AES192 - 24 bytes (all modes) AES256 - 32 bytes (all modes) Note that the keyValue will be encrypted when it it is saved. There is a special key value AUTO which generates a new random key for the specified method. This kind of key is intended for use cases where the NetScaler both encrypts and decrypts the same data, such an HTTP header.`,
				},
				resource.Attribute{
					Name:        "padding",
					Description: `(Optional) Enables or disables the padding of plaintext to meet the block size requirements of block ciphers: ON - For encryption, PKCS5/7 padding is used, which appends n bytes of value n on the end of the plaintext to bring it to the cipher block lnegth. If the plaintext length is alraady a multiple of the block length, an additional block with bytes of value block_length will be added. For decryption, ISO 10126 padding is accepted, which expects the last byte of the block to be the number of added pad bytes. Note that this accepts PKCS5/7 padding, as well as ANSI_X923 padding. Padding ON is the default for the ECB and CBD modes. OFF - No padding. An Undef error will occur with the ECB or CBC modes if the plaintext length is not a multitple of the cipher block size. This can be used with the CFB and OFB modes, and with the ECB and CBC modes if the plaintext will always be an integral number of blocks, or if custom padding is implemented using a policy extension function. Padding OFf is the default for CFB and OFB modes. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "iv",
					Description: `(Optional) The initalization voector (IV) for a block cipher, one block of data used to initialize the encryption. The best practice is to not specify an IV, in which case a new random IV will be generated for each encryption. The format must be iv_data or keyid_iv_data to include the generated IV in the encrypted data. The IV should only be specified if it cannot be included in the encrypted data. The IV length is the cipher block size: RC4 - not used (error if IV is specified) DES - 8 bytes (all modes) DES3 - 8 bytes (all modes) AES128 - 16 bytes (all modes) AES192 - 16 bytes (all modes) AES256 - 16 bytes (all modes).`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comments associated with this encryption key. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsencryptionkey. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nsencryptionkey can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsencryptionkey.tf_encryptionkey tf_encryptionkey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsencryptionkey. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nsencryptionkey can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsencryptionkey.tf_encryptionkey tf_encryptionkey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsencryptionparams",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsencryptionparams resource is used to create nsencryptionparams.


`,
			Keywords: []string{
				"ns",
				"nsencryptionparams",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "method",
					Description: `(Required) Cipher method (and key length) to be used to encrypt and decrypt content. The default value is AES256. Possible values: [ NONE, RC4, DES3, AES128, AES192, AES256, DES, DES-CBC, DES-CFB, DES-OFB, DES-ECB, DES3-CBC, DES3-CFB, DES3-OFB, DES3-ECB, AES128-CBC, AES128-CFB, AES128-OFB, AES128-ECB, AES192-CBC, AES192-CFB, AES192-OFB, AES192-ECB, AES256-CBC, AES256-CFB, AES256-OFB, AES256-ECB ]`,
				},
				resource.Attribute{
					Name:        "keyvalue",
					Description: `(Required) The base64-encoded key generation number, method, and key value. Note:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsencryptionparams. It is a unique string prefixed with ` + "`" + `tf-nsencryptionparams-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsencryptionparams. It is a unique string prefixed with ` + "`" + `tf-nsencryptionparams-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsfeature",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsfeature resource is used to enable or disable ADC features.


`,
			Keywords: []string{
				"ns",
				"nsfeature",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "wl",
					Description: `(Optional) Web Logging.`,
				},
				resource.Attribute{
					Name:        "sp",
					Description: `(Optional) Surge Protection.`,
				},
				resource.Attribute{
					Name:        "lb",
					Description: `(Optional) Load Balancing.`,
				},
				resource.Attribute{
					Name:        "cs",
					Description: `(Optional) Content Switching.`,
				},
				resource.Attribute{
					Name:        "cr",
					Description: `(Optional) Cache Redirect.`,
				},
				resource.Attribute{
					Name:        "cmp",
					Description: `(Optional) Compression.`,
				},
				resource.Attribute{
					Name:        "pq",
					Description: `(Optional) Priority Queuing.`,
				},
				resource.Attribute{
					Name:        "ssl",
					Description: `(Optional) Secure Sockets Layer.`,
				},
				resource.Attribute{
					Name:        "gslb",
					Description: `(Optional) Global Server Load Balancing.`,
				},
				resource.Attribute{
					Name:        "hdosp",
					Description: `(Optional) HTTP DOS protection.`,
				},
				resource.Attribute{
					Name:        "cf",
					Description: `(Optional) Content Filter.`,
				},
				resource.Attribute{
					Name:        "ic",
					Description: `(Optional) Integrated Caching.`,
				},
				resource.Attribute{
					Name:        "sslvpn",
					Description: `(Optional) SSL VPN.`,
				},
				resource.Attribute{
					Name:        "aaa",
					Description: `(Optional) AAA.`,
				},
				resource.Attribute{
					Name:        "ospf",
					Description: `(Optional) OSPF Routing.`,
				},
				resource.Attribute{
					Name:        "rip",
					Description: `(Optional) RIP Routing.`,
				},
				resource.Attribute{
					Name:        "bgp",
					Description: `(Optional) BGP Routing.`,
				},
				resource.Attribute{
					Name:        "rewrite",
					Description: `(Optional) Rewrite.`,
				},
				resource.Attribute{
					Name:        "ipv6pt",
					Description: `(Optional) IPv6 protocol translation.`,
				},
				resource.Attribute{
					Name:        "appfw",
					Description: `(Optional) Application Firewall.`,
				},
				resource.Attribute{
					Name:        "responder",
					Description: `(Optional) Responder.`,
				},
				resource.Attribute{
					Name:        "htmlinjection",
					Description: `(Optional) HTML Injection.`,
				},
				resource.Attribute{
					Name:        "push",
					Description: `(Optional) Citrix ADC Push.`,
				},
				resource.Attribute{
					Name:        "appflow",
					Description: `(Optional) AppFlow.`,
				},
				resource.Attribute{
					Name:        "cloudbridge",
					Description: `(Optional) CloudBridge.`,
				},
				resource.Attribute{
					Name:        "isis",
					Description: `(Optional) ISIS Routing.`,
				},
				resource.Attribute{
					Name:        "ch",
					Description: `(Optional) Call Home.`,
				},
				resource.Attribute{
					Name:        "appqoe",
					Description: `(Optional) AppQoS.`,
				},
				resource.Attribute{
					Name:        "contentaccelerator",
					Description: `(Optional) Transparent Integrated Caching.`,
				},
				resource.Attribute{
					Name:        "rise",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "feo",
					Description: `(Optional) Optimize Web content (HTML, CSS, JavaScript, images).`,
				},
				resource.Attribute{
					Name:        "lsn",
					Description: `(Optional) Large Scale NAT.`,
				},
				resource.Attribute{
					Name:        "rdpproxy",
					Description: `(Optional) RDPPROXY.`,
				},
				resource.Attribute{
					Name:        "rep",
					Description: `(Optional) Reputation Services.`,
				},
				resource.Attribute{
					Name:        "urlfiltering",
					Description: `(Optional) URL Filtering.`,
				},
				resource.Attribute{
					Name:        "videooptimization",
					Description: `(Optional) Video Optimization.`,
				},
				resource.Attribute{
					Name:        "forwardproxy",
					Description: `(Optional) Forward Proxy.`,
				},
				resource.Attribute{
					Name:        "sslinterception",
					Description: `(Optional) SSL Interception.`,
				},
				resource.Attribute{
					Name:        "adaptivetcp",
					Description: `(Optional) Adaptive TCP.`,
				},
				resource.Attribute{
					Name:        "cqa",
					Description: `(Optional) Connection Quality Analytics.`,
				},
				resource.Attribute{
					Name:        "ci",
					Description: `(Optional) Content Inspection.`,
				},
				resource.Attribute{
					Name:        "bot",
					Description: `(Optional) Bot Management.`,
				},
				resource.Attribute{
					Name:        "apigateway",
					Description: `(Optional) API Gateway. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsfeature resource. It is a random string prefixed with "tf-nsfeature-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsfeature resource. It is a random string prefixed with "tf-nsfeature-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nshmackey",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nshmackey resource is used to create HMAC key resource.


`,
			Keywords: []string{
				"ns",
				"nshmackey",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Key name. This follows the same syntax rules as other expression entity names: It must begin with an alpha character (A-Z or a-z) or an underscore (_). The rest of the characters must be alpha, numeric (0-9) or underscores. It cannot be re or xp (reserved for regular and XPath expressions). It cannot be an expression reserved word (e.g. SYS or HTTP). It cannot be used for an existing expression object (HTTP callout, patset, dataset, stringmap, or named expression). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "digest",
					Description: `(Optional) Digest (hash) function to be used in the HMAC computation. Possible values: [ MD2, MD4, MD5, SHA1, SHA224, SHA256, SHA384, SHA512 ]`,
				},
				resource.Attribute{
					Name:        "keyvalue",
					Description: `(Optional) The hex-encoded key to be used in the HMAC computation. The key can be any length (up to a Citrix ADC-imposed maximum of 255 bytes). If the length is less than the digest block size, it will be zero padded up to the block size. If it is greater than the block size, it will be hashed using the digest function to the block size. The block size for each digest is: MD2 - 16 bytes MD4 - 16 bytes MD5 - 16 bytes SHA1 - 20 bytes SHA224 - 28 bytes SHA256 - 32 bytes SHA384 - 48 bytes SHA512 - 64 bytes Note that the key will be encrypted when it it is saved There is a special key value AUTO which generates a new random key for the specified digest. This kind of key is intended for use cases where the NetScaler both generates and verifies an HMAC on the same data.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comments associated with this encryption key. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nshmackey. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nshmackey can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nshmackey.tf_nshmackey tf_nshmackey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nshmackey. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nshmackey can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nshmackey.tf_nshmackey tf_nshmackey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nshostname",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nshostname resource is used to create nshostname.


`,
			Keywords: []string{
				"ns",
				"nshostname",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "hostname",
					Description: `(Required) Host name for the Citrix ADC. Minimum length = 1 Maximum length = 255`,
				},
				resource.Attribute{
					Name:        "ownernode",
					Description: `(Optional) ID of the cluster node for which you are setting the hostname. Can be configured only through the cluster IP address. Minimum value = 0 Maximum value = 31 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nshostname. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nshostname. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nshttpparam",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nshttpparam resource is used to create HTTP parameter resource.


`,
			Keywords: []string{
				"ns",
				"nshttpparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "dropinvalreqs",
					Description: `(Optional) Drop invalid HTTP requests or responses. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "markhttp09inval",
					Description: `(Optional) Mark HTTP/0.9 requests as invalid. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "markconnreqinval",
					Description: `(Optional) Mark CONNECT requests as invalid. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "insnssrvrhdr",
					Description: `(Optional) Enable or disable Citrix ADC server header insertion for Citrix ADC generated HTTP responses. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "nssrvrhdr",
					Description: `(Optional) The server header value to be inserted. If no explicit header is specified then NSBUILD.RELEASE is used as default server header. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "logerrresp",
					Description: `(Optional) Server header value to be inserted. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "conmultiplex",
					Description: `(Optional) Reuse server connections for requests from more than one client connections. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "maxreusepool",
					Description: `(Optional) Maximum limit on the number of connections, from the Citrix ADC to a particular server that are kept in the reuse pool. This setting is helpful for optimal memory utilization and for reducing the idle connections to the server just after the peak time. Minimum value = 0 Maximum value = 360000`,
				},
				resource.Attribute{
					Name:        "http2serverside",
					Description: `(Optional) Enable/Disable HTTP/2 on server side. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "ignoreconnectcodingscheme",
					Description: `(Optional) Ignore Coding scheme in CONNECT request. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nshttpparam. It is a unique string prefixed with "tf-nshttpparam-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nshttpparam. It is a unique string prefixed with "tf-nshttpparam-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nshttpprofile",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nshttpprofile resource is used to create HTTP profiles.


`,
			Keywords: []string{
				"ns",
				"nshttpprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "adpttimeout",
					Description: `(Optional) Adapts the configured request timeout based on flow conditions. The timeout is increased or decreased internally and applied on the flow.`,
				},
				resource.Attribute{
					Name:        "altsvc",
					Description: `(Optional) Choose whether to enable support for Alternative Services.`,
				},
				resource.Attribute{
					Name:        "altsvcvalue",
					Description: `(Optional) Configure a custom Alternative Services header value that should be inserted in the response to advertise a HTTP/SSL/HTTP_QUIC vserver.`,
				},
				resource.Attribute{
					Name:        "apdexcltresptimethreshold",
					Description: `(Optional) This option sets the satisfactory threshold (T) for client response time in milliseconds to be used for APDEX calculations. This means a transaction responding in less than this threshold is considered satisfactory. Transaction responding between T and 4\`,
				},
				resource.Attribute{
					Name:        "clientiphdrexpr",
					Description: `(Optional) Name of the header that contains the real client IP address.`,
				},
				resource.Attribute{
					Name:        "cmponpush",
					Description: `(Optional) Start data compression on receiving a TCP packet with PUSH flag set.`,
				},
				resource.Attribute{
					Name:        "conmultiplex",
					Description: `(Optional) Reuse server connections for requests from more than one client connections.`,
				},
				resource.Attribute{
					Name:        "dropextracrlf",
					Description: `(Optional) Drop any extra 'CR' and 'LF' characters present after the header.`,
				},
				resource.Attribute{
					Name:        "dropextradata",
					Description: `(Optional) Drop any extra data when server sends more data than the specified content-length.`,
				},
				resource.Attribute{
					Name:        "dropinvalreqs",
					Description: `(Optional) Drop invalid HTTP requests or responses.`,
				},
				resource.Attribute{
					Name:        "grpcholdlimit",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "grpcholdtimeout",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "grpclengthdelimitation",
					Description: `(Optional) Set to DISABLED for gRPC without a length delimitation.`,
				},
				resource.Attribute{
					Name:        "http2",
					Description: `(Optional) Choose whether to enable support for HTTP/2.`,
				},
				resource.Attribute{
					Name:        "http2altsvcframe",
					Description: `(Optional) Choose whether to enable support for sending HTTP/2 ALTSVC frames. When enabled, the ADC sends HTTP/2 ALTSVC frames to HTTP/2 clients, instead of the Alt-Svc response header field. Not applicable to servers.`,
				},
				resource.Attribute{
					Name:        "http2direct",
					Description: `(Optional) Choose whether to enable support for Direct HTTP/2.`,
				},
				resource.Attribute{
					Name:        "http2headertablesize",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "http2initialconnwindowsize",
					Description: `(Optional) Initial window size for connection level flow control, in bytes.`,
				},
				resource.Attribute{
					Name:        "http2initialwindowsize",
					Description: `(Optional) Initial window size for stream level flow control, in bytes.`,
				},
				resource.Attribute{
					Name:        "http2maxconcurrentstreams",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "http2maxemptyframespermin",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "http2maxframesize",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "http2maxheaderlistsize",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "http2maxpingframespermin",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "http2maxresetframespermin",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "http2maxsettingsframespermin",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "http2minseverconn",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "http2strictcipher",
					Description: `(Optional) Choose whether to enable strict HTTP/2 cipher selection`,
				},
				resource.Attribute{
					Name:        "http3",
					Description: `(Optional) Choose whether to enable support for HTTP/3.`,
				},
				resource.Attribute{
					Name:        "http3maxheaderblockedstreams",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "http3maxheaderfieldsectionsize",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "http3maxheadertablesize",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "incomphdrdelay",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "markconnreqinval",
					Description: `(Optional) Mark CONNECT requests as invalid.`,
				},
				resource.Attribute{
					Name:        "markhttp09inval",
					Description: `(Optional) Mark HTTP/0.9 requests as invalid.`,
				},
				resource.Attribute{
					Name:        "markhttpheaderextrawserror",
					Description: `(Optional) Mark Http header with extra white space as invalid`,
				},
				resource.Attribute{
					Name:        "markrfc7230noncompliantinval",
					Description: `(Optional) Mark RFC7230 non-compliant transaction as invalid`,
				},
				resource.Attribute{
					Name:        "marktracereqinval",
					Description: `(Optional) Mark TRACE requests as invalid.`,
				},
				resource.Attribute{
					Name:        "maxheaderlen",
					Description: `(Optional) Number of bytes to be queued to look for complete header before returning error. If complete header is not obtained after queuing these many bytes, request will be marked as invalid and no L7 processing will be done for that TCP connection.`,
				},
				resource.Attribute{
					Name:        "maxreq",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "maxreusepool",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "minreusepool",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for an HTTP profile. Must begin with a letter, number, or the underscore \(\_\) character. Other characters allowed, after the first character, are the hyphen \(-\), period \(.\), hash \(\#\), space \( \), at \(@\), colon \(:\), and equal \(=\) characters. The name of a HTTP profile cannot be changed after it is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks \(for example, "my http profile" or 'my http profile'\).`,
				},
				resource.Attribute{
					Name:        "persistentetag",
					Description: `(Optional) Generate the persistent Citrix ADC specific ETag for the HTTP response with ETag header.`,
				},
				resource.Attribute{
					Name:        "reqtimeout",
					Description: `(Optional) Time, in seconds, within which the HTTP request must complete. If the request does not complete within this time, the specified request timeout action is executed. Zero disables the timeout.`,
				},
				resource.Attribute{
					Name:        "reqtimeoutaction",
					Description: `(Optional) Action to take when the HTTP request does not complete within the specified request timeout duration. You can configure the following actions:`,
				},
				resource.Attribute{
					Name:        "reusepooltimeout",
					Description: `(Optional) Idle timeout (in seconds) for server connections in re-use pool. Connections in the re-use pool are flushed, if they remain idle for the configured timeout.`,
				},
				resource.Attribute{
					Name:        "rtsptunnel",
					Description: `(Optional) Allow RTSP tunnel in HTTP. Once application/x-rtsp-tunnelled is seen in Accept or Content-Type header, Citrix ADC does not process Layer 7 traffic on this connection.`,
				},
				resource.Attribute{
					Name:        "spdy",
					Description: `(Optional) Enable SPDYv2 or SPDYv3 or both over SSL vserver. SSL will advertise SPDY support either during NPN Handshake or when client will advertises SPDY support during ALPN handshake. Both SPDY versions are enabled when this parameter is set to ENABLED.`,
				},
				resource.Attribute{
					Name:        "weblog",
					Description: `(Optional) Enable or disable web logging.`,
				},
				resource.Attribute{
					Name:        "websocket",
					Description: `(Optional) HTTP connection to be upgraded to a web socket connection. Once upgraded, Citrix ADC does not process Layer 7 traffic on this connection. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nshttpprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nshttpprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nshttpprofile.tf_httpprofile tf_httpprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nshttpprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nshttpprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nshttpprofile.tf_httpprofile tf_httpprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsicapprofile",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsicapprofile resource is used to create ICAP profile resource.


`,
			Keywords: []string{
				"ns",
				"nsicapprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for an ICAP profile. Must begin with a letter, number, or the underscore \(_\) character. Other characters allowed, after the first character, are the hyphen \(-\), period \(.\), hash \(\#\), space \( \), at \(@\), colon \(:\), and equal \(=\) characters. The name of a ICAP profile cannot be changed after it is created. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks \(for example, "my icap profile" or 'my icap profile'\). Minimum length = 1 Maximum length = 127`,
				},
				resource.Attribute{
					Name:        "uri",
					Description: `(Required) URI representing icap service. It is a mandatory argument while creating an icapprofile. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "mode",
					Description: `(Required) ICAP Mode of operation. It is a mandatory argument while creating an icapprofile. Possible values: [ REQMOD, RESPMOD ]`,
				},
				resource.Attribute{
					Name:        "preview",
					Description: `(Optional) Enable or Disable preview header with ICAP request. This feature allows an ICAP server to see the beginning of a transaction, then decide if it wants to opt-out of the transaction early instead of receiving the remainder of the request message. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "previewlength",
					Description: `(Optional) Value of Preview Header field. Citrix ADC uses the minimum of this set value and the preview size received on OPTIONS response. Minimum value = 0 Maximum value = 4294967294`,
				},
				resource.Attribute{
					Name:        "hostheader",
					Description: `(Optional) ICAP Host Header. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "useragent",
					Description: `(Optional) ICAP User Agent Header String. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "queryparams",
					Description: `(Optional) Query parameters to be included with ICAP request URI. Entered values should be in arg=value format. For more than one parameters, add & separated values. e.g.: arg1=val1&arg2=val2. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "connectionkeepalive",
					Description: `(Optional) If enabled, Citrix ADC keeps the ICAP connection alive after a transaction to reuse it to send next ICAP request. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "allow204",
					Description: `(Optional) Enable or Disable sending Allow: 204 header in ICAP request. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "inserticapheaders",
					Description: `(Optional) Insert custom ICAP headers in the ICAP request to send to ICAP server. The headers can be static or can be dynamically constructed using PI Policy Expression. For example, to send static user agent and Client's IP address, the expression can be specified as "User-Agent: NS-ICAP-Client/V1.0\r\nX-Client-IP: "+CLIENT.IP.SRC+"\r\n". The Citrix ADC does not check the validity of the specified header name-value. You must manually validate the specified header syntax. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "inserthttprequest",
					Description: `(Optional) Exact HTTP request, in the form of an expression, which the Citrix ADC encapsulates and sends to the ICAP server. If you set this parameter, the ICAP request is sent using only this header. This can be used when the HTTP header is not available to send or ICAP server only needs part of the incoming HTTP request. The request expression is constrained by the feature for which it is used. The Citrix ADC does not check the validity of this request. You must manually validate the request. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "reqtimeout",
					Description: `(Optional) Time, in seconds, within which the remote server should respond to the ICAP-request. If the Netscaler does not receive full response with this time, the specified request timeout action is performed. Zero value disables this timeout functionality. Minimum value = 0 Maximum value = 86400`,
				},
				resource.Attribute{
					Name:        "reqtimeoutaction",
					Description: `(Optional) Name of the action to perform if the Vserver/Server representing the remote service does not respond with any response within the timeout value configured. The Supported actions are`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of the audit message action which would be evaluated on receiving the ICAP response to emit the logs. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsicapprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nsicapprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsicapprofile.tf_nsicapprofile tf_nsicapprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsicapprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nsicapprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsicapprofile.tf_nsicapprofile tf_nsicapprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsip",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsip resource is used to create nsip, snip and vip, ipv4 addresses for the ADC.


`,
			Keywords: []string{
				"ns",
				"nsip",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) IPv4 address to create on the Citrix ADC. Cannot be changed after the IP address is created.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Required) Subnet mask associated with the IP address.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of the IP address to create on the Citrix ADC. Cannot be changed after the IP address is created. The following are the different types of Citrix ADC owned IP addresses:`,
				},
				resource.Attribute{
					Name:        "arp",
					Description: `(Optional) Respond to ARP requests for this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "icmp",
					Description: `(Optional) Respond to ICMP requests for this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "vserver",
					Description: `(Optional) Use this option to set (enable or disable) the virtual server attribute for this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "telnet",
					Description: `(Optional) Allow Telnet access to this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ftp",
					Description: `(Optional) Allow File Transfer Protocol (FTP) access to this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "gui",
					Description: `(Optional) Allow graphical user interface (GUI) access to this IP address. Possible values: [ ENABLED, SECUREONLY, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ssh",
					Description: `(Optional) Allow secure shell (SSH) access to this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "snmp",
					Description: `(Optional) Allow Simple Network Management Protocol (SNMP) access to this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mgmtaccess",
					Description: `(Optional) Allow access to management applications on this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "restrictaccess",
					Description: `(Optional) Block access to nonmanagement applications on this IP. This option is applicable for MIPs, SNIPs, and NSIP, and is disabled by default. Nonmanagement applications can run on the underlying Citrix ADC Free BSD operating system. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dynamicrouting",
					Description: `(Optional) Allow dynamic routing on this IP address. Specific to Subnet IP (SNIP) address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "decrementttl",
					Description: `(Optional) Decrement TTL by 1 when ENABLED.This setting is applicable only for UDP traffic. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ospf",
					Description: `(Optional) Use this option to enable or disable OSPF on this IP address for the entity. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "bgp",
					Description: `(Optional) Use this option to enable or disable BGP on this IP address for the entity. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "rip",
					Description: `(Optional) Use this option to enable or disable RIP on this IP address for the entity. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "hostroute",
					Description: `(Optional) Option to push the VIP to ZebOS routing table for Kernel route redistribution through dynamic routing protocols. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "advertiseondefaultpartition",
					Description: `(Optional) Advertise VIPs from Shared VLAN on Default Partition. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "networkroute",
					Description: `(Optional) Option to push the SNIP subnet to ZebOS routing table for Kernel route redistribution through dynamic routing protocol. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tag",
					Description: `(Optional) Tag value for the network/host route associated with this IP.`,
				},
				resource.Attribute{
					Name:        "hostrtgw",
					Description: `(Optional) IP address of the gateway of the route for this VIP address.`,
				},
				resource.Attribute{
					Name:        "metric",
					Description: `(Optional) Integer value to add to or subtract from the cost of the route advertised for the VIP address.`,
				},
				resource.Attribute{
					Name:        "vserverrhilevel",
					Description: `(Optional) Advertise the route for the Virtual IP (VIP) address on the basis of the state of the virtual servers associated with that VIP.`,
				},
				resource.Attribute{
					Name:        "ospflsatype",
					Description: `(Optional) Type of LSAs to be used by the OSPF protocol, running on the Citrix ADC, for advertising the route for this VIP address. Possible values: [ TYPE1, TYPE5 ]`,
				},
				resource.Attribute{
					Name:        "ospfarea",
					Description: `(Optional) ID of the area in which the type1 link-state advertisements (LSAs) are to be advertised for this virtual IP (VIP) address by the OSPF protocol running on the Citrix ADC. When this parameter is not set, the VIP is advertised on all areas.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enable or disable the IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "vrid",
					Description: `(Optional) A positive integer that uniquely identifies a VMAC address for binding to this VIP address. This binding is used to set up Citrix ADCs in an active-active configuration using VRRP.`,
				},
				resource.Attribute{
					Name:        "icmpresponse",
					Description: `(Optional) Respond to ICMP requests for a Virtual IP (VIP) address on the basis of the states of the virtual servers associated with that VIP. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "ownernode",
					Description: `(Optional) The owner node in a Cluster for this IP address. Owner node can vary from 0 to 31. If ownernode is not specified then the IP is treated as Striped IP.`,
				},
				resource.Attribute{
					Name:        "arpresponse",
					Description: `(Optional) Respond to ARP requests for a Virtual IP (VIP) address on the basis of the states of the virtual servers associated with that VIP. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "ownerdownresponse",
					Description: `(Optional) in cluster system, if the owner node is down, whether should it respond to icmp/arp. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. TD id 4095 is used reserved for LSN use .`,
				},
				resource.Attribute{
					Name:        "vserverrhimode",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "mptcpadvertise",
					Description: `(Optional) ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsip. It has the same value as the ` + "`" + `ipaddress` + "`" + ` attribute. ## Import A nsip can be imported using its ipaddress, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsip.tf_nsip 192.168.2.55 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsip. It has the same value as the ` + "`" + `ipaddress` + "`" + ` attribute. ## Import A nsip can be imported using its ipaddress, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsip.tf_nsip 192.168.2.55 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsip6",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsip6 resource is used to create nsip, snip and vip ipv6 addresses for ADC.


`,
			Keywords: []string{
				"ns",
				"nsip6",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipv6address",
					Description: `(Optional) IPv6 address to create on the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "scope",
					Description: `(Optional) Scope of the IPv6 address to be created. Cannot be changed after the IP address is created. Possible values: [ global, link-local ]`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of IP address to be created on the Citrix ADC. Cannot be changed after the IP address is created. Possible values: [ NSIP, VIP, SNIP, GSLBsiteIP, ADNSsvcIP, RADIUSListenersvcIP, CLIP ]`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) The VLAN number.`,
				},
				resource.Attribute{
					Name:        "nd",
					Description: `(Optional) Respond to Neighbor Discovery (ND) requests for this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "icmp",
					Description: `(Optional) Respond to ICMP requests for this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "vserver",
					Description: `(Optional) Enable or disable the state of all the virtual servers associated with this VIP6 address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "telnet",
					Description: `(Optional) Allow Telnet access to this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ftp",
					Description: `(Optional) Allow File Transfer Protocol (FTP) access to this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "gui",
					Description: `(Optional) Allow graphical user interface (GUI) access to this IP address. Possible values: [ ENABLED, SECUREONLY, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ssh",
					Description: `(Optional) Allow secure Shell (SSH) access to this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "snmp",
					Description: `(Optional) Allow Simple Network Management Protocol (SNMP) access to this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mgmtaccess",
					Description: `(Optional) Allow access to management applications on this IP address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "restrictaccess",
					Description: `(Optional) Block access to nonmanagement applications on this IP address. This option is applicable forMIP6s, SNIP6s, and NSIP6s, and is disabled by default. Nonmanagement applications can run on the underlying Citrix ADC Free BSD operating system. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dynamicrouting",
					Description: `(Optional) Allow dynamic routing on this IP address. Specific to Subnet IPv6 (SNIP6) address. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "decrementhoplimit",
					Description: `(Optional) Decrement Hop Limit by 1 when ENABLED.This setting is applicable only for UDP traffic. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "hostroute",
					Description: `(Optional) Option to push the VIP6 to ZebOS routing table for Kernel route redistribution through dynamic routing protocols. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "advertiseondefaultpartition",
					Description: `(Optional) Advertise VIPs from Shared VLAN on Default Partition. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "networkroute",
					Description: `(Optional) Option to push the SNIP6 subnet to ZebOS routing table for Kernel route redistribution through dynamic routing protocol. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tag",
					Description: `(Optional) Tag value for the network/host route associated with this IP.`,
				},
				resource.Attribute{
					Name:        "ip6hostrtgw",
					Description: `(Optional) IPv6 address of the gateway for the route. If Gateway is not set, VIP uses :: as the gateway.`,
				},
				resource.Attribute{
					Name:        "metric",
					Description: `(Optional) Integer value to add to or subtract from the cost of the route advertised for the VIP6 address.`,
				},
				resource.Attribute{
					Name:        "vserverrhilevel",
					Description: `(Optional) Advertise or do not advertise the route for the Virtual IP (VIP6) address on the basis of the state of the virtual servers associated with that VIP6.`,
				},
				resource.Attribute{
					Name:        "ospf6lsatype",
					Description: `(Optional) Type of LSAs to be used by the IPv6 OSPF protocol, running on the Citrix ADC, for advertising the route for the VIP6 address. Possible values: [ INTRA_AREA, EXTERNAL ]`,
				},
				resource.Attribute{
					Name:        "ospfarea",
					Description: `(Optional) ID of the area in which the Intra-Area-Prefix LSAs are to be advertised for the VIP6 address by the IPv6 OSPF protocol running on the Citrix ADC. When ospfArea is not set, VIP6 is advertised on all areas.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enable or disable the IP address. Possible values: [ DISABLED, ENABLED ]`,
				},
				resource.Attribute{
					Name:        "map",
					Description: `(Optional) Mapped IPV4 address for the IPV6 address.`,
				},
				resource.Attribute{
					Name:        "vrid6",
					Description: `(Optional) A positive integer that uniquely identifies a VMAC address for binding to this VIP address. This binding is used to set up Citrix ADCs in an active-active configuration using VRRP.`,
				},
				resource.Attribute{
					Name:        "ownernode",
					Description: `(Optional) ID of the cluster node for which you are adding the IP address. Must be used if you want the IP address to be active only on the specific node. Can be configured only through the cluster IP address. Cannot be changed after the IP address is created.`,
				},
				resource.Attribute{
					Name:        "ownerdownresponse",
					Description: `(Optional) in cluster system, if the owner node is down, whether should it respond to icmp/arp. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "mptcpadvertise",
					Description: `(Optional) ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsip6. It has the same value as the ` + "`" + `ipv6address` + "`" + ` attribute. ## Import A nsip6 can be imported using its ipv6address, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsip6.tf_nsip6 2002:db8:100::ff/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsip6. It has the same value as the ` + "`" + `ipv6address` + "`" + ` attribute. ## Import A nsip6 can be imported using its ipv6address, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsip6.tf_nsip6 2002:db8:100::ff/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nslicense",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nslicense resource is used to upload and apply a license file to the target ADC.


`,
			Keywords: []string{
				"ns",
				"nslicense",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "license_file",
					Description: `(Required) License file to upload.`,
				},
				resource.Attribute{
					Name:        "ssh_host",
					Description: `(Optional) The ssh host ip address that will be used for the sftp transfer of the license file.`,
				},
				resource.Attribute{
					Name:        "ssh_username",
					Description: `(Optional) The user name for the ssh connection.`,
				},
				resource.Attribute{
					Name:        "ssh_password",
					Description: `(Optional) The password for the ssh connection.`,
				},
				resource.Attribute{
					Name:        "ssh_port",
					Description: `(Optional) The port for the ssh connection.`,
				},
				resource.Attribute{
					Name:        "ssh_host_pubkey",
					Description: `(Required) The ADC public ssh host key.`,
				},
				resource.Attribute{
					Name:        "reboot",
					Description: `(Optional) Set this to true to reboot and wait for the ADC to become responsive.`,
				},
				resource.Attribute{
					Name:        "poll_delay",
					Description: `(Optional) Time to wait before the first poll after reboot. Defaults to "60s".`,
				},
				resource.Attribute{
					Name:        "poll_interval",
					Description: `(Optional) Interval between polls. Defaults to "60s".`,
				},
				resource.Attribute{
					Name:        "poll_timeout",
					Description: `(Optional) Timeout for a poll attempt. Default to "10s". ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nslicense. It has the same value as the ` + "`" + `license_file` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nslicense. It has the same value as the ` + "`" + `license_file` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nslicenseparameters",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nslicenseparameters resource is used to create licenseparameters resource.


`,
			Keywords: []string{
				"ns",
				"nslicenseparameters",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "alert1gracetimeout",
					Description: `(Optional) If ADC remains in grace for the configured hours then first grace alert will be raised. Minimum value = 0 Maximum value = 24`,
				},
				resource.Attribute{
					Name:        "alert2gracetimeout",
					Description: `(Optional) If ADC remains in grace for the configured hours then major grace alert will be raised. Minimum value = 24 Maximum value = 720 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nslicenseparameters. It is a unique string prefixed with "tf-nslicenseparameters-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nslicenseparameters. It is a unique string prefixed with "tf-nslicenseparameters-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nslicenseproxyserver",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nslicenseproxyserver resource is used to create nslicenseproxyserver.


`,
			Keywords: []string{
				"ns",
				"nslicenseproxyserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address of the License proxy server. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "servername",
					Description: `(Optional) Fully qualified domain name of the License proxy server.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Required) License proxy server port. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nslicenseproxyserver. It has the same value as the ` + "`" + `servername` + "`" + ` or ` + "`" + `serverip` + "`" + ` attribute. ## Import A nslicenseproxyserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nslicenseproxyserver.tf_nslicenseproxyserver www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nslicenseproxyserver. It has the same value as the ` + "`" + `servername` + "`" + ` or ` + "`" + `serverip` + "`" + ` attribute. ## Import A nslicenseproxyserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nslicenseproxyserver.tf_nslicenseproxyserver www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nslicenseserver",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nslicenseserver resource is used to create license server entry in ADC.


`,
			Keywords: []string{
				"ns",
				"nslicenseserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servername",
					Description: `(Required) Fully qualified domain name of the License server.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) License server port.`,
				},
				resource.Attribute{
					Name:        "forceupdateip",
					Description: `(Optional) If this flag is used while adding the licenseserver, existing config will be overwritten. Use this flag only if you are sure that the new licenseserver has the required capacity.`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nslicenseserver. It has the same value as the ` + "`" + `servername` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nslicenseserver. It has the same value as the ` + "`" + `servername` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nslimitidentifier",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nslimitidentifier resource is used to create limit Indetifier resource.


`,
			Keywords: []string{
				"ns",
				"nslimitidentifier",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "limitidentifier",
					Description: `(Required) Name for a rate limit identifier. Must begin with an ASCII letter or underscore (_) character, and must consist only of ASCII alphanumeric or underscore characters. Reserved words must not be used.`,
				},
				resource.Attribute{
					Name:        "threshold",
					Description: `(Optional) Maximum number of requests that are allowed in the given timeslice when requests (mode is set as REQUEST_RATE) are tracked per timeslice. When connections (mode is set as CONNECTION) are tracked, it is the total number of connections that would be let through. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "timeslice",
					Description: `(Optional) Time interval, in milliseconds, specified in multiples of 10, during which requests are tracked to check if they cross the threshold. This argument is needed only when the mode is set to REQUEST_RATE. Minimum value = 10`,
				},
				resource.Attribute{
					Name:        "mode",
					Description: `(Optional) Defines the type of traffic to be tracked.`,
				},
				resource.Attribute{
					Name:        "limittype",
					Description: `(Optional) Smooth or bursty request type.`,
				},
				resource.Attribute{
					Name:        "selectorname",
					Description: `(Optional) Name of the rate limit selector. If this argument is NULL, rate limiting will be applied on all traffic received by the virtual server or the Citrix ADC (depending on whether the limit identifier is bound to a virtual server or globally) without any filtering. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "maxbandwidth",
					Description: `(Optional) Maximum bandwidth permitted, in kbps. Minimum value = 0 Maximum value = 4294967287`,
				},
				resource.Attribute{
					Name:        "trapsintimeslice",
					Description: `(Optional) Number of traps to be sent in the timeslice configured. A value of 0 indicates that traps are disabled. Minimum value = 0 Maximum value = 65535 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nslimitidentifier. It has the same value as the ` + "`" + `limitidentifier` + "`" + ` attribute. ## Import A nslimitidentifier can be imported using its limitidentifier, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nslimitidentifier.tf_nslimitidentifier tf_nslimitidentifier ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nslimitidentifier. It has the same value as the ` + "`" + `limitidentifier` + "`" + ` attribute. ## Import A nslimitidentifier can be imported using its limitidentifier, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nslimitidentifier.tf_nslimitidentifier tf_nslimitidentifier ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsmode",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsmode resource is used to enable or disable ADC modes.


`,
			Keywords: []string{
				"ns",
				"nsmode",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "fr",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "l2",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "usip",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "cka",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "tcpb",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "mbf",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "edge",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "usnip",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "l3",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "pmtud",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "mediaclassification",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "sradv",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "dradv",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "iradv",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "sradv6",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "dradv6",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "bridgebpdus",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "ulfd",
					Description: `(Optional) ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsmode resource. It is a random string prefixed with "tf-nsmode-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsmode resource. It is a random string prefixed with "tf-nsmode-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsparam",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsparam resource is used to set parameters to the target ADC.


`,
			Keywords: []string{
				"ns",
				"nsparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "maxconn",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "maxreq",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "cip",
					Description: `(Optional) Enable or disable the insertion of the actual client IP address into the HTTP header request passed from the client to one, some, or all servers attached to the system. The passed address can then be accessed through a minor modification to the server.`,
				},
				resource.Attribute{
					Name:        "cipheader",
					Description: `(Optional) Text that will be used as the client IP address header.`,
				},
				resource.Attribute{
					Name:        "cookieversion",
					Description: `(Optional) Version of the cookie inserted by the system. Possible values: [ 0, 1 ]`,
				},
				resource.Attribute{
					Name:        "securecookie",
					Description: `(Optional) Enable or disable secure flag for persistence cookie. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "pmtumin",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "pmtutimeout",
					Description: `(Optional) Interval, in minutes, for flushing the PMTU entries.`,
				},
				resource.Attribute{
					Name:        "ftpportrange",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "crportrange",
					Description: `(Optional) Port range for cache redirection services.`,
				},
				resource.Attribute{
					Name:        "timezone",
					Description: `(Optional) Time zone for the Citrix ADC. Name of the time zone should be specified as argument.`,
				},
				resource.Attribute{
					Name:        "grantquotamaxclient",
					Description: `(Optional) Percentage of shared quota to be granted at a time for maxClient.`,
				},
				resource.Attribute{
					Name:        "exclusivequotamaxclient",
					Description: `(Optional) Percentage of maxClient to be given to PEs.`,
				},
				resource.Attribute{
					Name:        "grantquotaspillover",
					Description: `(Optional) Percentage of shared quota to be granted at a time for spillover.`,
				},
				resource.Attribute{
					Name:        "exclusivequotaspillover",
					Description: `(Optional) Percentage of maximum limit to be given to PEs.`,
				},
				resource.Attribute{
					Name:        "useproxyport",
					Description: `(Optional) Enable/Disable use_proxy_port setting. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "internaluserlogin",
					Description: `(Optional) Enables/disables the internal user from logging in to the appliance. Before disabling internal user login, you must have key-based authentication set up on the appliance. The file name for the key pair must be "ns_comm_key". Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "aftpallowrandomsourceport",
					Description: `(Optional) Allow the FTP server to come from a random source port for active FTP data connections. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tcpcip",
					Description: `(Optional) Enable or disable the insertion of the client TCP/IP header in TCP payload passed from the client to one, some, or all servers attached to the system. The passed address can then be accessed through a minor modification to the server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "servicepathingressvlan",
					Description: `(Optional) VLAN on which the subscriber traffic arrives on the appliance.`,
				},
				resource.Attribute{
					Name:        "mgmthttpport",
					Description: `(Optional) This allow the configuration of management HTTP port.`,
				},
				resource.Attribute{
					Name:        "mgmthttpsport",
					Description: `(Optional) This allows the configuration of management HTTPS port.`,
				},
				resource.Attribute{
					Name:        "proxyprotocol",
					Description: `(Optional) Disable/Enable v1 or v2 proxy protocol header for client info insertion. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "advancedanalyticsstats",
					Description: `(Optional) Disable/Enable advanace analytics stats. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsparam. It is a random string prefixed with "tf-nsparam-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsparam. It is a random string prefixed with "tf-nsparam-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nspartition",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nspartition resource is used to create ns partition resource.


`,
			Keywords: []string{
				"ns",
				"nspartition",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "partitionname",
					Description: `(Required) Name of the Partition. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "maxbandwidth",
					Description: `(Optional) Maximum bandwidth, in Kbps, that the partition can consume. A zero value indicates the bandwidth is unrestricted on the partition and it can consume up to the system limits.`,
				},
				resource.Attribute{
					Name:        "minbandwidth",
					Description: `(Optional) Minimum bandwidth, in Kbps, that the partition can consume. A zero value indicates the bandwidth is unrestricted on the partition and it can consume up to the system limits.`,
				},
				resource.Attribute{
					Name:        "maxconn",
					Description: `(Optional) Maximum number of concurrent connections that can be open in the partition. A zero value indicates no limit on number of open connections.`,
				},
				resource.Attribute{
					Name:        "maxmemlimit",
					Description: `(Optional) Maximum memory, in megabytes, allocated to the partition. A zero value indicates the memory is unlimited on the partition and it can consume up to the system limits. Minimum value = 0 Maximum value = 1048576`,
				},
				resource.Attribute{
					Name:        "partitionmac",
					Description: `(Optional) Special MAC address for the partition which is used for communication over shared vlans in this partition. If not specified, the MAC address is auto-generated.`,
				},
				resource.Attribute{
					Name:        "force",
					Description: `(Optional) Switches to new admin partition without prompt for saving configuration. Configuration will not be saved.`,
				},
				resource.Attribute{
					Name:        "save",
					Description: `(Optional) Switches to new admin partition without prompt for saving configuration. Configuration will be saved. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nspartition. It has the same value as the ` + "`" + `partitionname` + "`" + ` attribute. ## Import A nspartition can be imported using its partitionname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nspartition.tf_nspartition tf_nspartition ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nspartition. It has the same value as the ` + "`" + `partitionname` + "`" + ` attribute. ## Import A nspartition can be imported using its partitionname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nspartition.tf_nspartition tf_nspartition ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nspartition_bridgegroup_binding",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nspartition_bridgegroup_binding resource is used to bind bridgegroup to nspartition resource.


`,
			Keywords: []string{
				"ns",
				"nspartition",
				"bridgegroup",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "partitionname",
					Description: `(Required) Name of the Partition. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "bridgegroup",
					Description: `(Required) Identifier of the bridge group that is assigned to this partition. Minimum value = 1 Maximum value = 1000 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nspartition_bridgegroup_binding. It is the concatenation of ` + "`" + `partitionname` + "`" + ` and ` + "`" + `bridgeroup` + "`" + ` attributes separated by comma. ## Import A nspartition_bridgegroup_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nspartition_bridgegroup_binding.tf_binding tf_nspartition,2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nspartition_bridgegroup_binding. It is the concatenation of ` + "`" + `partitionname` + "`" + ` and ` + "`" + `bridgeroup` + "`" + ` attributes separated by comma. ## Import A nspartition_bridgegroup_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nspartition_bridgegroup_binding.tf_binding tf_nspartition,2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nspartition_vlan_binding",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nspartition_vlan_binding resource is used to bind vlan with nspartition resource.


`,
			Keywords: []string{
				"ns",
				"nspartition",
				"vlan",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "partitionname",
					Description: `(Required) Name of the Partition. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Required) Identifier of the vlan that is assigned to this partition. Minimum value = 1 Maximum value = 4094 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nspartition_vlan_binding. It is the concatenation of ` + "`" + `partitionname` + "`" + ` and ` + "`" + `vlan` + "`" + ` attributes separated by comma. ## Import A nspartition_vlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nspartition_vlan_binding.tf_binding tf_nspartition,20 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nspartition_vlan_binding. It is the concatenation of ` + "`" + `partitionname` + "`" + ` and ` + "`" + `vlan` + "`" + ` attributes separated by comma. ## Import A nspartition_vlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nspartition_vlan_binding.tf_binding tf_nspartition,20 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nspartition_vxlan_binding",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nspartition_vxlan_binding resource is used to bind vxlan to nspartition resource.


`,
			Keywords: []string{
				"ns",
				"nspartition",
				"vxlan",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vxlan",
					Description: `(Required) Identifier of the vxlan that is assigned to this partition. Minimum value = 1 Maximum value = 16777215`,
				},
				resource.Attribute{
					Name:        "partitionname",
					Description: `(Required) Name of the Partition. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nspartition_vxlan_binding. It ids concatenation of ` + "`" + `partitionname` + "`" + ` and ` + "`" + `vxlan` + "`" + ` attributes separated by comma. ## Import A nspartition_vxlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nspartition_vxlan_binding.tf_binding tf_nspartition,123 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nspartition_vxlan_binding. It ids concatenation of ` + "`" + `partitionname` + "`" + ` and ` + "`" + `vxlan` + "`" + ` attributes separated by comma. ## Import A nspartition_vxlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nspartition_vxlan_binding.tf_binding tf_nspartition,123 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nspbr",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nspbr resource is used to create nspbr.


`,
			Keywords: []string{
				"ns",
				"nspbr",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the PBR. Must begin with an ASCII alphabetic or underscore \(_\) character, and must contain only ASCII alphanumeric, underscore, hash \(\#\), period \(.\), space, colon \(:\), at \(@\), equals \(=\), and hyphen \(-\) characters. Cannot be changed after the PBR is created. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Action to perform on the outgoing IPv4 packets that match the PBR. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "srcip",
					Description: `(Optional) IP address or range of IP addresses to match against the source IP address of an outgoing IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 10.102.29.30-10.102.29.189.`,
				},
				resource.Attribute{
					Name:        "srcipop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "srcipval",
					Description: `(Optional) IP address or range of IP addresses to match against the source IP address of an outgoing IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 10.102.29.30-10.102.29.189.`,
				},
				resource.Attribute{
					Name:        "srcport",
					Description: `(Optional) Port number or range of port numbers to match against the source port number of an outgoing IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 40-90. Note: The destination port can be specified only for TCP and UDP protocols.`,
				},
				resource.Attribute{
					Name:        "srcportop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "srcportval",
					Description: `(Optional) Port number or range of port numbers to match against the source port number of an outgoing IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 40-90. Note: The destination port can be specified only for TCP and UDP protocols. Maximum length = 65535`,
				},
				resource.Attribute{
					Name:        "destip",
					Description: `(Optional) IP address or range of IP addresses to match against the destination IP address of an outgoing IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 10.102.29.30-10.102.29.189.`,
				},
				resource.Attribute{
					Name:        "destipop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "destipval",
					Description: `(Optional) IP address or range of IP addresses to match against the destination IP address of an outgoing IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 10.102.29.30-10.102.29.189.`,
				},
				resource.Attribute{
					Name:        "destport",
					Description: `(Optional) Port number or range of port numbers to match against the destination port number of an outgoing IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 40-90. Note: The destination port can be specified only for TCP and UDP protocols.`,
				},
				resource.Attribute{
					Name:        "destportop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "destportval",
					Description: `(Optional) Port number or range of port numbers to match against the destination port number of an outgoing IPv4 packet. In the command line interface, separate the range with a hyphen. For example: 40-90. Note: The destination port can be specified only for TCP and UDP protocols. Maximum length = 65535`,
				},
				resource.Attribute{
					Name:        "nexthop",
					Description: `(Optional) IP address of the next hop router or the name of the link load balancing virtual server to which to send matching packets if action is set to ALLOW. If you specify a link load balancing (LLB) virtual server, which can provide a backup if a next hop link fails, first make sure that the next hops bound to the LLB virtual server are actually next hops that are directly connected to the Citrix ADC. Otherwise, the Citrix ADC throws an error when you attempt to create the PBR. The next hop can be null to represent null routes.`,
				},
				resource.Attribute{
					Name:        "nexthopval",
					Description: `(Optional) The Next Hop IP address or gateway name.`,
				},
				resource.Attribute{
					Name:        "iptunnel",
					Description: `(Optional) The Tunnel name.`,
				},
				resource.Attribute{
					Name:        "iptunnelname",
					Description: `(Optional) The iptunnel name where packets need to be forwarded upon.`,
				},
				resource.Attribute{
					Name:        "vxlanvlanmap",
					Description: `(Optional) The vlan to vxlan mapping to be applied for incoming packets over this pbr tunnel.`,
				},
				resource.Attribute{
					Name:        "srcmac",
					Description: `(Optional) MAC address to match against the source MAC address of an outgoing IPv4 packet.`,
				},
				resource.Attribute{
					Name:        "srcmacmask",
					Description: `(Optional) Used to define range of Source MAC address. It takes string of 0 and 1, 0s are for exact match and 1s for wildcard. For matching first 3 bytes of MAC address, srcMacMask value "000000111111". .`,
				},
				resource.Attribute{
					Name:        "protocol",
					Description: `(Optional) Protocol, identified by protocol name, to match against the protocol of an outgoing IPv4 packet. Possible values: [ ICMP, IGMP, TCP, EGP, IGP, ARGUS, UDP, RDP, RSVP, EIGRP, L2TP, ISIS, GGP, IPoverIP, ST, CBT, BBN-RCC-M, NVP-II, PUP, EMCON, XNET, CHAOS, MUX, DCN-MEAS, HMP, PRM, XNS-IDP, TRUNK-1, TRUNK-2, LEAF-1, LEAF-2, IRTP, ISO-TP4, NETBLT, MFE-NSP, MERIT-INP, SEP, 3PC, IDPR, XTP, DDP, IDPR-CMTP, TP++, IL, IPv6, SDRP, IPv6-Route, IPv6-Frag, IDRP, GRE, MHRP, BNA, ESP, AH, I-NLSP, SWIPE, NARP, MOBILE, TLSP, SKIP, ICMPV6, IPv6-NoNx, IPv6-Opts, Any-Host-Internal-Protocol, CFTP, Any-Local-Network, SAT-EXPAK, KRYPTOLAN, RVD, IPPC, Any-Distributed-File-System, TFTP, VISA, IPCV, CPNX, CPHB, WSN, PVP, BR-SAT-MO, SUN-ND, WB-MON, WB-EXPAK, ISO-IP, VMTP, SECURE-VM, VINES, TTP, NSFNET-IG, DGP, TCF, OSPFIGP, Sprite-RP, LARP, MTP, AX.25, IPIP, MICP, SCC-SP, ETHERIP, Any-Private-Encryption-Scheme, GMTP, IFMP, PNNI, PIM, ARIS, SCPS, QNX, A/N, IPComp, SNP, Compaq-Pe, IPX-in-IP, VRRP, PGM, Any-0-Hop-Protocol, ENCAP, DDX, IATP, STP, SRP, UTI, SMP, SM, PTP, FIRE, CRTP, CRUDP, SSCOPMCE, IPLT, SPS, PIPE, SCTP, FC, RSVP-E2E-IGNORE, Mobility-Header, UDPLite ]`,
				},
				resource.Attribute{
					Name:        "protocolnumber",
					Description: `(Optional) Protocol, identified by protocol number, to match against the protocol of an outgoing IPv4 packet. Minimum value = 1 Maximum value = 255`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) ID of the VLAN. The Citrix ADC compares the PBR only to the outgoing packets on the specified VLAN. If you do not specify any interface ID, the appliance compares the PBR to the outgoing packets on all VLANs. Minimum value = 1 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "vxlan",
					Description: `(Optional) ID of the VXLAN. The Citrix ADC compares the PBR only to the outgoing packets on the specified VXLAN. If you do not specify any interface ID, the appliance compares the PBR to the outgoing packets on all VXLANs. Minimum value = 1 Maximum value = 16777215`,
				},
				resource.Attribute{
					Name:        "Interface",
					Description: `(Optional) ID of an interface. The Citrix ADC compares the PBR only to the outgoing packets on the specified interface. If you do not specify any value, the appliance compares the PBR to the outgoing packets on all interfaces.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority of the PBR, which determines the order in which it is evaluated relative to the other PBRs. If you do not specify priorities while creating PBRs, the PBRs are evaluated in the order in which they are created. Minimum value = 1 Maximum value = 81920`,
				},
				resource.Attribute{
					Name:        "msr",
					Description: `(Optional) Monitor the route specified byte Next Hop parameter. This parameter is not applicable if you specify a link load balancing (LLB) virtual server name with the Next Hop parameter. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "monitor",
					Description: `(Optional) The name of the monitor.(Can be only of type ping or ARP ). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enable or disable the PBR. After you apply the PBRs, the Citrix ADC compares outgoing packets to the enabled PBRs. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for this pbr rule. If ownernode is not specified then the pbr rule is treated as Striped pbr rule. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "detail",
					Description: `(Optional) To get a detailed view. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nspbr. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nspbr can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nspbr.tf_nspbr my_nspbr ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nspbr. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nspbr can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nspbr.tf_nspbr my_nspbr ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nspbr6",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nspbr6 resource is used to create PBR6 entry resource.


`,
			Keywords: []string{
				"ns",
				"nspbr6",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the PBR6. Must begin with an ASCII alphabetic or underscore \(_\) character, and must contain only ASCII alphanumeric, underscore, hash \(\#\), period \(.\), space, colon \(:\), at \(@\), equals \(=\), and hyphen \(-\) characters. Cannot be changed after the PBR6 is created. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Action to perform on the outgoing IPv6 packets that match the PBR6. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "srcipv6",
					Description: `(Optional) IP address or range of IP addresses to match against the source IP address of an outgoing IPv6 packet. In the command line interface, separate the range with a hyphen.`,
				},
				resource.Attribute{
					Name:        "srcipop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "srcipv6val",
					Description: `(Optional) IP address or range of IP addresses to match against the source IP address of an outgoing IPv6 packet. In the command line interface, separate the range with a hyphen.`,
				},
				resource.Attribute{
					Name:        "srcport",
					Description: `(Optional) Port number or range of port numbers to match against the source port number of an outgoing IPv6 packet. In the command line interface, separate the range with a hyphen. For example: 40-90.`,
				},
				resource.Attribute{
					Name:        "srcportop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "srcportval",
					Description: `(Optional) Source port (range). Maximum length = 65535`,
				},
				resource.Attribute{
					Name:        "destipv6",
					Description: `(Optional) IP address or range of IP addresses to match against the destination IP address of an outgoing IPv6 packet. In the command line interface, separate the range with a hyphen.`,
				},
				resource.Attribute{
					Name:        "destipop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "destipv6val",
					Description: `(Optional) IP address or range of IP addresses to match against the destination IP address of an outgoing IPv6 packet. In the command line interface, separate the range with a hyphen.`,
				},
				resource.Attribute{
					Name:        "destport",
					Description: `(Optional) Port number or range of port numbers to match against the destination port number of an outgoing IPv6 packet. In the command line interface, separate the range with a hyphen. For example: 40-90. Note: The destination port can be specified only for TCP and UDP protocols.`,
				},
				resource.Attribute{
					Name:        "destportop",
					Description: `(Optional) Either the equals (=) or does not equal (!=) logical operator. Possible values: [ =, !=, EQ, NEQ ]`,
				},
				resource.Attribute{
					Name:        "destportval",
					Description: `(Optional) Destination port (range). Maximum length = 65535`,
				},
				resource.Attribute{
					Name:        "srcmac",
					Description: `(Optional) MAC address to match against the source MAC address of an outgoing IPv6 packet.`,
				},
				resource.Attribute{
					Name:        "srcmacmask",
					Description: `(Optional) Used to define range of Source MAC address. It takes string of 0 and 1, 0s are for exact match and 1s for wildcard. For matching first 3 bytes of MAC address, srcMacMask value "000000111111". .`,
				},
				resource.Attribute{
					Name:        "protocol",
					Description: `(Optional) Protocol, identified by protocol name, to match against the protocol of an outgoing IPv6 packet. Possible values: [ ICMPV6, TCP, UDP, ICMP, IGMP, EGP, IGP, ARGUS, RDP, RSVP, EIGRP, L2TP, ISIS, GGP, IPoverIP, ST, CBT, BBN-RCC-M, NVP-II, PUP, EMCON, XNET, CHAOS, MUX, DCN-MEAS, HMP, PRM, XNS-IDP, TRUNK-1, TRUNK-2, LEAF-1, LEAF-2, IRTP, ISO-TP4, NETBLT, MFE-NSP, MERIT-INP, SEP, 3PC, IDPR, XTP, DDP, IDPR-CMTP, TP++, IL, IPv6, SDRP, IPv6-Route, IPv6-Frag, IDRP, GRE, MHRP, BNA, ESP, AH, I-NLSP, SWIPE, NARP, MOBILE, TLSP, SKIP, IPv6-NoNx, IPv6-Opts, Any-Host-Internal-Protocol, CFTP, Any-Local-Network, SAT-EXPAK, KRYPTOLAN, RVD, IPPC, Any-Distributed-File-System, TFTP, VISA, IPCV, CPNX, CPHB, WSN, PVP, BR-SAT-MO, SUN-ND, WB-MON, WB-EXPAK, ISO-IP, VMTP, SECURE-VM, VINES, TTP, NSFNET-IG, DGP, TCF, OSPFIGP, Sprite-RP, LARP, MTP, AX.25, IPIP, MICP, SCC-SP, ETHERIP, Any-Private-Encryption-Scheme, GMTP, IFMP, PNNI, PIM, ARIS, SCPS, QNX, A/N, IPComp, SNP, Compaq-Pe, IPX-in-IP, VRRP, PGM, Any-0-Hop-Protocol, ENCAP, DDX, IATP, STP, SRP, UTI, SMP, SM, PTP, FIRE, CRTP, CRUDP, SSCOPMCE, IPLT, SPS, PIPE, SCTP, FC, RSVP-E2E-IGNORE, Mobility-Header, UDPLite ]`,
				},
				resource.Attribute{
					Name:        "protocolnumber",
					Description: `(Optional) Protocol, identified by protocol number, to match against the protocol of an outgoing IPv6 packet. Minimum value = 1 Maximum value = 255`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) ID of the VLAN. The Citrix ADC compares the PBR6 only to the outgoing packets on the specified VLAN. If you do not specify an interface ID, the appliance compares the PBR6 to the outgoing packets on all VLANs. Minimum value = 1 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "vxlan",
					Description: `(Optional) ID of the VXLAN. The Citrix ADC compares the PBR6 only to the outgoing packets on the specified VXLAN. If you do not specify an interface ID, the appliance compares the PBR6 to the outgoing packets on all VXLANs. Minimum value = 1 Maximum value = 16777215`,
				},
				resource.Attribute{
					Name:        "Interface",
					Description: `(Optional) ID of an interface. The Citrix ADC compares the PBR6 only to the outgoing packets on the specified interface. If you do not specify a value, the appliance compares the PBR6 to the outgoing packets on all interfaces.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority of the PBR6, which determines the order in which it is evaluated relative to the other PBR6s. If you do not specify priorities while creating PBR6s, the PBR6s are evaluated in the order in which they are created. Minimum value = 1 Maximum value = 81920`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enable or disable the PBR6. After you apply the PBR6s, the Citrix ADC compares outgoing packets to the enabled PBR6s. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "msr",
					Description: `(Optional) Monitor the route specified by the Next Hop parameter. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "monitor",
					Description: `(Optional) The name of the monitor.(Can be only of type ping or ARP ). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "nexthop",
					Description: `(Optional) IP address of the next hop router to which to send matching packets if action is set to ALLOW. This next hop should be directly reachable from the appliance.`,
				},
				resource.Attribute{
					Name:        "nexthopval",
					Description: `(Optional) The Next Hop IPv6 address.`,
				},
				resource.Attribute{
					Name:        "iptunnel",
					Description: `(Optional) The iptunnel name where packets need to be forwarded upon.`,
				},
				resource.Attribute{
					Name:        "vxlanvlanmap",
					Description: `(Optional) The vlan to vxlan mapping to be applied for incoming packets over this pbr tunnel.`,
				},
				resource.Attribute{
					Name:        "nexthopvlan",
					Description: `(Optional) VLAN number to be used for link local nexthop . Minimum value = 1 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for this pbr rule. If owner node group is not specified then the pbr rule is treated as Striped pbr rule. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "detail",
					Description: `(Optional) To get a detailed view. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nspbr6. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nspbr6 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nspbr6.tf_nspbr6 tf_nspbr6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nspbr6. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nspbr6 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nspbr6.tf_nspbr6 tf_nspbr6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nspbrs",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nspbrs resource is used to configure Policy based routing resource.


`,
			Keywords: []string{
				"ns",
				"nspbrs",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "action",
					Description: `(Required) actions to perform to configure Policy based routing resource. Possible values ` + "`" + `apply` + "`" + `, ` + "`" + `clear` + "`" + ` and ` + "`" + `renumber` + "`" + `. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `nspbrs` + "`" + `. It is a unique string prefixed with ` + "`" + `tf-nspbrs-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `nspbrs` + "`" + `. It is a unique string prefixed with ` + "`" + `tf-nspbrs-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsratecontrol",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsratecontrol resource is used to create rate control resource.


`,
			Keywords: []string{
				"ns",
				"nsratecontrol",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "tcpthreshold",
					Description: `(Optional) Number of SYNs permitted per 10 milliseconds.`,
				},
				resource.Attribute{
					Name:        "udpthreshold",
					Description: `(Optional) Number of UDP packets permitted per 10 milliseconds.`,
				},
				resource.Attribute{
					Name:        "icmpthreshold",
					Description: `(Optional) Number of ICMP packets permitted per 10 milliseconds.`,
				},
				resource.Attribute{
					Name:        "tcprstthreshold",
					Description: `(Optional) The number of TCP RST packets permitted per 10 milli second. zero means rate control is disabled and 0xffffffff means every thing is rate controlled. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsratecontrol. It is a unique string prefixed with "tf-nsratecontrol-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsratecontrol. It is a unique string prefixed with "tf-nsratecontrol-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsrpcnode",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsrpcnode resource is used to manage rpc nodes.


`,
			Keywords: []string{
				"ns",
				"nsrpcnode",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) IP address of the node. This has to be in the same subnet as the NSIP address.`,
				},
				resource.Attribute{
					Name:        "password",
					Description: `(Optional) Password to be used in authentication with the peer system node.`,
				},
				resource.Attribute{
					Name:        "srcip",
					Description: `(Optional) Source IP address to be used to communicate with the peer system node. The default value is 0, which means that the appliance uses the NSIP address as the source IP address.`,
				},
				resource.Attribute{
					Name:        "secure",
					Description: `(Optional) State of the channel when talking to the node. Possible values: [ YES, NO ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsrpcnode. It has the same value as the ` + "`" + `ipaddress` + "`" + ` attribute. ## Import A nsrpcnode can be imported using its ipaddress, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsrpcnode.tf_nsrpcnode 10.78.60.201 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsrpcnode. It has the same value as the ` + "`" + `ipaddress` + "`" + ` attribute. ## Import A nsrpcnode can be imported using its ipaddress, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsrpcnode.tf_nsrpcnode 10.78.60.201 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsservicefunction",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsservicefunction resource is used to create service Function resource.


`,
			Keywords: []string{
				"ns",
				"nsservicefunction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servicefunctionname",
					Description: `(Required) Name of the service function to be created. Leading character must be a number or letter. Other characters allowed, after the first character, are @ _ - . (period) : (colon) # and space ( ). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "ingressvlan",
					Description: `(Required) VLAN ID on which the traffic from service function reaches Citrix ADC. Minimum value = 1 Maximum value = 4094 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsservicefunction. It has the same value as the ` + "`" + `servicefunctionname` + "`" + ` attribute. ## Import A nsservicefunction can be imported using its servicefunctionname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsservicefunction.tf_servicefunc tf_servicefunc ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsservicefunction. It has the same value as the ` + "`" + `servicefunctionname` + "`" + ` attribute. ## Import A nsservicefunction can be imported using its servicefunctionname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsservicefunction.tf_servicefunc tf_servicefunc ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsservicepath",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsservicepath resource is used to create service Path resource.


`,
			Keywords: []string{
				"ns",
				"nsservicepath",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servicepathname",
					Description: `(Required) Name for the Service path. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsservicepath. It has the same value as the ` + "`" + `servicepathname` + "`" + ` attribute. ## Import A nsservicepath can be imported using its servicepathname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsservicepath.tf_servicepath tf_servicepath ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsservicepath. It has the same value as the ` + "`" + `servicepathname` + "`" + ` attribute. ## Import A nsservicepath can be imported using its servicepathname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsservicepath.tf_servicepath tf_servicepath ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsservicepath_nsservicefunction_binding",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsservicepath_nsservicefunction_binding resource is used to bind nsservice function to nsservice path.


`,
			Keywords: []string{
				"ns",
				"nsservicepath",
				"nsservicefunction",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servicepathname",
					Description: `(Required) Name for the Service path. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "servicefunction",
					Description: `(Required) List of service functions constituting the chain. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "index",
					Description: `(Required) The serviceindex of each servicefunction in path. Minimum value = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsservicepath_nsservicefunction_binding. It is the concatenation of ` + "`" + `servicepathname` + "`" + ` and ` + "`" + `servicefunction` + "`" + ` attributes separated by comma. ## Import A nsservicepath_nsservicefunction_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsservicepath_nsservicefunction_binding.tf_binding tf_servicepath,tf_servicefunc ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsservicepath_nsservicefunction_binding. It is the concatenation of ` + "`" + `servicepathname` + "`" + ` and ` + "`" + `servicefunction` + "`" + ` attributes separated by comma. ## Import A nsservicepath_nsservicefunction_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsservicepath_nsservicefunction_binding.tf_binding tf_servicepath,tf_servicefunc ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nssimpleacl",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nssimpleacl resource is used to create simple ACL resource.


`,
			Keywords: []string{
				"ns",
				"nssimpleacl",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "aclname",
					Description: `(Required) Name for the simple ACL rule. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the simple ACL rule is created. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "aclaction",
					Description: `(Required) Drop incoming IPv4 packets that match the simple ACL rule. Possible values: [ DENY ]4094`,
				},
				resource.Attribute{
					Name:        "srcip",
					Description: `(Required) IP address to match against the source IP address of an incoming IPv4 packet.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value =`,
				},
				resource.Attribute{
					Name:        "destport",
					Description: `(Optional) Port number to match against the destination port number of an incoming IPv4 packet. DestPort is mandatory while setting Protocol. Omitting the port number and protocol creates an all-ports and all protocols simple ACL rule, which matches any port and any protocol. In that case, you cannot create another simple ACL rule specifying a specific port and the same source IPv4 address. Minimum value = 1 Maximum value = 65535`,
				},
				resource.Attribute{
					Name:        "protocol",
					Description: `(Optional) Protocol to match against the protocol of an incoming IPv4 packet. You must set this parameter if you have set the Destination Port parameter. Possible values: [ TCP, UDP ]`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Number of seconds, in multiples of four, after which the simple ACL rule expires. If you do not want the simple ACL rule to expire, do not specify a TTL value. Minimum value = 4 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "estsessions",
					Description: `(Optional) . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nssimpleacl. It has the same value as the ` + "`" + `aclname` + "`" + ` attribute. ## Import A nssimpleacl can be imported using its aclname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nssimpleacl.tf_nssimpleacl tf_nssimpleacl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nssimpleacl. It has the same value as the ` + "`" + `aclname` + "`" + ` attribute. ## Import A nssimpleacl can be imported using its aclname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nssimpleacl.tf_nssimpleacl tf_nssimpleacl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nssimpleacl6",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nssimpleacl6 resource is used to create simple ACL6 resource.


`,
			Keywords: []string{
				"ns",
				"nssimpleacl6",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "aclname",
					Description: `(Required) Name for the simple ACL6 rule. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the simple ACL6 rule is created. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "aclaction",
					Description: `(Required) Drop incoming IPv6 packets that match the simple ACL6 rule. Possible values: [ DENY ]`,
				},
				resource.Attribute{
					Name:        "srcipv6",
					Description: `(Required) IP address to match against the source IP address of an incoming IPv6 packet.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "destport",
					Description: `(Optional) Port number to match against the destination port number of an incoming IPv6 packet. DestPort is mandatory while setting Protocol. Omitting the port number and protocol creates an all-ports and all protocol simple ACL6 rule, which matches any port and any protocol. In that case, you cannot create another simple ACL6 rule specifying a specific port and the same source IPv6 address. Minimum value = 1 Maximum value = 65535`,
				},
				resource.Attribute{
					Name:        "protocol",
					Description: `(Optional) Protocol to match against the protocol of an incoming IPv6 packet. You must set this parameter if you set the Destination Port parameter. Possible values: [ TCP, UDP ]`,
				},
				resource.Attribute{
					Name:        "ttl",
					Description: `(Optional) Number of seconds, in multiples of four, after which the simple ACL6 rule expires. If you do not want the simple ACL6 rule to expire, do not specify a TTL value. Minimum value = 4 Maximum value = 2147483647`,
				},
				resource.Attribute{
					Name:        "estsessions",
					Description: `(Optional) . ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nssimpleacl6. It has the same value as the ` + "`" + `aclname` + "`" + ` attribute. ## Import A nssimpleacl6 can be imported using its aclname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nssimpleacl6.tf_nssimpleacl6 tf_nssimpleacl6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nssimpleacl6. It has the same value as the ` + "`" + `aclname` + "`" + ` attribute. ## Import A nssimpleacl6 can be imported using its aclname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nssimpleacl6.tf_nssimpleacl6 tf_nssimpleacl6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsspparams",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsspparams resource is used to create Surge Protection parameter resource.


`,
			Keywords: []string{
				"ns",
				"nsspparams",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "basethreshold",
					Description: `(Optional) Maximum number of server connections that can be opened before surge protection is activated. Minimum value = 0 Maximum value = 32767`,
				},
				resource.Attribute{
					Name:        "throttle",
					Description: `(Optional) Rate at which the system opens connections to the server. Possible values: [ Aggressive, Normal, Relaxed ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsspparams. It is a unique string prefixed with "tf-nsspparams-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsspparams. It is a unique string prefixed with "tf-nsspparams-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nstcpbufparam",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nstcpbufparam resource is used to create tcp buffer parameter resource.


`,
			Keywords: []string{
				"ns",
				"nstcpbufparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "size",
					Description: `(Optional) TCP buffering size per connection, in kilobytes. Minimum value = 4 Maximum value = 20480`,
				},
				resource.Attribute{
					Name:        "memlimit",
					Description: `(Optional) Maximum memory, in megabytes, that can be used for buffering. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstcpbufparam. It is a unique string prefixed with "tf-nstcpbufparam-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstcpbufparam. It is a unique string prefixed with "tf-nstcpbufparam-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nstcpparam",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nstcpparam resource is used to update the ADC tcp parameters.


`,
			Keywords: []string{
				"ns",
				"nstcpparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ws",
					Description: `(Optional) Enable or disable window scaling. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "wsval",
					Description: `(Optional) Factor used to calculate the new window size. This argument is needed only when the window scaling is enabled.`,
				},
				resource.Attribute{
					Name:        "sack",
					Description: `(Optional) Enable or disable Selective ACKnowledgement (SACK). Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "learnvsvrmss",
					Description: `(Optional) Enable or disable maximum segment size (MSS) learning for virtual servers. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "maxburst",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "initialcwnd",
					Description: `(Optional) Initial maximum upper limit on the number of TCP packets that can be outstanding on the TCP link to the server.`,
				},
				resource.Attribute{
					Name:        "recvbuffsize",
					Description: `(Optional) TCP Receive buffer size.`,
				},
				resource.Attribute{
					Name:        "delayedack",
					Description: `(Optional) Timeout for TCP delayed ACK, in milliseconds.`,
				},
				resource.Attribute{
					Name:        "downstaterst",
					Description: `(Optional) Flag to switch on RST on down services. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "nagle",
					Description: `(Optional) Enable or disable the Nagle algorithm on TCP connections. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "limitedpersist",
					Description: `(Optional) Limit the number of persist (zero window) probes. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "oooqsize",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "ackonpush",
					Description: `(Optional) Send immediate positive acknowledgement (ACK) on receipt of TCP packets with PUSH flag. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "maxpktpermss",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "pktperretx",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "minrto",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "slowstartincr",
					Description: `(Optional) Multiplier that determines the rate at which slow start increases the size of the TCP transmission window after each acknowledgement of successful transmission.`,
				},
				resource.Attribute{
					Name:        "maxdynserverprobes",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "synholdfastgiveup",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "maxsynholdperprobe",
					Description: `(Optional) Limit the number of client connections (SYN) waiting for status of single probe. Any new SYN packets will be dropped.`,
				},
				resource.Attribute{
					Name:        "maxsynhold",
					Description: `(Optional) Limit the number of client connections (SYN) waiting for status of probe system wide. Any new SYN packets will be dropped.`,
				},
				resource.Attribute{
					Name:        "msslearninterval",
					Description: `(Optional) Duration, in seconds, to sample the Maximum Segment Size (MSS) of the services. The Citrix ADC determines the best MSS to set for the virtual server based on this sampling. The argument to enable maximum segment size (MSS) for virtual servers must be enabled.`,
				},
				resource.Attribute{
					Name:        "msslearndelay",
					Description: `(Optional) Frequency, in seconds, at which the virtual servers learn the Maximum segment size (MSS) from the services. The argument to enable maximum segment size (MSS) for virtual servers must be enabled.`,
				},
				resource.Attribute{
					Name:        "maxtimewaitconn",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "kaprobeupdatelastactivity",
					Description: `(Optional) Update last activity for KA probes. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "maxsynackretx",
					Description: `(Optional) When 'syncookie' is disabled in the TCP profile that is bound to the virtual server or service, and the number of TCP SYN+ACK retransmission by Citrix ADC for that virtual server or service crosses this threshold, the Citrix ADC responds by using the TCP SYN-Cookie mechanism.`,
				},
				resource.Attribute{
					Name:        "synattackdetection",
					Description: `(Optional) Detect TCP SYN packet flood and send an SNMP trap. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "connflushifnomem",
					Description: `(Optional) Flush an existing connection if no memory can be obtained for new connection. HALF_CLOSED_AND_IDLE: Flush a connection that is closed by us but not by peer, or failing that, a connection that is past configured idle time. New connection fails if no such connection can be found. FIFO: If no half-closed or idle connection can be found, flush the oldest non-management connection, even if it is active. New connection fails if the oldest few connections are management connections. Note: If you enable this setting, you should also consider lowering the zombie timeout and half-close timeout, while setting the Citrix ADC timeout. See Also: connFlushThres argument below. Possible values: [ NONE , HALFCLOSED_AND_IDLE, FIFO ]`,
				},
				resource.Attribute{
					Name:        "connflushthres",
					Description: `(Optional) Flush an existing connection (as configured through -connFlushIfNoMem FIFO) if the system has more than specified number of connections, and a new connection is to be established. Note: This value may be rounded down to be a whole multiple of the number of packet engines running.`,
				},
				resource.Attribute{
					Name:        "mptcpconcloseonpassivesf",
					Description: `(Optional) Accept DATA_FIN/FAST_CLOSE on passive subflow. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mptcpchecksum",
					Description: `(Optional) Use MPTCP DSS checksum. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mptcpsftimeout",
					Description: `(Optional) The timeout value in seconds for idle mptcp subflows. If this timeout is not set, idle subflows are cleared after cltTimeout of vserver.`,
				},
				resource.Attribute{
					Name:        "mptcpsfreplacetimeout",
					Description: `(Optional) The minimum idle time value in seconds for idle mptcp subflows after which the sublow is replaced by new incoming subflow if maximum subflow limit is reached. The priority for replacement is given to those subflow without any transaction.`,
				},
				resource.Attribute{
					Name:        "mptcpmaxsf",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "mptcpmaxpendingsf",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "mptcppendingjointhreshold",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "mptcprtostoswitchsf",
					Description: `(Optional) Number of RTO's at subflow level, after which MPCTP should start using other subflow.`,
				},
				resource.Attribute{
					Name:        "mptcpusebackupondss",
					Description: `(Optional) When enabled, if NS receives a DSS on a backup subflow, NS will start using that subflow to send data. And if disabled, NS will continue to transmit on current chosen subflow. In case there is some error on a subflow (like RTO's/RST etc.) then NS can choose a backup subflow irrespective of this tunable. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tcpmaxretries",
					Description: `(Optional) Number of RTO's after which a connection should be freed.`,
				},
				resource.Attribute{
					Name:        "mptcpimmediatesfcloseonfin",
					Description: `(Optional) Allow subflows to close immediately on FIN before the DATA_FIN exchange is completed at mptcp level. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mptcpclosemptcpsessiononlastsfclose",
					Description: `(Optional) Allow to send DATA FIN or FAST CLOSE on mptcp connection while sending FIN or RST on the last subflow. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tcpfastopencookietimeout",
					Description: `(Optional) Timeout in seconds after which a new TFO Key is computed for generating TFO Cookie. If zero, the same key is used always. If timeout is less than 120seconds, NS defaults to 120seconds timeout.`,
				},
				resource.Attribute{
					Name:        "autosyncookietimeout",
					Description: `(Optional) Timeout for the server to function in syncookie mode after the synattack. This is valid if TCP syncookie is disabled on the profile and server acts in non syncookie mode by default.`,
				},
				resource.Attribute{
					Name:        "tcpfintimeout",
					Description: `(Optional) The amount of time in seconds, after which a TCP connnection in the TCP TIME-WAIT state is flushed. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstcpparam. It is a unique string prefixed with "tf-nstcpparam-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstcpparam. It is a unique string prefixed with "tf-nstcpparam-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nstcpprofile",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nstcpprofile resource is used to manage the TCP profile in the target ADC.


`,
			Keywords: []string{
				"ns",
				"nstcpprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for a TCP profile. The name of a TCP profile cannot be changed after it is created.`,
				},
				resource.Attribute{
					Name:        "ws",
					Description: `(Optional) Enable or disable window scaling. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sack",
					Description: `(Optional) Enable or disable Selective ACKnowledgement (SACK). Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "wsval",
					Description: `(Optional) Factor used to calculate the new window size. This argument is needed only when window scaling is enabled.`,
				},
				resource.Attribute{
					Name:        "nagle",
					Description: `(Optional) Enable or disable the Nagle algorithm on TCP connections. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ackonpush",
					Description: `(Optional) Send immediate positive acknowledgement (ACK) on receipt of TCP packets with PUSH flag. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mss",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "maxburst",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "initialcwnd",
					Description: `(Optional) Initial maximum upper limit on the number of TCP packets that can be outstanding on the TCP link to the server.`,
				},
				resource.Attribute{
					Name:        "delayedack",
					Description: `(Optional) Timeout for TCP delayed ACK, in milliseconds.`,
				},
				resource.Attribute{
					Name:        "oooqsize",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "maxpktpermss",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "pktperretx",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "minrto",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "slowstartincr",
					Description: `(Optional) Multiplier that determines the rate at which slow start increases the size of the TCP transmission window after each acknowledgement of successful transmission.`,
				},
				resource.Attribute{
					Name:        "buffersize",
					Description: `(Optional) TCP buffering size, in bytes.`,
				},
				resource.Attribute{
					Name:        "syncookie",
					Description: `(Optional) Enable or disable the SYNCOOKIE mechanism for TCP handshake with clients. Disabling SYNCOOKIE prevents SYN attack protection on the Citrix ADC. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "kaprobeupdatelastactivity",
					Description: `(Optional) Update last activity for the connection after receiving keep-alive (KA) probes. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "flavor",
					Description: `(Optional) Set TCP congestion control algorithm. Possible values: [ Default, Westwood, BIC, CUBIC, Nile ]`,
				},
				resource.Attribute{
					Name:        "dynamicreceivebuffering",
					Description: `(Optional) Enable or disable dynamic receive buffering. When enabled, allows the receive buffer to be adjusted dynamically based on memory and network conditions. Note: The buffer size argument must be set for dynamic adjustments to take place. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ka",
					Description: `(Optional) Send periodic TCP keep-alive (KA) probes to check if peer is still up. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "kaconnidletime",
					Description: `(Optional) Duration, in seconds, for the connection to be idle, before sending a keep-alive (KA) probe.`,
				},
				resource.Attribute{
					Name:        "kamaxprobes",
					Description: `(Optional) Number of keep-alive (KA) probes to be sent when not acknowledged, before assuming the peer to be down.`,
				},
				resource.Attribute{
					Name:        "kaprobeinterval",
					Description: `(Optional) Time interval, in seconds, before the next keep-alive (KA) probe, if the peer does not respond.`,
				},
				resource.Attribute{
					Name:        "sendbuffsize",
					Description: `(Optional) TCP Send Buffer Size.`,
				},
				resource.Attribute{
					Name:        "mptcp",
					Description: `(Optional) Enable or disable Multipath TCP. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "establishclientconn",
					Description: `(Optional) Establishing Client Client connection on First data/ Final-ACK / Automatic. Possible values: [ AUTOMATIC, CONN_ESTABLISHED, ON_FIRST_DATA ]`,
				},
				resource.Attribute{
					Name:        "tcpsegoffload",
					Description: `(Optional) Offload TCP segmentation to the NIC. If set to AUTOMATIC, TCP segmentation will be offloaded to the NIC, if the NIC supports it. Possible values: [ AUTOMATIC, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "rstwindowattenuate",
					Description: `(Optional) Enable or disable RST window attenuation to protect against spoofing. When enabled, will reply with corrective ACK when a sequence number is invalid. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "rstmaxack",
					Description: `(Optional) Enable or disable acceptance of RST that is out of window yet echoes highest ACK sequence number. Useful only in proxy mode. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "spoofsyndrop",
					Description: `(Optional) Enable or disable drop of invalid SYN packets to protect against spoofing. When disabled, established connections will be reset when a SYN packet is received. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ecn",
					Description: `(Optional) Enable or disable TCP Explicit Congestion Notification. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mptcpdropdataonpreestsf",
					Description: `(Optional) Enable or disable silently dropping the data on Pre-Established subflow. When enabled, DSS data packets are dropped silently instead of dropping the connection when data is received on pre established subflow. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mptcpfastopen",
					Description: `(Optional) Enable or disable Multipath TCP fastopen. When enabled, DSS data packets are accepted before receiving the third ack of SYN handshake. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mptcpsessiontimeout",
					Description: `(Optional) MPTCP session timeout in seconds. If this value is not set, idle MPTCP sessions are flushed after vserver's client idle timeout.`,
				},
				resource.Attribute{
					Name:        "timestamp",
					Description: `(Optional) Enable or Disable TCP Timestamp option (RFC 1323). Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dsack",
					Description: `(Optional) Enable or disable DSACK. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ackaggregation",
					Description: `(Optional) Enable or disable ACK Aggregation. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "frto",
					Description: `(Optional) Enable or disable FRTO (Forward RTO-Recovery). Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "maxcwnd",
					Description: `(Optional) TCP Maximum Congestion Window.`,
				},
				resource.Attribute{
					Name:        "fack",
					Description: `(Optional) Enable or disable FACK (Forward ACK). Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tcpmode",
					Description: `(Optional) TCP Optimization modes TRANSPARENT / ENDPOINT. Possible values: [ TRANSPARENT, ENDPOINT ]`,
				},
				resource.Attribute{
					Name:        "tcpfastopen",
					Description: `(Optional) Enable or disable TCP Fastopen. When enabled, NS can receive or send Data in SYN or SYN-ACK packets. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "hystart",
					Description: `(Optional) Enable or disable CUBIC Hystart. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dupackthresh",
					Description: `(Optional) TCP dupack threshold.`,
				},
				resource.Attribute{
					Name:        "burstratecontrol",
					Description: `(Optional) TCP Burst Rate Control DISABLED/FIXED/DYNAMIC. FIXED requires a TCP rate to be set. Possible values: [ DISABLED, FIXED, DYNAMIC ]`,
				},
				resource.Attribute{
					Name:        "tcprate",
					Description: `(Optional) TCP connection payload send rate in Kb/s.`,
				},
				resource.Attribute{
					Name:        "rateqmax",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "drophalfclosedconnontimeout",
					Description: `(Optional) Silently drop tcp half closed connections on idle timeout. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dropestconnontimeout",
					Description: `(Optional) Silently drop tcp established connections on idle timeout. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "applyadaptivetcp",
					Description: `(Optional) Apply Adaptive TCP optimizations. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tcpfastopencookiesize",
					Description: `(Optional) TCP FastOpen Cookie size. This accepts only even numbers. Odd number is trimmed down to nearest even number.`,
				},
				resource.Attribute{
					Name:        "taillossprobe",
					Description: `(Optional) TCP tail loss probe optimizations. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "clientiptcpoption",
					Description: `(Optional) Client IP in TCP options. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "clientiptcpoptionnumber",
					Description: `(Optional) ClientIP TCP Option number.`,
				},
				resource.Attribute{
					Name:        "mpcapablecbit",
					Description: `(Optional) ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstcpprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nstcpprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nstcpprofile.tf_nsprofile tf_nsprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstcpprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nstcpprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nstcpprofile.tf_nsprofile tf_nsprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nstimeout",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nstimeout resource is used to create nstimeout.


`,
			Keywords: []string{
				"ns",
				"nstimeout",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "zombie",
					Description: `(Optional) Interval, in seconds, at which the Citrix ADC zombie cleanup process must run. This process cleans up inactive TCP connections. Minimum value = 1 Maximum value = 600`,
				},
				resource.Attribute{
					Name:        "client",
					Description: `(Optional) Client idle timeout (in seconds). If zero, the service-type default value is taken when service is created. Minimum value = 0 Maximum value = 18000`,
				},
				resource.Attribute{
					Name:        "server",
					Description: `(Optional) Server idle timeout (in seconds). If zero, the service-type default value is taken when service is created. Minimum value = 0 Maximum value = 18000`,
				},
				resource.Attribute{
					Name:        "httpclient",
					Description: `(Optional) Global idle timeout, in seconds, for client connections of HTTP service type. This value is over ridden by the client timeout that is configured on individual entities. Minimum value = 0 Maximum value = 18000`,
				},
				resource.Attribute{
					Name:        "httpserver",
					Description: `(Optional) Global idle timeout, in seconds, for server connections of HTTP service type. This value is over ridden by the server timeout that is configured on individual entities. Minimum value = 0 Maximum value = 18000`,
				},
				resource.Attribute{
					Name:        "tcpclient",
					Description: `(Optional) Global idle timeout, in seconds, for non-HTTP client connections of TCP service type. This value is over ridden by the client timeout that is configured on individual entities. Minimum value = 0 Maximum value = 18000`,
				},
				resource.Attribute{
					Name:        "tcpserver",
					Description: `(Optional) Global idle timeout, in seconds, for non-HTTP server connections of TCP service type. This value is over ridden by the server timeout that is configured on entities. Minimum value = 0 Maximum value = 18000`,
				},
				resource.Attribute{
					Name:        "anyclient",
					Description: `(Optional) Global idle timeout, in seconds, for non-TCP client connections. This value is over ridden by the client timeout that is configured on individual entities. Minimum value = 0 Maximum value = 31536000`,
				},
				resource.Attribute{
					Name:        "anyserver",
					Description: `(Optional) Global idle timeout, in seconds, for non TCP server connections. This value is over ridden by the server timeout that is configured on individual entities. Minimum value = 0 Maximum value = 31536000`,
				},
				resource.Attribute{
					Name:        "anytcpclient",
					Description: `(Optional) Global idle timeout, in seconds, for TCP client connections. This value takes precedence over entity level timeout settings (vserver/service). This is applicable only to transport protocol TCP. Minimum value = 0 Maximum value = 31536000`,
				},
				resource.Attribute{
					Name:        "anytcpserver",
					Description: `(Optional) Global idle timeout, in seconds, for TCP server connections. This value takes precedence over entity level timeout settings ( vserver/service). This is applicable only to transport protocol TCP. Minimum value = 0 Maximum value = 31536000`,
				},
				resource.Attribute{
					Name:        "halfclose",
					Description: `(Optional) Idle timeout, in seconds, for connections that are in TCP half-closed state. Minimum value = 1 Maximum value = 600`,
				},
				resource.Attribute{
					Name:        "nontcpzombie",
					Description: `(Optional) Interval at which the zombie clean-up process for non-TCP connections should run. Inactive IP NAT connections will be cleaned up. Minimum value = 1 Maximum value = 600`,
				},
				resource.Attribute{
					Name:        "reducedfintimeout",
					Description: `(Optional) Alternative idle timeout, in seconds, for closed TCP NATPCB connections. Minimum value = 1 Maximum value = 300`,
				},
				resource.Attribute{
					Name:        "reducedrsttimeout",
					Description: `(Optional) Timer interval, in seconds, for abruptly terminated TCP NATPCB connections. Minimum value = 0 Maximum value = 300`,
				},
				resource.Attribute{
					Name:        "newconnidletimeout",
					Description: `(Optional) Timer interval, in seconds, for new TCP NATPCB connections on which no data was received. Minimum value = 1 Maximum value = 120 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstimeout. It is a unique string prefixed with "tf-nstimeout-`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstimeout. It is a unique string prefixed with "tf-nstimeout-`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nstimer",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nstimer resource is used to create Timer resource.


`,
			Keywords: []string{
				"ns",
				"nstimer",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Timer name. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "interval",
					Description: `(Optional) The frequency at which the policies bound to this timer are invoked. The minimum value is 20 msec. The maximum value is 20940 in seconds and 349 in minutes. Minimum value = 1 Maximum value = 20940000`,
				},
				resource.Attribute{
					Name:        "unit",
					Description: `(Optional) Timer interval unit. Possible values: [ SEC, MIN ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comments associated with this timer.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) The new name of the timer. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstimer. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nstimer can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nstimer.tf_nstimer tf_nstimer ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstimer. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nstimer can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nstimer.tf_nstimer tf_nstimer ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nstrafficdomain",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nstrafficdomain resource is used to create Traffic Domain resource.


`,
			Keywords: []string{
				"ns",
				"nstrafficdomain",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "td",
					Description: `(Required) Integer value that uniquely identifies a traffic domain. Minimum value = 1 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "aliasname",
					Description: `(Optional) Name of traffic domain being added. Minimum length = 1 Maximum length = 31`,
				},
				resource.Attribute{
					Name:        "vmac",
					Description: `(Optional) Associate the traffic domain with a VMAC address instead of with VLANs. The Citrix ADC then sends the VMAC address of the traffic domain in all responses to ARP queries for network entities in that domain. As a result, the ADC can segregate subsequent incoming traffic for this traffic domain on the basis of the destination MAC address, because the destination MAC address is the VMAC address of the traffic domain. After creating entities on a traffic domain, you can easily manage and monitor them by performing traffic domain level operations. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstrafficdomain. It has the same value as the ` + "`" + `td` + "`" + ` attribute. ## Import A nstrafficdomain can be imported using its td, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nstrafficdomain.tf_trafficdomain 2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstrafficdomain. It has the same value as the ` + "`" + `td` + "`" + ` attribute. ## Import A nstrafficdomain can be imported using its td, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nstrafficdomain.tf_trafficdomain 2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nstrafficdomain_bridgegroup_binding",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nstrafficdomain_bridgegroup_binding resource is used to bind bridgegroup to nstrafficdomain resource.


`,
			Keywords: []string{
				"ns",
				"nstrafficdomain",
				"bridgegroup",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "td",
					Description: `(Required) Integer value that uniquely identifies a traffic domain. Minimum value = 1 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "bridgegroup",
					Description: `(Required) ID of the configured bridge to bind to this traffic domain. More than one bridge group can be bound to a traffic domain, but the same bridge group cannot be a part of multiple traffic domains. Minimum value = 1 Maximum value = 1000 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstrafficdomain_bridgegroup_binding. It is the concatenation of ` + "`" + `td` + "`" + ` and ` + "`" + `bridgegroup` + "`" + ` attributes separated by comma. ## Import A nstrafficdomain_bridgegroup_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nstrafficdomain_bridgegroup_binding.tf_binding 2,2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstrafficdomain_bridgegroup_binding. It is the concatenation of ` + "`" + `td` + "`" + ` and ` + "`" + `bridgegroup` + "`" + ` attributes separated by comma. ## Import A nstrafficdomain_bridgegroup_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nstrafficdomain_bridgegroup_binding.tf_binding 2,2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nstrafficdomain_vlan_binding",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nstrafficdomain_vlan_binding resource is used to bind vlan to the nstrafficdomain.


`,
			Keywords: []string{
				"ns",
				"nstrafficdomain",
				"vlan",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "td",
					Description: `(Required) Integer value that uniquely identifies a traffic domain. Minimum value = 1 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Required) ID of the VLAN to bind to this traffic domain. More than one VLAN can be bound to a traffic domain, but the same VLAN cannot be a part of multiple traffic domains. Minimum value = 1 Maximum value = 4094 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstrafficdomain_vlan_binding. It is the concatenation of ` + "`" + `td` + "`" + ` and ` + "`" + `vlan` + "`" + ` separated by comma ",". ## Import A nstrafficdomain_vlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nstrafficdomain_vlan_binding.tf_binding 2,20 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstrafficdomain_vlan_binding. It is the concatenation of ` + "`" + `td` + "`" + ` and ` + "`" + `vlan` + "`" + ` separated by comma ",". ## Import A nstrafficdomain_vlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nstrafficdomain_vlan_binding.tf_binding 2,20 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nstrafficdomain_vxlan_binding",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nstrafficdomain_vxlan_binding resource is used to bind vxlan to nstrafficdomain resource.


`,
			Keywords: []string{
				"ns",
				"nstrafficdomain",
				"vxlan",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "td",
					Description: `(Required) Integer value that uniquely identifies a traffic domain. Minimum value = 1 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "vxlan",
					Description: `(Required) ID of the VXLAN to bind to this traffic domain. More than one VXLAN can be bound to a traffic domain, but the same VXLAN cannot be a part of multiple traffic domains. Minimum value = 1 Maximum value = 16777215 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstrafficdomain_vxlan_binding. It is the concatenation of ` + "`" + `td` + "`" + ` and ` + "`" + `vxlan` + "`" + ` attributes separated by comma. ## Import A nstrafficdomain_vxlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nstrafficdomain_vxlan_binding.tf_binding 2,123 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nstrafficdomain_vxlan_binding. It is the concatenation of ` + "`" + `td` + "`" + ` and ` + "`" + `vxlan` + "`" + ` attributes separated by comma. ## Import A nstrafficdomain_vxlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nstrafficdomain_vxlan_binding.tf_binding 2,123 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsvariable",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsvariable resource is used to create variable resource.


`,
			Keywords: []string{
				"ns",
				"nsvariable",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Variable name. This follows the same syntax rules as other expression entity names: It must begin with an alpha character (A-Z or a-z) or an underscore (_). The rest of the characters must be alpha, numeric (0-9) or underscores. It cannot be re or xp (reserved for regular and XPath expressions). It cannot be an expression reserved word (e.g. SYS or HTTP). It cannot be used for an existing expression object (HTTP callout, patset, dataset, stringmap, or named expression). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) Specification of the variable type; one of the following: ulong - singleton variable with an unsigned 64-bit value. text(value-max-size) - singleton variable with a text string value. map(text(key-max-size),ulong,max-entries) - map of text string keys to unsigned 64-bit values. map(text(key-max-size),text(value-max-size),max-entries) - map of text string keys to text string values. where value-max-size is a positive integer that is the maximum number of bytes in a text string value. key-max-size is a positive integer that is the maximum number of bytes in a text string key. max-entries is a positive integer that is the maximum number of entries in a map variable. For a global singleton text variable, value-max-size <= 64000. For a global map with ulong values, key-max-size <= 64000. For a global map with text values, key-max-size + value-max-size <= 64000. max-entries is a positive integer that is the maximum number of entries in a map variable. This has a theoretical maximum of 2^64-1, but in actual use will be much smaller, considering the memory available for use by the map. Example: map(text(10),text(20),100) specifies a map of text string keys (max size 10 bytes) to text string values (max size 20 bytes), with 100 max entries. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "scope",
					Description: `(Optional) Scope of the variable: global - (default) one set of values visible across all Packet Engines on a standalone Citrix ADC, an HA pair, or all nodes of a cluster transaction - one value for each request-response transaction (singleton variables only; no expiration). Possible values: [ global, transaction ]`,
				},
				resource.Attribute{
					Name:        "iffull",
					Description: `(Optional) Action to perform if an assignment to a map exceeds its configured max-entries: lru - (default) reuse the least recently used entry in the map. undef - force the assignment to return an undefined (Undef) result to the policy executing the assignment. Possible values: [ undef, lru ]`,
				},
				resource.Attribute{
					Name:        "ifvaluetoobig",
					Description: `(Optional) Action to perform if an value is assigned to a text variable that exceeds its configured max-size, or if a key is used that exceeds its configured max-size: truncate - (default) truncate the text string to the first max-size bytes and proceed. undef - force the assignment or expression evaluation to return an undefined (Undef) result to the policy executing the assignment or expression. Possible values: [ undef, truncate ]`,
				},
				resource.Attribute{
					Name:        "ifnovalue",
					Description: `(Optional) Action to perform if on a variable reference in an expression if the variable is single-valued and uninitialized or if the variable is a map and there is no value for the specified key: init - (default) initialize the single-value variable, or create a map entry for the key and the initial value, using the -init value or its default. undef - force the expression evaluation to return an undefined (Undef) result to the policy executing the expression. Possible values: [ undef, init ]`,
				},
				resource.Attribute{
					Name:        "init",
					Description: `(Optional) Initialization value for this variable, to which a singleton variable or map entry will be set if it is referenced before an assignment action has assigned it a value. If the singleton variable or map entry already has been assigned a value, setting this parameter will have no effect on that variable value. Default: 0 for ulong, NULL for text.`,
				},
				resource.Attribute{
					Name:        "expires",
					Description: `(Optional) Value expiration in seconds. If the value is not referenced within the expiration period it will be deleted. 0 (the default) means no expiration. Minimum value = 0 Maximum value = 31622400`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comments associated with this variable. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsvariable. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nsvariable can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsvariable.tf_nsvariable tf_nsvariable ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsvariable. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A nsvariable can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsvariable.tf_nsvariable tf_nsvariable ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsvpxparam",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsvpxparam resource is used to set ns vpx parameters.


`,
			Keywords: []string{
				"ns",
				"nsvpxparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "masterclockcpu1",
					Description: `(Optional) This setting applicable in virtual appliances, to move master clock source cpu from management cpu cpu0 to cpu1 ie PE0.`,
				},
				resource.Attribute{
					Name:        "cpuyield",
					Description: `(Optional) This setting applicable in virtual appliances, is to affect the cpu yield(relinquishing the cpu resources) in any hypervised environment.`,
				},
				resource.Attribute{
					Name:        "ownernode",
					Description: `(Optional) ID of the cluster node for which you are setting the cpuyield. It can be configured only through the cluster IP address. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsvpxparam. It is a unique string prefixed with "tf-nsvpxparam-".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsvpxparam. It is a unique string prefixed with "tf-nsvpxparam-".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsweblogparam",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsweblogparam resource is used to create Web log parameters resource.


`,
			Keywords: []string{
				"ns",
				"nsweblogparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "buffersizemb",
					Description: `(Optional) Buffer size, in MB, allocated for log transaction data on the system. The maximum value is limited to the memory available on the system. Minimum value = 1 Maximum value = 4294967294LU`,
				},
				resource.Attribute{
					Name:        "customreqhdrs",
					Description: `(Optional) Name(s) of HTTP request headers whose values should be exported by the Web Logging feature. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "customrsphdrs",
					Description: `(Optional) Name(s) of HTTP response headers whose values should be exported by the Web Logging feature. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsweblogparam. It is a unique string prefixed with "tf-nsweblogparam-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsweblogparam. It is a unique string prefixed with "tf-nsweblogparam-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_nsxmlnamespace",
			Category:         "NS",
			ShortDescription: ``,
			Description: `

The nsxmlnamespace resource is used to create XML namespace resource.


`,
			Keywords: []string{
				"ns",
				"nsxmlnamespace",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "prefix",
					Description: `(Required) XML prefix. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "Namespace",
					Description: `(Required) Expanded namespace for which the XML prefix is provided. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "description",
					Description: `(Optional) Description for the prefix. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsxmlnamespace. It has the same value as the ` + "`" + `prefix` + "`" + ` attribute. ## Import A nsxmlnamespace can be imported using its prefix, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsxmlnamespace.tf_nsxmlnamespace tf_nsxmlnamespace ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the nsxmlnamespace. It has the same value as the ` + "`" + `prefix` + "`" + ` attribute. ## Import A nsxmlnamespace can be imported using its prefix, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_nsxmlnamespace.tf_nsxmlnamespace tf_nsxmlnamespace ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ntpparam",
			Category:         "NTP",
			ShortDescription: ``,
			Description: `

The ntpparam resource is used to update ntpparam.


`,
			Keywords: []string{
				"ntp",
				"ntpparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "authentication",
					Description: `(Optional) Apply NTP authentication, which enables the NTP client (Citrix ADC) to verify that the server is in fact known and trusted. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "trustedkey",
					Description: `(Optional) Key identifiers that are trusted for server authentication with symmetric key cryptography in the keys file. Minimum value = 1 Maximum value = 65534`,
				},
				resource.Attribute{
					Name:        "autokeylogsec",
					Description: `(Optional) Autokey protocol requires the keys to be refreshed periodically. This parameter specifies the interval between regenerations of new session keys. In seconds, expressed as a power of 2. Minimum value = 0 Maximum value = 32`,
				},
				resource.Attribute{
					Name:        "revokelogsec",
					Description: `(Optional) Interval between re-randomizations of the autokey seeds to prevent brute-force attacks on the autokey algorithms. Minimum value = 0 Maximum value = 32 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ntpparam. It is a unique string prefixed with ` + "`" + `tf-ntpparam-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ntpparam. It is a unique string prefixed with ` + "`" + `tf-ntpparam-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ntpserver",
			Category:         "NTP",
			ShortDescription: ``,
			Description: `

The ntpserver resource is used to create ntpserver.


`,
			Keywords: []string{
				"ntp",
				"ntpserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "serverip",
					Description: `(Optional) IP address of the NTP server.`,
				},
				resource.Attribute{
					Name:        "servername",
					Description: `(Optional) Fully qualified domain name of the NTP server.`,
				},
				resource.Attribute{
					Name:        "autokey",
					Description: `(Optional) Use the Autokey protocol for key management for this server, with the cryptographic values (for example, symmetric key, host and public certificate files, and sign key) generated by the ntp-keygen utility. To require authentication for communication with the server, you must set either the value of this parameter or the key parameter.`,
				},
				resource.Attribute{
					Name:        "key",
					Description: `(Optional) Key to use for encrypting authentication fields. All packets sent to and received from the server must include authentication fields encrypted by using this key. To require authentication for communication with the server, you must set either the value of this parameter or the autokey parameter.`,
				},
				resource.Attribute{
					Name:        "maxpoll",
					Description: `(Optional) Maximum time after which the NTP server must poll the NTP messages. In seconds, expressed as a power of 2.`,
				},
				resource.Attribute{
					Name:        "minpoll",
					Description: `(Optional) Minimum time after which the NTP server must poll the NTP messages. In seconds, expressed as a power of 2.`,
				},
				resource.Attribute{
					Name:        "preferredntpserver",
					Description: `(Optional) Preferred NTP server. The Citrix ADC chooses this NTP server for time synchronization among a set of correctly operating hosts. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ntpserver. It has the same value as the ` + "`" + `serverip` + "`" + ` or ` + "`" + `servername` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ntpserver. It has the same value as the ` + "`" + `serverip` + "`" + ` or ` + "`" + `servername` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ntpsync",
			Category:         "NTP",
			ShortDescription: ``,
			Description: `

The ntpsync resource is used to enable/disable ntpsync.


`,
			Keywords: []string{
				"ntp",
				"ntpsync",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "state",
					Description: `(Required) Enable or disable ntpsync. Possible values: ENABLED, DISABLED ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ntpsync. It is a unique string prefixed with ` + "`" + `tf-ntpsync-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ntpsync. It is a unique string prefixed with ` + "`" + `tf-ntpsync-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_onlinkipv6prefix",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The onlinkipv6prefix resource is used to create onlinkipv6prefix.


`,
			Keywords: []string{
				"network",
				"onlinkipv6prefix",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipv6prefix",
					Description: `(Required) Onlink prefixes for RA messages.`,
				},
				resource.Attribute{
					Name:        "onlinkprefix",
					Description: `(Optional) RA Prefix onlink flag. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "autonomusprefix",
					Description: `(Optional) RA Prefix Autonomus flag. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "depricateprefix",
					Description: `(Optional) Depricate the prefix. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "decrementprefixlifetimes",
					Description: `(Optional) RA Prefix Autonomus flag. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "prefixvalidelifetime",
					Description: `(Optional) Valide life time of the prefix, in seconds.`,
				},
				resource.Attribute{
					Name:        "prefixpreferredlifetime",
					Description: `(Optional) Preferred life time of the prefix, in seconds. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the onlinkipv6prefix. It has the same value as the ` + "`" + `ipv6prefix` + "`" + ` attribute. ## Import A onlinkipv6prefix can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_onlinkipv6prefix.tf_onlinkipv6prefix 8000::/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the onlinkipv6prefix. It has the same value as the ` + "`" + `ipv6prefix` + "`" + ` attribute. ## Import A onlinkipv6prefix can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_onlinkipv6prefix.tf_onlinkipv6prefix 8000::/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_password_resetter",
			Category:         "Utility",
			ShortDescription: ``,
			Description: `

This resource is used to perform the default password reset operation.


`,
			Keywords: []string{
				"utility",
				"password",
				"resetter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "username",
					Description: `(Required) User name for the operation.`,
				},
				resource.Attribute{
					Name:        "password",
					Description: `(Required) The default password.`,
				},
				resource.Attribute{
					Name:        "new_password",
					Description: `(Required) The new password ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the password_resetter. It is a random string prefixed with "tf-password-resetter-".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the password_resetter. It is a random string prefixed with "tf-password-resetter-".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_pcpprofile",
			Category:         "PCP",
			ShortDescription: ``,
			Description: `

The pcpprofile resource is used to create pcpprofile.


`,
			Keywords: []string{
				"pcp",
				"pcpprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the PCP Profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my pcpProfile" or my pcpProfile).`,
				},
				resource.Attribute{
					Name:        "announcemulticount",
					Description: `(Optional) Integer value that identify the number announce message to be send.`,
				},
				resource.Attribute{
					Name:        "mapping",
					Description: `(Optional) This argument is for enabling/disabling the MAP opcode of current PCP Profile`,
				},
				resource.Attribute{
					Name:        "maxmaplife",
					Description: `(Optional) Integer value that identify the maximum mapping lifetime (in seconds) for a pcp profile. default(86400s = 24Hours).`,
				},
				resource.Attribute{
					Name:        "minmaplife",
					Description: `(Optional) Integer value that identify the minimum mapping lifetime (in seconds) for a pcp profile. default(120s)`,
				},
				resource.Attribute{
					Name:        "peer",
					Description: `(Optional) This argument is for enabling/disabling the PEER opcode of current PCP Profile`,
				},
				resource.Attribute{
					Name:        "thirdparty",
					Description: `(Optional) This argument is for enabling/disabling the THIRD PARTY opcode of current PCP Profile ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the pcpprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A pcpprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_pcpprofile.tf_pcpprofile my_pcpprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the pcpprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A pcpprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_pcpprofile.tf_pcpprofile my_pcpprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_pcpserver",
			Category:         "PCP",
			ShortDescription: ``,
			Description: `

The pcpserverresource is used to create pcpserver.


`,
			Keywords: []string{
				"pcp",
				"pcpserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) The IP address of the PCP server.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the PCP server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my pcpServer" or my pcpServer).`,
				},
				resource.Attribute{
					Name:        "pcpprofile",
					Description: `(Optional) pcp profile name`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Port number for the PCP server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the pcpserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A pcpserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_pcpserver.tf_pcpserver my_pcpserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the pcpserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A pcpserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_pcpserver.tf_pcpserver my_pcpserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_pinger",
			Category:         "Utility",
			ShortDescription: ``,
			Description: `

The ping resource is used to send ping requests from the target ADC.


`,
			Keywords: []string{
				"utility",
				"pinger",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "c",
					Description: `(Optional) Number of packets to send. The default value is infinite. For Nitro API, defalut value is taken as 5.`,
				},
				resource.Attribute{
					Name:        "i",
					Description: `(Optional) Waiting time, in seconds. The default value is 1 second.`,
				},
				resource.Attribute{
					Name:        "n",
					Description: `(Optional) Numeric output only. No name resolution.`,
				},
				resource.Attribute{
					Name:        "p",
					Description: `(Optional) Pattern to fill in packets. Can be up to 16 bytes, useful for diagnosing data-dependent problems.`,
				},
				resource.Attribute{
					Name:        "q",
					Description: `(Optional) Quiet output. Only the summary is printed. For Nitro API, this flag is set by default.`,
				},
				resource.Attribute{
					Name:        "s",
					Description: `(Optional) Data size, in bytes. The default value is 56.`,
				},
				resource.Attribute{
					Name:        "t",
					Description: `(Optional) Time-out, in seconds, before ping exits.`,
				},
				resource.Attribute{
					Name:        "hostname",
					Description: `(Optional) Address of host to ping.`,
				},
				resource.Attribute{
					Name:        "forcenew_id_set",
					Description: `(Optional) A set of terraform resource ids. Any change in the set will trigger the execution of the pinger. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the pinger. It is a random string prefixed with "tf-pinger-".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the pinger. It is a random string prefixed with "tf-pinger-".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_policydataset",
			Category:         "Policy",
			ShortDescription: ``,
			Description: `

The policydataset resource is used to create policy data sets.


`,
			Keywords: []string{
				"policy",
				"policydataset",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name of the dataset. Must not exceed 127 characters.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of value to bind to the dataset. Possible values: [ ipv4, number, ipv6, ulong, double, mac ]`,
				},
				resource.Attribute{
					Name:        "indextype",
					Description: `(Optional) Index type. Possible values: [ Auto-generated, User-defined ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this dataset or a data bound to this dataset. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policydataset. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A policydataset can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policydataset.tf_dataset tf_dataset ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policydataset. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A policydataset can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policydataset.tf_dataset tf_dataset ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_policydataset_value_binding",
			Category:         "Policy",
			ShortDescription: ``,
			Description: `

The policydataset_value_binding resource is used to add values to a policydataset.


`,
			Keywords: []string{
				"policy",
				"policydataset",
				"value",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the dataset to which to bind the value.`,
				},
				resource.Attribute{
					Name:        "value",
					Description: `(Required) Value of the specified type that is associated with the dataset.`,
				},
				resource.Attribute{
					Name:        "index",
					Description: `(Optional) The index of the value (ipv4, ipv6, number) associated with the set.`,
				},
				resource.Attribute{
					Name:        "endrange",
					Description: `(Optional) The dataset entry is a range from <value> through <end_range>, inclusive.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this dataset or a data bound to this dataset. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policydataset_value_binding. Its value is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `value` + "`" + ` attributes separated by a comma: ` + "`" + `<name>,<value>` + "`" + `. ## Import A policydataset_value_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policydataset_value_binding.tf_value1 tf_dataset,100 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policydataset_value_binding. Its value is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `value` + "`" + ` attributes separated by a comma: ` + "`" + `<name>,<value>` + "`" + `. ## Import A policydataset_value_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policydataset_value_binding.tf_value1 tf_dataset,100 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_policyexpression",
			Category:         "Policy",
			ShortDescription: ``,
			Description: `

The policyexpression resource is used to create policy expressions.


`,
			Keywords: []string{
				"policy",
				"policyexpression",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Unique name for the expression. Not case sensitive. Must not begin with 're' or 'xp' or be a word reserved for use as an expression qualifier prefix (such as HTTP) or enumeration value (such as ASCII). Must not be the name of an existing named expression, pattern set, dataset, stringmap, or HTTP callout.`,
				},
				resource.Attribute{
					Name:        "value",
					Description: `(Optional) Expression string. For example: http.req.body(100).contains("this").`,
				},
				resource.Attribute{
					Name:        "description",
					Description: `(Optional) Description for the expression.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments associated with the expression. Displayed upon viewing the policy expression.`,
				},
				resource.Attribute{
					Name:        "clientsecuritymessage",
					Description: `(Optional) Message to display if the expression fails. Allowed for classic end-point check expressions only. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policyexpression. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A policyexpression can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policyexpression.tf_policyexrpession tf_policyexrpession ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policyexpression. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A policyexpression can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policyexpression.tf_policyexrpession tf_policyexrpession ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_policyhttpcallout",
			Category:         "Policy",
			ShortDescription: ``,
			Description: `

The policyhttpcallout resource is used to create an expression element that, when evaluated, sends an HTTP request to a specified service and receives an HTTP response from the service.


`,
			Keywords: []string{
				"policy",
				"policyhttpcallout",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the HTTP callout. Not case sensitive. Must begin with an ASCII letter or underscore (_) character, and must consist only of ASCII alphanumeric or underscore characters. Must not begin with 're' or 'xp' or be a word reserved for use as an expression qualifier prefix (such as HTTP) or enumeration value (such as ASCII). Must not be the name of an existing named expression, pattern set, dataset, stringmap, or HTTP callout.`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Optional) IP Address of the server (callout agent) to which the callout is sent. Can be an IPv4 or IPv6 address. Mutually exclusive with the Virtual Server parameter. Therefore, you cannot set the <IP Address, Port> and the Virtual Server in the same HTTP callout.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Server port to which the HTTP callout agent is mapped. Mutually exclusive with the Virtual Server parameter. Therefore, you cannot set the <IP Address, Port> and the Virtual Server in the same HTTP callout.`,
				},
				resource.Attribute{
					Name:        "vserver",
					Description: `(Optional) Name of the load balancing, content switching, or cache redirection virtual server (the callout agent) to which the HTTP callout is sent. The service type of the virtual server must be HTTP. Mutually exclusive with the IP address and port parameters. Therefore, you cannot set the <IP Address, Port> and the Virtual Server in the same HTTP callout.`,
				},
				resource.Attribute{
					Name:        "returntype",
					Description: `(Optional) Type of data that the target callout agent returns in response to the callout. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "httpmethod",
					Description: `(Optional) Method used in the HTTP request that this callout sends. Mutually exclusive with the full HTTP request expression. Possible values: [ GET, POST ]`,
				},
				resource.Attribute{
					Name:        "hostexpr",
					Description: `(Optional) String expression to configure the Host header. Can contain a literal value (for example, 10.101.10.11) or a derived value (for example, http.req.header("Host")). The literal value can be an IP address or a fully qualified domain name. Mutually exclusive with the full HTTP request expression.`,
				},
				resource.Attribute{
					Name:        "urlstemexpr",
					Description: `(Optional) String expression for generating the URL stem. Can contain a literal string (for example, "/mysite/index.html") or an expression that derives the value (for example, http.req.url). Mutually exclusive with the full HTTP request expression.`,
				},
				resource.Attribute{
					Name:        "headers",
					Description: `(Optional) One or more headers to insert into the HTTP request. Each header is specified as "name(expr)", where expr is an expression that is evaluated at runtime to provide the value for the named header. You can configure a maximum of eight headers for an HTTP callout. Mutually exclusive with the full HTTP request expression.`,
				},
				resource.Attribute{
					Name:        "parameters",
					Description: `(Optional) One or more query parameters to insert into the HTTP request URL (for a GET request) or into the request body (for a POST request). Each parameter is specified as "name(expr)", where expr is an expression that is evaluated at run time to provide the value for the named parameter (name=value). The parameter values are URL encoded. Mutually exclusive with the full HTTP request expression.`,
				},
				resource.Attribute{
					Name:        "bodyexpr",
					Description: `(Optional) An advanced string expression for generating the body of the request. The expression can contain a literal string or an expression that derives the value (for example, client.ip.src). Mutually exclusive with -fullReqExpr.`,
				},
				resource.Attribute{
					Name:        "fullreqexpr",
					Description: `(Optional) Exact HTTP request, in the form of an expression, which the Citrix ADC sends to the callout agent. If you set this parameter, you must not include HTTP method, host expression, URL stem expression, headers, or parameters. The request expression is constrained by the feature for which the callout is used. For example, an HTTP.RES expression cannot be used in a request-time policy bank or in a TCP content switching policy bank. The Citrix ADC does not check the validity of this request. You must manually validate the request.`,
				},
				resource.Attribute{
					Name:        "scheme",
					Description: `(Optional) Type of scheme for the callout server. Possible values: [ http, https ]`,
				},
				resource.Attribute{
					Name:        "resultexpr",
					Description: `(Optional) Expression that extracts the callout results from the response sent by the HTTP callout agent. Must be a response based expression, that is, it must begin with HTTP.RES. The operations in this expression must match the return type. For example, if you configure a return type of TEXT, the result expression must be a text based expression. If the return type is NUM, the result expression (resultExpr) must return a numeric value, as in the following example: http.res.body(10000).length.`,
				},
				resource.Attribute{
					Name:        "cacheforsecs",
					Description: `(Optional) Duration, in seconds, for which the callout response is cached. The cached responses are stored in an integrated caching content group named "calloutContentGroup". If no duration is configured, the callout responses will not be cached unless normal caching configuration is used to cache them. This parameter takes precedence over any normal caching configuration that would otherwise apply to these responses. Note that the calloutContentGroup definition may not be modified or removed nor may it be used with other cache policies.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this HTTP callout. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policyhttpcallout. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A policyhttpcallout can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policyhttpcallout.tf_policyhttpcallout tf_policyhttpcallout ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policyhttpcallout. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A policyhttpcallout can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policyhttpcallout.tf_policyhttpcallout tf_policyhttpcallout ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_policymap",
			Category:         "Policy",
			ShortDescription: ``,
			Description: `

The policymap resource is used to create a policy to map a publicly known domain name to a target domain name.


`,
			Keywords: []string{
				"policy",
				"policymap",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "mappolicyname",
					Description: `(Required) Name for the map policy. Must begin with a letter, number, or the underscore (_) character and must consist only of letters, numbers, and the hash (#), period (.), colon (:), space ( ), at (@), equals (=), hyphen (-), and underscore (_) characters. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my map" or 'my map').`,
				},
				resource.Attribute{
					Name:        "sd",
					Description: `(Required) Publicly known source domain name. This is the domain name with which a client request arrives at a reverse proxy virtual server for cache redirection. If you specify a source domain, you must specify a target domain.`,
				},
				resource.Attribute{
					Name:        "su",
					Description: `(Optional) Source URL. Specify all or part of the source URL, in the following format: /[[prefix] [`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Required) Target domain name sent to the server. The source domain name is replaced with this domain name.`,
				},
				resource.Attribute{
					Name:        "tu",
					Description: `(Optional) Target URL. Specify the target URL in the following format: /[[prefix] [`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policymap. It has the same value as the ` + "`" + `mappolicyname` + "`" + ` attribute. ## Import A policymap can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policymap.tf_policymap tf_policymap ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policymap. It has the same value as the ` + "`" + `mappolicyname` + "`" + ` attribute. ## Import A policymap can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policymap.tf_policymap tf_policymap ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_policyparam",
			Category:         "Policy",
			ShortDescription: ``,
			Description: `

The policyparam resource is used to configure the given policy parameter.


`,
			Keywords: []string{
				"policy",
				"policyparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "timeout",
					Description: `(Optional)`,
				},
			},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_policypatset",
			Category:         "Policy",
			ShortDescription: ``,
			Description: `

The policypatset resource is used to create policy pattern sets.


`,
			Keywords: []string{
				"policy",
				"policypatset",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Unique name of the pattern set. Not case sensitive. Must begin with an ASCII letter or underscore (\_) character and must contain only alphanumeric and underscore characters. Must not be the name of an existing named expression, pattern set, dataset, string map, or HTTP callout.`,
				},
				resource.Attribute{
					Name:        "indextype",
					Description: `(Optional) Index type. Possible values: [ Auto-generated, User-defined ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this patset or a pattern bound to this patset. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policypatset. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A policypatset can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policypatset.tf_patset tf_patset ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policypatset. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A policypatset can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policypatset.tf_patset tf_patset ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_policypatset_pattern_binding",
			Category:         "Policy",
			ShortDescription: ``,
			Description: `\_pattern\_biding

The policypatset\_pattern\_biding resource is used to bind patterns to a policy pattern set.


`,
			Keywords: []string{
				"policy",
				"policypatset",
				"pattern",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "string",
					Description: `(Required) String of characters that constitutes a pattern. For more information about the characters that can be used, refer to the character set parameter. Note: Minimum length for pattern sets used in rewrite actions of type REPLACE\_ALL, DELETE\_ALL, INSERT\_AFTER\_ALL, and INSERT\_BEFORE\_ALL, is three characters.`,
				},
				resource.Attribute{
					Name:        "feature",
					Description: `(Optional) The feature to be checked while applying this config.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the pattern set to which to bind the string.`,
				},
				resource.Attribute{
					Name:        "charset",
					Description: `(Optional) Character set associated with the characters in the string. Note: UTF-8 characters can be entered directly (if the UI supports it) or can be encoded as a sequence of hexadecimal bytes '\xNN'. For example, the UTF-8 character 'ü' can be encoded as '\xC3\xBC'.`,
				},
				resource.Attribute{
					Name:        "index",
					Description: `(Optional) The index of the string associated with the patset.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this patset or a pattern bound to this patset. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policypatset. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `string` + "`" + ` attributes separated by a comma. ## Import A policypatset_pattern_biding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policypatset_pattern_binding.tf_bind1 tf_patset,Pattern ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policypatset. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `string` + "`" + ` attributes separated by a comma. ## Import A policypatset_pattern_biding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_policypatset_pattern_binding.tf_bind1 tf_patset,Pattern ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_policystringmap",
			Category:         "Policy",
			ShortDescription: ``,
			Description: `

The policystringmap resource is used to create policy string maps.


`,
			Keywords: []string{
				"policy",
				"policystringmap",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Unique name for the string map. Not case sensitive. Must begin with an ASCII letter or underscore (\_) character, and must consist only of ASCII alphanumeric or underscore characters. Must not begin with 're' or 'xp' or be a word reserved for use as an expression qualifier prefix (such as HTTP) or enumeration value (such as ASCII). Must not be the name of an existing named expression, pattern set, dataset, string map, or HTTP callout.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comments associated with the string map or key-value pair bound to this string map. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policystringmap. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policystringmap. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_policystringmap_pattern_binding",
			Category:         "Policy",
			ShortDescription: ``,
			Description: `\_pattern\_binding

The policystringmap\_pattern\_binding resource is used to bind patters to a stringmap.


`,
			Keywords: []string{
				"policy",
				"policystringmap",
				"pattern",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the string map to which to bind the key-value pair.`,
				},
				resource.Attribute{
					Name:        "value",
					Description: `(Required) Character string constituting the value associated with the key. This value is returned when processed data matches the associated key. Refer to the key parameter for details of the value character set.`,
				},
				resource.Attribute{
					Name:        "key",
					Description: `(Required) Character string constituting the key to be bound to the string map. The key is matched against the data processed by the operation that uses the string map. The default character set is ASCII. UTF-8 characters can be included if the character set is UTF-8. UTF-8 characters can be entered directly (if the UI supports it) or can be encoded as a sequence of hexadecimal bytes '\xNN'. For example, the UTF-8 character 'ü' can be encoded as '\xC3\xBC'. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policystringmap. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `key` + "`" + ` attributes separated by a comma.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the policystringmap. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `key` + "`" + ` attributes separated by a comma.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ptp",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The ptp resource is used to create Precision Time Protocol resource.


`,
			Keywords: []string{
				"network",
				"ptp",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "state",
					Description: `(Required) Enables or disables Precision Time Protocol (PTP) on the appliance. If you disable PTP, make sure you enable Network Time Protocol (NTP) on the cluster. Possible values: [ enable, disable ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ptp. It is a unique string prefixed with "tf-ptp-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ptp. It is a unique string prefixed with "tf-ptp-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_quicbridgeprofile",
			Category:         "QuickBridge",
			ShortDescription: ``,
			Description: `

The ` + "`" + `quicbridgeprofile` + "`" + ` resource is used to create Citrix ADC Quick Bridge Profiles.

`,
			Keywords: []string{
				"quickbridge",
				"quicbridgeprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `Name for the QUIC profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals sign (=), and hyphen (-) characters. Cannot be changed after the profile is created.`,
				},
				resource.Attribute{
					Name:        "routingalgorithm",
					Description: `(Optional) Routing algorithm to generate routable connection IDs.`,
				},
				resource.Attribute{
					Name:        "serveridlength",
					Description: `(Optional) Length of serverid to encode/decode server information. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the quicbridgeprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the quicbridgeprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_radiusnode",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The radiusnode resource is used for Configuration of RADIUS Node resource


`,
			Keywords: []string{
				"basic",
				"radiusnode",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "nodeprefix",
					Description: `(Required) IP address/IP prefix of radius node in CIDR format`,
				},
				resource.Attribute{
					Name:        "radkey",
					Description: `(Optional) The key shared between the RADIUS server and clients. Required for Citrix ADC to communicate with the RADIUS nodes. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the radiusnode. It has the same value as the ` + "`" + `nodeprefix` + "`" + ` attribute. ## Import A radiusnode can be imported using its nodeprefix, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_radiusnode.tf_radiusnode 10.10.10.10/32 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the radiusnode. It has the same value as the ` + "`" + `nodeprefix` + "`" + ` attribute. ## Import A radiusnode can be imported using its nodeprefix, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_radiusnode.tf_radiusnode 10.10.10.10/32 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rdpclientprofile",
			Category:         "RDP",
			ShortDescription: ``,
			Description: `

The rdpclientprofile resource is used to create rdpclientprofile.


`,
			Keywords: []string{
				"rdp",
				"rdpclientprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) The name of the rdp profile`,
				},
				resource.Attribute{
					Name:        "addusernameinrdpfile",
					Description: `(Optional) Add username in rdp file.`,
				},
				resource.Attribute{
					Name:        "audiocapturemode",
					Description: `(Optional) This setting corresponds to the selections in the Remote audio area on the Local Resources tab under Options in RDC.`,
				},
				resource.Attribute{
					Name:        "keyboardhook",
					Description: `(Optional) This setting corresponds to the selection in the Keyboard drop-down list on the Local Resources tab under Options in RDC.`,
				},
				resource.Attribute{
					Name:        "multimonitorsupport",
					Description: `(Optional) Enable/Disable Multiple Monitor Support for Remote Desktop Connection (RDC).`,
				},
				resource.Attribute{
					Name:        "psk",
					Description: `(Optional) Pre shared key value`,
				},
				resource.Attribute{
					Name:        "randomizerdpfilename",
					Description: `(Optional) Will generate unique filename everytime rdp file is downloaded by appending output of time() function in the format <rdpfileName>_<time>.rdp. This tries to avoid the pop-up for replacement of existing rdp file during each rdp connection launch, hence providing better end-user experience.`,
				},
				resource.Attribute{
					Name:        "rdpcookievalidity",
					Description: `(Optional) RDP cookie validity period. RDP cookie validity time is applicable for new connection and also for any re-connection that might happen, mostly due to network disruption or during fail-over.`,
				},
				resource.Attribute{
					Name:        "rdpcustomparams",
					Description: `(Optional) Option for RDP custom parameters settings (if any). Custom params needs to be separated by '&'`,
				},
				resource.Attribute{
					Name:        "rdpfilename",
					Description: `(Optional) RDP file name to be sent to End User`,
				},
				resource.Attribute{
					Name:        "rdphost",
					Description: `(Optional) Fully-qualified domain name (FQDN) of the RDP Listener.`,
				},
				resource.Attribute{
					Name:        "rdplinkattribute",
					Description: `(Optional) Citrix Gateway allows the configuration of rdpLinkAttribute parameter which can be used to fetch a list of RDP servers(IP/FQDN) that a user can access, from an Authentication server attribute(Example: LDAP, SAML). Based on the list received, the RDP links will be generated and displayed to the user. Note: The Attribute mentioned in the rdpLinkAttribute should be fetched through corresponding authentication method.`,
				},
				resource.Attribute{
					Name:        "rdplistener",
					Description: `(Optional) IP address (or) Fully-qualified domain name(FQDN) of the RDP Listener with the port in the format IP:Port (or) FQDN:Port`,
				},
				resource.Attribute{
					Name:        "rdpurloverride",
					Description: `(Optional) This setting determines whether the RDP parameters supplied in the vpn url override those specified in the RDP profile.`,
				},
				resource.Attribute{
					Name:        "redirectclipboard",
					Description: `(Optional) This setting corresponds to the Clipboard check box on the Local Resources tab under Options in RDC.`,
				},
				resource.Attribute{
					Name:        "redirectcomports",
					Description: `(Optional) This setting corresponds to the selections for comports under More on the Local Resources tab under Options in RDC.`,
				},
				resource.Attribute{
					Name:        "redirectdrives",
					Description: `(Optional) This setting corresponds to the selections for Drives under More on the Local Resources tab under Options in RDC.`,
				},
				resource.Attribute{
					Name:        "redirectpnpdevices",
					Description: `(Optional) This setting corresponds to the selections for pnpdevices under More on the Local Resources tab under Options in RDC.`,
				},
				resource.Attribute{
					Name:        "redirectprinters",
					Description: `(Optional) This setting corresponds to the selection in the Printers check box on the Local Resources tab under Options in RDC.`,
				},
				resource.Attribute{
					Name:        "videoplaybackmode",
					Description: `(Optional) This setting determines if Remote Desktop Connection (RDC) will use RDP efficient multimedia streaming for video playback. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rdpclientprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A rdpclientprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rdpclientprofile.tf_rdpclientprofile my_rdpclientprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rdpclientprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A rdpclientprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rdpclientprofile.tf_rdpclientprofile my_rdpclientprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rdpserverprofile",
			Category:         "RDP",
			ShortDescription: ``,
			Description: `

The rdpserverprofile resource is used to create rdpserverprofile.


`,
			Keywords: []string{
				"rdp",
				"rdpserverprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) The name of the rdp server profile`,
				},
				resource.Attribute{
					Name:        "psk",
					Description: `(Required) Pre shared key value`,
				},
				resource.Attribute{
					Name:        "rdpip",
					Description: `(Optional) IPv4 or IPv6 address of RDP listener. This terminates client RDP connections.`,
				},
				resource.Attribute{
					Name:        "rdpport",
					Description: `(Optional) TCP port on which the RDP connection is established.`,
				},
				resource.Attribute{
					Name:        "rdpredirection",
					Description: `(Optional) Enable/Disable RDP redirection support. This needs to be enabled in presence of connection broker or session directory with IP cookie(msts cookie) based redirection support ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rdpserverprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A rdpserverprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rdpserverprofile.tf_rdpserverprofile my_rdpserverprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rdpserverprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A rdpserverprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rdpserverprofile.tf_rdpserverprofile my_rdpserverprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rebooter",
			Category:         "Utility",
			ShortDescription: ``,
			Description: `

The rebooter resource is used to reboot the target ADC.


`,
			Keywords: []string{
				"utility",
				"rebooter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "warm",
					Description: `(Required) Restarts the Citrix ADC software without rebooting the underlying operating system. The session terminates and you must log on to the appliance after it has restarted. Note: This argument is required only for nCore appliances. Classic appliances ignore this argument.`,
				},
				resource.Attribute{
					Name:        "timestamp",
					Description: `(Required) Time when reboot happened. Used to force the operation again in case all other attributes remain the same.`,
				},
				resource.Attribute{
					Name:        "wait_until_reachable",
					Description: `(Required) Boolean flag. If set to true the resource will wait for the ADC to become reachable.`,
				},
				resource.Attribute{
					Name:        "reachable_timeout",
					Description: `(Optional) Time period to wait for the ADC to become reachable. Defaults to "10m".`,
				},
				resource.Attribute{
					Name:        "reachable_poll_delay",
					Description: `(Optional) Time period to wait before first poll after reboot. Defaults to "60s".`,
				},
				resource.Attribute{
					Name:        "reachable_poll_interval",
					Description: `(Optional) Time interval between polls. Defaults to "60s".`,
				},
				resource.Attribute{
					Name:        "reachable_poll_timeout",
					Description: `(Optional) Time period to wait for each poll request. Defaults to "20s". ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rebooter. It is a unique string prefixed with "tf-rebooter-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rebooter. It is a unique string prefixed with "tf-rebooter-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_reputationsettings",
			Category:         "Reputation",
			ShortDescription: ``,
			Description: `

The reputationsettings resource is used to create reputationsettings.


`,
			Keywords: []string{
				"reputation",
				"reputationsettings",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "proxyport",
					Description: `(Optional) Proxy server port.`,
				},
				resource.Attribute{
					Name:        "proxyserver",
					Description: `(Optional) Proxy server IP to get Reputation data. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the reputationsettings. It is a unique string prefixed with ` + "`" + `tf-reputationsettings-` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the reputationsettings. It is a unique string prefixed with ` + "`" + `tf-reputationsettings-` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_responderaction",
			Category:         "Responder",
			ShortDescription: ``,
			Description: `

The responderaction resource is used to create responder actions.


`,
			Keywords: []string{
				"responder",
				"responderaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the responder action.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of responder action. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "target",
					Description: `(Optional) Expression specifying what to respond with. Typically a URL for redirect policies or a default-syntax expression. In addition to Citrix ADC default-syntax expressions that refer to information in the request, a stringbuilder expression can contain text and HTML, and simple escape codes that define new lines and paragraphs. Enclose each stringbuilder expression element (either a Citrix ADC default-syntax expression or a string) in double quotation marks. Use the plus (+) character to join the elements. Examples: 1) Respondwith expression that sends an HTTP 1.1 200 OK response: "HTTP/1.1 200 OK\r\n\r\n" 2) Redirect expression that redirects user to the specified web host and appends the request URL to the redirect. "http://backupsite2.com" + HTTP.REQ.URL 3) Respondwith expression that sends an HTTP 1.1 404 Not Found response with the request URL included in the response: "HTTP/1.1 404 Not Found\r\n\r\n"+ "HTTP.REQ.URL.HTTP_URL_SAFE" + "does not exist on the web server." The following requirement applies only to the Citrix ADC CLI: Enclose the entire expression in single quotation marks. (Citrix ADC expression elements should be included inside the single quotation marks for the entire expression, but do not need to be enclosed in double quotation marks.).`,
				},
				resource.Attribute{
					Name:        "htmlpage",
					Description: `(Optional) For respondwithhtmlpage policies, name of the HTML page object to use as the response. You must first import the page object.`,
				},
				resource.Attribute{
					Name:        "bypasssafetycheck",
					Description: `(Optional) Bypass the safety check, allowing potentially unsafe expressions. An unsafe expression in a response is one that contains references to request elements that might not be present in all requests. If a response refers to a missing request element, an empty string is used instead. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comment. Any type of information about this responder action.`,
				},
				resource.Attribute{
					Name:        "responsestatuscode",
					Description: `(Optional) HTTP response status code, for example 200, 302, 404, etc. The default value for the redirect action type is 302 and for respondwithhtmlpage is 200.`,
				},
				resource.Attribute{
					Name:        "reasonphrase",
					Description: `(Optional) Expression specifying the reason phrase of the HTTP response. The reason phrase may be a string literal with quotes or a PI expression. For example: "Invalid URL: " + HTTP.REQ.URL. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the responderaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A responderaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_responderaction.tf_responderaction tf_responderaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the responderaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A responderaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_responderaction.tf_responderaction tf_responderaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_responderglobal_responderpolicy_binding",
			Category:         "Responder",
			ShortDescription: ``,
			Description: `

The responderglobal_responderpolicy_binding resource is used to create responderglobal_responderpolicy_binding.


`,
			Keywords: []string{
				"responder",
				"responderglobal",
				"responderpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the responder policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Specifies the bind point whose policies you want to display. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) If the current policy evaluates to TRUE, terminate evaluation of policies bound to the current policy label, and then forward the request to the specified virtual server or evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of invocation, Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the policy label to invoke. If the current policy evaluates to TRUE, the invoke parameter is set, and Label Type is policylabel.`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the responderglobal_responderpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A responderglobal_responderpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_responderglobal_responderpolicy_binding.tf_responderglobal_responderpolicy_binding tf_responderpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the responderglobal_responderpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A responderglobal_responderpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_responderglobal_responderpolicy_binding.tf_responderglobal_responderpolicy_binding tf_responderpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_responderhtmlpage",
			Category:         "Responder",
			ShortDescription: ``,
			Description: `

The responderhtmlpage resource is used to create html pages to be used with the responder feature.


`,
			Keywords: []string{
				"responder",
				"responderhtmlpage",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "cacertfile",
					Description: `(Optional) CA certificate file name which will be used to verify the peer's certificate. The certificate should be imported using "import ssl certfile" CLI command or equivalent in API or GUI. If certificate name is not configured, then default root CA certificates are used for peer's certificate verification.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about the HTML page object.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name to assign to the HTML page object on the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "overwrite",
					Description: `(Optional) Overwrites the existing file`,
				},
				resource.Attribute{
					Name:        "src",
					Description: `(Optional) Local path to and name of, or URL (protocol, host, path, and file name) for, the file in which to store the imported HTML page. NOTE: The import fails if the object to be imported is on an HTTPS server that requires client certificate authentication for access. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the responderhtmlpage. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the responderhtmlpage. It has the same value as the ` + "`" + `name` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_responderparam",
			Category:         "Responder",
			ShortDescription: ``,
			Description: `

The responderparam resource is used to configure the given responder parameters.


`,
			Keywords: []string{
				"responder",
				"responderparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to perform when policy evaluation creates an UNDEF condition. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "timeout",
					Description: `(Optional)`,
				},
			},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_responderpolicy",
			Category:         "Responder",
			ShortDescription: ``,
			Description: `

The responderpolicy resource is used to create responder policies.


`,
			Keywords: []string{
				"responder",
				"responderpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the responder policy.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Expression that the policy uses to determine whether to respond to the specified request.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Optional) Name of the responder action to perform if the request matches this responder policy. There are also some built-in actions which can be used. These are:`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to perform if the result of policy evaluation is undefined (UNDEF). An UNDEF event indicates an internal error condition. Only the above built-in actions can be used.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any type of information about this responder policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of the messagelog action to use for requests that match this policy.`,
				},
				resource.Attribute{
					Name:        "appflowaction",
					Description: `(Optional) AppFlow action to invoke for requests that match this policy.`,
				},
				resource.Attribute{
					Name:        "globalbinding",
					Description: `(Optional) A global binding block. Documented below.`,
				},
				resource.Attribute{
					Name:        "lbvserverbinding",
					Description: `(Optional) A lbvserver binding block. Documented below.`,
				},
				resource.Attribute{
					Name:        "csvserverbinding",
					Description: `(Optional) A csvserver binding block. Documented below. A global binding block supports the following:`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Specifies the bind point whose policies you want to display. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) If the current policy evaluates to TRUE, terminate evaluation of policies bound to the current policy label, and then forward the request to the specified virtual server or evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of invocation, Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the policy label to invoke. If the current policy evaluates to TRUE, the invoke parameter is set, and Label Type is policylabel. A lbvserver binding block supports the following:`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applicable only to compression, rewrite, videooptimization and cache policies. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Name of the policy. A csvserver binding block supports the following:`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) For a rewrite policy, the bind point to which to bind the policy. Note: This parameter applies only to rewrite policies, because content switching policies are evaluated only at request time. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Name of the policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the responderpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A responderpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_responderpolicy.tf_responder_policy tf_responder_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the responderpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A responderpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_responderpolicy.tf_responder_policy tf_responder_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_responderpolicylabel",
			Category:         "Responder",
			ShortDescription: ``,
			Description: `

The responderpolicylabel resource is used to create responder policy labels.


`,
			Keywords: []string{
				"responder",
				"responderpolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name for the responder policy label.`,
				},
				resource.Attribute{
					Name:        "policylabeltype",
					Description: `(Optional) Type of responses sent by the policies bound to this policy label. Types are:`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this responder policy label. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the responderpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A responderpolicylabel can be imported using its labelname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_responderpolicylabel.tf_responder_policylabel tf_responder_policylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the responderpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A responderpolicylabel can be imported using its labelname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_responderpolicylabel.tf_responder_policylabel tf_responder_policylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_responderpolicylabel_responderpolicy_binding",
			Category:         "Responder",
			ShortDescription: ``,
			Description: `

The responderpolicylabel_responderpolicy_binding resource is used to bind a responder policy to responder policy label.


`,
			Keywords: []string{
				"responder",
				"responderpolicylabel",
				"responderpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the responder policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) If the current policy evaluates to TRUE, terminate evaluation of policies bound to the current policy label and evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label to invoke. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "invoke_labelname",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name of the responder policy label to which to bind the policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the responderpolicylabel_responderpolicy_binding. It is the concatenation of the ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A responderpolicylabel_responderpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_responderpolicylabel_responderpolicy_binding.tf_responderpolicylabel_responderpolicy_binding tf_responderpolicylabel,tf_responderpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the responderpolicylabel_responderpolicy_binding. It is the concatenation of the ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A responderpolicylabel_responderpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_responderpolicylabel_responderpolicy_binding.tf_responderpolicylabel_responderpolicy_binding tf_responderpolicylabel,tf_responderpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rewriteaction",
			Category:         "Rewrite",
			ShortDescription: ``,
			Description: `

The rewriteaction resource is used to create rewrite actions.


`,
			Keywords: []string{
				"rewrite",
				"rewriteaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the user-defined rewrite action.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of user-defined rewrite action. The information that you provide for, and the effect of, each type are as follows::`,
				},
				resource.Attribute{
					Name:        "target",
					Description: `(Optional) Expression that specifies which part of the request or response to rewrite.`,
				},
				resource.Attribute{
					Name:        "stringbuilderexpr",
					Description: `(Optional) Expression that specifies the content to insert into the request or response at the specified location, or that replaces the specified string.`,
				},
				resource.Attribute{
					Name:        "pattern",
					Description: `(Optional) DEPRECATED in favor of -search: Pattern that is used to match multiple strings in the request or response. The pattern may be a string literal (without quotes) or a PCRE-format regular expression with a delimiter that consists of any printable ASCII non-alphanumeric character except for the underscore (\_) and space ( ) that is not otherwise used in the expression. Example: re~https?://|HTTPS?://~ The preceding regular expression can use the tilde (~) as the delimiter because that character does not appear in the regular expression itself. Used in the INSERT_BEFORE_ALL, INSERT_AFTER_ALL, REPLACE_ALL, and DELETE_ALL action types.`,
				},
				resource.Attribute{
					Name:        "search",
					Description: `(Optional) Search facility that is used to match multiple strings in the request or response. Used in the INSERT_BEFORE_ALL, INSERT_AFTER_ALL, REPLACE_ALL, and DELETE_ALL action types. The following search types are supported:`,
				},
				resource.Attribute{
					Name:        "bypasssafetycheck",
					Description: `(Optional) Bypass the safety check and allow unsafe expressions. An unsafe expression is one that contains references to message elements that might not be present in all messages. If an expression refers to a missing request element, an empty string is used instead. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "refinesearch",
					Description: `(Optional) Specify additional criteria to refine the results of the search. Always starts with the "extend(m,n)" operation, where 'm' specifies number of bytes to the left of selected data and 'n' specifies number of bytes to the right of selected data to extend the selected area. You can use refineSearch only on body expressions, and for the INSERT_BEFORE_ALL, INSERT_AFTER_ALL, REPLACE_ALL, and DELETE_ALL action types. Example: -refineSearch 'EXTEND(10, 20).REGEX_SELECT(re~0x[0-9a-zA-Z]+~).`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comment. Can be used to preserve information about this rewrite action. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rewriteaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A rewriteaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rewriteaction.tf_rewrite_action tf_rewrite_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rewriteaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A rewriteaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rewriteaction.tf_rewrite_action tf_rewrite_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rewriteglobal_rewritepolicy_binding",
			Category:         "Rewrite",
			ShortDescription: ``,
			Description: `

The rewriteglobal_rewritepolicy_binding resource is used to bind a rewrite policy to global, in order to apply it to the entire traffic handled by the Citrix ADC.


`,
			Keywords: []string{
				"rewrite",
				"rewriteglobal",
				"rewritepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the rewrite policy.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) The bindpoint to which to policy is bound. Possible values: [ REQ_OVERRIDE, REQ_DEFAULT, RES_OVERRIDE, RES_DEFAULT, OTHERTCP_REQ_OVERRIDE, OTHERTCP_REQ_DEFAULT, OTHERTCP_RES_OVERRIDE, OTHERTCP_RES_DEFAULT, SIPUDP_REQ_OVERRIDE, SIPUDP_REQ_DEFAULT, SIPUDP_RES_OVERRIDE, SIPUDP_RES_DEFAULT, SIPTCP_REQ_OVERRIDE, SIPTCP_REQ_DEFAULT, SIPTCP_RES_OVERRIDE, SIPTCP_RES_DEFAULT, DIAMETER_REQ_OVERRIDE, DIAMETER_REQ_DEFAULT, DIAMETER_RES_OVERRIDE, DIAMETER_RES_DEFAULT, RADIUS_REQ_OVERRIDE, RADIUS_REQ_DEFAULT, RADIUS_RES_OVERRIDE, RADIUS_RES_DEFAULT, DNS_REQ_OVERRIDE, DNS_REQ_DEFAULT, DNS_RES_OVERRIDE, DNS_RES_DEFAULT ]`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Terminate evaluation of policies bound to the current policy label, and then forward the request to the specified virtual server or evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of invocation. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rewriteglobal_rewritepolicy_binding. It is the concatenation of the ` + "`" + `policyname` + "`" + `, ` + "`" + `priority` + "`" + ` and ` + "`" + `type` + "`" + ` attributes separated by a comma. ## Import A rewriteglobal_rewritepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rewriteglobal_rewritepolicy_binding.tf_rewriteglobal_rewritepolicy_binding tf_rewrite_policy,5,REQ_DEFAULT ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rewriteglobal_rewritepolicy_binding. It is the concatenation of the ` + "`" + `policyname` + "`" + `, ` + "`" + `priority` + "`" + ` and ` + "`" + `type` + "`" + ` attributes separated by a comma. ## Import A rewriteglobal_rewritepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rewriteglobal_rewritepolicy_binding.tf_rewriteglobal_rewritepolicy_binding tf_rewrite_policy,5,REQ_DEFAULT ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rewriteparam",
			Category:         "Rewrite",
			ShortDescription: ``,
			Description: `

The rewriteparam resource is used to configure the given rewrite parameters.


`,
			Keywords: []string{
				"rewrite",
				"rewriteparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to perform if the result of policy evaluation is undefined (UNDEF). An UNDEF event indicates an error condition in evaluating the expression. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "timeout",
					Description: `(Optional)`,
				},
			},
			Attributes: []resource.Attribute{},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rewritepolicy",
			Category:         "Rewrite",
			ShortDescription: ``,
			Description: `

The rewritepolicy resource is used to create rewrite policies.


`,
			Keywords: []string{
				"rewrite",
				"rewritepolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the rewrite policy.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Expression against which traffic is evaluated. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Optional) Name of the rewrite action to perform if the request or response matches this rewrite policy. There are also some built-in actions which can be used. These are:`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to perform if the result of policy evaluation is undefined (UNDEF). An UNDEF event indicates an internal error condition. Only the above built-in actions can be used.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this rewrite policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of messagelog action to use when a request matches this policy.`,
				},
				resource.Attribute{
					Name:        "globalbinding",
					Description: `(Optional) A global binding block, documented below.`,
				},
				resource.Attribute{
					Name:        "lbvserverbinding",
					Description: `(Optional) A lbvserver binding block, documented below.`,
				},
				resource.Attribute{
					Name:        "csvserverbinding",
					Description: `(Optional) A csvserver binding block, documented below. A global binding supports the following:`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) The bindpoint to which to policy is bound. Possible values: [ REQ_OVERRIDE, REQ_DEFAULT, RES_OVERRIDE, RES_DEFAULT, OTHERTCP_REQ_OVERRIDE, OTHERTCP_REQ_DEFAULT, OTHERTCP_RES_OVERRIDE, OTHERTCP_RES_DEFAULT, SIPUDP_REQ_OVERRIDE, SIPUDP_REQ_DEFAULT, SIPUDP_RES_OVERRIDE, SIPUDP_RES_DEFAULT, SIPTCP_REQ_OVERRIDE, SIPTCP_REQ_DEFAULT, SIPTCP_RES_OVERRIDE, SIPTCP_RES_DEFAULT, DIAMETER_REQ_OVERRIDE, DIAMETER_REQ_DEFAULT, DIAMETER_RES_OVERRIDE, DIAMETER_RES_DEFAULT, RADIUS_REQ_OVERRIDE, RADIUS_REQ_DEFAULT, RADIUS_RES_OVERRIDE, RADIUS_RES_DEFAULT, DNS_REQ_OVERRIDE, DNS_REQ_DEFAULT, DNS_RES_OVERRIDE, DNS_RES_DEFAULT ]`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Terminate evaluation of policies bound to the current policy label, and then forward the request to the specified virtual server or evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of invocation. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ]`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Policy name. A lbvserver binding supports the following:`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a virtual server or policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the virtual server. A csvserver binding supports the following:`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) The bindpoint to which the policy is bound. Possible values: [ REQUEST, RESPONSE, ICA_REQUEST, OTHERTCP_REQUEST ]`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) The invocation type. Possible values: [ reqvserver, resvserver, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label invoked.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name of the content switching virtual server to which the content switching policy applies.`,
				},
				resource.Attribute{
					Name:        "targetlbvserver",
					Description: `(Optional) Name of the Load Balancing virtual server to which the content is switched, if policy rule is evaluated to be TRUE. Example: bind cs vs cs1 -policyname pol1 -priority 101 -targetLBVserver lb1 Note: Use this parameter only in case of Content Switching policy bind operations to a CS vserver. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rewritepolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A rewritepolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rewritepolicy.tf_rewritepolicy tf_rewritepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rewritepolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A rewritepolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rewritepolicy.tf_rewritepolicy tf_rewritepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rewritepolicylabel",
			Category:         "Rewrite",
			ShortDescription: ``,
			Description: `

The rewritepolicylabel resource is used to create rewrite policy labels.


`,
			Keywords: []string{
				"rewrite",
				"rewritepolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name for the rewrite policy label.`,
				},
				resource.Attribute{
					Name:        "transform",
					Description: `(Optional) Types of transformations allowed by the policies bound to the label. For Rewrite, the following types are supported:`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this rewrite policy label. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rewritepolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A rewritepolicylabel can be imported using its labelname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rewritepolicylabel.tf_rewritepolicylabel tf_rewritepolicylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rewritepolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A rewritepolicylabel can be imported using its labelname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rewritepolicylabel.tf_rewritepolicylabel tf_rewritepolicylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rewritepolicylabel_rewritepolicy_binding",
			Category:         "Rewrite",
			ShortDescription: ``,
			Description: `

The rewritepolicylabel_rewritepolicy_binding resource is used to bind a rewrite policy to rewrite policy label.


`,
			Keywords: []string{
				"rewrite",
				"rewritepolicylabel",
				"rewritepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the rewrite policy to bind to the policy label.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Suspend evaluation of policies bound to the current policy label, and then forward the request to the specified virtual server or evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of invocation. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "invoke_labelname",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name of the rewrite policy label to which to bind the policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rewritepolicylabel_rewritepolicy_binding. It is the concatenation of the ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A rewritepolicylabel_rewritepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rewritepolicylabel_rewritepolicy_binding.tf_rewritepolicylabel_rewritepolicy_binding tf_rewritepolicylabel,policyname ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rewritepolicylabel_rewritepolicy_binding. It is the concatenation of the ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by a comma. ## Import A rewritepolicylabel_rewritepolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rewritepolicylabel_rewritepolicy_binding.tf_rewritepolicylabel_rewritepolicy_binding tf_rewritepolicylabel,policyname ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rnat",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The rnat resource is used to create rnat.

~>
* This is updated ` + "`" + `rnat` + "`" + ` resource which supports add, update and delete operation for latest Citrix ADC versions(from 13.0 and above). 
* For versions 12.1 and below, to continue using older rnat resource operation ` + "`" + `clear` + "`" + ` refer and use the resource ` + "`" + `citrixadc_rnat_clear` + "`" + `

`,
			Keywords: []string{
				"network",
				"rnat",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the RNAT4 rule. Must begin with a letter, number, or the underscore character (_), and can consist of letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore characters. Cannot be changed after the rule is created. Choose a name that helps identify the RNAT4 rule. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "network",
					Description: `(Optional) The network address defined for the RNAT entry. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) The subnet mask for the network address. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "aclname",
					Description: `(Optional) An extended ACL defined for the RNAT entry. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for this rnat rule. Minimum length =`,
				},
				resource.Attribute{
					Name:        "redirectport",
					Description: `(Optional) Port number to which the IPv4 packets are redirected. Applicable to TCP and UDP protocols. Minimum value = 1 Maximum value = 65535`,
				},
				resource.Attribute{
					Name:        "natip",
					Description: `(Optional) Any NetScaler-owned IPv4 address except the NSIP address. The NetScaler appliance replaces the source IP addresses of server-generated packets with the IP address specified. The IP address must be a public NetScaler-owned IP address. If you specify multiple addresses for this field, NATIP selection uses the round robin algorithm for each session. By specifying a range of IP addresses, you can specify all NetScaler-owned IP addresses, except the NSIP, that fall within the specified range. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "srcippersistency",
					Description: `(Optional) Enables the Citrix ADC to use the same NAT IP address for all RNAT sessions initiated from a particular server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "useproxyport",
					Description: `(Optional) Enable source port proxying, which enables the Citrix ADC to use the RNAT ips using proxied source port. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "connfailover",
					Description: `(Optional) Synchronize all connection-related information for the RNAT sessions with the secondary ADC in a high availability (HA) pair. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the RNAT4 rule. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnat. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A rnat can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rnat.tfrnat tfrnat ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnat. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A rnat can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rnat.tfrnat tfrnat ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rnat6",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The rnat6 resource is used to create rnat6.


`,
			Keywords: []string{
				"network",
				"rnat6",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the RNAT6 rule. Must begin with a letter, number, or the underscore character (_), and can consist of letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore characters. Cannot be changed after the rule is created. Choose a name that helps identify the RNAT6 rule. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "network",
					Description: `(Optional) IPv6 address of the network on whose traffic you want the Citrix ADC to do RNAT processing. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "acl6name",
					Description: `(Optional) Name of any configured ACL6 whose action is ALLOW. The rule of the ACL6 is used as an RNAT6 rule. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "redirectport",
					Description: `(Optional) Port number to which the IPv6 packets are redirected. Applicable to TCP and UDP protocols. Minimum value = 1 Maximum value = 65535`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "srcippersistency",
					Description: `(Optional) Enable source ip persistency, which enables the Citrix ADC to use the RNAT ips using source ip. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for this rnat rule. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnat6. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A rnat6> can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rnat6.tf_rnat6 my_rnat6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnat6. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A rnat6> can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rnat6.tf_rnat6 my_rnat6 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rnat6_nsip6_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The rnat6_nsip6_binding resource is used to create rnat6_nsip6_binding.


`,
			Keywords: []string{
				"network",
				"rnat6",
				"nsip6",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "natip6",
					Description: `(Required) Nat IP Address. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the RNAT6 rule to which to bind NAT IPs. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for this rnat rule. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnat6_nsip6_binding. It has the same value as the ` + "`" + `name` + "`" + ` and ` + "`" + `natip6` + "`" + ` attributes separated by a comma. ## Import A rnat6_nsip6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rnat6_nsip6_binding.tfrnat6_nsip6_binding my_rnat6,2001:db8:85a3::8a2e:370:7334 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnat6_nsip6_binding. It has the same value as the ` + "`" + `name` + "`" + ` and ` + "`" + `natip6` + "`" + ` attributes separated by a comma. ## Import A rnat6_nsip6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rnat6_nsip6_binding.tfrnat6_nsip6_binding my_rnat6,2001:db8:85a3::8a2e:370:7334 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rnat_clear",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The rnat_clear resource is used to create and clear the RNAT rule.

~> 
* This resource supports create and clear operation. To use add, update and delete operation that supports latest ADC version(from 13.0 and above) refer ` + "`" + `citrixadc_rnat' resource.
* This is depricated in the versions 13.0 and above. To clear the rnat you need to destroy the resource.

`,
			Keywords: []string{
				"network",
				"rnat",
				"clear",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "rnatsname",
					Description: `(Optional) the name for the rnat rules.`,
				},
				resource.Attribute{
					Name:        "rnat",
					Description: `(Optional) blocks of rnat rules. Documented below. A rnat block supports the following:`,
				},
				resource.Attribute{
					Name:        "network",
					Description: `(Optional) The network address defined for the RNAT entry.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) The subnet mask for the network address.`,
				},
				resource.Attribute{
					Name:        "aclname",
					Description: `(Optional) An extended ACL defined for the RNAT entry.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "redirectport",
					Description: `(Optional) Port number to which the IPv4 packets are redirected. Applicable to TCP and UDP protocols.`,
				},
				resource.Attribute{
					Name:        "natip",
					Description: `(Optional) Any NetScaler-owned IPv4 address except the NSIP address. The NetScaler appliance replaces the source IP addresses of server-generated packets with the IP address specified. The IP address must be a public NetScaler-owned IP address. If you specify multiple addresses for this field, NATIP selection uses the round robin algorithm for each session. By specifying a range of IP addresses, you can specify all NetScaler-owned IP addresses, except the NSIP, that fall within the specified range.`,
				},
				resource.Attribute{
					Name:        "natip2",
					Description: `(Optional) ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnat_clear rules. It has the same value as the ` + "`" + `rnatsname` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnat_clear rules. It has the same value as the ` + "`" + `rnatsname` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rnat_nsip_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The rnat_nsip_binding resource is used to create rnat_nsip_binding.


`,
			Keywords: []string{
				"network",
				"rnat",
				"nsip",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "natip",
					Description: `(Required) Any NetScaler-owned IPv4 address except the NSIP address. The NetScaler appliance replaces the source IP addresses of server-generated packets with the IP address specified. The IP address must be a public NetScaler-owned IP address. If you specify multiple addresses for this field, NATIP selection uses the round robin algorithm for each session. By specifying a range of IP addresses, you can specify all NetScaler-owned IP addresses, except the NSIP, that fall within the specified range. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the RNAT rule to which to bind NAT IPs. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnat_nsip_binding. It has the same value as the ` + "`" + `name` + "`" + ` and ` + "`" + `natip` + "`" + ` attributes separated by a comma. ## Import A rnat_nsip_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rnat_nsip_binding.tf_rnat_nsip_binding my_rnat,10.222.74.200 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnat_nsip_binding. It has the same value as the ` + "`" + `name` + "`" + ` and ` + "`" + `natip` + "`" + ` attributes separated by a comma. ## Import A rnat_nsip_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rnat_nsip_binding.tf_rnat_nsip_binding my_rnat,10.222.74.200 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rnatglobal_auditsyslogpolicy_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The rnatglobal_auditsyslogpolicy_binding resource is used to bind auditsyslog policy to rnat global configuration.


`,
			Keywords: []string{
				"network",
				"rnatglobal",
				"auditsyslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The policy Name.`,
				},
				resource.Attribute{
					Name:        "all",
					Description: `(Optional) Remove all RNAT global config`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority of the policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnatglobal_auditsyslogpolicy_binding. It has the same value as the ` + "`" + `policy` + "`" + ` attribute. ## Import A rnatglobal_auditsyslogpolicy_binding can be imported using its policy, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rnatglobal_auditsyslogpolicy_binding.tf_binding tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnatglobal_auditsyslogpolicy_binding. It has the same value as the ` + "`" + `policy` + "`" + ` attribute. ## Import A rnatglobal_auditsyslogpolicy_binding can be imported using its policy, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_rnatglobal_auditsyslogpolicy_binding.tf_binding tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rnatparam",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The rnatparam resource is used to create RNAT parameter resource.


`,
			Keywords: []string{
				"network",
				"rnatparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "tcpproxy",
					Description: `(Optional) Enable TCP proxy, which enables the Citrix ADC to optimize the RNAT TCP traffic by using Layer 4 features. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "srcippersistency",
					Description: `(Optional) Enable source ip persistency, which enables the Citrix ADC to use the RNAT ips using source ip. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnatparam. It is a unique string prefixed with "tf-rnatparam-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rnatparam. It is a unique string prefixed with "tf-rnatparam-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_route",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The route resource is used to create routing rules.


`,
			Keywords: []string{
				"network",
				"route",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "network",
					Description: `(Optional) IPv4 network address for which to add a route entry in the routing table of the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) The subnet mask associated with the network address.`,
				},
				resource.Attribute{
					Name:        "gateway",
					Description: `(Optional) IP address of the gateway for this route. Can be either the IP address of the gateway, or can be null to specify a null interface route.`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) VLAN as the gateway for this route.`,
				},
				resource.Attribute{
					Name:        "cost",
					Description: `(Optional) Positive integer used by the routing algorithms to determine preference for using this route. The lower the cost, the higher the preference.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "distance",
					Description: `(Optional) Administrative distance of this route, which determines the preference of this route over other routes, with same destination, from different routing protocols. A lower value is preferred.`,
				},
				resource.Attribute{
					Name:        "cost1",
					Description: `(Optional) The cost of a route is used to compare routes of the same type. The route having the lowest cost is the most preferred route. Possible values: 0 through 65535. Default: 0.`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Positive integer used by the routing algorithms to determine preference for this route over others of equal cost. The lower the weight, the higher the preference.`,
				},
				resource.Attribute{
					Name:        "advertise",
					Description: `(Optional) Advertise this route. Possible values: [ DISABLED, ENABLED ]`,
				},
				resource.Attribute{
					Name:        "msr",
					Description: `(Optional) Monitor this route using a monitor of type ARP or PING. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "monitor",
					Description: `(Optional) Name of the monitor, of type ARP or PING, configured on the Citrix ADC to monitor this route.`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for this route. If owner node group is not specified then the route is treated as Striped route.`,
				},
				resource.Attribute{
					Name:        "routetype",
					Description: `(Optional) Protocol used by routes that you want to remove from the routing table of the Citrix ADC. Possible values: [ CONNECTED, STATIC, DYNAMIC, OSPF, ISIS, RIP, BGP ]`,
				},
				resource.Attribute{
					Name:        "detail",
					Description: `(Optional) Display a detailed view. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the route. It is the conatenation of the ` + "`" + `network` + "`" + `, ` + "`" + `netmask` + "`" + ` and ` + "`" + `gateway` + "`" + ` attributes. ## Import A route can be imported using its id value, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_route.tf_route 100.0.100.0__255.255.255.0__100.0.1.1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the route. It is the conatenation of the ` + "`" + `network` + "`" + `, ` + "`" + `netmask` + "`" + ` and ` + "`" + `gateway` + "`" + ` attributes. ## Import A route can be imported using its id value, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_route.tf_route 100.0.100.0__255.255.255.0__100.0.1.1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_route6",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The route6 resource is used to create route6.


`,
			Keywords: []string{
				"network",
				"route6",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "network",
					Description: `(Required) IPv6 network address for which to add a route entry to the routing table of the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "gateway",
					Description: `(Optional) The gateway for this route. The value for this parameter is either an IPv6 address or null.`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) Integer value that uniquely identifies a VLAN through which the Citrix ADC forwards the packets for this route. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "vxlan",
					Description: `(Optional) Integer value that uniquely identifies a VXLAN through which the Citrix ADC forwards the packets for this route. Minimum value = 1 Maximum value = 16777215`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Positive integer used by the routing algorithms to determine preference for this route over others of equal cost. The lower the weight, the higher the preference. Minimum value = 1 Maximum value = 65535`,
				},
				resource.Attribute{
					Name:        "distance",
					Description: `(Optional) Administrative distance of this route from the appliance. Minimum value = 1 Maximum value = 254`,
				},
				resource.Attribute{
					Name:        "cost",
					Description: `(Optional) Positive integer used by the routing algorithms to determine preference for this route. The lower the cost, the higher the preference. Minimum value = 0 Maximum value = 65535`,
				},
				resource.Attribute{
					Name:        "advertise",
					Description: `(Optional) Advertise this route. Possible values: [ DISABLED, ENABLED ]`,
				},
				resource.Attribute{
					Name:        "msr",
					Description: `(Optional) Monitor this route with a monitor of type ND6 or PING. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "monitor",
					Description: `(Optional) Name of the monitor, of type ND6 or PING, configured on the Citrix ADC to monitor this route. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for this route6. If owner node group is not specified then the route is treated as Striped route. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "routetype",
					Description: `(Optional) Type of IPv6 routes to remove from the routing table of the Citrix ADC. Possible values: [ CONNECTED, STATIC, DYNAMIC, OSPF, ISIS, BGP, RIP, ND-RA-ROUTE, FIB6 ]`,
				},
				resource.Attribute{
					Name:        "detail",
					Description: `(Optional) To get a detailed view. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the route6. It has the same value as the ` + "`" + `network` + "`" + ` attribute. ## Import A route6 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_route6.tf_route6 2001:db8:85a3::/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the route6. It has the same value as the ` + "`" + `network` + "`" + ` attribute. ## Import A route6 can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_route6.tf_route6 2001:db8:85a3::/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_routerdynamicrouting",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The routerdynamcirouting resource is used to create dynamic routing entries.


`,
			Keywords: []string{
				"network",
				"routerdynamicrouting",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "commandlines",
					Description: `(Optional) A list of commands to be executed.`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the routerdynamcirouting. It is a random string prefixed with "tf-routerdynamicrouting-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the routerdynamcirouting. It is a random string prefixed with "tf-routerdynamicrouting-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_rsskeytype",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The rsskeytype resource is used to create RSS key type resource.


`,
			Keywords: []string{
				"network",
				"rsskeytype",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "rsstype",
					Description: `(Required) Type of RSS key, possible values are SYMMETRIC and ASYMMETRIC. Possible values: [ ASYMMETRIC, SYMMETRIC ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rsskeytype. It is a unique string prefixed with "tf-rsskeytype-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the rsskeytype. It is a unique string prefixed with "tf-rsskeytype-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_server",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The server resource is used to create servers.


`,
			Keywords: []string{
				"basic",
				"server",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the server.`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Optional) IPv4 or IPv6 address of the server. If you create an IP address based server, you can specify the name of the server, instead of its IP address, when creating a service. Note: If you do not create a server entry, the server IP address that you enter when you create a service becomes the name of the server.`,
				},
				resource.Attribute{
					Name:        "domain",
					Description: `(Optional) Domain name of the server. For a domain based configuration, you must create the server first.`,
				},
				resource.Attribute{
					Name:        "translationip",
					Description: `(Optional) IP address used to transform the server's DNS-resolved IP address.`,
				},
				resource.Attribute{
					Name:        "translationmask",
					Description: `(Optional) The netmask of the translation ip.`,
				},
				resource.Attribute{
					Name:        "domainresolveretry",
					Description: `(Optional) Time, in seconds, for which the Citrix ADC must wait, after DNS resolution fails, before sending the next DNS query to resolve the domain name.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Initial state of the server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ipv6address",
					Description: `(Optional) Support IPv6 addressing mode. If you configure a server with the IPv6 addressing mode, you cannot use the server in the IPv4 addressing mode. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any information about the server.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "querytype",
					Description: `(Optional) Specify the type of DNS resolution to be done on the configured domain to get the backend services. Valid query types are A, AAAA and SRV with A being the default querytype. The type of DNS resolution done on the domains in SRV records is inherited from ipv6 argument. Possible values: [ A, AAAA, SRV ]`,
				},
				resource.Attribute{
					Name:        "domainresolvenow",
					Description: `(Optional) Immediately send a DNS query to resolve the server's domain name.`,
				},
				resource.Attribute{
					Name:        "delay",
					Description: `(Optional) Time, in seconds, after which all the services configured on the server are disabled.`,
				},
				resource.Attribute{
					Name:        "graceful",
					Description: `(Optional) Shut down gracefully, without accepting any new connections, and disabling each service when all of its connections are closed. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "internal",
					Description: `(Optional) Display names of the servers that have been created for internal use. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the server. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A server can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_server.tf_server tf_server ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the server. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A server can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_server.tf_server tf_server ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_service",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The service resource is used to create services.


`,
			Keywords: []string{
				"basic",
				"service",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the service.`,
				},
				resource.Attribute{
					Name:        "ip",
					Description: `(Optional) IP to assign to the service.`,
				},
				resource.Attribute{
					Name:        "servername",
					Description: `(Optional) Name of the server that hosts the service.`,
				},
				resource.Attribute{
					Name:        "servicetype",
					Description: `(Optional) Protocol in which data is exchanged with the service. Possible values: [ HTTP, FTP, TCP, UDP, SSL, SSL_BRIDGE, SSL_TCP, DTLS, NNTP, RPCSVR, DNS, ADNS, SNMP, RTSP, DHCPRA, ANY, SIP_UDP, SIP_TCP, SIP_SSL, DNS_TCP, ADNS_TCP, MYSQL, MSSQL, ORACLE, MONGO, MONGO_TLS, RADIUS, RADIUSListener, RDP, DIAMETER, SSL_DIAMETER, TFTP, SMPP, PPTP, GRE, SYSLOGTCP, SYSLOGUDP, FIX, SSL_FIX, USER_TCP, USER_SSL_TCP, QUIC, IPFIX, LOGSTREAM, LOGSTREAM_SSL ]`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Port number of the service. Range 1 - 65535`,
				},
				resource.Attribute{
					Name:        "cleartextport",
					Description: `(Optional) Port to which clear text data must be sent after the appliance decrypts incoming SSL traffic. Applicable to transparent SSL services.`,
				},
				resource.Attribute{
					Name:        "cachetype",
					Description: `(Optional) Cache type supported by the cache server. Possible values: [ TRANSPARENT, REVERSE, FORWARD ]`,
				},
				resource.Attribute{
					Name:        "maxclient",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "healthmonitor",
					Description: `(Optional) Monitor the health of this service. Available settings function as follows: YES - Send probes to check the health of the service. NO - Do not send probes to check the health of the service. With the NO option, the appliance shows the service as UP at all times. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "maxreq",
					Description: `(Optional) Note: Connection requests beyond this value are rejected.`,
				},
				resource.Attribute{
					Name:        "cacheable",
					Description: `(Optional) Use the transparent cache redirection virtual server to forward requests to the cache server. Note: Do not specify this parameter if you set the Cache Type parameter. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "cip",
					Description: `(Optional) Before forwarding a request to the service, insert an HTTP header with the client's IPv4 or IPv6 address as its value. Used if the server needs the client's IP address for security, accounting, or other purposes, and setting the Use Source IP parameter is not a viable option. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "cipheader",
					Description: `(Optional) Name for the HTTP header whose value must be set to the IP address of the client. Used with the Client IP parameter. If you set the Client IP parameter, and you do not specify a name for the header, the appliance uses the header name specified for the global Client IP Header parameter (the cipHeader parameter in the set ns param CLI command or the Client IP Header parameter in the Configure HTTP Parameters dialog box at System > Settings > Change HTTP parameters). If the global Client IP Header parameter is not specified, the appliance inserts a header with the name "client-ip.".`,
				},
				resource.Attribute{
					Name:        "usip",
					Description: `(Optional) Use the client's IP address as the source IP address when initiating a connection to the server. When creating a service, if you do not set this parameter, the service inherits the global Use Source IP setting (available in the enable ns mode and disable ns mode CLI commands, or in the System > Settings > Configure modes > Configure Modes dialog box). However, you can override this setting after you create the service. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "pathmonitor",
					Description: `(Optional) Path monitoring for clustering. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "pathmonitorindv",
					Description: `(Optional) Individual Path monitoring decisions. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "useproxyport",
					Description: `(Optional) Use the proxy port as the source port when initiating connections with the server. With the NO setting, the client-side connection port is used as the source port for the server-side connection. Note: This parameter is available only when the Use Source IP (USIP) parameter is set to YES. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "sc",
					Description: `(Optional) State of SureConnect for the service. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "sp",
					Description: `(Optional) Enable surge protection for the service. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "rtspsessionidremap",
					Description: `(Optional) Enable RTSP session ID mapping for the service. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "clttimeout",
					Description: `(Optional) Time, in seconds, after which to terminate an idle client connection.`,
				},
				resource.Attribute{
					Name:        "svrtimeout",
					Description: `(Optional) Time, in seconds, after which to terminate an idle server connection.`,
				},
				resource.Attribute{
					Name:        "customserverid",
					Description: `(Optional) Unique identifier for the service. Used when the persistency type for the virtual server is set to Custom Server ID.`,
				},
				resource.Attribute{
					Name:        "serverid",
					Description: `(Optional) The identifier for the service. This is used when the persistency type is set to Custom Server ID.`,
				},
				resource.Attribute{
					Name:        "cka",
					Description: `(Optional) Enable client keep-alive for the service. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "tcpb",
					Description: `(Optional) Enable TCP buffering for the service. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "cmp",
					Description: `(Optional) Enable compression for the service. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "maxbandwidth",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "monthreshold",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Initial state of the service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "downstateflush",
					Description: `(Optional) Flush all active transactions associated with a service whose state transitions from UP to DOWN. Do not enable this option for applications that must complete their transactions. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tcpprofilename",
					Description: `(Optional) Name of the TCP profile that contains TCP configuration settings for the service.`,
				},
				resource.Attribute{
					Name:        "httpprofilename",
					Description: `(Optional) Name of the HTTP profile that contains HTTP configuration settings for the service.`,
				},
				resource.Attribute{
					Name:        "contentinspectionprofilename",
					Description: `(Optional) Name of the ContentInspection profile that contains IPS/IDS communication related setting for the service.`,
				},
				resource.Attribute{
					Name:        "hashid",
					Description: `(Optional) A numerical identifier that can be used by hash based load balancing methods. Must be unique for each service.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any information about the service.`,
				},
				resource.Attribute{
					Name:        "netprofile",
					Description: `(Optional) Network profile to use for the service.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "processlocal",
					Description: `(Optional) By turning on this option packets destined to a service in a cluster will not under go any steering. Turn this option for single packet request response mode or when the upstream device is performing a proper RSS for connection based distribution. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dnsprofilename",
					Description: `(Optional) Name of the DNS profile to be associated with the service. DNS profile properties will applied to the transactions processed by a service. This parameter is valid only for ADNS and ADNS-TCP services.`,
				},
				resource.Attribute{
					Name:        "monconnectionclose",
					Description: `(Optional) Close monitoring connections by sending the service a connection termination message with the specified bit set. Possible values: [ RESET, FIN ]`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Optional) The new IP address of the service.`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the monitor-service binding. When a monitor is UP, the weight assigned to its binding with the service determines how much the monitor contributes toward keeping the health of the service above the value configured for the Monitor Threshold parameter.`,
				},
				resource.Attribute{
					Name:        "monitornamesvc",
					Description: `(Optional) Name of the monitor bound to the specified service.`,
				},
				resource.Attribute{
					Name:        "delay",
					Description: `(Optional) Time, in seconds, allocated to the Citrix ADC for a graceful shutdown of the service. During this period, new requests are sent to the service only for clients who already have persistent sessions on the appliance. Requests from new clients are load balanced among other available services. After the delay time expires, no requests are sent to the service, and the service is marked as unavailable (OUT OF SERVICE).`,
				},
				resource.Attribute{
					Name:        "graceful",
					Description: `(Optional) Shut down gracefully, not accepting any new connections, and disabling the service when all of its connections are closed. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "internal",
					Description: `(Optional) Display only dynamically learned services.`,
				},
				resource.Attribute{
					Name:        "lbvserver",
					Description: `(Optional) The lb vserver to attach the service to.`,
				},
				resource.Attribute{
					Name:        "lbmonitor",
					Description: `(Optional) The lb monitor to attach the service to.`,
				},
				resource.Attribute{
					Name:        "snienable",
					Description: `(Optional) State of the Server Name Indication (SNI) feature on the virtual server and service-based offload. SNI helps to enable SSL encryption on multiple domains on a single virtual server or service if the domains are controlled by the same organization and share the same second-level domain name. For example, \`,
				},
				resource.Attribute{
					Name:        "commonname",
					Description: `(Optional) Name to be checked against the CommonName (CN) field in the server certificate bound to the SSL service.`,
				},
				resource.Attribute{
					Name:        "all",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "riseapbrstatsmsgcode",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "accessdown",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "appflowlog",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "wait_until_disabled",
					Description: `(Optional) Boolean flag to signify if the resource will wait for the service to be in a disabled state after the disable operation has been issued.`,
				},
				resource.Attribute{
					Name:        "disabled_timeout",
					Description: `(Optional) Time period to wait for the service to be in a disabled state after the disable operation.`,
				},
				resource.Attribute{
					Name:        "disabled_poll_delay",
					Description: `(Optional) Time period to wait before the first poll for the disabled state read.`,
				},
				resource.Attribute{
					Name:        "disabled_poll_interval",
					Description: `(Optional) Time period for disabled state read poll interval between tries. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the service. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A service can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_service.tf_service tf_service ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the service. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A service can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_service.tf_service tf_service ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_service_dospolicy_binding",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The service_dospolicy_binding resource is used to bind dospolicy to service.


`,
			Keywords: []string{
				"basic",
				"service",
				"dospolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the service to which to bind a policy or monitor.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policyname for which this service is bound ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the service_dospolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by comma. ## Import A service_dospolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_service_dospolicy_binding.tf_binding tf_service,tf_dospolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the service_dospolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes separated by comma. ## Import A service_dospolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_service_dospolicy_binding.tf_binding tf_service,tf_dospolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_service_lbmonitor_binding",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The service_lbmonitor_binding resource is used to bind lbmonitor to service.


`,
			Keywords: []string{
				"basic",
				"service",
				"lbmonitor",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the service to which to bind a policy or monitor.`,
				},
				resource.Attribute{
					Name:        "monitor_name",
					Description: `(Required) The monitor Names.`,
				},
				resource.Attribute{
					Name:        "monstate",
					Description: `(Optional) The configured state (enable/disable) of the monitor on this server.`,
				},
				resource.Attribute{
					Name:        "passive",
					Description: `(Optional) Indicates if load monitor is passive. A passive load monitor does not remove service from LB decision when threshold is breached.`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the monitor-service binding. When a monitor is UP, the weight assigned to its binding with the service determines how much the monitor contributes toward keeping the health of the service above the value configured for the Monitor Threshold parameter. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the service_lbmonitor_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `monitor_name` + "`" + ` attributes separated by comma. ## Import A service_lbmonitor_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_service_lbmonitor_binding.tf_binding tf_service,tf_monitor ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the service_lbmonitor_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `monitor_name` + "`" + ` attributes separated by comma. ## Import A service_lbmonitor_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_service_lbmonitor_binding.tf_binding tf_service,tf_monitor ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_servicegroup",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The servicegroup resource is used to create servicegroups.


`,
			Keywords: []string{
				"basic",
				"servicegroup",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servicegroupname",
					Description: `(Optional) Name of the service group.`,
				},
				resource.Attribute{
					Name:        "servicetype",
					Description: `(Optional) Protocol used to exchange data with the service. Possible values: [ HTTP, FTP, TCP, UDP, SSL, SSL_BRIDGE, SSL_TCP, DTLS, NNTP, RPCSVR, DNS, ADNS, SNMP, RTSP, DHCPRA, ANY, SIP_UDP, SIP_TCP, SIP_SSL, DNS_TCP, ADNS_TCP, MYSQL, MSSQL, ORACLE, MONGO, MONGO_TLS, RADIUS, RADIUSListener, RDP, DIAMETER, SSL_DIAMETER, TFTP, SMPP, PPTP, GRE, SYSLOGTCP, SYSLOGUDP, FIX, SSL_FIX, USER_TCP, USER_SSL_TCP, QUIC, IPFIX, LOGSTREAM, LOGSTREAM_SSL ]`,
				},
				resource.Attribute{
					Name:        "cachetype",
					Description: `(Optional) Cache type supported by the cache server. Possible values: [ TRANSPARENT, REVERSE, FORWARD ]`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "maxclient",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "maxreq",
					Description: `(Optional) Note: Connection requests beyond this value are rejected.`,
				},
				resource.Attribute{
					Name:        "cacheable",
					Description: `(Optional) Use the transparent cache redirection virtual server to forward the request to the cache server. Note: Do not set this parameter if you set the Cache Type. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "cip",
					Description: `(Optional) Insert the Client IP header in requests forwarded to the service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "cipheader",
					Description: `(Optional) Name of the HTTP header whose value must be set to the IP address of the client. Used with the Client IP parameter. If client IP insertion is enabled, and the client IP header is not specified, the value of Client IP Header parameter or the value set by the set ns config command is used as client's IP header name.`,
				},
				resource.Attribute{
					Name:        "usip",
					Description: `(Optional) Use client's IP address as the source IP address when initiating connection to the server. With the NO setting, which is the default, a mapped IP (MIP) address or subnet IP (SNIP) address is used as the source IP address to initiate server side connections. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "pathmonitor",
					Description: `(Optional) Path monitoring for clustering. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "pathmonitorindv",
					Description: `(Optional) Individual Path monitoring decisions. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "useproxyport",
					Description: `(Optional) Use the proxy port as the source port when initiating connections with the server. With the NO setting, the client-side connection port is used as the source port for the server-side connection. Note: This parameter is available only when the Use Source IP (USIP) parameter is set to YES. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "healthmonitor",
					Description: `(Optional) Monitor the health of this service. Available settings function as follows: YES - Send probes to check the health of the service. NO - Do not send probes to check the health of the service. With the NO option, the appliance shows the service as UP at all times. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "sc",
					Description: `(Optional) State of the SureConnect feature for the service group. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "sp",
					Description: `(Optional) Enable surge protection for the service group. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "rtspsessionidremap",
					Description: `(Optional) Enable RTSP session ID mapping for the service group. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "clttimeout",
					Description: `(Optional) Time, in seconds, after which to terminate an idle client connection.`,
				},
				resource.Attribute{
					Name:        "svrtimeout",
					Description: `(Optional) Time, in seconds, after which to terminate an idle server connection.`,
				},
				resource.Attribute{
					Name:        "cka",
					Description: `(Optional) Enable client keep-alive for the service group. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "tcpb",
					Description: `(Optional) Enable TCP buffering for the service group. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "cmp",
					Description: `(Optional) Enable compression for the specified service. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "maxbandwidth",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "monthreshold",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Initial state of the service group. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "downstateflush",
					Description: `(Optional) Flush all active transactions associated with all the services in the service group whose state transitions from UP to DOWN. Do not enable this option for applications that must complete their transactions. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tcpprofilename",
					Description: `(Optional) Name of the TCP profile that contains TCP configuration settings for the service group.`,
				},
				resource.Attribute{
					Name:        "httpprofilename",
					Description: `(Optional) Name of the HTTP profile that contains HTTP configuration settings for the service group.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any information about the service group.`,
				},
				resource.Attribute{
					Name:        "appflowlog",
					Description: `(Optional) Enable logging of AppFlow information for the specified service group. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "netprofile",
					Description: `(Optional) Network profile for the service group.`,
				},
				resource.Attribute{
					Name:        "autoscale",
					Description: `(Optional) Auto scale option for a servicegroup. Possible values: [ DISABLED, DNS, POLICY, CLOUD, API ]`,
				},
				resource.Attribute{
					Name:        "memberport",
					Description: `(Optional) member port.`,
				},
				resource.Attribute{
					Name:        "autodisablegraceful",
					Description: `(Optional) Indicates graceful shutdown of the service. System will wait for all outstanding connections to this service to be closed before disabling the service. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "autodisabledelay",
					Description: `(Optional) The time allowed (in seconds) for a graceful shutdown. During this period, new connections or requests will continue to be sent to this service for clients who already have a persistent session on the system. Connections or requests from fresh or new clients who do not yet have a persistence sessions on the system will not be sent to the service. Instead, they will be load balanced among other available services. After the delay time expires, no new requests or connections will be sent to the service.`,
				},
				resource.Attribute{
					Name:        "monconnectionclose",
					Description: `(Optional) Close monitoring connections by sending the service a connection termination message with the specified bit set. Possible values: [ RESET, FIN ]`,
				},
				resource.Attribute{
					Name:        "servername",
					Description: `(Optional) Name of the server to which to bind the service group.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Server port number. Range 1 - 65535`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the servers in the service group. Specifies the capacity of the servers relative to the other servers in the load balancing configuration. The higher the weight, the higher the percentage of requests sent to the service.`,
				},
				resource.Attribute{
					Name:        "customserverid",
					Description: `(Optional) The identifier for this IP:Port pair. Used when the persistency type is set to Custom Server ID.`,
				},
				resource.Attribute{
					Name:        "serverid",
					Description: `(Optional) The identifier for the service. This is used when the persistency type is set to Custom Server ID.`,
				},
				resource.Attribute{
					Name:        "hashid",
					Description: `(Optional) The hash identifier for the service. This must be unique for each service. This parameter is used by hash based load balancing methods.`,
				},
				resource.Attribute{
					Name:        "nameserver",
					Description: `(Optional) Specify the nameserver to which the query for bound domain needs to be sent. If not specified, use the global nameserver.`,
				},
				resource.Attribute{
					Name:        "dbsttl",
					Description: `(Optional) Specify the TTL for DNS record for domain based service.The default value of ttl is 0 which indicates to use the TTL received in DNS response for monitors.`,
				},
				resource.Attribute{
					Name:        "monitornamesvc",
					Description: `(Optional) Name of the monitor bound to the service group. Used to assign a weight to the monitor.`,
				},
				resource.Attribute{
					Name:        "dupweight",
					Description: `(Optional) weight of the monitor that is bound to servicegroup.`,
				},
				resource.Attribute{
					Name:        "delay",
					Description: `(Optional) Time, in seconds, allocated for a shutdown of the services in the service group. During this period, new requests are sent to the service only for clients who already have persistent sessions on the appliance. Requests from new clients are load balanced among other available services. After the delay time expires, no requests are sent to the service, and the service is marked as unavailable (OUT OF SERVICE).`,
				},
				resource.Attribute{
					Name:        "graceful",
					Description: `(Optional) Wait for all existing connections to the service to terminate before shutting down the service. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "includemembers",
					Description: `(Optional) Display the members of the listed service groups in addition to their settings. Can be specified when no service group name is provided in the command. In that case, the details displayed for each service group are identical to the details displayed when a service group name is provided, except that bound monitors are not displayed.`,
				},
				resource.Attribute{
					Name:        "lbvservers",
					Description: `(Optional) List of lbvservers to bind the servicegroup to.`,
				},
				resource.Attribute{
					Name:        "servicegroupmembers_by_servername",
					Description: `(Optional) list of service members bindings by service name. e.g. ` + "`" + `["service1:80:1", "service2:80:1"]` + "`" + ``,
				},
				resource.Attribute{
					Name:        "servicegroupmembers",
					Description: `(Optional) list of members bindings by server ip address. e.g.` + "`" + `["172.20.0.9:80:10", "172.20.0.10:80:10"]`,
				},
				resource.Attribute{
					Name:        "lbmonitor",
					Description: `(Optional) lbmonitor to bind the servicegroup to.`,
				},
				resource.Attribute{
					Name:        "riseapbrstatsmsgcode",
					Description: `(Optional) ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the servicegroup. It has the same value as the ` + "`" + `servicegroupname` + "`" + ` attribute. ## Import A servicegroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_servicegroup.tf_servicegroup tf_servicegroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the servicegroup. It has the same value as the ` + "`" + `servicegroupname` + "`" + ` attribute. ## Import A servicegroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_servicegroup.tf_servicegroup tf_servicegroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_servicegroup_lbmonitor_binding",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `

The servicegroup_lbmonitor_binding resource is used to bind servicegroups to load balancing monitors.

~> If you are using this resource to bind lbmonitors to a servicegroup,
do not define the ` + "`" + `lbmonitor` + "`" + ` attribute in the servicegroup resource.

`,
			Keywords: []string{
				"basic",
				"servicegroup",
				"lbmonitor",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "monitorname",
					Description: `(Optional) Monitor name.`,
				},
				resource.Attribute{
					Name:        "monstate",
					Description: `(Optional) Monitor state. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the servers in the service group. Specifies the capacity of the servers relative to the other servers in the load balancing configuration. The higher the weight, the higher the percentage of requests sent to the service.`,
				},
				resource.Attribute{
					Name:        "passive",
					Description: `(Optional) Indicates if load monitor is passive. A passive load monitor does not remove service from LB decision when threshold is breached.`,
				},
				resource.Attribute{
					Name:        "servicegroupname",
					Description: `(Optional) Name of the service group.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Port number of the service. Each service must have a unique port number. Range 1 - 65535`,
				},
				resource.Attribute{
					Name:        "customserverid",
					Description: `(Optional) Unique service identifier. Used when the persistency type for the virtual server is set to Custom Server ID.`,
				},
				resource.Attribute{
					Name:        "serverid",
					Description: `(Optional) The identifier for the service. This is used when the persistency type is set to Custom Server ID.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Initial state of the service after binding. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "hashid",
					Description: `(Optional) Unique numerical identifier used by hash based load balancing methods to identify a service.`,
				},
				resource.Attribute{
					Name:        "nameserver",
					Description: `(Optional) Specify the nameserver to which the query for bound domain needs to be sent. If not specified, use the global nameserver.`,
				},
				resource.Attribute{
					Name:        "dbsttl",
					Description: `(Optional) Specify the TTL for DNS record for domain based service.The default value of ttl is 0 which indicates to use the TTL received in DNS response for monitors. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the servicegroup_lbmonitor_binding. It is the concatenation of the ` + "`" + `servicegroupname` + "`" + ` and ` + "`" + `monitorname` + "`" + ` attributes ## Import A servicegroup_lbmonitor_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_servicegroup_lbmonitor_binding.tf_binding tf_csaction tf_servicegroup,tf_monitorname ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the servicegroup_lbmonitor_binding. It is the concatenation of the ` + "`" + `servicegroupname` + "`" + ` and ` + "`" + `monitorname` + "`" + ` attributes ## Import A servicegroup_lbmonitor_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_servicegroup_lbmonitor_binding.tf_binding tf_csaction tf_servicegroup,tf_monitorname ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_servicegroup_servicegroupmember_binding",
			Category:         "Basic",
			ShortDescription: ``,
			Description: `\_servicegroupmember\_binding

The servicegroup\_servicegroupmember\_binding resource is used to bind service members to servicegroups.


`,
			Keywords: []string{
				"basic",
				"servicegroup",
				"servicegroupmember",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ip",
					Description: `(Optional) IP Address.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Server port number. Range 1 - 65535`,
				},
				resource.Attribute{
					Name:        "weight",
					Description: `(Optional) Weight to assign to the servers in the service group. Specifies the capacity of the servers relative to the other servers in the load balancing configuration. The higher the weight, the higher the percentage of requests sent to the service.`,
				},
				resource.Attribute{
					Name:        "servername",
					Description: `(Optional) Name of the server to which to bind the service group.`,
				},
				resource.Attribute{
					Name:        "customserverid",
					Description: `(Optional) The identifier for this IP:Port pair. Used when the persistency type is set to Custom Server ID.`,
				},
				resource.Attribute{
					Name:        "serverid",
					Description: `(Optional) The identifier for the service. This is used when the persistency type is set to Custom Server ID.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Initial state of the service group. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "hashid",
					Description: `(Optional) The hash identifier for the service. This must be unique for each service. This parameter is used by hash based load balancing methods.`,
				},
				resource.Attribute{
					Name:        "nameserver",
					Description: `(Optional) Specify the nameserver to which the query for bound domain needs to be sent. If not specified, use the global nameserver.`,
				},
				resource.Attribute{
					Name:        "dbsttl",
					Description: `(Optional) Specify the TTL for DNS record for domain based service.The default value of ttl is 0 which indicates to use the TTL received in DNS response for monitors.`,
				},
				resource.Attribute{
					Name:        "servicegroupname",
					Description: `(Required) Name of the service group.`,
				},
				resource.Attribute{
					Name:        "disable_read",
					Description: `(Optional) When set to true the read operation is skipped. Useful when the read operation will cause errors such as the binding of an dns query server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the servicegroup\_servicegroupmember\_binding. It is the concatenation of three components separated by comma. First component is the ` + "`" + `servicegroupname` + "`" + `. Second component is the ` + "`" + `ip` + "`" + ` or the ` + "`" + `servername` + "`" + ` attribute. Last optional component is the ` + "`" + `port` + "`" + ` attribute. ## Import A servicegroup\_servicegroupmember\_binding can be imported using its id. The id is either a 3-tuple consisting of the servicegroup name, the ip address or server name and the port separated by comma. In case of a server that port is not applicable for the binding, the id is a 2-tuple consisting of the servicegroup name and the server name separated by comma. ` + "`" + `` + "`" + `` + "`" + `shell # 3 tuple with ip address terraform import citrixadc_servicegroup_servicegroupmember_binding.tf_binding tf_servicegroup,10.78.22.33,80 # 3 tuple with server name terraform import citrixadc_servicegroup_servicegroupmember_binding.tf_binding tf_servicegroup,servername,80 # 2 tuple terraform import citrixadc_servicegroup_servicegroupmember_binding.tf_binding tf_servicegroup,servername_no_port ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the servicegroup\_servicegroupmember\_binding. It is the concatenation of three components separated by comma. First component is the ` + "`" + `servicegroupname` + "`" + `. Second component is the ` + "`" + `ip` + "`" + ` or the ` + "`" + `servername` + "`" + ` attribute. Last optional component is the ` + "`" + `port` + "`" + ` attribute. ## Import A servicegroup\_servicegroupmember\_binding can be imported using its id. The id is either a 3-tuple consisting of the servicegroup name, the ip address or server name and the port separated by comma. In case of a server that port is not applicable for the binding, the id is a 2-tuple consisting of the servicegroup name and the server name separated by comma. ` + "`" + `` + "`" + `` + "`" + `shell # 3 tuple with ip address terraform import citrixadc_servicegroup_servicegroupmember_binding.tf_binding tf_servicegroup,10.78.22.33,80 # 3 tuple with server name terraform import citrixadc_servicegroup_servicegroupmember_binding.tf_binding tf_servicegroup,servername,80 # 2 tuple terraform import citrixadc_servicegroup_servicegroupmember_binding.tf_binding tf_servicegroup,servername_no_port ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_smppparam",
			Category:         "SMPP",
			ShortDescription: ``,
			Description: `

The smppparam resource is used to update smppparam.


`,
			Keywords: []string{
				"smpp",
				"smppparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "addrnpi",
					Description: `(Optional) Numbering Plan Indicator, such as landline, data, or WAP client, used in the ESME address sent in the bind request.`,
				},
				resource.Attribute{
					Name:        "addrrange",
					Description: `(Optional) Set of SME addresses, sent in the bind request, serviced by the ESME.`,
				},
				resource.Attribute{
					Name:        "addrton",
					Description: `(Optional) Type of Number, such as an international number or a national number, used in the ESME address sent in the bind request.`,
				},
				resource.Attribute{
					Name:        "clientmode",
					Description: `(Optional) Mode in which the client binds to the ADC. Applicable settings function as follows:`,
				},
				resource.Attribute{
					Name:        "msgqueue",
					Description: `(Optional) Queue SMPP messages if a client that is capable of receiving the destination address messages is not available.`,
				},
				resource.Attribute{
					Name:        "msgqueuesize",
					Description: `(Optional) Maximum number of SMPP messages that can be queued. After the limit is reached, the Citrix ADC sends a deliver_sm_resp PDU, with an appropriate error message, to the message center. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the smppparam. It is a unique string prefixed with ` + "`" + `tf-smppparam-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the smppparam. It is a unique string prefixed with ` + "`" + `tf-smppparam-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_smppuser",
			Category:         "SMPP",
			ShortDescription: ``,
			Description: `

The smppuser resource is used to create smppuser.


`,
			Keywords: []string{
				"smpp",
				"smppuser",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "password",
					Description: `(Required) Password for binding to the SMPP server. Must be the same as the password specified in the SMPP server.`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Required) Name of the SMPP user. Must be the same as the user name specified in the SMPP server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the smppuser. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A smppuser can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_smppuser.tf_smppuser user1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the smppuser. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A smppuser can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_smppuser.tf_smppuser user1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_snmpalarm",
			Category:         "SNMP",
			ShortDescription: ``,
			Description: `

The snmpalarm resource is used to create snmpalarm.


`,
			Keywords: []string{
				"snmp",
				"snmpalarm",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "logging",
					Description: `(Optional) Logging status of the alarm. When logging is enabled, the Citrix ADC logs every trap message that is generated for this alarm.`,
				},
				resource.Attribute{
					Name:        "normalvalue",
					Description: `(Optional) Value for the normal threshold. A trap message is generated if the value of the respective attribute falls to or below this value after exceeding the high threshold.`,
				},
				resource.Attribute{
					Name:        "severity",
					Description: `(Optional) Severity level assigned to trap messages generated by this alarm. The severity levels are, in increasing order of severity, Informational, Warning, Minor, Major, and Critical. This parameter is useful when you want the Citrix ADC to send trap messages to a trap listener on the basis of severity level. Trap messages with a severity level lower than the specified level (in the trap listener entry) are not sent.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Current state of the SNMP alarm. The Citrix ADC generates trap messages only for SNMP alarms that are enabled. Some alarms are enabled by default, but you can disable them.`,
				},
				resource.Attribute{
					Name:        "thresholdvalue",
					Description: `(Optional) Value for the high threshold. The Citrix ADC generates an SNMP trap message when the value of the attribute associated with the alarm is greater than or equal to the specified high threshold value.`,
				},
				resource.Attribute{
					Name:        "time",
					Description: `(Optional) Interval, in seconds, at which the Citrix ADC generates SNMP trap messages when the conditions specified in the SNMP alarm are met.Can be specified for the following alarms: SYNFLOOD, HA-VERSION-MISMATCH, HA-SYNC-FAILURE, HA-NO-HEARTBEATS,HA-BAD-SECONDARY-STATE, CLUSTER-NODE-HEALTH, CLUSTER-NODE-QUORUM, CLUSTER-VERSION-MISMATCH, CLUSTER-BKHB-FAILED, PORT-ALLOC-FAILED, COMPACT-FLASH-ERRORS, HARD-DISK-DRIVE-ERRORS and APPFW traps. Default trap time intervals: SYNFLOOD and APPFW traps = 1sec, PORT-ALLOC-FAILED = 3600sec(1 hour), Other Traps = 86400sec(1 day)`,
				},
				resource.Attribute{
					Name:        "trapname",
					Description: `(Optional) Name of the SNMP alarm. This parameter is required for identifying the SNMP alarm and cannot be modified. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpalarm. It is a unique string prefixed with "tf-snmpalarm-".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpalarm. It is a unique string prefixed with "tf-snmpalarm-".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_snmpcommunity",
			Category:         "SNMP",
			ShortDescription: ``,
			Description: `

The snmpcommunity resource is used to create snmpcommunity.


`,
			Keywords: []string{
				"snmp",
				"snmpcommunity",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "communityname",
					Description: `(Required) The SNMP community string. Can consist of 1 to 31 characters that include uppercase and lowercase letters,numbers and special characters. The following requirement applies only to the Citrix ADC CLI: If the string includes one or more spaces, enclose the name in double or single quotation marks (for example, "my string" or 'my string').`,
				},
				resource.Attribute{
					Name:        "permissions",
					Description: `(Optional) The SNMP V1 or V2 query-type privilege that you want to associate with this SNMP community. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpcommunity. It has the same value as the ` + "`" + `communityname` + "`" + ` attribute. ## Import A snmpcommunity can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmpcommunity.tf_snmpcommunity test_community ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpcommunity. It has the same value as the ` + "`" + `communityname` + "`" + ` attribute. ## Import A snmpcommunity can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmpcommunity.tf_snmpcommunity test_community ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_snmpengineid",
			Category:         "SNMP",
			ShortDescription: ``,
			Description: `

The snmpengineid resource is used to create snmpengineid.


`,
			Keywords: []string{
				"snmp",
				"snmpengineid",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "engineid",
					Description: `(Required) A hexadecimal value of at least 10 characters, uniquely identifying the engineid`,
				},
				resource.Attribute{
					Name:        "ownernode",
					Description: `(Optional) ID of the cluster node for which you are setting the engineid ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpengineid. It is a unique string prefixed with "tf-snmpengineid-".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpengineid. It is a unique string prefixed with "tf-snmpengineid-".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_snmpgroup",
			Category:         "SNMP",
			ShortDescription: ``,
			Description: `

The snmpgroup resource is used to create snmpgroup.


`,
			Keywords: []string{
				"snmp",
				"snmpgroup",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the SNMPv3 group. Can consist of 1 to 31 characters that include uppercase and lowercase letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore (_) characters. You should choose a name that helps identify the SNMPv3 group. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose it in double or single quotation marks (for example, "my name" or 'my name').`,
				},
				resource.Attribute{
					Name:        "securitylevel",
					Description: `(Required) Security level required for communication between the Citrix ADC and the SNMPv3 users who belong to the group. Specify one of the following options: noAuthNoPriv. Require neither authentication nor encryption. authNoPriv. Require authentication but no encryption. authPriv. Require authentication and encryption. Note: If you specify authentication, you must specify an encryption algorithm when you assign an SNMPv3 user to the group. If you also specify encryption, you must assign both an authentication and an encryption algorithm for each group member.`,
				},
				resource.Attribute{
					Name:        "readviewname",
					Description: `(Required) Name of the configured SNMPv3 view that you want to bind to this SNMPv3 group. An SNMPv3 user bound to this group can access the subtrees that are bound to this SNMPv3 view as type INCLUDED, but cannot access the ones that are type EXCLUDED. If the Citrix ADC has multiple SNMPv3 view entries with the same name, all such entries are associated with the SNMPv3 group. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpgroup. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A snmpgroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmpgroup.tf_snmpgroup test_group ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpgroup. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A snmpgroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmpgroup.tf_snmpgroup test_group ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_snmpmanager",
			Category:         "SNMP",
			ShortDescription: ``,
			Description: `

The snmpmanager resource is used to create snmpmanager.


`,
			Keywords: []string{
				"snmp",
				"snmpmanager",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) IP address of the SNMP manager. Can be an IPv4 or IPv6 address. You can instead specify an IPv4 network address or IPv6 network prefix if you want the Citrix ADC to respond to SNMP queries from any device on the specified network. Alternatively, instead of an IPv4 address, you can specify a host name that has been assigned to an SNMP manager. If you do so, you must add a DNS name server that resolves the host name of the SNMP manager to its IP address. Note: The Citrix ADC does not support host names for SNMP managers that have IPv6 addresses.`,
				},
				resource.Attribute{
					Name:        "domainresolveretry",
					Description: `(Optional) Amount of time, in seconds, for which the Citrix ADC waits before sending another DNS query to resolve the host name of the SNMP manager if the last query failed. This parameter is valid for host-name based SNMP managers only. After a query succeeds, the TTL determines the wait time. The minimum and default value is 5.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) Subnet mask associated with an IPv4 network address. If the IP address specifies the address or host name of a specific host, accept the default value of 255.255.255.255. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpmanager. It has the same value as the ` + "`" + `ipaddress` + "`" + ` attribute. ## Import A snmpmanager can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmpmanager.tf_snmpmanager 192.168.2.2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpmanager. It has the same value as the ` + "`" + `ipaddress` + "`" + ` attribute. ## Import A snmpmanager can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmpmanager.tf_snmpmanager 192.168.2.2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_snmpmib",
			Category:         "SNMP",
			ShortDescription: ``,
			Description: `

The snmpmib resource is used to create snmpmib.


`,
			Keywords: []string{
				"snmp",
				"snmpmib",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "contact",
					Description: `(Optional) Name of the administrator for this Citrix ADC. Along with the name, you can include information on how to contact this person, such as a phone number or an email address. Can consist of 1 to 127 characters that include uppercase and lowercase letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore (_) characters. The following requirement applies only to the Citrix ADC CLI: If the information includes one or more spaces, enclose it in double or single quotation marks (for example, "my contact" or 'my contact').`,
				},
				resource.Attribute{
					Name:        "customid",
					Description: `(Optional) Custom identification number for the Citrix ADC. Can consist of 1 to 127 characters that include uppercase and lowercase letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore (_) characters. You should choose a custom identification that helps identify the Citrix ADC appliance. The following requirement applies only to the Citrix ADC CLI: If the ID includes one or more spaces, enclose it in double or single quotation marks (for example, "my ID" or 'my ID').`,
				},
				resource.Attribute{
					Name:        "location",
					Description: `(Optional) Physical location of the Citrix ADC. For example, you can specify building name, lab number, and rack number. Can consist of 1 to 127 characters that include uppercase and lowercase letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore (_) characters. The following requirement applies only to the Citrix ADC CLI: If the location includes one or more spaces, enclose it in double or single quotation marks (for example, "my location" or 'my location').`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for this Citrix ADC. Can consist of 1 to 127 characters that include uppercase and lowercase letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore (_) characters. You should choose a name that helps identify the Citrix ADC appliance. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose it in double or single quotation marks (for example, "my name" or 'my name').`,
				},
				resource.Attribute{
					Name:        "ownernode",
					Description: `(Optional) ID of the cluster node for which we are setting the mib. This is a mandatory argument to set snmp mib on CLIP. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpmib. It is a unique string prefixed with "tf-snmpmib-".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpmib. It is a unique string prefixed with "tf-snmpmib-".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_snmpoption",
			Category:         "SNMP",
			ShortDescription: ``,
			Description: `

The snmpopoption resource is used to create snmpopoption.


`,
			Keywords: []string{
				"snmp",
				"snmpoption",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "partitionnameintrap",
					Description: `(Optional) Send partition name as a varbind in traps. By default the partition names are not sent as a varbind.`,
				},
				resource.Attribute{
					Name:        "snmpset",
					Description: `(Optional) Accept SNMP SET requests sent to the Citrix ADC, and allow SNMP managers to write values to MIB objects that are configured for write access.`,
				},
				resource.Attribute{
					Name:        "snmptraplogging",
					Description: `(Optional) Log any SNMP trap events (for SNMP alarms in which logging is enabled) even if no trap listeners are configured. With the default setting, SNMP trap events are logged if at least one trap listener is configured on the appliance.`,
				},
				resource.Attribute{
					Name:        "snmptraplogginglevel",
					Description: `(Optional) Audit log level of SNMP trap logs. The default value is INFORMATIONAL. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpopoption. It is a unique string prefixed with "tf-snmpoption-".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpopoption. It is a unique string prefixed with "tf-snmpoption-".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_snmptrap",
			Category:         "SNMP",
			ShortDescription: ``,
			Description: `

The snmptrap resource is used to create snmptrap.


`,
			Keywords: []string{
				"snmp",
				"snmptrap",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "trapclass",
					Description: `(Required) Type of trap messages that the Citrix ADC sends to the trap listener: Generic or the enterprise-specific messages defined in the MIB file.`,
				},
				resource.Attribute{
					Name:        "trapdestination",
					Description: `(Required) IPv4 or the IPv6 address of the trap listener to which the Citrix ADC is to send SNMP trap messages.`,
				},
				resource.Attribute{
					Name:        "allpartitions",
					Description: `(Optional) Send traps of all partitions to this destination.`,
				},
				resource.Attribute{
					Name:        "communityname",
					Description: `(Optional) Password (string) sent with the trap messages, so that the trap listener can authenticate them. Can include 1 to 31 uppercase or lowercase letters, numbers, and hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore (_) characters. You must specify the same community string on the trap listener device. Otherwise, the trap listener drops the trap messages. The following requirement applies only to the Citrix ADC CLI: If the string includes one or more spaces, enclose the name in double or single quotation marks (for example, "my string" or 'my string').`,
				},
				resource.Attribute{
					Name:        "destport",
					Description: `(Optional) UDP port at which the trap listener listens for trap messages. This setting must match the setting on the trap listener. Otherwise, the listener drops the trap messages.`,
				},
				resource.Attribute{
					Name:        "severity",
					Description: `(Optional) Severity level at or above which the Citrix ADC sends trap messages to this trap listener. The severity levels, in increasing order of severity, are Informational, Warning, Minor, Major, Critical. This parameter can be set for trap listeners of type SPECIFIC only. The default is to send all levels of trap messages. Important: Trap messages are not assigned severity levels unless you specify severity levels when configuring SNMP alarms.`,
				},
				resource.Attribute{
					Name:        "srcip",
					Description: `(Optional) IPv4 or IPv6 address that the Citrix ADC inserts as the source IP address in all SNMP trap messages that it sends to this trap listener. By default this is the appliance's NSIP or NSIP6 address, but you can specify an IPv4 MIP or SNIP/SNIP6 address. In cluster setup, the default value is the individual node's NSIP, but it can be set to CLIP or Striped SNIP address. In non default partition, this parameter must be set to the SNIP/SNIP6 address.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "version",
					Description: `(Optional) SNMP version, which determines the format of trap messages sent to the trap listener. This setting must match the setting on the trap listener. Otherwise, the listener drops the trap messages. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmptrap is the concatenation of the ` + "`" + `trapclass` + "`" + ` and ` + "`" + `trapdestination` + "`" + ` attributes separated by a comma. ## Import A snmptrap can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmptrap.tf_snmptrap specific,192.168.2.2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmptrap is the concatenation of the ` + "`" + `trapclass` + "`" + ` and ` + "`" + `trapdestination` + "`" + ` attributes separated by a comma. ## Import A snmptrap can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmptrap.tf_snmptrap specific,192.168.2.2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_snmptrap_snmpuser_binding",
			Category:         "SNMP",
			ShortDescription: ``,
			Description: `

The snmptrap_snmpuser_binding resource is used to bind snmp user to snmp trap reosurce.


`,
			Keywords: []string{
				"snmp",
				"snmptrap",
				"snmpuser",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "trapclass",
					Description: `(Required) Type of trap messages that the Citrix ADC sends to the trap listener: Generic or the enterprise-specific messages defined in the MIB file. Possible values: [ generic, specific ]`,
				},
				resource.Attribute{
					Name:        "trapdestination",
					Description: `(Required) IPv4 or the IPv6 address of the trap listener to which the Citrix ADC is to send SNMP trap messages. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Required) Name of the SNMP user that will send the SNMPv3 traps.`,
				},
				resource.Attribute{
					Name:        "securitylevel",
					Description: `(Optional) Security level of the SNMPv3 trap. Possible values: [ noAuthNoPriv, authNoPriv, authPriv ]`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "version",
					Description: `(Optional) SNMP version, which determines the format of trap messages sent to the trap listener. This setting must match the setting on the trap listener. Otherwise, the listener drops the trap messages. Possible values: [ V1, V2, V3 ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmptrap_snmpuser_binding. It is the concatenation of ` + "`" + `trapclass` + "`" + ` , ` + "`" + `trapdestination` + "`" + ` and ` + "`" + `username` + "`" + ` attribute values seperated by comma(","). ## Import A snmptrap_snmpuser_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmptrap_snmpuser_binding.tf_binding generic,10.10.10.10,tf_snmpuser ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmptrap_snmpuser_binding. It is the concatenation of ` + "`" + `trapclass` + "`" + ` , ` + "`" + `trapdestination` + "`" + ` and ` + "`" + `username` + "`" + ` attribute values seperated by comma(","). ## Import A snmptrap_snmpuser_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmptrap_snmpuser_binding.tf_binding generic,10.10.10.10,tf_snmpuser ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_snmpuser",
			Category:         "SNMP",
			ShortDescription: ``,
			Description: `

The snmpuser resource is used to create snmpuser.


`,
			Keywords: []string{
				"snmp",
				"snmpuser",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the SNMPv3 user. Can consist of 1 to 31 characters that include uppercase and lowercase letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore (_) characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose it in double or single quotation marks (for example, "my user" or 'my user').`,
				},
				resource.Attribute{
					Name:        "group",
					Description: `(Required) Name of the configured SNMPv3 group to which to bind this SNMPv3 user. The access rights (bound SNMPv3 views) and security level set for this group are assigned to this user.`,
				},
				resource.Attribute{
					Name:        "authpasswd",
					Description: `(Optional) Plain-text pass phrase to be used by the authentication algorithm specified by the authType (Authentication Type) parameter. Can consist of 1 to 31 characters that include uppercase and lowercase letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore (_) characters. The following requirement applies only to the Citrix ADC CLI: If the pass phrase includes one or more spaces, enclose it in double or single quotation marks (for example, "my phrase" or 'my phrase').`,
				},
				resource.Attribute{
					Name:        "authtype",
					Description: `(Optional) Authentication algorithm used by the Citrix ADC and the SNMPv3 user for authenticating the communication between them. You must specify the same authentication algorithm when you configure the SNMPv3 user in the SNMP manager.`,
				},
				resource.Attribute{
					Name:        "privpasswd",
					Description: `(Optional) Encryption key to be used by the encryption algorithm specified by the privType (Encryption Type) parameter. Can consist of 1 to 31 characters that include uppercase and lowercase letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore (_) characters. The following requirement applies only to the Citrix ADC CLI: If the key includes one or more spaces, enclose it in double or single quotation marks (for example, "my key" or 'my key').`,
				},
				resource.Attribute{
					Name:        "privtype",
					Description: `(Optional) Encryption algorithm used by the Citrix ADC and the SNMPv3 user for encrypting the communication between them. You must specify the same encryption algorithm when you configure the SNMPv3 user in the SNMP manager. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpuser. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A snmpuser can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmpuser.tf_snmpuser test_user ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpuser. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A snmpuser can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmpuser.tf_snmpuser test_user ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_snmpview",
			Category:         "SNMP",
			ShortDescription: ``,
			Description: `

The snmpview resource is used to create snmpview.


`,
			Keywords: []string{
				"snmp",
				"snmpview",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the SNMPv3 view. Can consist of 1 to 31 characters that include uppercase and lowercase letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore (_) characters. You should choose a name that helps identify the SNMPv3 view. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose it in double or single quotation marks (for example, "my view" or 'my view').`,
				},
				resource.Attribute{
					Name:        "subtree",
					Description: `(Required) A particular branch (subtree) of the MIB tree that you want to associate with this SNMPv3 view. You must specify the subtree as an SNMP OID.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Include or exclude the subtree, specified by the subtree parameter, in or from this view. This setting can be useful when you have included a subtree, such as A, in an SNMPv3 view and you want to exclude a specific subtree of A, such as B, from the SNMPv3 view. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpview. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A snmpview can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmpview.tf_snmpview test_name ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the snmpview. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A snmpview can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_snmpview.tf_snmpview test_name ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_spilloveraction",
			Category:         "Spillover",
			ShortDescription: ``,
			Description: `

The spilloveraction resource is used to create spilloveraction.


`,
			Keywords: []string{
				"spillover",
				"spilloveraction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Spillover action. Currently only type SPILLOVER is supported`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the spillover action. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the spilloveraction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A spilloveraction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_spilloveraction.tf_spilloveraction my_spilloveraction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the spilloveraction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A spilloveraction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_spilloveraction.tf_spilloveraction my_spilloveraction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_spilloverpolicy",
			Category:         "Spillover",
			ShortDescription: ``,
			Description: `

The spilloverpolicy resource is used to create spillover policy.


`,
			Keywords: []string{
				"spillover",
				"spilloverpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the spillover policy.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression to be used by the spillover policy.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Action for the spillover policy. Action is created using add spillover action command.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments that you might want to associate with the spillover policy.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the spillover policy. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Choose a name that reflects the function that the policy performs. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policy" or 'my policy'). Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the spilloverpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A spilloverpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_spilloverpolicy.tf_spilloverpolicy tf_spilloverpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the spilloverpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A spilloverpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_spilloverpolicy.tf_spilloverpolicy tf_spilloverpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslaction",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslaction resource is used to create ssl actions.


`,
			Keywords: []string{
				"ssl",
				"sslaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the SSL action.`,
				},
				resource.Attribute{
					Name:        "clientauth",
					Description: `(Optional) Perform client certificate authentication. Possible values: [ DOCLIENTAUTH, NOCLIENTAUTH ]`,
				},
				resource.Attribute{
					Name:        "clientcertverification",
					Description: `(Optional) Client certificate verification is mandatory or optional. Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "ssllogprofile",
					Description: `(Optional) The name of the ssllogprofile.`,
				},
				resource.Attribute{
					Name:        "clientcert",
					Description: `(Optional) Insert the entire client certificate into the HTTP header of the request being sent to the web server. The certificate is inserted in ASCII (PEM) format. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "certheader",
					Description: `(Optional) Name of the header into which to insert the client certificate.`,
				},
				resource.Attribute{
					Name:        "clientcertserialnumber",
					Description: `(Optional) Insert the entire client serial number into the HTTP header of the request being sent to the web server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "certserialheader",
					Description: `(Optional) Name of the header into which to insert the client serial number.`,
				},
				resource.Attribute{
					Name:        "clientcertsubject",
					Description: `(Optional) Insert the client certificate subject, also known as the distinguished name (DN), into the HTTP header of the request being sent to the web server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "certsubjectheader",
					Description: `(Optional) Name of the header into which to insert the client certificate subject.`,
				},
				resource.Attribute{
					Name:        "clientcerthash",
					Description: `(Optional) Insert the certificate's signature into the HTTP header of the request being sent to the web server. The signature is the value extracted directly from the X.509 certificate signature field. All X.509 certificates contain a signature field. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "certhashheader",
					Description: `(Optional) Name of the header into which to insert the client certificate signature (hash).`,
				},
				resource.Attribute{
					Name:        "clientcertfingerprint",
					Description: `(Optional) Insert the certificate's fingerprint into the HTTP header of the request being sent to the web server. The fingerprint is derived by computing the specified hash value (SHA256, for example) of the DER-encoding of the client certificate. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "certfingerprintheader",
					Description: `(Optional) Name of the header into which to insert the client certificate fingerprint.`,
				},
				resource.Attribute{
					Name:        "certfingerprintdigest",
					Description: `(Optional) Digest algorithm used to compute the fingerprint of the client certificate. Possible values: [ SHA1, SHA224, SHA256, SHA384, SHA512 ]`,
				},
				resource.Attribute{
					Name:        "clientcertissuer",
					Description: `(Optional) Insert the certificate issuer details into the HTTP header of the request being sent to the web server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "certissuerheader",
					Description: `(Optional) Name of the header into which to insert the client certificate issuer details.`,
				},
				resource.Attribute{
					Name:        "sessionid",
					Description: `(Optional) Insert the SSL session ID into the HTTP header of the request being sent to the web server. Every SSL connection that the client and the Citrix ADC share has a unique ID that identifies the specific connection. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sessionidheader",
					Description: `(Optional) Name of the header into which to insert the Session ID.`,
				},
				resource.Attribute{
					Name:        "cipher",
					Description: `(Optional) Insert the cipher suite that the client and the Citrix ADC negotiated for the SSL session into the HTTP header of the request being sent to the web server. The appliance inserts the cipher-suite name, SSL protocol, export or non-export string, and cipher strength bit, depending on the type of browser connecting to the SSL virtual server or service (for example, Cipher-Suite: RC4- MD5 SSLv3 Non-Export 128-bit). Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "cipherheader",
					Description: `(Optional) Name of the header into which to insert the name of the cipher suite.`,
				},
				resource.Attribute{
					Name:        "clientcertnotbefore",
					Description: `(Optional) Insert the date from which the certificate is valid into the HTTP header of the request being sent to the web server. Every certificate is configured with the date and time from which it is valid. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "certnotbeforeheader",
					Description: `(Optional) Name of the header into which to insert the date and time from which the certificate is valid.`,
				},
				resource.Attribute{
					Name:        "clientcertnotafter",
					Description: `(Optional) Insert the date of expiry of the certificate into the HTTP header of the request being sent to the web server. Every certificate is configured with the date and time at which the certificate expires. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "certnotafterheader",
					Description: `(Optional) Name of the header into which to insert the certificate's expiry date.`,
				},
				resource.Attribute{
					Name:        "owasupport",
					Description: `(Optional) If the appliance is in front of an Outlook Web Access (OWA) server, insert a special header field, FRONT-END-HTTPS: ON, into the HTTP requests going to the OWA server. This header communicates to the server that the transaction is HTTPS and not HTTP. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "forward",
					Description: `(Optional) This action takes an argument a vserver name, to this vserver one will be able to forward all the packets.`,
				},
				resource.Attribute{
					Name:        "cacertgrpname",
					Description: `(Optional) This action will allow to pick CA(s) from the specific CA group, to verify the client certificate. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A sslaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslaction.tf_sslaction tf_sslaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A sslaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslaction.tf_sslaction tf_sslaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslcacertgroup",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslcacertgroup resource is used to configure a Group of CA certificate-key pairs resource.


`,
			Keywords: []string{
				"ssl",
				"sslcacertgroup",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "cacertgroupname",
					Description: `(Required) Name given to the CA certificate group. The name will be used to add the CA certificates to the group. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my file" or 'my file'). ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcacertgroup. It has the same value as the ` + "`" + `cacertgroupname` + "`" + ` attribute. ## Import A sslaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslcacertgroup.tf_sslcacertgroup tf_sslcacertgroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcacertgroup. It has the same value as the ` + "`" + `cacertgroupname` + "`" + ` attribute. ## Import A sslaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslcacertgroup.tf_sslcacertgroup tf_sslcacertgroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslcacertgroup_sslcertkey_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslprofile_sslcipher_binding resource is used to create bindings between sslcacertgroup and sslcertkey.


`,
			Keywords: []string{
				"ssl",
				"sslcacertgroup",
				"sslcertkey",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "certkeyname",
					Description: `(Required) Name for the certkey added to the Citrix ADC. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the certificate-key pair is created.The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my cert" or 'my cert').`,
				},
				resource.Attribute{
					Name:        "crlcheck",
					Description: `(Optional) The state of the CRL check parameter. (Mandatory/Optional). Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "ocspcheck",
					Description: `(Optional) The state of the OCSP check parameter. (Mandatory/Optional). Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "cacertgroupname",
					Description: `(Required) Name given to the CA certificate group. The name will be used to add the CA certificates to the group. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my file" or 'my file'). ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcacertgroup_sslcertkey_binding. It has is the conatenation of the ` + "`" + `cacertgroupname` + "`" + ` and ` + "`" + `certkeyname` + "`" + ` attributes. ## Import A sslcacertgroup_sslcertkey_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslcacertgroup_sslcertkey_binding.tf_sslcacertgroup_sslcertkey_binding tf_sslcacertgroup_sslcertkey_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcacertgroup_sslcertkey_binding. It has is the conatenation of the ` + "`" + `cacertgroupname` + "`" + ` and ` + "`" + `certkeyname` + "`" + ` attributes. ## Import A sslcacertgroup_sslcertkey_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslcacertgroup_sslcertkey_binding.tf_sslcacertgroup_sslcertkey_binding tf_sslcacertgroup_sslcertkey_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslcert",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslcert resource is used to create ssl cert file.


`,
			Keywords: []string{
				"ssl",
				"sslcert",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "certfile",
					Description: `(Required) Name for and, optionally, path to the generated certificate file. /nsconfig/ssl/ is the default path. Maximum length = 63`,
				},
				resource.Attribute{
					Name:        "reqfile",
					Description: `(Required) Name for and, optionally, path to the certificate-signing request (CSR). /nsconfig/ssl/ is the default path. Maximum length = 63`,
				},
				resource.Attribute{
					Name:        "certtype",
					Description: `(Required) Type of certificate to generate. Specify one of the following:`,
				},
				resource.Attribute{
					Name:        "keyfile",
					Description: `(Optional) Name for and, optionally, path to the private key. You can either use an existing RSA or DSA key that you own or create a new private key on the Citrix ADC. This file is required only when creating a self-signed Root-CA certificate. The key file is stored in the /nsconfig/ssl directory by default. If the input key specified is an encrypted key, you are prompted to enter the PEM pass phrase that was used for encrypting the key. Maximum length = 63`,
				},
				resource.Attribute{
					Name:        "keyform",
					Description: `(Optional) Format in which the key is stored on the appliance. Possible values: [ DER, PEM ]`,
				},
				resource.Attribute{
					Name:        "pempassphrase",
					Description: `(Optional) . Minimum length = 1 Maximum length = 31`,
				},
				resource.Attribute{
					Name:        "days",
					Description: `(Optional) Number of days for which the certificate will be valid, beginning with the time and day (system time) of creation. Minimum value = 1 Maximum value = 3650`,
				},
				resource.Attribute{
					Name:        "subjectaltname",
					Description: `(Optional) Subject Alternative Name (SAN) is an extension to X.509 that allows various values to be associated with a security certificate using a subjectAltName field. These values are called "Subject Alternative Names" (SAN). Names include: 1. Email addresses 2. IP addresses 3. URIs 4. DNS names (This is usually also provided as the Common Name RDN within the Subject field of the main certificate.) 5. directory names (alternative Distinguished Names to that given in the Subject). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "certform",
					Description: `(Optional) Format in which the certificate is stored on the appliance. Possible values: [ DER, PEM ]`,
				},
				resource.Attribute{
					Name:        "cacert",
					Description: `(Optional) Name of the CA certificate file that issues and signs the Intermediate-CA certificate or the end-user client and server certificates. Maximum length = 63`,
				},
				resource.Attribute{
					Name:        "cacertform",
					Description: `(Optional) Format of the CA certificate. Possible values: [ DER, PEM ]`,
				},
				resource.Attribute{
					Name:        "cakey",
					Description: `(Optional) Private key, associated with the CA certificate that is used to sign the Intermediate-CA certificate or the end-user client and server certificate. If the CA key file is password protected, the user is prompted to enter the pass phrase that was used to encrypt the key. Maximum length = 63`,
				},
				resource.Attribute{
					Name:        "cakeyform",
					Description: `(Optional) Format for the CA certificate. Possible values: [ DER, PEM ]`,
				},
				resource.Attribute{
					Name:        "caserial",
					Description: `(Optional) Serial number file maintained for the CA certificate. This file contains the serial number of the next certificate to be issued or signed by the CA. If the specified file does not exist, a new file is created, with /nsconfig/ssl/ as the default path. If you do not specify a proper path for the existing serial file, a new serial file is created. This might change the certificate serial numbers assigned by the CA certificate to each of the certificates it signs. Maximum length = 63 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcert. It is a unique string prefixed with "tf-sslcert-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcert. It is a unique string prefixed with "tf-sslcert-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslcertfile",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslcertfile resource is used to manage ssl certfile.


`,
			Keywords: []string{
				"ssl",
				"sslcertfile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name to assign to the imported certificate file. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my file" or 'my file').`,
				},
				resource.Attribute{
					Name:        "src",
					Description: `(Required) URL specifying the protocol, host, and path, including file name, to the certificate file to be imported. For example, http://www.example.com/cert_file. NOTE: The import fails if the object to be imported is on an HTTPS server that requires client certificate authentication for access. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcertfile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A sslcertfile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslcertfile.tf_sslcertfile tf_sslcertfile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcertfile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A sslcertfile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslcertfile.tf_sslcertfile tf_sslcertfile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslcertkey",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslcertkey resource is used to create TLS certificate keys.


`,
			Keywords: []string{
				"ssl",
				"sslcertkey",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "certkey",
					Description: `(Optional) Name for the certificate and private-key pair.`,
				},
				resource.Attribute{
					Name:        "cert",
					Description: `(Optional) Name of and, optionally, path to the X509 certificate file that is used to form the certificate-key pair. The certificate file should be present on the appliance's hard-disk drive or solid-state drive. Storing a certificate in any location other than the default might cause inconsistency in a high availability setup. /nsconfig/ssl/ is the default path.`,
				},
				resource.Attribute{
					Name:        "key",
					Description: `(Optional) Name of and, optionally, path to the private-key file that is used to form the certificate-key pair. The certificate file should be present on the appliance's hard-disk drive or solid-state drive. Storing a certificate in any location other than the default might cause inconsistency in a high availability setup. /nsconfig/ssl/ is the default path.`,
				},
				resource.Attribute{
					Name:        "password",
					Description: `(Optional) Passphrase that was used to encrypt the private-key. Use this option to load encrypted private-keys in PEM format.`,
				},
				resource.Attribute{
					Name:        "fipskey",
					Description: `(Optional) Name of the FIPS key that was created inside the Hardware Security Module (HSM) of a FIPS appliance, or a key that was imported into the HSM.`,
				},
				resource.Attribute{
					Name:        "hsmkey",
					Description: `(Optional) Name of the HSM key that was created in the External Hardware Security Module (HSM) of a FIPS appliance.`,
				},
				resource.Attribute{
					Name:        "inform",
					Description: `(Optional) Input format of the certificate and the private-key files. The three formats supported by the appliance are: PEM - Privacy Enhanced Mail DER - Distinguished Encoding Rule PFX - Personal Information Exchange. Possible values: [ DER, PEM, PFX ]`,
				},
				resource.Attribute{
					Name:        "passplain",
					Description: `(Optional) Pass phrase used to encrypt the private-key. Required when adding an encrypted private-key in PEM format.`,
				},
				resource.Attribute{
					Name:        "expirymonitor",
					Description: `(Optional) Issue an alert when the certificate is about to expire. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "notificationperiod",
					Description: `(Optional) Time, in number of days, before certificate expiration, at which to generate an alert that the certificate is about to expire.`,
				},
				resource.Attribute{
					Name:        "bundle",
					Description: `(Optional) Parse the certificate chain as a single file after linking the server certificate to its issuer's certificate within the file. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "linkcertkeyname",
					Description: `(Optional) Name of the Certificate Authority certificate-key pair to which to link a certificate-key pair.`,
				},
				resource.Attribute{
					Name:        "nodomaincheck",
					Description: `(Optional) Override the check for matching domain names during a certificate update operation.`,
				},
				resource.Attribute{
					Name:        "ocspstaplingcache",
					Description: `(Optional) Clear cached ocspStapling response in certkey. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcertkey. It has the same value as the ` + "`" + `certkey` + "`" + ` attribute. ## Import A sslcertkey can be imported using its certkey, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslcertkey.tf_sslcertkey tf_sslcertkey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcertkey. It has the same value as the ` + "`" + `certkey` + "`" + ` attribute. ## Import A sslcertkey can be imported using its certkey, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslcertkey.tf_sslcertkey tf_sslcertkey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslcertkey_sslocspresponder_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslcertkey_sslocspresponder_binding resource is used to bind sslocspresponder to sslcertkey.


`,
			Keywords: []string{
				"ssl",
				"sslcertkey",
				"sslocspresponder",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "certkey",
					Description: `(Required) Name of the certificate-key pair.`,
				},
				resource.Attribute{
					Name:        "ocspresponder",
					Description: `(Required) OCSP responders bound to this certkey`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) ocsp priority ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcertkey_sslocspresponder_binding. It is the concatenation of both ` + "`" + `certkey` + "`" + ` and ` + "`" + `ocspresponder` + "`" + ` attributes seperated by comma. Ex: ` + "`" + `tf_sslcertkey,tf_sslocspresponder` + "`" + ` is ` + "`" + `id` + "`" + ` for above example. ## Import A sslcertkey_sslocspresponder_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslcertkey_sslocspresponder_binding.tf_binding tf_sslcertkey,tf_sslocspresponder ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcertkey_sslocspresponder_binding. It is the concatenation of both ` + "`" + `certkey` + "`" + ` and ` + "`" + `ocspresponder` + "`" + ` attributes seperated by comma. Ex: ` + "`" + `tf_sslcertkey,tf_sslocspresponder` + "`" + ` is ` + "`" + `id` + "`" + ` for above example. ## Import A sslcertkey_sslocspresponder_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslcertkey_sslocspresponder_binding.tf_binding tf_sslcertkey,tf_sslocspresponder ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslcertkey_update",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslcertkey_update resource is used to update TLS certificate and key.


`,
			Keywords: []string{
				"ssl",
				"sslcertkey",
				"update",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "certkey",
					Description: `(Required) Name for the certificate and private-key pair.`,
				},
				resource.Attribute{
					Name:        "cert",
					Description: `(Optional) Name of and, optionally, path to the X509 certificate file that is used to form the certificate-key pair. The certificate file should be present on the appliance's hard-disk drive or solid-state drive. Storing a certificate in any location other than the default might cause inconsistency in a high availability setup. /nsconfig/ssl/ is the default path.`,
				},
				resource.Attribute{
					Name:        "key",
					Description: `(Optional) Name of and, optionally, path to the private-key file that is used to form the certificate-key pair. The certificate file should be present on the appliance's hard-disk drive or solid-state drive. Storing a certificate in any location other than the default might cause inconsistency in a high availability setup. /nsconfig/ssl/ is the default path.`,
				},
				resource.Attribute{
					Name:        "password",
					Description: `(Optional) Passphrase that was used to encrypt the private-key. Use this option to load encrypted private-keys in PEM format.`,
				},
				resource.Attribute{
					Name:        "fipskey",
					Description: `(Optional) Name of the FIPS key that was created inside the Hardware Security Module (HSM) of a FIPS appliance, or a key that was imported into the HSM.`,
				},
				resource.Attribute{
					Name:        "inform",
					Description: `(Optional) Input format of the certificate and the private-key files. The three formats supported by the appliance are: PEM - Privacy Enhanced Mail DER - Distinguished Encoding Rule PFX - Personal Information Exchange. Possible values: [ DER, PEM, PFX ]`,
				},
				resource.Attribute{
					Name:        "passplain",
					Description: `(Optional) Pass phrase used to encrypt the private-key. Required when adding an encrypted private-key in PEM format.`,
				},
				resource.Attribute{
					Name:        "nodomaincheck",
					Description: `(Optional) Override the check for matching domain names during a certificate update operation. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcertkey_update. It has the same value as the ` + "`" + `certkey` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcertkey_update. It has the same value as the ` + "`" + `certkey` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslcertreq",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslcertreq resource is used to create ssl certreq file.


`,
			Keywords: []string{
				"ssl",
				"sslcertreq",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "reqfile",
					Description: `(Required) Name for and, optionally, path to the certificate signing request (CSR). /nsconfig/ssl/ is the default path. Maximum length = 63`,
				},
				resource.Attribute{
					Name:        "countryname",
					Description: `(Required) Two letter ISO code for your country. For example, US for United States. Minimum length = 2 Maximum length = 2`,
				},
				resource.Attribute{
					Name:        "organizationname",
					Description: `(Required) Name of the organization that will use this certificate. The organization name (corporation, limited partnership, university, or government agency) must be registered with some authority at the national, state, or city level. Use the legal name under which the organization is registered. Do not abbreviate the organization name and do not use the following characters in the name: Angle brackets (< >) tilde (~), exclamation mark, at (@), pound (#), zero (0), caret (^), asterisk (`,
				},
				resource.Attribute{
					Name:        "statename",
					Description: `(Required) Full name of the state or province where your organization is located. Do not abbreviate. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "keyfile",
					Description: `(Optional) Name of and, optionally, path to the private key used to create the certificate signing request, which then becomes part of the certificate-key pair. The private key can be either an RSA or a DSA key. The key must be present in the appliance's local storage. /nsconfig/ssl is the default path. Maximum length = 63`,
				},
				resource.Attribute{
					Name:        "subjectaltname",
					Description: `(Optional) Subject Alternative Name (SAN) is an extension to X.509 that allows various values to be associated with a security certificate using a subjectAltName field. These values are called "Subject Alternative Names" (SAN). Names include: 1. Email addresses 2. IP addresses 3. URIs 4. DNS names (this is usually also provided as the Common Name RDN within the Subject field of the main certificate.) 5. Directory names (alternative Distinguished Names to that given in the Subject). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "fipskeyname",
					Description: `(Optional) Name of the FIPS key used to create the certificate signing request. FIPS keys are created inside the Hardware Security Module of the FIPS card. Minimum length = 1 Maximum length = 31`,
				},
				resource.Attribute{
					Name:        "keyform",
					Description: `(Optional) Format in which the key is stored on the appliance. Possible values: [ DER, PEM ]`,
				},
				resource.Attribute{
					Name:        "pempassphrase",
					Description: `(Optional) . Minimum length = 1 Maximum length = 31`,
				},
				resource.Attribute{
					Name:        "organizationunitname",
					Description: `(Optional) Name of the division or section in the organization that will use the certificate. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "localityname",
					Description: `(Optional) Name of the city or town in which your organization's head office is located. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "commonname",
					Description: `(Optional) Fully qualified domain name for the company or web site. The common name must match the name used by DNS servers to do a DNS lookup of your server. Most browsers use this information for authenticating the server's certificate during the SSL handshake. If the server name in the URL does not match the common name as given in the server certificate, the browser terminates the SSL handshake or prompts the user with a warning message. Do not use wildcard characters, such as asterisk (`,
				},
				resource.Attribute{
					Name:        "emailaddress",
					Description: `(Optional) Contact person's e-mail address. This address is publically displayed as part of the certificate. Provide an e-mail address that is monitored by an administrator who can be contacted about the certificate. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "challengepassword",
					Description: `(Optional) Pass phrase, embedded in the certificate signing request that is shared only between the client or server requesting the certificate and the SSL certificate issuer (typically the certificate authority). This pass phrase can be used to authenticate a client or server that is requesting a certificate from the certificate authority. Minimum length = 4`,
				},
				resource.Attribute{
					Name:        "companyname",
					Description: `(Optional) Additional name for the company or web site. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "digestmethod",
					Description: `(Optional) Digest algorithm used in creating CSR. Possible values: [ SHA1, SHA256 ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcertreq. It is a unique string prefixed with "tf-sslcertreq-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcertreq. It is a unique string prefixed with "tf-sslcertreq-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslcipher",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslcipher resource is used to create ssl ciphers.


`,
			Keywords: []string{
				"ssl",
				"sslcipher",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ciphergroupname",
					Description: `(Required) Name of the cipher group to be created.`,
				},
				resource.Attribute{
					Name:        "ciphersuitebinding",
					Description: `(Required) A set of ciphersuites bound to this cipher group. Any change to this set will recreate the whole cipher group. Attributes documented below. A ciphersuitebinding supports the following:`,
				},
				resource.Attribute{
					Name:        "ciphername",
					Description: `(Required) Cipher name.`,
				},
				resource.Attribute{
					Name:        "cipherpriority",
					Description: `(Optional) This indicates priority assigned to the particular cipher. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcipher. It has the same value as the ` + "`" + `ciphergroupname` + "`" + ` attribute. ## Import A sslcipher can be imported using its ciphergroupname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslcipher.tf_sslcipher tf_sslcipher ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslcipher. It has the same value as the ` + "`" + `ciphergroupname` + "`" + ` attribute. ## Import A sslcipher can be imported using its ciphergroupname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslcipher.tf_sslcipher tf_sslcipher ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ssldhparam",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The ssldhparam resource is used to configure ssl DH parameters.


`,
			Keywords: []string{
				"ssl",
				"ssldhparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "dhfile",
					Description: `(Required) Name of and, optionally, path to the DH key file. /nsconfig/ssl/ is the default path.`,
				},
				resource.Attribute{
					Name:        "bits",
					Description: `(Required) Size, in bits, of the DH key being generated.`,
				},
				resource.Attribute{
					Name:        "gen",
					Description: `(Optional) Random number required for generating the DH key. Required as part of the DH key generation algorithm. Possible values: [ 2, 5 ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ssldhparam. It has the same value as the ` + "`" + `dhfile` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ssldhparam. It has the same value as the ` + "`" + `dhfile` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ssldtlsprofile",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The ssldtlsprofile resource is used to create a new DTLS profile.


`,
			Keywords: []string{
				"ssl",
				"ssldtlsprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the DTLS profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@),equals sign (=), and hyphen (-) characters. Cannot be changed after the profile is created.`,
				},
				resource.Attribute{
					Name:        "pmtudiscovery",
					Description: `(Optional) Source for the maximum record size value. If ENABLED, the value is taken from the PMTU table. If DISABLED, the value is taken from the profile. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "maxrecordsize",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "maxretrytime",
					Description: `(Optional) Wait for the specified time, in seconds, before resending the request.`,
				},
				resource.Attribute{
					Name:        "helloverifyrequest",
					Description: `(Optional) Send a Hello Verify request to validate the client. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "terminatesession",
					Description: `(Optional) Terminate the session if the message authentication code (MAC) of the client and server do not match. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "maxpacketsize",
					Description: `(Optional) ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ssldtlsprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A ssldtlsprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ssldtlsprofile.tf_ssldtlsprofile tf_ssldtlsprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ssldtlsprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A ssldtlsprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ssldtlsprofile.tf_ssldtlsprofile tf_ssldtlsprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslfipskey",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslfipskey resource is used to create SSL fips key.


`,
			Keywords: []string{
				"ssl",
				"sslfipskey",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "fipskeyname",
					Description: `(Required) Name for the FIPS key. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the FIPS key is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my fipskey" or 'my fipskey').`,
				},
				resource.Attribute{
					Name:        "keytype",
					Description: `(Required) Only RSA key and ECDSA Key are supported. Possible values: [ RSA, ECDSA ]`,
				},
				resource.Attribute{
					Name:        "exponent",
					Description: `(Optional) Exponent value for the FIPS key to be created. Available values function as follows: 3=3 (hexadecimal) F4=10001 (hexadecimal). Possible values: [ 3, F4 ]`,
				},
				resource.Attribute{
					Name:        "modulus",
					Description: `(Optional) Modulus, in multiples of 64, of the FIPS key to be created.`,
				},
				resource.Attribute{
					Name:        "curve",
					Description: `(Optional) Only p_256 (prime256v1) and P_384 (secp384r1) are supported. Possible values: [ P_256, P_384 ]`,
				},
				resource.Attribute{
					Name:        "key",
					Description: `(Optional) Name of and, optionally, path to the key file to be imported. /nsconfig/ssl/ is the default path.`,
				},
				resource.Attribute{
					Name:        "inform",
					Description: `(Optional) Input format of the key file. Available formats are: SIM - Secure Information Management; select when importing a FIPS key. If the external FIPS key is encrypted, first decrypt it, and then import it. PEM - Privacy Enhanced Mail; select when importing a non-FIPS key. Possible values: [ SIM, DER, PEM ]`,
				},
				resource.Attribute{
					Name:        "wrapkeyname",
					Description: `(Optional) Name of the wrap key to use for importing the key. Required for importing a non-FIPS key.`,
				},
				resource.Attribute{
					Name:        "iv",
					Description: `(Optional) Initialization Vector (IV) to use for importing the key. Required for importing a non-FIPS key. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslfipskey. It has the same value as the ` + "`" + `fipskeyname` + "`" + ` attribute. ## Import A sslfipskey can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslfipskey.tf_sslfipskey tf_sslfipskey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslfipskey. It has the same value as the ` + "`" + `fipskeyname` + "`" + ` attribute. ## Import A sslfipskey can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslfipskey.tf_sslfipskey tf_sslfipskey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_ssllogprofile",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The ssllogprofile resource is used to create the ADC SSL logprofile.


`,
			Keywords: []string{
				"ssl",
				"ssllogprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) The name of the ssllogprofile.`,
				},
				resource.Attribute{
					Name:        "ssllogclauth",
					Description: `(Optional) log all SSL ClAuth events. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ssllogclauthfailures",
					Description: `(Optional) log all SSL ClAuth error events. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sslloghs",
					Description: `(Optional) log all SSL HS events. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sslloghsfailures",
					Description: `(Optional) log all SSL HS error events. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ssllogprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A ssllogprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ssllogprofile.tf_ssllogprofile tf_ssllogprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ssllogprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A ssllogprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_ssllogprofile.tf_ssllogprofile tf_ssllogprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslocspresponder",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslocspresponder resource is used to create a OCSP responder.


`,
			Keywords: []string{
				"ssl",
				"sslocspresponder",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the OCSP responder. Cannot begin with a hash (#) or space character and must contain only ASCII alphanumeric, underscore (_), hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the responder is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my responder" or 'my responder').`,
				},
				resource.Attribute{
					Name:        "url",
					Description: `(Required) URL of the OCSP responder.`,
				},
				resource.Attribute{
					Name:        "cache",
					Description: `(Optional) Enable caching of responses. Caching of responses received from the OCSP responder enables faster responses to the clients and reduces the load on the OCSP responder. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "cachetimeout",
					Description: `(Optional) Timeout for caching the OCSP response. After the timeout, the Citrix ADC sends a fresh request to the OCSP responder for the certificate status. If a timeout is not specified, the timeout provided in the OCSP response applies.`,
				},
				resource.Attribute{
					Name:        "batchingdepth",
					Description: `(Optional) Number of client certificates to batch together into one OCSP request. Batching avoids overloading the OCSP responder. A value of 1 signifies that each request is queried independently. For a value greater than 1, specify a timeout (batching delay) to avoid inordinately delaying the processing of a single certificate.`,
				},
				resource.Attribute{
					Name:        "batchingdelay",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "resptimeout",
					Description: `(Optional) Time, in milliseconds, to wait for an OCSP response. When this time elapses, an error message appears or the transaction is forwarded, depending on the settings on the virtual server. Includes Batching Delay time.`,
				},
				resource.Attribute{
					Name:        "ocspurlresolvetimeout",
					Description: `(Optional) Time, in milliseconds, to wait for an OCSP URL Resolution. When this time elapses, an error message appears or the transaction is forwarded, depending on the settings on the virtual server.`,
				},
				resource.Attribute{
					Name:        "respondercert",
					Description: `(Optional) .`,
				},
				resource.Attribute{
					Name:        "trustresponder",
					Description: `(Optional) A certificate to use to validate OCSP responses. Alternatively, if -trustResponder is specified, no verification will be done on the reponse. If both are omitted, only the response times (producedAt, lastUpdate, nextUpdate) will be verified.`,
				},
				resource.Attribute{
					Name:        "producedattimeskew",
					Description: `(Optional) Time, in seconds, for which the Citrix ADC waits before considering the response as invalid. The response is considered invalid if the Produced At time stamp in the OCSP response exceeds or precedes the current Citrix ADC clock time by the amount of time specified.`,
				},
				resource.Attribute{
					Name:        "signingcert",
					Description: `(Optional) Certificate-key pair that is used to sign OCSP requests. If this parameter is not set, the requests are not signed.`,
				},
				resource.Attribute{
					Name:        "usenonce",
					Description: `(Optional) Enable the OCSP nonce extension, which is designed to prevent replay attacks. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "insertclientcert",
					Description: `(Optional) Include the complete client certificate in the OCSP request. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "httpmethod",
					Description: `(Optional) HTTP method used to send ocsp request. POST is the default httpmethod. If request length is > 255, POST wil be used even if GET is set as httpMethod. Possible values: [ GET, POST ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslocspresponder. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A sslocspresponder can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslocspresponder.tf_sslocspresponder tf_sslocspresponder ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslocspresponder. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A sslocspresponder can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslocspresponder.tf_sslocspresponder tf_sslocspresponder ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslparameter",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslparameter resource is used to update the ADC SSL parameters.


`,
			Keywords: []string{
				"ssl",
				"sslparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "quantumsize",
					Description: `(Optional) Amount of data to collect before the data is pushed to the crypto hardware for encryption. For large downloads, a larger quantum size better utilizes the crypto resources. Possible values: [ 4096, 8192, 16384 ]`,
				},
				resource.Attribute{
					Name:        "crlmemorysizemb",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "strictcachecks",
					Description: `(Optional) Enable strict CA certificate checks on the appliance. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "ssltriggertimeout",
					Description: `(Optional) Time, in milliseconds, after which encryption is triggered for transactions that are not tracked on the Citrix ADC because their length is not known. There can be a delay of up to 10ms from the specified timeout value before the packet is pushed into the queue.`,
				},
				resource.Attribute{
					Name:        "sendclosenotify",
					Description: `(Optional) Send an SSL Close-Notify message to the client at the end of a transaction. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "encrypttriggerpktcount",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "denysslreneg",
					Description: `(Optional) Deny renegotiation in specified circumstances. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "insertionencoding",
					Description: `(Optional) Encoding method used to insert the subject or issuer's name in HTTP requests to servers. Possible values: [ Unicode, UTF-8 ]`,
				},
				resource.Attribute{
					Name:        "ocspcachesize",
					Description: `(Optional) Size, per packet engine, in megabytes, of the OCSP cache. A maximum of 10% of the packet engine memory can be assigned. Because the maximum allowed packet engine memory is 4GB, the maximum value that can be assigned to the OCSP cache is approximately 410 MB.`,
				},
				resource.Attribute{
					Name:        "pushflag",
					Description: `(Optional) Insert PUSH flag into decrypted, encrypted, or all records. If the PUSH flag is set to a value other than 0, the buffered records are forwarded on the basis of the value of the PUSH flag. Available settings function as follows: 0 - Auto (PUSH flag is not set.) 1 - Insert PUSH flag into every decrypted record. 2 -Insert PUSH flag into every encrypted record. 3 - Insert PUSH flag into every decrypted and encrypted record.`,
				},
				resource.Attribute{
					Name:        "dropreqwithnohostheader",
					Description: `(Optional) Host header check for SNI enabled sessions. If this check is enabled and the HTTP request does not contain the host header for SNI enabled sessions(i.e vserver or profile bound to vserver has SNI enabled and 'Client Hello' arrived with SNI extension), the request is dropped. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "snihttphostmatch",
					Description: `(Optional) Controls how the HTTP 'Host' header value is validated. These checks are performed only if the session is SNI enabled (i.e when vserver or profile bound to vserver has SNI enabled and 'Client Hello' arrived with SNI extension) and HTTP request contains 'Host' header. Available settings function as follows: CERT - Request is forwarded if the 'Host' value is covered by the certificate used to establish this SSL session. Note: 'CERT' matching mode cannot be applied in TLS 1.3 connections established by resuming from a previous TLS 1.3 session. On these connections, 'STRICT' matching mode will be used instead. STRICT - Request is forwarded only if value of 'Host' header in HTTP is identical to the 'Server name' value passed in 'Client Hello' of the SSL connection. NO - No validation is performed on the HTTP 'Host' header value. Possible values: [ NO, CERT, STRICT ]`,
				},
				resource.Attribute{
					Name:        "pushenctriggertimeout",
					Description: `(Optional) PUSH encryption trigger timeout value. The timeout value is applied only if you set the Push Encryption Trigger parameter to Timer in the SSL virtual server settings.`,
				},
				resource.Attribute{
					Name:        "cryptodevdisablelimit",
					Description: `(Optional) Limit to the number of disabled SSL chips after which the ADC restarts. A value of zero implies that the ADC does not automatically restart.`,
				},
				resource.Attribute{
					Name:        "undefactioncontrol",
					Description: `(Optional) Name of the undefined built-in control action: CLIENTAUTH, NOCLIENTAUTH, NOOP, RESET, or DROP.`,
				},
				resource.Attribute{
					Name:        "undefactiondata",
					Description: `(Optional) Name of the undefined built-in data action: NOOP, RESET or DROP.`,
				},
				resource.Attribute{
					Name:        "defaultprofile",
					Description: `(Optional) Global parameter used to enable default profile feature. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "softwarecryptothreshold",
					Description: `(Optional) Citrix ADC CPU utilization threshold (in percentage) beyond which crypto operations are not done in software. A value of zero implies that CPU is not utilized for doing crypto in software.`,
				},
				resource.Attribute{
					Name:        "hybridfipsmode",
					Description: `(Optional) When this mode is enabled, system will use additional crypto hardware to accelerate symmetric crypto operations. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sslierrorcache",
					Description: `(Optional) Enable or disable dynamically learning and caching the learned information to make the subsequent interception or bypass decision. When enabled, NS does the lookup of this cached data to do early bypass. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sslimaxerrorcachemem",
					Description: `(Optional) Specify the maximum memory that can be used for caching the learned data. This memory is used as a LRU cache so that the old entries gets replaced with new entry once the set memory limit is fully utilised. A value of 0 decides the limit automatically.`,
				},
				resource.Attribute{
					Name:        "insertcertspace",
					Description: `(Optional) To insert space between lines in the certificate header of request. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "ndcppcompliancecertcheck",
					Description: `(Optional) Applies when the Citrix ADC appliance acts as a client (back-end connection). Settings apply as follows: YES - During certificate verification, ignore the common name if SAN is present in the certificate. NO - Do not ignore common name. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "heterogeneoussslhw",
					Description: `(Optional) To support both cavium and coleto based platforms in cluster environment, this mode has to be enabled. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslparameter. It is a unique string prefixed with "tf-sslparameter-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslparameter. It is a unique string prefixed with "tf-sslparameter-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslpolicy",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslpolicy resource is used to create SSL policies.


`,
			Keywords: []string{
				"ssl",
				"sslpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the new SSL policy.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Expression, against which traffic is evaluated. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "reqaction",
					Description: `(Optional) The name of the action to be performed on the request. Refer to 'add ssl action' command to add a new action. Builtin actions like NOOP, RESET, DROP, CLIENTAUTH and NOCLIENTAUTH are also allowed.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Optional) Name of the built-in or user-defined action to perform on the request. Available built-in actions are NOOP, RESET, DROP, CLIENTAUTH, NOCLIENTAUTH, INTERCEPT AND BYPASS.`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Name of the action to be performed when the result of rule evaluation is undefined. Possible values for control policies: CLIENTAUTH, NOCLIENTAUTH, NOOP, RESET, DROP. Possible values for data policies: NOOP, RESET, DROP and BYPASS.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments associated with this policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A sslpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslpolicy.tf_sslpolicy tf_sslpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A sslpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslpolicy.tf_sslpolicy tf_sslpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslpolicylabel",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslpolicylabel resource is used to configure SSL policy label resource.


`,
			Keywords: []string{
				"ssl",
				"sslpolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name for the SSL policy label. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the policy label is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my label" or 'my label').`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) Type of policies that the policy label can contain. Possible values: [ CONTROL, DATA ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A sslpolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslpolicylabel.tf_sslpolicylabel tf_sslpolicylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A sslpolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslpolicylabel.tf_sslpolicylabel tf_sslpolicylabel ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslpolicylabel_sslpolicy_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslpolicylabel_sslpolicy_bindingresource is used to create bindings between sslpolicylabel and sslpolicy.


`,
			Keywords: []string{
				"ssl",
				"sslpolicylabel",
				"sslpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the SSL policy to bind to the policy label.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label invocation. Possible values: [ vserver, service, policylabel ]`,
				},
				resource.Attribute{
					Name:        "invoke_labelname",
					Description: `(Optional) Name of the label to invoke if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name of the SSL policy label to which to bind policies.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke policies bound to a policy label. After the invoked policies are evaluated, the flow returns to the policy with the next priority. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslpolicylabel_sslpolicy_binding. It has is the conatenation of the ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes. ## Import A sslpolicylabel_sslpolicy_bindingcan be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslpolicylabel_sslpolicy_binding.tf_sslpolicylabel_sslpolicy_binding tf_sslpolicylabel_sslpolicy_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslpolicylabel_sslpolicy_binding. It has is the conatenation of the ` + "`" + `labelname` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes. ## Import A sslpolicylabel_sslpolicy_bindingcan be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslpolicylabel_sslpolicy_binding.tf_sslpolicylabel_sslpolicy_binding tf_sslpolicylabel_sslpolicy_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslprofile",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslprofile resource is used to create SSL profiles.


`,
			Keywords: []string{
				"ssl",
				"sslprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the SSL profile.`,
				},
				resource.Attribute{
					Name:        "sslprofiletype",
					Description: `(Optional) Type of profile. Front end profiles apply to the entity that receives requests from a client. Backend profiles apply to the entity that sends client requests to a server. Possible values: [ BackEnd, FrontEnd ]`,
				},
				resource.Attribute{
					Name:        "ssllogprofile",
					Description: `(Optional) The name of the ssllogprofile.`,
				},
				resource.Attribute{
					Name:        "dhcount",
					Description: `(Optional) Number of interactions, between the client and the Citrix ADC, after which the DH private-public pair is regenerated. A value of zero (0) specifies infinite use (no refresh). This parameter is not applicable when configuring a backend profile. Allowed DH count values are 0 and >= 500.`,
				},
				resource.Attribute{
					Name:        "dh",
					Description: `(Optional) State of Diffie-Hellman (DH) key exchange. This parameter is not applicable when configuring a backend profile. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dhfile",
					Description: `(Optional) The file name and path for the DH parameter.`,
				},
				resource.Attribute{
					Name:        "ersa",
					Description: `(Optional) State of Ephemeral RSA (eRSA) key exchange. Ephemeral RSA allows clients that support only export ciphers to communicate with the secure server even if the server certificate does not support export clients. The ephemeral RSA key is automatically generated when you bind an export cipher to an SSL or TCP-based SSL virtual server or service. When you remove the export cipher, the eRSA key is not deleted. It is reused at a later date when another export cipher is bound to an SSL or TCP-based SSL virtual server or service. The eRSA key is deleted when the appliance restarts. This parameter is not applicable when configuring a backend profile. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ersacount",
					Description: `(Optional) The refresh count for the re-generation of RSA public-key and private-key pair.`,
				},
				resource.Attribute{
					Name:        "sessreuse",
					Description: `(Optional) State of session reuse. Establishing the initial handshake requires CPU-intensive public key encryption operations. With the ENABLED setting, session key exchange is avoided for session resumption requests received from the client. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sesstimeout",
					Description: `(Optional) The Session timeout value in seconds.`,
				},
				resource.Attribute{
					Name:        "cipherredirect",
					Description: `(Optional) State of Cipher Redirect. If this parameter is set to ENABLED, you can configure an SSL virtual server or service to display meaningful error messages if the SSL handshake fails because of a cipher mismatch between the virtual server or service and the client. This parameter is not applicable when configuring a backend profile. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "cipherurl",
					Description: `(Optional) The redirect URL to be used with the Cipher Redirect feature.`,
				},
				resource.Attribute{
					Name:        "clientauth",
					Description: `(Optional) State of client authentication. In service-based SSL offload, the service terminates the SSL handshake if the SSL client does not provide a valid certificate. This parameter is not applicable when configuring a backend profile. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "clientcert",
					Description: `(Optional) The rule for client certificate requirement in client authentication. Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "dhkeyexpsizelimit",
					Description: `(Optional) This option enables the use of NIST recommended (NIST Special Publication 800-56A) bit size for private-key size. For example, for DH params of size 2048bit, the private-key size recommended is 224bits. This is rounded-up to 256bits. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sslredirect",
					Description: `(Optional) State of HTTPS redirects for the SSL service. For an SSL session, if the client browser receives a redirect message, the browser tries to connect to the new location. However, the secure SSL session breaks if the object has moved from a secure site (https://) to an unsecure site (http://). Typically, a warning message appears on the screen, prompting the user to continue or disconnect. If SSL Redirect is ENABLED, the redirect message is automatically converted from http:// to https:// and the SSL session does not break. This parameter is not applicable when configuring a backend profile. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "redirectportrewrite",
					Description: `(Optional) State of the port rewrite while performing HTTPS redirect. If this parameter is set to ENABLED, and the URL from the server does not contain the standard port, the port is rewritten to the standard. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ssl3",
					Description: `(Optional) State of SSLv3 protocol support for the SSL profile. Note: On platforms with SSL acceleration chips, if the SSL chip does not support SSLv3, this parameter cannot be set to ENABLED. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls1",
					Description: `(Optional) State of TLSv1.0 protocol support for the SSL profile. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls11",
					Description: `(Optional) State of TLSv1.1 protocol support for the SSL profile. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls12",
					Description: `(Optional) State of TLSv1.2 protocol support for the SSL profile. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls13",
					Description: `(Optional) State of TLSv1.3 protocol support for the SSL profile. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "snienable",
					Description: `(Optional) State of the Server Name Indication (SNI) feature on the virtual server and service-based offload. SNI helps to enable SSL encryption on multiple domains on a single virtual server or service if the domains are controlled by the same organization and share the same second-level domain name. For example, \`,
				},
				resource.Attribute{
					Name:        "ocspstapling",
					Description: `(Optional) State of OCSP stapling support on the SSL virtual server. Supported only if the protocol used is higher than SSLv3. Possible values: ENABLED: The appliance sends a request to the OCSP responder to check the status of the server certificate and caches the response for the specified time. If the response is valid at the time of SSL handshake with the client, the OCSP-based server certificate status is sent to the client during the handshake. DISABLED: The appliance does not check the status of the server certificate. . Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "serverauth",
					Description: `(Optional) State of server authentication support for the SSL Backend profile. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "commonname",
					Description: `(Optional) Name to be checked against the CommonName (CN) field in the server certificate bound to the SSL server.`,
				},
				resource.Attribute{
					Name:        "pushenctrigger",
					Description: `(Optional) Trigger encryption on the basis of the PUSH flag value. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "sendclosenotify",
					Description: `(Optional) Enable sending SSL Close-Notify at the end of a transaction. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "cleartextport",
					Description: `(Optional) Port on which clear-text data is sent by the appliance to the server. Do not specify this parameter for SSL offloading with end-to-end encryption. Range 1 - 65535`,
				},
				resource.Attribute{
					Name:        "insertionencoding",
					Description: `(Optional) Encoding method used to insert the subject or issuer's name in HTTP requests to servers. Possible values: [ Unicode, UTF-8 ]`,
				},
				resource.Attribute{
					Name:        "denysslreneg",
					Description: `(Optional) Deny renegotiation in specified circumstances. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "quantumsize",
					Description: `(Optional) Amount of data to collect before the data is pushed to the crypto hardware for encryption. For large downloads, a larger quantum size better utilizes the crypto resources. Possible values: [ 4096, 8192, 16384 ]`,
				},
				resource.Attribute{
					Name:        "strictcachecks",
					Description: `(Optional) Enable strict CA certificate checks on the appliance. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "encrypttriggerpktcount",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "pushflag",
					Description: `(Optional) Insert PUSH flag into decrypted, encrypted, or all records. If the PUSH flag is set to a value other than 0, the buffered records are forwarded on the basis of the value of the PUSH flag. Available settings function as follows: 0 - Auto (PUSH flag is not set.) 1 - Insert PUSH flag into every decrypted record. 2 -Insert PUSH flag into every encrypted record. 3 - Insert PUSH flag into every decrypted and encrypted record.`,
				},
				resource.Attribute{
					Name:        "dropreqwithnohostheader",
					Description: `(Optional) Host header check for SNI enabled sessions. If this check is enabled and the HTTP request does not contain the host header for SNI enabled sessions(i.e vserver or profile bound to vserver has SNI enabled and 'Client Hello' arrived with SNI extension), the request is dropped. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "snihttphostmatch",
					Description: `(Optional) Controls how the HTTP 'Host' header value is validated. These checks are performed only if the session is SNI enabled (i.e when vserver or profile bound to vserver has SNI enabled and 'Client Hello' arrived with SNI extension) and HTTP request contains 'Host' header. Available settings function as follows: CERT - Request is forwarded if the 'Host' value is covered by the certificate used to establish this SSL session. Note: 'CERT' matching mode cannot be applied in TLS 1.3 connections established by resuming from a previous TLS 1.3 session. On these connections, 'STRICT' matching mode will be used instead. STRICT - Request is forwarded only if value of 'Host' header in HTTP is identical to the 'Server name' value passed in 'Client Hello' of the SSL connection. NO - No validation is performed on the HTTP 'Host' header value. Possible values: [ NO, CERT, STRICT ]`,
				},
				resource.Attribute{
					Name:        "pushenctriggertimeout",
					Description: `(Optional) PUSH encryption trigger timeout value. The timeout value is applied only if you set the Push Encryption Trigger parameter to Timer in the SSL virtual server settings.`,
				},
				resource.Attribute{
					Name:        "ssltriggertimeout",
					Description: `(Optional) Time, in milliseconds, after which encryption is triggered for transactions that are not tracked on the Citrix ADC because their length is not known. There can be a delay of up to 10ms from the specified timeout value before the packet is pushed into the queue.`,
				},
				resource.Attribute{
					Name:        "clientauthuseboundcachain",
					Description: `(Optional) Certficates bound on the VIP are used for validating the client cert. Certficates came along with client cert are not used for validating the client cert. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sslinterception",
					Description: `(Optional) Enable or disable transparent interception of SSL sessions. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sslireneg",
					Description: `(Optional) Enable or disable triggering the client renegotiation when renegotiation request is received from the origin server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ssliocspcheck",
					Description: `(Optional) Enable or disable OCSP check for origin server certificate. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sslimaxsessperserver",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "sessionticket",
					Description: `(Optional) This option enables the use of session tickets, as per the RFC 5077. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sessionticketlifetime",
					Description: `(Optional) This option sets the life time of session tickets issued by NS in secs.`,
				},
				resource.Attribute{
					Name:        "sessionticketkeyrefresh",
					Description: `(Optional) This option enables the use of session tickets, as per the RFC 5077. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sessionticketkeydata",
					Description: `(Optional) Session ticket enc/dec key , admin can set it.`,
				},
				resource.Attribute{
					Name:        "sessionkeylifetime",
					Description: `(Optional) This option sets the life time of symm key used to generate session tickets issued by NS in secs.`,
				},
				resource.Attribute{
					Name:        "prevsessionkeylifetime",
					Description: `(Optional) This option sets the life time of symm key used to generate session tickets issued by NS in secs.`,
				},
				resource.Attribute{
					Name:        "hsts",
					Description: `(Optional) State of HSTS protocol support for the SSL profile. Using HSTS, a server can enforce the use of an HTTPS connection for all communication with a client. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "maxage",
					Description: `(Optional) Set the maximum time, in seconds, in the strict transport security (STS) header during which the client must send only HTTPS requests to the server.`,
				},
				resource.Attribute{
					Name:        "includesubdomains",
					Description: `(Optional) Enable HSTS for subdomains. If set to Yes, a client must send only HTTPS requests for subdomains. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "preload",
					Description: `(Optional) Flag indicates the consent of the site owner to have their domain preloaded. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "skipclientcertpolicycheck",
					Description: `(Optional) This flag controls the processing of X509 certificate policies. If this option is Enabled, then the policy check in Client authentication will be skipped. This option can be used only when Client Authentication is Enabled and ClientCert is set to Mandatory. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "zerorttearlydata",
					Description: `(Optional) State of TLS 1.3 0-RTT early data support for the SSL Virtual Server. This setting only has an effect if resumption is enabled, as early data cannot be sent along with an initial handshake. Early application data has significantly different security properties - in particular there is no guarantee that the data cannot be replayed. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls13sessionticketsperauthcontext",
					Description: `(Optional) Number of tickets the SSL Virtual Server will issue anytime TLS 1.3 is negotiated, ticket-based resumption is enabled, and either (1) a handshake completes or (2) post-handhsake client auth completes. This value can be increased to enable clients to open multiple parallel connections using a fresh ticket for each connection. No tickets are sent if resumption is disabled.`,
				},
				resource.Attribute{
					Name:        "dhekeyexchangewithpsk",
					Description: `(Optional) Whether or not the SSL Virtual Server will require a DHE key exchange to occur when a PSK is accepted during a TLS 1.3 resumption handshake. A DHE key exchange ensures forward secrecy even in the event that ticket keys are compromised, at the expense of an additional round trip and resources required to carry out the DHE key exchange. If disabled, a DHE key exchange will be performed when a PSK is accepted but only if requested by the client. If enabled, the server will require a DHE key exchange when a PSK is accepted regardless of whether the client supports combined PSK-DHE key exchange. This setting only has an effect when resumption is enabled. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "alpnprotocol",
					Description: `(Optional) Protocol to negotiate with client and then send as part of the ALPN extension in the server hello message. Possible values are HTTP1.1, HTTP2 and NONE. Default is none i.e. ALPN extension will not be sent. This parameter is relevant only if ssl connection is handled by the virtual server of type SSL_TCP. This parameter has no effect if TLSv1.3 is negotiated. Possible values: [ NONE, HTTP1.1, HTTP2 ]`,
				},
				resource.Attribute{
					Name:        "ciphername",
					Description: `(Optional) The cipher group/alias/individual cipher configuration.`,
				},
				resource.Attribute{
					Name:        "cipherpriority",
					Description: `(Optional) cipher priority.`,
				},
				resource.Attribute{
					Name:        "strictsigdigestcheck",
					Description: `(Optional) Parameter indicating to check whether peer entity certificate during TLS1.2 handshake is signed with one of signature-hash combination supported by Citrix ADC. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ecccurvebindings",
					Description: `(Required) A set of ECC curve names to be bound to this SSL profile.`,
				},
				resource.Attribute{
					Name:        "cipherbindings",
					Description: `(Optional) A set of ciphersuite bindings to be bound to this SSL profile. Documented below. A cipherbindings block supports the following:`,
				},
				resource.Attribute{
					Name:        "ciphername",
					Description: `(Required) Cipher name.`,
				},
				resource.Attribute{
					Name:        "cipherpriority",
					Description: `(Optional) This indicates priority assigned to the particular cipher. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A sslprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslprofile.tf_sslprofile tf_sslprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A sslprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslprofile.tf_sslprofile tf_sslprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslprofile_sslcertkey_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslprofile_sslcertkey_binding resource is used to create bindings between sslprofile and sslcertkey.


`,
			Keywords: []string{
				"ssl",
				"sslprofile",
				"sslcertkey",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "sslicacertkey",
					Description: `(Required) The certkey (CA certificate + private key) to be used for SSL interception.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the SSL profile.`,
				},
				resource.Attribute{
					Name:        "cipherpriority",
					Description: `(Optional) Priority of the cipher binding. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslprofile_sslcertkey_binding. IIt has is the conatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `sslicacertkey` + "`" + ` attributes. ## Import A sslprofile_sslcertkey_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslprofile_sslcertkey_binding.tf_sslprofile_sslcertkey_binding tf_sslprofile_sslcertkey_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslprofile_sslcertkey_binding. IIt has is the conatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `sslicacertkey` + "`" + ` attributes. ## Import A sslprofile_sslcertkey_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslprofile_sslcertkey_binding.tf_sslprofile_sslcertkey_binding tf_sslprofile_sslcertkey_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslprofile_sslcipher_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslprofile_sslcipher_binding resource is used to create bindings between sslprofiles and sslciphers.

~> If you are using this resource to bind sslciphers to a sslprofile
do not define the ` + "`" + `cipherbindings` + "`" + ` attribute in the sslprofile resource.


`,
			Keywords: []string{
				"ssl",
				"sslprofile",
				"sslcipher",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "cipherpriority",
					Description: `(Optional) cipher priority.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name of the SSL profile.`,
				},
				resource.Attribute{
					Name:        "ciphername",
					Description: `(Optional) Name of the cipher. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslprofile_sslcipher_binding. It has is the conatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `ciphername` + "`" + ` attributes. ## Import A sslprofile_sslcipher_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslprofile_sslcipher_binding.tf_binding tf_sslprofile,HIGH ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslprofile_sslcipher_binding. It has is the conatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `ciphername` + "`" + ` attributes. ## Import A sslprofile_sslcipher_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslprofile_sslcipher_binding.tf_binding tf_sslprofile,HIGH ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslservice",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslservice resource is used to create SSL services.


`,
			Keywords: []string{
				"ssl",
				"sslservice",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servicename",
					Description: `(Required) Name of the SSL service.`,
				},
				resource.Attribute{
					Name:        "dh",
					Description: `(Optional) State of Diffie-Hellman (DH) key exchange. This parameter is not applicable when configuring a backend service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dhfile",
					Description: `(Optional) Name for and, optionally, path to the PEM-format DH parameter file to be installed. /nsconfig/ssl/ is the default path. This parameter is not applicable when configuring a backend service.`,
				},
				resource.Attribute{
					Name:        "dhcount",
					Description: `(Optional) Number of interactions, between the client and the Citrix ADC, after which the DH private-public pair is regenerated. A value of zero (0) specifies infinite use (no refresh). This parameter is not applicable when configuring a backend service. Allowed DH count values are 0 and >= 500.`,
				},
				resource.Attribute{
					Name:        "dhkeyexpsizelimit",
					Description: `(Optional) This option enables the use of NIST recommended (NIST Special Publication 800-56A) bit size for private-key size. For example, for DH params of size 2048bit, the private-key size recommended is 224bits. This is rounded-up to 256bits. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ersa",
					Description: `(Optional) State of Ephemeral RSA (eRSA) key exchange. Ephemeral RSA allows clients that support only export ciphers to communicate with the secure server even if the server certificate does not support export clients. The ephemeral RSA key is automatically generated when you bind an export cipher to an SSL or TCP-based SSL virtual server or service. When you remove the export cipher, the eRSA key is not deleted. It is reused at a later date when another export cipher is bound to an SSL or TCP-based SSL virtual server or service. The eRSA key is deleted when the appliance restarts. This parameter is not applicable when configuring a backend service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ersacount",
					Description: `(Optional) Refresh count for regeneration of RSA public-key and private-key pair. Zero (0) specifies infinite usage (no refresh). This parameter is not applicable when configuring a backend service.`,
				},
				resource.Attribute{
					Name:        "sessreuse",
					Description: `(Optional) State of session reuse. Establishing the initial handshake requires CPU-intensive public key encryption operations. With the ENABLED setting, session key exchange is avoided for session resumption requests received from the client. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sesstimeout",
					Description: `(Optional) Time, in seconds, for which to keep the session active. Any session resumption request received after the timeout period will require a fresh SSL handshake and establishment of a new SSL session.`,
				},
				resource.Attribute{
					Name:        "cipherredirect",
					Description: `(Optional) State of Cipher Redirect. If this parameter is set to ENABLED, you can configure an SSL virtual server or service to display meaningful error messages if the SSL handshake fails because of a cipher mismatch between the virtual server or service and the client. This parameter is not applicable when configuring a backend service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "cipherurl",
					Description: `(Optional) URL of the page to which to redirect the client in case of a cipher mismatch. Typically, this page has a clear explanation of the error or an alternative location that the transaction can continue from. This parameter is not applicable when configuring a backend service.`,
				},
				resource.Attribute{
					Name:        "sslv2redirect",
					Description: `(Optional) State of SSLv2 Redirect. If this parameter is set to ENABLED, you can configure an SSL virtual server or service to display meaningful error messages if the SSL handshake fails because of a protocol version mismatch between the virtual server or service and the client. This parameter is not applicable when configuring a backend service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sslv2url",
					Description: `(Optional) URL of the page to which to redirect the client in case of a protocol version mismatch. Typically, this page has a clear explanation of the error or an alternative location that the transaction can continue from. This parameter is not applicable when configuring a backend service.`,
				},
				resource.Attribute{
					Name:        "clientauth",
					Description: `(Optional) State of client authentication. In service-based SSL offload, the service terminates the SSL handshake if the SSL client does not provide a valid certificate. This parameter is not applicable when configuring a backend service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "clientcert",
					Description: `(Optional) Type of client authentication. If this parameter is set to MANDATORY, the appliance terminates the SSL handshake if the SSL client does not provide a valid certificate. With the OPTIONAL setting, the appliance requests a certificate from the SSL clients but proceeds with the SSL transaction even if the client presents an invalid certificate. This parameter is not applicable when configuring a backend SSL service. Caution: Define proper access control policies before changing this setting to Optional. Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "sslredirect",
					Description: `(Optional) State of HTTPS redirects for the SSL service. For an SSL session, if the client browser receives a redirect message, the browser tries to connect to the new location. However, the secure SSL session breaks if the object has moved from a secure site (https://) to an unsecure site (http://). Typically, a warning message appears on the screen, prompting the user to continue or disconnect. If SSL Redirect is ENABLED, the redirect message is automatically converted from http:// to https:// and the SSL session does not break. This parameter is not applicable when configuring a backend service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "redirectportrewrite",
					Description: `(Optional) State of the port rewrite while performing HTTPS redirect. If this parameter is set to ENABLED, and the URL from the server does not contain the standard port, the port is rewritten to the standard. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ssl2",
					Description: `(Optional) State of SSLv2 protocol support for the SSL service. This parameter is not applicable when configuring a backend service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ssl3",
					Description: `(Optional) State of SSLv3 protocol support for the SSL service. Note: On platforms with SSL acceleration chips, if the SSL chip does not support SSLv3, this parameter cannot be set to ENABLED. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls1",
					Description: `(Optional) State of TLSv1.0 protocol support for the SSL service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls11",
					Description: `(Optional) State of TLSv1.1 protocol support for the SSL service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls12",
					Description: `(Optional) State of TLSv1.2 protocol support for the SSL service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls13",
					Description: `(Optional) State of TLSv1.3 protocol support for the SSL service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dtls1",
					Description: `(Optional) State of DTLSv1.0 protocol support for the SSL service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dtls12",
					Description: `(Optional) State of DTLSv1.2 protocol support for the SSL service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "snienable",
					Description: `(Optional) State of the Server Name Indication (SNI) feature on the virtual server and service-based offload. SNI helps to enable SSL encryption on multiple domains on a single virtual server or service if the domains are controlled by the same organization and share the same second-level domain name. For example,`,
				},
				resource.Attribute{
					Name:        "ocspstapling",
					Description: `(Optional) State of OCSP stapling support on the SSL virtual server. Supported only if the protocol used is higher than SSLv3. Possible values: ENABLED: The appliance sends a request to the OCSP responder to check the status of the server certificate and caches the response for the specified time. If the response is valid at the time of SSL handshake with the client, the OCSP-based server certificate status is sent to the client during the handshake. DISABLED: The appliance does not check the status of the server certificate. . Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "serverauth",
					Description: `(Optional) State of server authentication support for the SSL service. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "commonname",
					Description: `(Optional) Name to be checked against the CommonName (CN) field in the server certificate bound to the SSL server.`,
				},
				resource.Attribute{
					Name:        "pushenctrigger",
					Description: `(Optional) Trigger encryption on the basis of the PUSH flag value. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "sendclosenotify",
					Description: `(Optional) Enable sending SSL Close-Notify at the end of a transaction. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "dtlsprofilename",
					Description: `(Optional) Name of the DTLS profile that contains DTLS settings for the service.`,
				},
				resource.Attribute{
					Name:        "sslprofile",
					Description: `(Optional) Name of the SSL profile that contains SSL settings for the service.`,
				},
				resource.Attribute{
					Name:        "strictsigdigestcheck",
					Description: `(Optional) Parameter indicating to check whether peer's certificate during TLS1.2 handshake is signed with one of signature-hash combination supported by Citrix ADC. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservice. It has the same value as the ` + "`" + `servicename` + "`" + ` attribute. ## Import A sslservice can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservice.tf_sslservice tf_sslservice ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservice. It has the same value as the ` + "`" + `servicename` + "`" + ` attribute. ## Import A sslservice can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservice.tf_sslservice tf_sslservice ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslservice_ecccurve_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslservice_ecccurve_binding resource is used to bind sslservice and ecccurve.


`,
			Keywords: []string{
				"ssl",
				"sslservice",
				"ecccurve",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ecccurvename",
					Description: `(Required) Named ECC curve bound to service/vserver. Possible values: [ ALL, P_224, P_256, P_384, P_521 ]`,
				},
				resource.Attribute{
					Name:        "servicename",
					Description: `(Required) Name of the SSL service for which to set advanced configuration. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservice_ecccurve_binding. It is the concatenation of the ` + "`" + `servicename` + "`" + ` and ` + "`" + `ecccurvename` + "`" + ` attributes separated by a comma. ## Import A sslservice_ecccurve_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservice_ecccurve_binding.tf_sslservice_ecccurve_binding tf_sslservice_ecccurve_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservice_ecccurve_binding. It is the concatenation of the ` + "`" + `servicename` + "`" + ` and ` + "`" + `ecccurvename` + "`" + ` attributes separated by a comma. ## Import A sslservice_ecccurve_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservice_ecccurve_binding.tf_sslservice_ecccurve_binding tf_sslservice_ecccurve_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslservice_sslcertkey_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslservice_sslcertkey_binding resource is used to create binding between sslservice and sslcertkey.


`,
			Keywords: []string{
				"ssl",
				"sslservice",
				"sslcertkey",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "certkeyname",
					Description: `(Required) The certificate key pair binding.`,
				},
				resource.Attribute{
					Name:        "crlcheck",
					Description: `(Optional) The state of the CRL check parameter. (Mandatory/Optional). Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "ocspcheck",
					Description: `(Optional) Rule to use for the OCSP responder associated with the CA certificate during client authentication. If MANDATORY is specified, deny all SSL clients if the OCSP check fails because of connectivity issues with the remote OCSP server, or any other reason that prevents the OCSP check. With the OPTIONAL setting, allow SSL clients even if the OCSP check fails except when the client certificate is revoked. Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "ca",
					Description: `(Optional) CA certificate.`,
				},
				resource.Attribute{
					Name:        "snicert",
					Description: `(Optional) The name of the CertKey. Use this option to bind Certkey(s) which will be used in SNI processing.`,
				},
				resource.Attribute{
					Name:        "skipcaname",
					Description: `(Optional) The flag is used to indicate whether this particular CA certificate's CA_Name needs to be sent to the SSL client while requesting for client certificate in a SSL handshake.`,
				},
				resource.Attribute{
					Name:        "servicename",
					Description: `(Required) Name of the SSL service for which to set advanced configuration. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservice_sslcertkey_binding. It is the concatenation of the ` + "`" + `servicename` + "`" + ` and ` + "`" + `certkeyname` + "`" + ` attributes separated by a comma. ## Import A sslservice_sslcertkey_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservice_sslcertkey_binding.tf_sslservice_sslcertkey_binding tf_sslservice_sslcertkey_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservice_sslcertkey_binding. It is the concatenation of the ` + "`" + `servicename` + "`" + ` and ` + "`" + `certkeyname` + "`" + ` attributes separated by a comma. ## Import A sslservice_sslcertkey_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservice_sslcertkey_binding.tf_sslservice_sslcertkey_binding tf_sslservice_sslcertkey_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslservice_sslciphersuite_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslservice_sslciphersuite_binding resource is used to create binding between sslservice and sslciphersuite.


`,
			Keywords: []string{
				"ssl",
				"sslservice",
				"sslciphersuite",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ciphername",
					Description: `(Required) The cipher group/alias/individual cipher configuration.`,
				},
				resource.Attribute{
					Name:        "description",
					Description: `(Optional) The cipher suite description.`,
				},
				resource.Attribute{
					Name:        "servicename",
					Description: `(Required) Name of the SSL service for which to set advanced configuration. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservice_sslciphersuite_binding. t is the concatenation of the ` + "`" + `servicename` + "`" + ` and ` + "`" + `ciphername` + "`" + ` attributes separated by a comma. ## Import A sslservice_sslciphersuite_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservice_sslciphersuite_binding.tf_sslservice_sslciphersuite_binding tf_sslservice_sslciphersuite_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservice_sslciphersuite_binding. t is the concatenation of the ` + "`" + `servicename` + "`" + ` and ` + "`" + `ciphername` + "`" + ` attributes separated by a comma. ## Import A sslservice_sslciphersuite_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservice_sslciphersuite_binding.tf_sslservice_sslciphersuite_binding tf_sslservice_sslciphersuite_binding ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslservicegroup",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslservicegroup resource is used to set the advanced SSL configuration for an SSL service group.


`,
			Keywords: []string{
				"ssl",
				"sslservicegroup",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "servicegroupname",
					Description: `(Required) Name of the SSL service group for which to set advanced configuration.`,
				},
				resource.Attribute{
					Name:        "sslprofile",
					Description: `(Optional) Name of the SSL profile that contains SSL settings for the Service Group.`,
				},
				resource.Attribute{
					Name:        "sessreuse",
					Description: `(Optional) State of session reuse. Establishing the initial handshake requires CPU-intensive public key encryption operations. With the ENABLED setting, session key exchange is avoided for session resumption requests received from the client. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sesstimeout",
					Description: `(Optional) Time, in seconds, for which to keep the session active. Any session resumption request received after the timeout period will require a fresh SSL handshake and establishment of a new SSL session.`,
				},
				resource.Attribute{
					Name:        "ssl3",
					Description: `(Optional) State of SSLv3 protocol support for the SSL service group. Note: On platforms with SSL acceleration chips, if the SSL chip does not support SSLv3, this parameter cannot be set to ENABLED. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls1",
					Description: `(Optional) State of TLSv1.0 protocol support for the SSL service group. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls11",
					Description: `(Optional) State of TLSv1.1 protocol support for the SSL service group. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls12",
					Description: `(Optional) State of TLSv1.2 protocol support for the SSL service group. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls13",
					Description: `(Optional) State of TLSv1.3 protocol support for the SSL service group. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "snienable",
					Description: `(Optional) State of the Server Name Indication (SNI) feature on the service. SNI helps to enable SSL encryption on multiple domains on a single virtual server or service if the domains are controlled by the same organization and share the same second-level domain name. For example,`,
				},
				resource.Attribute{
					Name:        "ocspstapling",
					Description: `(Optional) State of OCSP stapling support on the SSL virtual server. Supported only if the protocol used is higher than SSLv3. Possible values: ENABLED: The appliance sends a request to the OCSP responder to check the status of the server certificate and caches the response for the specified time. If the response is valid at the time of SSL handshake with the client, the OCSP-based server certificate status is sent to the client during the handshake. DISABLED: The appliance does not check the status of the server certificate. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "serverauth",
					Description: `(Optional) State of server authentication support for the SSL service group. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "commonname",
					Description: `(Optional) Name to be checked against the CommonName (CN) field in the server certificate bound to the SSL server.`,
				},
				resource.Attribute{
					Name:        "sendclosenotify",
					Description: `(Optional) Enable sending SSL Close-Notify at the end of a transaction. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "strictsigdigestcheck",
					Description: `(Optional) Parameter indicating to check whether peer's certificate is signed with one of signature-hash combination supported by Citrix ADC. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservicegroup. It has the same value as the ` + "`" + `servicegroupname` + "`" + ` attribute. ## Import A sslservicegroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservicegroup.tf_sslservicegroup tf_servicegroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservicegroup. It has the same value as the ` + "`" + `servicegroupname` + "`" + ` attribute. ## Import A sslservicegroup can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservicegroup.tf_sslservicegroup tf_servicegroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslservicegroup_ecccurve_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslservicegroup_ecccurve_binding resource is used to add an ecc curve to ssl service group.


`,
			Keywords: []string{
				"ssl",
				"sslservicegroup",
				"ecccurve",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ecccurvename",
					Description: `(Required) Named ECC curve bound to servicegroup. Possible values: [ ALL, P_224, P_256, P_384, P_521 ]`,
				},
				resource.Attribute{
					Name:        "servicegroupname",
					Description: `(Required) The name of the SSL service to which the SSL policy needs to be bound. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservicegroup_ecccurve_binding. It is the concatenation of the ` + "`" + `servicegroupname` + "`" + ` and ` + "`" + `ecccurvename` + "`" + ` attributes separated by a comma. ## Import A sslservicegroup_ecccurve_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservicegroup_ecccurve_binding.tf_sslservicegroup_ecccurve_binding tf_servicegroup,P_256 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservicegroup_ecccurve_binding. It is the concatenation of the ` + "`" + `servicegroupname` + "`" + ` and ` + "`" + `ecccurvename` + "`" + ` attributes separated by a comma. ## Import A sslservicegroup_ecccurve_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservicegroup_ecccurve_binding.tf_sslservicegroup_ecccurve_binding tf_servicegroup,P_256 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslservicegroup_sslcertkey_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslservicegroup_sslcertkey_binding resource is used to add an sslcertkey to sslservicegroup.


`,
			Keywords: []string{
				"ssl",
				"sslservicegroup",
				"sslcertkey",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "certkeyname",
					Description: `(Required) The name of the certificate bound to the SSL service group.`,
				},
				resource.Attribute{
					Name:        "crlcheck",
					Description: `(Optional) The state of the CRL check parameter. (Mandatory/Optional). Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "ocspcheck",
					Description: `(Optional) The state of the OCSP check parameter. (Mandatory/Optional). Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "ca",
					Description: `(Optional) CA certificate.`,
				},
				resource.Attribute{
					Name:        "snicert",
					Description: `(Optional) The name of the CertKey. Use this option to bind Certkey(s) which will be used in SNI processing.`,
				},
				resource.Attribute{
					Name:        "servicegroupname",
					Description: `(Required) The name of the SSL service to which the SSL policy needs to be bound. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservicegroup_sslcertkey_binding. It is the concatenation of the ` + "`" + `servicegroupname` + "`" + ` and ` + "`" + `certkeyname` + "`" + ` attributes separated by a comma. ## Import A sslservicegroup_sslcertkey_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservicegroup_sslcertkey_binding.tf_sslservicegroup_sslcertkey_binding tf_servicegroup,tf_sslcertkey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservicegroup_sslcertkey_binding. It is the concatenation of the ` + "`" + `servicegroupname` + "`" + ` and ` + "`" + `certkeyname` + "`" + ` attributes separated by a comma. ## Import A sslservicegroup_sslcertkey_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservicegroup_sslcertkey_binding.tf_sslservicegroup_sslcertkey_binding tf_servicegroup,tf_sslcertkey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslservicegroup_sslciphersuite_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslservicegroup_sslciphersuite_binding resource is used to create sslservicegroup_sslciphersuite_binding.


`,
			Keywords: []string{
				"ssl",
				"sslservicegroup",
				"sslciphersuite",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ciphername",
					Description: `(Required) The name of the cipher group/alias/name configured for the SSL service group.`,
				},
				resource.Attribute{
					Name:        "description",
					Description: `(Optional) The description of the cipher.`,
				},
				resource.Attribute{
					Name:        "servicegroupname",
					Description: `(Required) The name of the SSL service to which the SSL policy needs to be bound. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservicegroup_sslciphersuite_binding. It is the concatenation of ` + "`" + `servicegroupname` + "`" + ` and ` + "`" + `ciphername` + "`" + ` attributes separated by a comma. ## Import A sslservicegroup_sslciphersuite_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservicegroup_sslciphersuite_binding.tf_sslservicegroup_sslciphersuite_binding my_gslbvservicegroup,my_ciphersuite ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslservicegroup_sslciphersuite_binding. It is the concatenation of ` + "`" + `servicegroupname` + "`" + ` and ` + "`" + `ciphername` + "`" + ` attributes separated by a comma. ## Import A sslservicegroup_sslciphersuite_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslservicegroup_sslciphersuite_binding.tf_sslservicegroup_sslciphersuite_binding my_gslbvservicegroup,my_ciphersuite ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslvserver",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslvserver resource is used to set advanced SSL configuration for an SSL virtual server.


`,
			Keywords: []string{
				"ssl",
				"sslvserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vservername",
					Description: `(Required) Name of the SSL virtual server for which to set advanced configuration.`,
				},
				resource.Attribute{
					Name:        "cleartextport",
					Description: `(Optional) Port on which clear-text data is sent by the appliance to the server. Do not specify this parameter for SSL offloading with end-to-end encryption.`,
				},
				resource.Attribute{
					Name:        "dh",
					Description: `(Optional) State of Diffie-Hellman (DH) key exchange. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dhfile",
					Description: `(Optional) Name of and, optionally, path to the DH parameter file, in PEM format, to be installed. /nsconfig/ssl/ is the default path.`,
				},
				resource.Attribute{
					Name:        "dhcount",
					Description: `(Optional) Number of interactions, between the client and the Citrix ADC, after which the DH private-public pair is regenerated. A value of zero (0) specifies infinite use (no refresh).`,
				},
				resource.Attribute{
					Name:        "dhkeyexpsizelimit",
					Description: `(Optional) This option enables the use of NIST recommended (NIST Special Publication 800-56A) bit size for private-key size. For example, for DH params of size 2048bit, the private-key size recommended is 224bits. This is rounded-up to 256bits. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ersa",
					Description: `(Optional) State of Ephemeral RSA (eRSA) key exchange. Ephemeral RSA allows clients that support only export ciphers to communicate with the secure server even if the server certificate does not support export clients. The ephemeral RSA key is automatically generated when you bind an export cipher to an SSL or TCP-based SSL virtual server or service. When you remove the export cipher, the eRSA key is not deleted. It is reused at a later date when another export cipher is bound to an SSL or TCP-based SSL virtual server or service. The eRSA key is deleted when the appliance restarts. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ersacount",
					Description: `(Optional) Refresh count for regeneration of the RSA public-key and private-key pair. Zero (0) specifies infinite usage (no refresh).`,
				},
				resource.Attribute{
					Name:        "sessreuse",
					Description: `(Optional) State of session reuse. Establishing the initial handshake requires CPU-intensive public key encryption operations. With the ENABLED setting, session key exchange is avoided for session resumption requests received from the client. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sesstimeout",
					Description: `(Optional) Time, in seconds, for which to keep the session active. Any session resumption request received after the timeout period will require a fresh SSL handshake and establishment of a new SSL session.`,
				},
				resource.Attribute{
					Name:        "cipherredirect",
					Description: `(Optional) State of Cipher Redirect. If cipher redirect is enabled, you can configure an SSL virtual server or service to display meaningful error messages if the SSL handshake fails because of a cipher mismatch between the virtual server or service and the client. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "cipherurl",
					Description: `(Optional) The redirect URL to be used with the Cipher Redirect feature.`,
				},
				resource.Attribute{
					Name:        "sslv2redirect",
					Description: `(Optional) State of SSLv2 Redirect. If SSLv2 redirect is enabled, you can configure an SSL virtual server or service to display meaningful error messages if the SSL handshake fails because of a protocol version mismatch between the virtual server or service and the client. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "sslv2url",
					Description: `(Optional) URL of the page to which to redirect the client in case of a protocol version mismatch. Typically, this page has a clear explanation of the error or an alternative location that the transaction can continue from.`,
				},
				resource.Attribute{
					Name:        "clientauth",
					Description: `(Optional) State of client authentication. If client authentication is enabled, the virtual server terminates the SSL handshake if the SSL client does not provide a valid certificate. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "clientcert",
					Description: `(Optional) Type of client authentication. If this parameter is set to MANDATORY, the appliance terminates the SSL handshake if the SSL client does not provide a valid certificate. With the OPTIONAL setting, the appliance requests a certificate from the SSL clients but proceeds with the SSL transaction even if the client presents an invalid certificate. Caution: Define proper access control policies before changing this setting to Optional. Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "sslredirect",
					Description: `(Optional) State of HTTPS redirects for the SSL virtual server. For an SSL session, if the client browser receives a redirect message, the browser tries to connect to the new location. However, the secure SSL session breaks if the object has moved from a secure site (https://) to an unsecure site (http://). Typically, a warning message appears on the screen, prompting the user to continue or disconnect. If SSL Redirect is ENABLED, the redirect message is automatically converted from http:// to https:// and the SSL session does not break. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "redirectportrewrite",
					Description: `(Optional) State of the port rewrite while performing HTTPS redirect. If this parameter is ENABLED and the URL from the server does not contain the standard port, the port is rewritten to the standard. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ssl2",
					Description: `(Optional) State of SSLv2 protocol support for the SSL Virtual Server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ssl3",
					Description: `(Optional) State of SSLv3 protocol support for the SSL Virtual Server. Note: On platforms with SSL acceleration chips, if the SSL chip does not support SSLv3, this parameter cannot be set to ENABLED. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls1",
					Description: `(Optional) State of TLSv1.0 protocol support for the SSL Virtual Server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls11",
					Description: `(Optional) State of TLSv1.1 protocol support for the SSL Virtual Server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls12",
					Description: `(Optional) State of TLSv1.2 protocol support for the SSL Virtual Server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls13",
					Description: `(Optional) State of TLSv1.3 protocol support for the SSL Virtual Server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dtls1",
					Description: `(Optional) State of DTLSv1.0 protocol support for the SSL Virtual Server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "dtls12",
					Description: `(Optional) State of DTLSv1.2 protocol support for the SSL Virtual Server. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "snienable",
					Description: `(Optional) State of the Server Name Indication (SNI) feature on the virtual server and service-based offload. SNI helps to enable SSL encryption on multiple domains on a single virtual server or service if the domains are controlled by the same organization and share the same second-level domain name. For example,`,
				},
				resource.Attribute{
					Name:        "ocspstapling",
					Description: `(Optional) State of OCSP stapling support on the SSL virtual server. Supported only if the protocol used is higher than SSLv3. Possible values: ENABLED: The appliance sends a request to the OCSP responder to check the status of the server certificate and caches the response for the specified time. If the response is valid at the time of SSL handshake with the client, the OCSP-based server certificate status is sent to the client during the handshake. DISABLED: The appliance does not check the status of the server certificate. . Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "pushenctrigger",
					Description: `(Optional) Trigger encryption on the basis of the PUSH flag value. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "sendclosenotify",
					Description: `(Optional) Enable sending SSL Close-Notify at the end of a transaction. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "dtlsprofilename",
					Description: `(Optional) Name of the DTLS profile whose settings are to be applied to the virtual server.`,
				},
				resource.Attribute{
					Name:        "sslprofile",
					Description: `(Optional) Name of the SSL profile that contains SSL settings for the virtual server.`,
				},
				resource.Attribute{
					Name:        "hsts",
					Description: `(Optional) State of HSTS protocol support for the SSL Virtual Server. Using HSTS, a server can enforce the use of an HTTPS connection for all communication with a client. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "maxage",
					Description: `(Optional) Set the maximum time, in seconds, in the strict transport security (STS) header during which the client must send only HTTPS requests to the server.`,
				},
				resource.Attribute{
					Name:        "includesubdomains",
					Description: `(Optional) Enable HSTS for subdomains. If set to Yes, a client must send only HTTPS requests for subdomains. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "preload",
					Description: `(Optional) Flag indicates the consent of the site owner to have their domain preloaded. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "strictsigdigestcheck",
					Description: `(Optional) Parameter indicating to check whether peer entity certificate during TLS1.2 handshake is signed with one of signature-hash combination supported by Citrix ADC. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "zerorttearlydata",
					Description: `(Optional) State of TLS 1.3 0-RTT early data support for the SSL Virtual Server. This setting only has an effect if resumption is enabled, as early data cannot be sent along with an initial handshake. Early application data has significantly different security properties - in particular there is no guarantee that the data cannot be replayed. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "tls13sessionticketsperauthcontext",
					Description: `(Optional) Number of tickets the SSL Virtual Server will issue anytime TLS 1.3 is negotiated, ticket-based resumption is enabled, and either (1) a handshake completes or (2) post-handhsake client auth completes. This value can be increased to enable clients to open multiple parallel connections using a fresh ticket for each connection. No tickets are sent if resumption is disabled.`,
				},
				resource.Attribute{
					Name:        "dhekeyexchangewithpsk",
					Description: `(Optional) Whether or not the SSL Virtual Server will require a DHE key exchange to occur when a PSK is accepted during a TLS 1.3 resumption handshake. A DHE key exchange ensures forward secrecy even in the event that ticket keys are compromised, at the expense of an additional round trip and resources required to carry out the DHE key exchange. If disabled, a DHE key exchange will be performed when a PSK is accepted but only if requested by the client. If enabled, the server will require a DHE key exchange when a PSK is accepted regardless of whether the client supports combined PSK-DHE key exchange. This setting only has an effect when resumption is enabled. Possible values: [ YES, NO ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslvserver. It has the same value as the ` + "`" + `vservername` + "`" + ` attribute. ## Import A sslvserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslvserver.tf_sslvserver tf_vserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslvserver. It has the same value as the ` + "`" + `vservername` + "`" + ` attribute. ## Import A sslvserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslvserver.tf_sslvserver tf_vserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslvserver_ecccurve_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslvserver_ecccurve_binding resource is used to add an ecc curve to ssl vserver.


`,
			Keywords: []string{
				"ssl",
				"sslvserver",
				"ecccurve",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ecccurvename",
					Description: `(Required) Named ECC curve bound to vserver/service. Possible values: [ ALL, P_224, P_256, P_384, P_521 ]`,
				},
				resource.Attribute{
					Name:        "vservername",
					Description: `(Required) Name of the SSL virtual server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslvserver_ecccurve_binding. It is the concatenation of the ` + "`" + `vservername` + "`" + ` and ` + "`" + `ecccurvename` + "`" + ` attributes separated by a comma. ## Import A sslvserver_ecccurve_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslvserver_ecccurve_binding.tf_sslvserver_ecccurve_binding tf_sslvserver,P_256 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslvserver_ecccurve_binding. It is the concatenation of the ` + "`" + `vservername` + "`" + ` and ` + "`" + `ecccurvename` + "`" + ` attributes separated by a comma. ## Import A sslvserver_ecccurve_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslvserver_ecccurve_binding.tf_sslvserver_ecccurve_binding tf_sslvserver,P_256 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslvserver_sslcertkey_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `\_sslcertkey\_binding

The sslvserver\_sslcertkey\_binding resource is used to bind ssl certificates to SSL vservers.


`,
			Keywords: []string{
				"ssl",
				"sslvserver",
				"sslcertkey",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "certkeyname",
					Description: `(Required) The name of the certificate key pair binding.`,
				},
				resource.Attribute{
					Name:        "crlcheck",
					Description: `(Optional) The state of the CRL check parameter. (Mandatory/Optional). Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "ocspcheck",
					Description: `(Optional) The state of the OCSP check parameter. (Mandatory/Optional). Possible values: [ Mandatory, Optional ]`,
				},
				resource.Attribute{
					Name:        "ca",
					Description: `(Optional) CA certificate.`,
				},
				resource.Attribute{
					Name:        "snicert",
					Description: `(Optional) The name of the CertKey. Use this option to bind Certkey(s) which will be used in SNI processing.`,
				},
				resource.Attribute{
					Name:        "skipcaname",
					Description: `(Optional) The flag is used to indicate whether this particular CA certificate's CA_Name needs to be sent to the SSL client while requesting for client certificate in a SSL handshake.`,
				},
				resource.Attribute{
					Name:        "vservername",
					Description: `(Required) Name of the SSL virtual server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslvserver\_sslcertkey\_binding. It is the concatenation of the ` + "`" + `vservername` + "`" + ` and ` + "`" + `certkeyname` + "`" + ` attributes separated by a comma. ## Import A sslvserver\_sslcertkey\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslvserver_sslcertkey_binding.tf_binding tf_lbvserver,tf_sslcertkey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslvserver\_sslcertkey\_binding. It is the concatenation of the ` + "`" + `vservername` + "`" + ` and ` + "`" + `certkeyname` + "`" + ` attributes separated by a comma. ## Import A sslvserver\_sslcertkey\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslvserver_sslcertkey_binding.tf_binding tf_lbvserver,tf_sslcertkey ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslvserver_sslciphersuite_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslvserver_sslciphersuite_binding resource is used to add an ssl cipher suite to sslvserver.



`,
			Keywords: []string{
				"ssl",
				"sslvserver",
				"sslciphersuite",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ciphername",
					Description: `(Required) The cipher group/alias/individual cipher configuration.`,
				},
				resource.Attribute{
					Name:        "description",
					Description: `(Optional) The cipher suite description.`,
				},
				resource.Attribute{
					Name:        "vservername",
					Description: `(Required) Name of the SSL virtual server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslvserver_sslciphersuite_binding. It is the concatenation of the ` + "`" + `vservername` + "`" + ` and ` + "`" + `ciphername` + "`" + ` attributes separated by a comma. ## Import A sslvserver_sslciphersuite_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslvserver_sslciphersuite_binding.tf_sslvserver_sslciphersuite_binding tf_sslvserver,TLS1.2-ECDHE-RSA-AES128-GCM-SHA256 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslvserver_sslciphersuite_binding. It is the concatenation of the ` + "`" + `vservername` + "`" + ` and ` + "`" + `ciphername` + "`" + ` attributes separated by a comma. ## Import A sslvserver_sslciphersuite_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslvserver_sslciphersuite_binding.tf_sslvserver_sslciphersuite_binding tf_sslvserver,TLS1.2-ECDHE-RSA-AES128-GCM-SHA256 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_sslvserver_sslpolicy_binding",
			Category:         "SSL",
			ShortDescription: ``,
			Description: `

The sslvserver_sslpolicy_binding resource is used to create bindings between sslvservers and sslpolicies.


`,
			Keywords: []string{
				"ssl",
				"sslvserver",
				"sslpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the SSL policy binding.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority of the policies bound to this SSL service.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bind point to which to bind the policy. Possible Values: REQUEST, INTERCEPT_REQ and CLIENTHELLO_REQ. These bindpoints mean: 1. REQUEST: Policy evaluation will be done at appplication above SSL. This bindpoint is default and is used for actions based on clientauth and client cert. 2. INTERCEPT_REQ: Policy evaluation will be done during SSL handshake to decide whether to intercept or not. Actions allowed with this type are: INTERCEPT, BYPASS and RESET. 3. CLIENTHELLO_REQ: Policy evaluation will be done during handling of Client Hello Request. Action allowed with this type is: RESET, FORWARD and PICKCACERTGRP. Possible values: [ INTERCEPT_REQ, REQUEST, CLIENTHELLO_REQ ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag. This attribute is relevant only for ADVANCED policies.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label invocation. Possible values: [ vserver, service, policylabel ]`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to invoke if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "vservername",
					Description: `(Required) Name of the SSL virtual server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslvserver_sslpolicy_binding. It is the concatenation of the ` + "`" + `vservername` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes. ## Import A sslvserver_sslpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslvserver_sslpolicy_binding.tf_binding tf_lbvserver,tf_sslpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the sslvserver_sslpolicy_binding. It is the concatenation of the ` + "`" + `vservername` + "`" + ` and ` + "`" + `policyname` + "`" + ` attributes. ## Import A sslvserver_sslpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_sslvserver_sslpolicy_binding.tf_binding tf_lbvserver,tf_sslpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_streamidentifier",
			Category:         "Stream",
			ShortDescription: ``,
			Description: `

The streamidentifier resource is used to create streamidentifier.


`,
			Keywords: []string{
				"stream",
				"streamidentifier",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) The name of stream identifier.`,
				},
				resource.Attribute{
					Name:        "acceptancethreshold",
					Description: `(Optional) Non-Breaching transactions to Total transactions threshold expressed in percent. Maximum of 6 decimal places is supported.`,
				},
				resource.Attribute{
					Name:        "appflowlog",
					Description: `(Optional) Enable/disable Appflow logging for stream identifier`,
				},
				resource.Attribute{
					Name:        "breachthreshold",
					Description: `(Optional) Breaching transactions threshold calculated over interval.`,
				},
				resource.Attribute{
					Name:        "interval",
					Description: `(Optional) Number of minutes of data to use when calculating session statistics (number of requests, bandwidth, and response times). The interval is a moving window that keeps the most recently collected data. Older data is discarded at regular intervals.`,
				},
				resource.Attribute{
					Name:        "maxtransactionthreshold",
					Description: `(Optional) Maximum per transcation value of metric. Metric to be tracked is specified by tracktransactions attribute.`,
				},
				resource.Attribute{
					Name:        "mintransactionthreshold",
					Description: `(Optional) Minimum per transcation value of metric. Metric to be tracked is specified by tracktransactions attribute.`,
				},
				resource.Attribute{
					Name:        "samplecount",
					Description: `(Optional) Size of the sample from which to select a request for evaluation. The smaller the sample count, the more accurate is the statistical data. To evaluate all requests, set the sample count to 1. However, such a low setting can result in excessive consumption of memory and processing resources.`,
				},
				resource.Attribute{
					Name:        "selectorname",
					Description: `(Optional) Name of the selector to use with the stream identifier.`,
				},
				resource.Attribute{
					Name:        "snmptrap",
					Description: `(Optional) Enable/disable SNMP trap for stream identifier`,
				},
				resource.Attribute{
					Name:        "sort",
					Description: `(Optional) Sort stored records by the specified statistics column, in descending order. Performed during data collection, the sorting enables real-time data evaluation through Citrix ADC policies (for example, compression and caching policies) that use functions such as IS_TOP(n).`,
				},
				resource.Attribute{
					Name:        "trackackonlypackets",
					Description: `(Optional) Track ack only packets as well. This setting is applicable only when packet rate limiting is being used.`,
				},
				resource.Attribute{
					Name:        "tracktransactions",
					Description: `(Optional) Track transactions exceeding configured threshold. Transaction tracking can be enabled for following metric: ResponseTime. By default transaction tracking is disabled ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the streamidentifier. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A streamidentifier can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_streamidentifier.tf_streamidentifier my_streamidentifier ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the streamidentifier. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A streamidentifier can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_streamidentifier.tf_streamidentifier my_streamidentifier ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_streamselector",
			Category:         "Stream",
			ShortDescription: ``,
			Description: `

The streamselector resource is used to create streamselector.


`,
			Keywords: []string{
				"stream",
				"streamselector",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the selector. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. If the name includes one or more spaces, and you are using the Citrix ADC CLI, enclose the name in double or single quotation marks (for example, "my selector" or 'my selector').`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Set of up to five expressions. Maximum length: 7499 characters. Each expression must identify a specific request characteristic, such as the client's IP address (with CLIENT.IP.SRC) or requested server resource (with HTTP.REQ.URL). Note: If two or more selectors contain the same expressions in different order, a separate set of records is created for each selector. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the streamselector. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A streamselector can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_streamselector.tf_streamselector my_streamselector ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the streamselector. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A streamselector can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_streamselector.tf_streamselector my_streamselector ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_subscribergxinterface",
			Category:         "Subscriber",
			ShortDescription: ``,
			Description: `

The subscribergxinterface resource is used to update subscribergxinterface.


`,
			Keywords: []string{
				"subscriber",
				"subscribergxinterface",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "cerrequesttimeout",
					Description: `(Optional) q!Healthcheck request timeout, in seconds, after which the Citrix ADC considers that no CCA packet received to the initiated CCR. After this time Citrix ADC should send again CCR to PCRF server. !`,
				},
				resource.Attribute{
					Name:        "healthcheck",
					Description: `(Optional) q!Set this setting to yes if Citrix ADC should send DWR packets to PCRF server. When the session is idle, healthcheck timer expires and DWR packets are initiated in order to check that PCRF server is active. By default set to No. !`,
				},
				resource.Attribute{
					Name:        "healthcheckttl",
					Description: `(Optional) q!Healthcheck timeout, in seconds, after which the DWR will be sent in order to ensure the state of the PCRF server. Any CCR, CCA, RAR or RRA message resets the timer. !`,
				},
				resource.Attribute{
					Name:        "holdonsubscriberabsence",
					Description: `(Optional) Set this setting to yes if Citrix ADC needs to Hold pakcets till subscriber session is fetched from PCRF. Else set to NO. By default set to yes. If this setting is set to NO, then till Citrix ADC fetches subscriber from PCRF, default subscriber profile will be applied to this subscriber if configured. If default subscriber profile is also not configured an undef would be raised to expressions which use Subscriber attributes.`,
				},
				resource.Attribute{
					Name:        "idlettl",
					Description: `(Optional) q!Idle Time, in seconds, after which the Gx CCR-U request will be sent after any PCRF activity on a session. Any RAR or CCA message resets the timer. Zero value disables the idle timeout. !`,
				},
				resource.Attribute{
					Name:        "negativettl",
					Description: `(Optional) q!Negative TTL, in seconds, after which the Gx CCR-I request will be resent for sessions that have not been resolved by PCRF due to server being down or no response or failed response. Instead of polling the PCRF server constantly, negative-TTL makes Citrix ADC stick to un-resolved session. Meanwhile Citrix ADC installs a negative session to avoid going to PCRF. For Negative Sessions, Netcaler inherits the attributes from default subscriber profile if default subscriber is configured. A default subscriber could be configured as 'add subscriber profile`,
				},
				resource.Attribute{
					Name:        "negativettllimitedsuccess",
					Description: `(Optional) Set this to YES if Citrix ADC should create negative session for Result-Code DIAMETER_LIMITED_SUCCESS (2002) received in CCA-I. If set to NO, regular session is created.`,
				},
				resource.Attribute{
					Name:        "nodeid",
					Description: `(Optional) Unique number that identifies the cluster node.`,
				},
				resource.Attribute{
					Name:        "pcrfrealm",
					Description: `(Optional) PCRF realm is of type DiameterIdentity and contains the realm of PCRF to which the message is to be routed. This is the realm used in Destination-Realm AVP by Citrix ADC Gx client (as a Diameter node).`,
				},
				resource.Attribute{
					Name:        "purgesdbongxfailure",
					Description: `(Optional) Set this setting to YES if needed to purge Subscriber Database in case of Gx failure. By default set to NO.`,
				},
				resource.Attribute{
					Name:        "requestretryattempts",
					Description: `(Optional) If the request does not complete within requestTimeout time, the request is retransmitted for requestRetryAttempts time.`,
				},
				resource.Attribute{
					Name:        "requesttimeout",
					Description: `(Optional) q!Time, in seconds, within which the Gx CCR request must complete. If the request does not complete within this time, the request is retransmitted for requestRetryAttempts time. If still reuqest is not complete then default subscriber profile will be applied to this subscriber if configured. If default subscriber profile is also not configured an undef would be raised to expressions which use Subscriber attributes. Zero disables the timeout. !`,
				},
				resource.Attribute{
					Name:        "revalidationtimeout",
					Description: `(Optional) q!Revalidation Timeout, in seconds, after which the Gx CCR-U request will be sent after any PCRF activity on a session. Any RAR or CCA message resets the timer. Zero value disables the idle timeout. !`,
				},
				resource.Attribute{
					Name:        "service",
					Description: `(Optional) Name of DIAMETER/SSL_DIAMETER service corresponding to PCRF to which the Gx connection is established. The service type of the service must be DIAMETER/SSL_DIAMETER. Mutually exclusive with vserver parameter. Therefore, you cannot set both Service and the Virtual Server in the Gx Interface.`,
				},
				resource.Attribute{
					Name:        "servicepathavp",
					Description: `(Optional) The AVP code in which PCRF sends service path applicable for subscriber.`,
				},
				resource.Attribute{
					Name:        "servicepathvendorid",
					Description: `(Optional) The vendorid of the AVP in which PCRF sends service path for subscriber.`,
				},
				resource.Attribute{
					Name:        "vserver",
					Description: `(Optional) Name of the load balancing, or content switching vserver to which the Gx connections are established. The service type of the virtual server must be DIAMETER/SSL_DIAMETER. Mutually exclusive with the service parameter. Therefore, you cannot set both service and the Virtual Server in the Gx Interface. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the subscribergxinterface. It is a unique string prefixed with ` + "`" + `tf-subscribergxinterface-` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the subscribergxinterface. It is a unique string prefixed with ` + "`" + `tf-subscribergxinterface-` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_subscriberparam",
			Category:         "Subscriber",
			ShortDescription: ``,
			Description: `

The subscriberparam resource is used to create subscriberparam.


`,
			Keywords: []string{
				"subscriber",
				"subscriberparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "idleaction",
					Description: `(Optional) q!Once idleTTL exprires on a subscriber session, Citrix ADC will take an idle action on that session. idleAction could be chosen from one of these ==> 1. ccrTerminate: (default) send CCR-T to inform PCRF about session termination and delete the session. 2. delete: Just delete the subscriber session without informing PCRF. 3. ccrUpdate: Do not delete the session and instead send a CCR-U to PCRF requesting for an updated session. !`,
				},
				resource.Attribute{
					Name:        "idlettl",
					Description: `(Optional) q!Idle Timeout, in seconds, after which Citrix ADC will take an idleAction on a subscriber session (refer to 'idleAction' arguement in 'set subscriber param' for more details on idleAction). Any data-plane or control plane activity updates the idleTimeout on subscriber session. idleAction could be to 'just delete the session' or 'delete and CCR-T' (if PCRF is configured) or 'do not delete but send a CCR-U'. Zero value disables the idle timeout. !`,
				},
				resource.Attribute{
					Name:        "interfacetype",
					Description: `(Optional) Subscriber Interface refers to Citrix ADC interaction with control plane protocols, RADIUS and GX. Types of subscriber interface: NONE, RadiusOnly, RadiusAndGx, GxOnly. NONE: Only static subscribers can be configured. RadiusOnly: GX interface is absent. Subscriber information is obtained through RADIUS Accounting messages. RadiusAndGx: Subscriber ID obtained through RADIUS Accounting is used to query PCRF. Subscriber information is obtained from both RADIUS and PCRF. GxOnly: RADIUS interface is absent. Subscriber information is queried using Subscriber IP or IP+VLAN.`,
				},
				resource.Attribute{
					Name:        "ipv6prefixlookuplist",
					Description: `(Optional) The ipv6PrefixLookupList should consist of all the ipv6 prefix lengths assigned to the UE's'`,
				},
				resource.Attribute{
					Name:        "keytype",
					Description: `(Optional) Type of subscriber key type IP or IPANDVLAN. IPANDVLAN option can be used only when the interfaceType is set to gxOnly. Changing the lookup method should result to the subscriber session database being flushed. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the subscriberparam. It is a unique string prefixed with ` + "`" + `tf-subscriberparam-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the subscriberparam. It is a unique string prefixed with ` + "`" + `tf-subscriberparam-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_subscriberprofile",
			Category:         "Subscriber",
			ShortDescription: ``,
			Description: `

The subscriberprofile resource is used to create subscriberprofile.


`,
			Keywords: []string{
				"subscriber",
				"subscriberprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ip",
					Description: `(Required) Subscriber ip address`,
				},
				resource.Attribute{
					Name:        "servicepath",
					Description: `(Optional) Name of the servicepath to be taken for this subscriber.`,
				},
				resource.Attribute{
					Name:        "subscriberrules",
					Description: `(Optional) Rules configured for this subscriber. This is similar to rules received from PCRF for dynamic subscriber sessions.`,
				},
				resource.Attribute{
					Name:        "subscriptionidtype",
					Description: `(Optional) Subscription-Id type`,
				},
				resource.Attribute{
					Name:        "subscriptionidvalue",
					Description: `(Optional) Subscription-Id value`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) The vlan number on which the subscriber is located. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the subscriberprofile. It has the same value as the ` + "`" + `ip` + "`" + ` attribute. ## Import A subscriberprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_subscriberprofile.tf_subscriberprofile 10.222.74.185 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the subscriberprofile. It has the same value as the ` + "`" + `ip` + "`" + ` attribute. ## Import A subscriberprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_subscriberprofile.tf_subscriberprofile 10.222.74.185 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_subscriberradiusinterface",
			Category:         "Subscriber",
			ShortDescription: ``,
			Description: `

The subscriberradiusinterface resource is used to create subscriberradiusinterface.


`,
			Keywords: []string{
				"subscriber",
				"subscriberradiusinterface",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "listeningservice",
					Description: `(Required) Name of RADIUS LISTENING service that will process RADIUS accounting requests.`,
				},
				resource.Attribute{
					Name:        "radiusinterimasstart",
					Description: `(Optional) Treat radius interim message as start radius messages. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the subscriberradiusinterface. It is a unique string prefixed with ` + "`" + `tf-subscriberradiusinterface-` + "`" + `.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the subscriberradiusinterface. It is a unique string prefixed with ` + "`" + `tf-subscriberradiusinterface-` + "`" + `.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systembackup",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systembackup resource is used to add the systembackup to another ADC.


`,
			Keywords: []string{
				"system",
				"systembackup",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "filename",
					Description: `(Required) Name of the backup file to be restored. Maximum length = 63 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systembackup. It is a unique string prefixed with ` + "`" + `filename` + "`" + ` attribute's value.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systembackup. It is a unique string prefixed with ` + "`" + `filename` + "`" + ` attribute's value.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systembackup_create",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systembackup_create resource is used to create the systembackup_create resource.


`,
			Keywords: []string{
				"system",
				"systembackup",
				"create",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "filename",
					Description: `(Required) Name of the backup file(`,
				},
				resource.Attribute{
					Name:        "uselocaltimezone",
					Description: `(Optional) This option will create backup file with local timezone timestamp.`,
				},
				resource.Attribute{
					Name:        "level",
					Description: `(Optional) Level of data to be backed up. Possible values: [ basic, full ]`,
				},
				resource.Attribute{
					Name:        "includekernel",
					Description: `(Optional) Use this option to add kernel in the backup file. Possible values: [ NO, YES ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comment specified at the time of creation of the backup file(`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systembackup_create. It is a unique string prefixed with ` + "`" + `filename` + "`" + ` attribute's value.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systembackup_create. It is a unique string prefixed with ` + "`" + `filename` + "`" + ` attribute's value.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systembackup_restore",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systembackup_restore resource is used to apply the restore operation for systembackup.


`,
			Keywords: []string{
				"system",
				"systembackup",
				"restore",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "filename",
					Description: `(Required) Name of the backup file(`,
				},
				resource.Attribute{
					Name:        "skipbackup",
					Description: `(Optional) Use this option to skip taking backup during restore operation. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systembackup_restore. It is a unique string prefixed with ` + "`" + `filename` + "`" + ` attribute's value.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systembackup_restore. It is a unique string prefixed with ` + "`" + `filename` + "`" + ` attribute's value.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemcmdpolicy",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemcmdpolicy resource is used to create command policies.


`,
			Keywords: []string{
				"system",
				"systemcmdpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Name for a command policy.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Optional) Action to perform when a request matches the policy. Possible values: [ ALLOW, DENY ]`,
				},
				resource.Attribute{
					Name:        "cmdspec",
					Description: `(Optional) Regular expression specifying the data that matches the policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemcmdpolicy. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemcmdpolicy can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemcmdpolicy.tf_policy tf_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemcmdpolicy. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemcmdpolicy can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemcmdpolicy.tf_policy tf_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemcollectionparam",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemcollectionparam resource is used to update systemcollectionparam.


`,
			Keywords: []string{
				"system",
				"systemcollectionparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "communityname",
					Description: `(Optional) SNMPv1 community name for authentication.`,
				},
				resource.Attribute{
					Name:        "loglevel",
					Description: `(Optional) specify the log level. Possible values CRITICAL,WARNING,INFO,DEBUG1,DEBUG2. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "datapath",
					Description: `(Optional) specify the data path to the database. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemcollectionparam. It is a unique string prefixed with ` + "`" + `tf-systemcollectionparam-` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemcollectionparam. It is a unique string prefixed with ` + "`" + `tf-systemcollectionparam-` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemextramgmtcpu",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemextramgmtcpu resource is used to enable or disable the extra management cpu on the target ADC.


`,
			Keywords: []string{
				"system",
				"systemextramgmtcpu",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "enabled",
					Description: `(Required) Boolean value indicating the desired state of the extra management CPU. Set to ` + "`" + `true` + "`" + ` to enable it.`,
				},
				resource.Attribute{
					Name:        "reboot",
					Description: `(Optional) Boolean value. Set to ` + "`" + `true` + "`" + ` to reboot after the application of the extra management cpu.`,
				},
				resource.Attribute{
					Name:        "reachable_timeout",
					Description: `(Optional) Total time to wait after reboot. Defaults to "10m".`,
				},
				resource.Attribute{
					Name:        "reachable_poll_delay",
					Description: `(Optional) Time to wait before the first poll after reboot. Defaults to "60s".`,
				},
				resource.Attribute{
					Name:        "reachable_poll_interval",
					Description: `(Optional) Interval between polls. Defaults to "60s".`,
				},
				resource.Attribute{
					Name:        "reachable_poll_timeout",
					Description: `(Optional) Timeout for a poll attempt. Default to "20s". ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemextramgmtcpu. It is a random string prefixed with ` + "`" + `tf-systemextramgmtcpu-` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemextramgmtcpu. It is a random string prefixed with ` + "`" + `tf-systemextramgmtcpu-` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemfile",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemfile resource is used to upload files to the target ADC.


`,
			Keywords: []string{
				"system",
				"systemfile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "filename",
					Description: `(Optional) Name of the file. It should not include filepath.`,
				},
				resource.Attribute{
					Name:        "filecontent",
					Description: `(Optional) File contents.`,
				},
				resource.Attribute{
					Name:        "filelocation",
					Description: `(Optional) Location of the file on Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "fileencoding",
					Description: `(Optional) Encoding type of the file content. Defaults to ` + "`" + `BASE64` + "`" + `. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemfile. It is the fullpath of the system file. ## Import A systemfile can be imported using its full path, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemfile.tf_file /var/tmp/hello.txt ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemfile. It is the fullpath of the system file. ## Import A systemfile can be imported using its full path, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemfile.tf_file /var/tmp/hello.txt ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemglobal_auditnslogpolicy_binding",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemglobal_auditnslogpolicy_binding resource is used to create systemglobal_auditnslogpolicy_binding.


`,
			Keywords: []string{
				"system",
				"systemglobal",
				"auditnslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the command policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) The priority of the command policy.`,
				},
				resource.Attribute{
					Name:        "builtin",
					Description: `(Optional) Indicates that a variable is a built-in (SYSTEM INTERNAL) type. Possible values: [ MODIFIABLE, DELETABLE, IMMUTABLE, PARTITION_ALL ]`,
				},
				resource.Attribute{
					Name:        "feature",
					Description: `(Optional) The feature to be checked while applying this config. Possible values: [ WL, WebLogging, SP, SurgeProtection, LB, LoadBalancing, CS, ContentSwitching, CR, CacheRedirection, SC, SureConnect, CMP, CMPcntl, CompressionControl, PQ, PriorityQueuing, HDOSP, HttpDoSProtection, SSLVPN, AAA, GSLB, GlobalServerLoadBalancing, SSL, SSLOffload, SSLOffloading, CF, ContentFiltering, IC, IntegratedCaching, OSPF, OSPFRouting, RIP, RIPRouting, BGP, BGPRouting, REWRITE, IPv6PT, IPv6protocoltranslation, AppFw, ApplicationFirewall, RESPONDER, HTMLInjection, push, NSPush, NetScalerPush, AppFlow, CloudBridge, ISIS, ISISRouting, CH, CallHome, AppQoE, ContentAccelerator, SYSTEM, RISE, FEO, LSN, LargeScaleNAT, RDPProxy, Rep, Reputation, URLFiltering, VideoOptimization, ForwardProxy, SSLInterception, AdaptiveTCP, CQA, CI, ContentInspection, Bot, APIGateway ]`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ]`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) On success invoke label. Applicable for advanced authentication policy binding.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemglobal_auditnslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemglobal_auditnslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemglobal_auditnslogpolicy_binding.tf_systemglobal_auditnslogpolicy_binding tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemglobal_auditnslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemglobal_auditnslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemglobal_auditnslogpolicy_binding.tf_systemglobal_auditnslogpolicy_binding tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemglobal_authenticationldappolicy_binding",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemglobal_authenticationldappolicy_binding resource is used to bind authenticationldappolicy to systemglobal.


`,
			Keywords: []string{
				"system",
				"systemglobal",
				"authenticationldappolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the command policy.`,
				},
				resource.Attribute{
					Name:        "builtin",
					Description: `(Optional) Indicates that a variable is a built-in (SYSTEM INTERNAL) type.`,
				},
				resource.Attribute{
					Name:        "feature",
					Description: `(Optional) The feature to be checked while applying this config`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) 0`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) On success invoke label. Applicable for advanced authentication policy binding`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority of the command policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemglobal_authenticationldappolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemglobal_authenticationldappolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemglobal_authenticationldappolicy_binding.tf_bind tf_authenticationldappolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemglobal_authenticationldappolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemglobal_authenticationldappolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemglobal_authenticationldappolicy_binding.tf_bind tf_authenticationldappolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemglobal_authenticationlocalpolicy_binding",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemglobal_authenticationlocalpolicy_binding resource is used to create systemglobal_authenticationlocalpolicy_binding.


`,
			Keywords: []string{
				"system",
				"systemglobal",
				"authenticationlocalpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the command policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) The priority of the command policy.`,
				},
				resource.Attribute{
					Name:        "builtin",
					Description: `(Optional) Indicates that a variable is a built-in (SYSTEM INTERNAL) type. Possible values: [ MODIFIABLE, DELETABLE, IMMUTABLE, PARTITION_ALL ]`,
				},
				resource.Attribute{
					Name:        "feature",
					Description: `(Optional) The feature to be checked while applying this config. Possible values: [ WL, WebLogging, SP, SurgeProtection, LB, LoadBalancing, CS, ContentSwitching, CR, CacheRedirection, SC, SureConnect, CMP, CMPcntl, CompressionControl, PQ, PriorityQueuing, HDOSP, HttpDoSProtection, SSLVPN, AAA, GSLB, GlobalServerLoadBalancing, SSL, SSLOffload, SSLOffloading, CF, ContentFiltering, IC, IntegratedCaching, OSPF, OSPFRouting, RIP, RIPRouting, BGP, BGPRouting, REWRITE, IPv6PT, IPv6protocoltranslation, AppFw, ApplicationFirewall, RESPONDER, HTMLInjection, push, NSPush, NetScalerPush, AppFlow, CloudBridge, ISIS, ISISRouting, CH, CallHome, AppQoE, ContentAccelerator, SYSTEM, RISE, FEO, LSN, LargeScaleNAT, RDPProxy, Rep, Reputation, URLFiltering, VideoOptimization, ForwardProxy, SSLInterception, AdaptiveTCP, CQA, CI, ContentInspection, Bot, APIGateway ]`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ]`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) On success invoke label. Applicable for advanced authentication policy binding.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemglobal_authenticationlocalpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemglobal_authenticationlocalpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemglobal_authenticationlocalpolicy_binding.tf_systemglobal_authenticationlocalpolicy_binding tf_authenticationlocalpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemglobal_authenticationlocalpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemglobal_authenticationlocalpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemglobal_authenticationlocalpolicy_binding.tf_systemglobal_authenticationlocalpolicy_binding tf_authenticationlocalpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemglobal_authenticationpolicy_binding",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemglobal_authenticationpolicy_binding resource is used to create systemglobal_authenticationpolicy_binding.


`,
			Keywords: []string{
				"system",
				"systemglobal",
				"authenticationpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the command policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) The priority of the command policy.`,
				},
				resource.Attribute{
					Name:        "builtin",
					Description: `(Optional) Indicates that a variable is a built-in (SYSTEM INTERNAL) type. Possible values: [ MODIFIABLE, DELETABLE, IMMUTABLE, PARTITION_ALL ]`,
				},
				resource.Attribute{
					Name:        "feature",
					Description: `(Optional) The feature to be checked while applying this config. Possible values: [ WL, WebLogging, SP, SurgeProtection, LB, LoadBalancing, CS, ContentSwitching, CR, CacheRedirection, SC, SureConnect, CMP, CMPcntl, CompressionControl, PQ, PriorityQueuing, HDOSP, HttpDoSProtection, SSLVPN, AAA, GSLB, GlobalServerLoadBalancing, SSL, SSLOffload, SSLOffloading, CF, ContentFiltering, IC, IntegratedCaching, OSPF, OSPFRouting, RIP, RIPRouting, BGP, BGPRouting, REWRITE, IPv6PT, IPv6protocoltranslation, AppFw, ApplicationFirewall, RESPONDER, HTMLInjection, push, NSPush, NetScalerPush, AppFlow, CloudBridge, ISIS, ISISRouting, CH, CallHome, AppQoE, ContentAccelerator, SYSTEM, RISE, FEO, LSN, LargeScaleNAT, RDPProxy, Rep, Reputation, URLFiltering, VideoOptimization, ForwardProxy, SSLInterception, AdaptiveTCP, CQA, CI, ContentInspection, Bot, APIGateway ]`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ]`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) On success invoke label. Applicable for advanced authentication policy binding.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE. Applicable only for advanced authentication policies. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemglobal_authenticationpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemglobal_authenticationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemglobal_authenticationpolicy_binding.tf_systemglobal_authenticationpolicy_binding tf_authenticationpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemglobal_authenticationpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemglobal_authenticationpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemglobal_authenticationpolicy_binding.tf_systemglobal_authenticationpolicy_binding tf_authenticationpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemglobal_authenticationradiuspolicy_binding",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemglobal_authenticationradiuspolicy_binding resource is used to create systemglobal_authenticationradiuspolicy_binding.


`,
			Keywords: []string{
				"system",
				"systemglobal",
				"authenticationradiuspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the command policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) The priority of the command policy.`,
				},
				resource.Attribute{
					Name:        "builtin",
					Description: `(Optional) Indicates that a variable is a built-in (SYSTEM INTERNAL) type. Possible values: [ MODIFIABLE, DELETABLE, IMMUTABLE, PARTITION_ALL ]`,
				},
				resource.Attribute{
					Name:        "feature",
					Description: `(Optional) The feature to be checked while applying this config. Possible values: [ WL, WebLogging, SP, SurgeProtection, LB, LoadBalancing, CS, ContentSwitching, CR, CacheRedirection, SC, SureConnect, CMP, CMPcntl, CompressionControl, PQ, PriorityQueuing, HDOSP, HttpDoSProtection, SSLVPN, AAA, GSLB, GlobalServerLoadBalancing, SSL, SSLOffload, SSLOffloading, CF, ContentFiltering, IC, IntegratedCaching, OSPF, OSPFRouting, RIP, RIPRouting, BGP, BGPRouting, REWRITE, IPv6PT, IPv6protocoltranslation, AppFw, ApplicationFirewall, RESPONDER, HTMLInjection, push, NSPush, NetScalerPush, AppFlow, CloudBridge, ISIS, ISISRouting, CH, CallHome, AppQoE, ContentAccelerator, SYSTEM, RISE, FEO, LSN, LargeScaleNAT, RDPProxy, Rep, Reputation, URLFiltering, VideoOptimization, ForwardProxy, SSLInterception, AdaptiveTCP, CQA, CI, ContentInspection, Bot, APIGateway ]`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ]`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) On success invoke label. Applicable for advanced authentication policy binding.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemglobal_authenticationradiuspolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemglobal_authenticationradiuspolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemglobal_authenticationradiuspolicy_binding.tf_systemglobal_authenticationradiuspolicy_binding tf_radiuspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemglobal_authenticationradiuspolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemglobal_authenticationradiuspolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemglobal_authenticationradiuspolicy_binding.tf_systemglobal_authenticationradiuspolicy_binding tf_radiuspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemglobal_authenticationtacacspolicy_binding",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemglobal_authenticationtacacspolicy_bindingresource is used to create systemglobal_authenticationtacacspolicy_binding.


`,
			Keywords: []string{
				"system",
				"systemglobal",
				"authenticationtacacspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the command policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) The priority of the command policy.`,
				},
				resource.Attribute{
					Name:        "builtin",
					Description: `(Optional) Indicates that a variable is a built-in (SYSTEM INTERNAL) type. Possible values: [ MODIFIABLE, DELETABLE, IMMUTABLE, PARTITION_ALL ]`,
				},
				resource.Attribute{
					Name:        "feature",
					Description: `(Optional) The feature to be checked while applying this config. Possible values: [ WL, WebLogging, SP, SurgeProtection, LB, LoadBalancing, CS, ContentSwitching, CR, CacheRedirection, SC, SureConnect, CMP, CMPcntl, CompressionControl, PQ, PriorityQueuing, HDOSP, HttpDoSProtection, SSLVPN, AAA, GSLB, GlobalServerLoadBalancing, SSL, SSLOffload, SSLOffloading, CF, ContentFiltering, IC, IntegratedCaching, OSPF, OSPFRouting, RIP, RIPRouting, BGP, BGPRouting, REWRITE, IPv6PT, IPv6protocoltranslation, AppFw, ApplicationFirewall, RESPONDER, HTMLInjection, push, NSPush, NetScalerPush, AppFlow, CloudBridge, ISIS, ISISRouting, CH, CallHome, AppQoE, ContentAccelerator, SYSTEM, RISE, FEO, LSN, LargeScaleNAT, RDPProxy, Rep, Reputation, URLFiltering, VideoOptimization, ForwardProxy, SSLInterception, AdaptiveTCP, CQA, CI, ContentInspection, Bot, APIGateway ]`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ]`,
				},
				resource.Attribute{
					Name:        "nextfactor",
					Description: `(Optional) On success invoke label. Applicable for advanced authentication policy binding.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance authentication policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemglobal_authenticationtacacspolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemglobal_authenticationtacacspolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemglobal_authenticationtatacspolicy_binding.tf_systemglobal_authenticationtatacspolicy_binding tf_tacacspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemglobal_authenticationtacacspolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A systemglobal_authenticationtacacspolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemglobal_authenticationtatacspolicy_binding.tf_systemglobal_authenticationtatacspolicy_binding tf_tacacspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemgroup",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemgroup resource is used to create user groups.


`,
			Keywords: []string{
				"system",
				"systemgroup",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "groupname",
					Description: `(Optional) Name for the group.`,
				},
				resource.Attribute{
					Name:        "promptstring",
					Description: `(Optional) String to display at the command-line prompt. Can consist of letters, numbers, hyphen (-), period (.), hash (#), space ( ), at (@), equal (=), colon (:), underscore (\_), and the following variables:`,
				},
				resource.Attribute{
					Name:        "timeout",
					Description: `(Optional) CLI session inactivity timeout, in seconds. If Restrictedtimeout argument of system parameter is enabled, Timeout can have values in the range [300-86400] seconds.If Restrictedtimeout argument of system parameter is disabled, Timeout can have values in the range [0, 10-100000000] seconds. Default value is 900 seconds.`,
				},
				resource.Attribute{
					Name:        "allowedmanagementinterface",
					Description: `(Optional) Allowed Management interfaces of the system users in the group. By default allowed from both API and CLI interfaces. If management interface for a group is set to API, then all users under this group will not allowed to access NS through CLI. GUI interface will come under API interface. Default value: NS_INTERFACE_ALL Possible values = CLI, API`,
				},
				resource.Attribute{
					Name:        "systemusers",
					Description: `(Optional) A set of user names to bind to this group.`,
				},
				resource.Attribute{
					Name:        "cmdpolicybinding",
					Description: `(Optional) A set of command policies to bing to this group. Attributes are detailed below In a command policy block the following attributes are allowed:`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) Name of the policy to bind.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Priority for the biding. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemgroup. It has the same value as the ` + "`" + `groupname` + "`" + ` attribute. ## Import A systemgroup can be imported using its groupname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemgroup.tf_systemgroup tf_systemgroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemgroup. It has the same value as the ` + "`" + `groupname` + "`" + ` attribute. ## Import A systemgroup can be imported using its groupname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemgroup.tf_systemgroup tf_systemgroup ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemgroup_nspartition_binding",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemgroup_nspartition_binding resource is used to create systemgroup_nspartition_binding.


`,
			Keywords: []string{
				"system",
				"systemgroup",
				"nspartition",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "partitionname",
					Description: `(Required) Name of the Partition to bind to the system group. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "groupname",
					Description: `(Required) Name of the system group. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemgroup_nspartition_binding. It has the same value as the ` + "`" + `groupname` + "`" + ` and ` + "`" + `partitionname` + "`" + ` attribute. ## Import A systemgroup_nspartition_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemgroup_nspartition_binding.tf_systemgroup_nspartition_binding tf_systemgroup,tf_nspartition ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemgroup_nspartition_binding. It has the same value as the ` + "`" + `groupname` + "`" + ` and ` + "`" + `partitionname` + "`" + ` attribute. ## Import A systemgroup_nspartition_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemgroup_nspartition_binding.tf_systemgroup_nspartition_binding tf_systemgroup,tf_nspartition ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemparameter",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemparameter resource is used to update systemparameter.


`,
			Keywords: []string{
				"system",
				"systemparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "basicauth",
					Description: `(Optional) Enable or disable basic authentication for Nitro API.`,
				},
				resource.Attribute{
					Name:        "cliloglevel",
					Description: `(Optional) Audit log level, which specifies the types of events to log for cli executed commands. Available values function as follows:`,
				},
				resource.Attribute{
					Name:        "doppler",
					Description: `(Optional) Enable or disable Doppler`,
				},
				resource.Attribute{
					Name:        "fipsusermode",
					Description: `(Optional) Use this option to set the FIPS mode for key user-land processes. When enabled, these user-land processes will operate in FIPS mode. In this mode, theses processes will use FIPS 140-2 Level-1 certified crypto algorithms. Default is disabled, wherein, these user-land processes will not operate in FIPS mode.`,
				},
				resource.Attribute{
					Name:        "forcepasswordchange",
					Description: `(Optional) Enable or disable force password change for nsroot user`,
				},
				resource.Attribute{
					Name:        "googleanalytics",
					Description: `(Optional) Enable or disable Google analytics`,
				},
				resource.Attribute{
					Name:        "localauth",
					Description: `(Optional) When enabled, local users can access Citrix ADC even when external authentication is configured. When disabled, local users are not allowed to access the Citrix ADC, Local users can access the Citrix ADC only when the configured external authentication servers are unavailable. This parameter is not applicable to SSH Key-based authentication`,
				},
				resource.Attribute{
					Name:        "minpasswordlen",
					Description: `(Optional) Minimum length of system user password. When strong password is enabled default minimum length is 4. User entered value can be greater than or equal to 4. Default mininum value is 1 when strong password is disabled. Maximum value is 127 in both cases.`,
				},
				resource.Attribute{
					Name:        "maxclient",
					Description: `(Optional) Maximum number of client connection allowed by the system. Minimum value = 20 Maximum value = 40`,
				},
				resource.Attribute{
					Name:        "natpcbforceflushlimit",
					Description: `(Optional) Flush the system if the number of Network Address Translation Protocol Control Blocks (NATPCBs) exceeds this value.`,
				},
				resource.Attribute{
					Name:        "natpcbrstontimeout",
					Description: `(Optional) Send a reset signal to client and server connections when their NATPCBs time out. Avoids the buildup of idle TCP connections on both the sides.`,
				},
				resource.Attribute{
					Name:        "promptstring",
					Description: `(Optional) String to display at the command-line prompt. Can consist of letters, numbers, hyphen (-), period (.), hash (#), space ( ), at (@), equal (=), colon (:), underscore (_), and the following variables:`,
				},
				resource.Attribute{
					Name:        "rbaonresponse",
					Description: `(Optional) Enable or disable Role-Based Authentication (RBA) on responses.`,
				},
				resource.Attribute{
					Name:        "reauthonauthparamchange",
					Description: `(Optional) Enable or disable External user reauthentication when authentication parameter changes`,
				},
				resource.Attribute{
					Name:        "removesensitivefiles",
					Description: `(Optional) Use this option to remove the sensitive files from the system like authorise keys, public keys etc. The commands which will remove sensitive files when this system paramter is enabled are rm cluster instance, rm cluster node, rm ha node, clear config full, join cluster and add cluster instance.`,
				},
				resource.Attribute{
					Name:        "restrictedtimeout",
					Description: `(Optional) Enable/Disable the restricted timeout behaviour. When enabled, timeout cannot be configured beyond admin configured timeout and also it will have the [minimum - maximum] range check. When disabled, timeout will have the old behaviour. By default the value is disabled`,
				},
				resource.Attribute{
					Name:        "strongpassword",
					Description: `(Optional) After enabling strong password (enableall / enablelocal - not included in exclude list), all the passwords / sensitive information must have - Atleast 1 Lower case character, Atleast 1 Upper case character, Atleast 1 numeric character, Atleast 1 special character ( ~, ` + "`" + `, !, @, #, $, %, ^, &,`,
				},
				resource.Attribute{
					Name:        "timeout",
					Description: `(Optional) CLI session inactivity timeout, in seconds. If Restrictedtimeout argument is enabled, Timeout can have values in the range [300-86400] seconds. If Restrictedtimeout argument is disabled, Timeout can have values in the range [0, 10-100000000] seconds. Default value is 900 seconds.`,
				},
				resource.Attribute{
					Name:        "totalauthtimeout",
					Description: `(Optional) Total time a request can take for authentication/authorization ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemparameter. It is a unique string prefixed with "tf-systemparameter-".`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemparameter. It is a unique string prefixed with "tf-systemparameter-".`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemuser",
			Category:         "System",
			ShortDescription: ``,
			Description: `

The systemuser resource is used to create users for the target ADC.


`,
			Keywords: []string{
				"system",
				"systemuser",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "username",
					Description: `(Optional) Name for a user.`,
				},
				resource.Attribute{
					Name:        "password",
					Description: `(Optional) Password for the system user. Can include any ASCII character.`,
				},
				resource.Attribute{
					Name:        "externalauth",
					Description: `(Optional) Whether to use external authentication servers for the system user authentication or not. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "promptstring",
					Description: `(Optional) String to display at the command-line prompt. Can consist of letters, numbers, hyphen (-), period (.), hash (#), space ( ), at (@), equal (=), colon (:), underscore (\_), and the following variables:`,
				},
				resource.Attribute{
					Name:        "timeout",
					Description: `(Optional) CLI session inactivity timeout, in seconds. If Restrictedtimeout argument of system parameter is enabled, Timeout can have values in the range [300-86400] seconds. If Restrictedtimeout argument of system parameter is disabled, Timeout can have values in the range [0, 10-100000000] seconds. Default value is 900 seconds.`,
				},
				resource.Attribute{
					Name:        "logging",
					Description: `(Optional) Users logging privilege. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "maxsession",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "hashedpassword",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "cmdpolicybinding",
					Description: `(Optional) A set of blocks binding systemcommandpolicies to the systemuser. See below for details. A ` + "`" + `cmdpolicybinding` + "`" + ` block can contain the following attributes`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Optional) The name of command policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) The priority of the policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemuser. It has the same value as the ` + "`" + `username` + "`" + ` attribute. ## Import A systemuser can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemuser.tf_user tf_user ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemuser. It has the same value as the ` + "`" + `username` + "`" + ` attribute. ## Import A systemuser can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemuser.tf_user tf_user ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_systemuser_nspartition_binding",
			Category:         "AAA",
			ShortDescription: ``,
			Description: `

The systemuser_nspartition_binding resource is used to create systemuser_nspartition_binding.


`,
			Keywords: []string{
				"aaa",
				"systemuser",
				"nspartition",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "partitionname",
					Description: `(Required) Name of the Partition to bind to the system user.`,
				},
				resource.Attribute{
					Name:        "username",
					Description: `(Required) Name of the system-user entry to which to bind the command policy. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemuser_nspartition_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `partitionname` + "`" + ` attributes separated by a comma. ## Import A systemuser_nspartition_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemuser_nspartition_binding.tf_systemuser_nspartition_binding george,tf_nspartition ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the systemuser_nspartition_binding. It is the concatenation of ` + "`" + `username` + "`" + ` and ` + "`" + `partitionname` + "`" + ` attributes separated by a comma. ## Import A systemuser_nspartition_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_systemuser_nspartition_binding.tf_systemuser_nspartition_binding george,tf_nspartition ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_tmformssoaction",
			Category:         "Traffic Management",
			ShortDescription: ``,
			Description: `

The tmformssoaciton resource is used to create tmformssoaciton.


`,
			Keywords: []string{
				"traffic",
				"management",
				"tmformssoaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new form-based single sign-on profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after an SSO action is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "actionurl",
					Description: `(Required) URL to which the completed form is submitted. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "userfield",
					Description: `(Required) Name of the form field in which the user types in the user ID. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "passwdfield",
					Description: `(Required) Name of the form field in which the user types in the password. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "ssosuccessrule",
					Description: `(Required) Expression, that checks to see if single sign-on is successful.`,
				},
				resource.Attribute{
					Name:        "namevaluepair",
					Description: `(Optional) Name-value pair attributes to send to the server in addition to sending the username and password. Value names are separated by an ampersand (&) (for example, name1=value1&name2=value2).`,
				},
				resource.Attribute{
					Name:        "responsesize",
					Description: `(Optional) Number of bytes, in the response, to parse for extracting the forms.`,
				},
				resource.Attribute{
					Name:        "nvtype",
					Description: `(Optional) Type of processing of the name-value pair. If you specify STATIC, the values configured by the administrator are used. For DYNAMIC, the response is parsed, and the form is extracted and then submitted. Possible values: [ STATIC, DYNAMIC ]`,
				},
				resource.Attribute{
					Name:        "submitmethod",
					Description: `(Optional) HTTP method used by the single sign-on form to send the logon credentials to the logon server. Applies only to STATIC name-value type. Possible values: [ GET, POST ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmformssoaciton. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tmformssoaciton can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmformssoaction.tf_tmformssoaction my_formsso_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmformssoaciton. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tmformssoaciton can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmformssoaction.tf_tmformssoaction my_formsso_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_tmglobal_auditnslogpolicy_binding",
			Category:         "Traffic Management",
			ShortDescription: ``,
			Description: `

The tmglobal_auditnslogpolicy_binding resource is used to create tmglobal_auditnslogpolicy_binding.


`,
			Keywords: []string{
				"traffic",
				"management",
				"tmglobal",
				"auditnslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) The priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance tmsession policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmglobal_auditnslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A tmglobal_auditnslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmglobal_auditnslogpolicy_binding.tf_tmglobal_auditnslogpolicy_binding tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmglobal_auditnslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A tmglobal_auditnslogpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmglobal_auditnslogpolicy_binding.tf_tmglobal_auditnslogpolicy_binding tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_tmglobal_auditsyslogpolicy_binding",
			Category:         "Traffic Management",
			ShortDescription: ``,
			Description: `

The tmglobal_auditsyslogpolicy_binding resource is used to create tmglobal_auditsyslogpolicy_binding.


`,
			Keywords: []string{
				"traffic",
				"management",
				"tmglobal",
				"auditsyslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) The priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance tmsession policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmglobal_auditsyslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A tmglobal_auditsyslogpolicy_bindingcan be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmglobal_auditsyslogpolicy_binding.tf_tmglobal_auditsyslogpolicy_binding tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmglobal_auditsyslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A tmglobal_auditsyslogpolicy_bindingcan be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmglobal_auditsyslogpolicy_binding.tf_tmglobal_auditsyslogpolicy_binding tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_tmglobal_tmtrafficpolicy_binding",
			Category:         "Traffic Management",
			ShortDescription: ``,
			Description: `

The tmglobal_tmtrafficpolicy_binding resource is used to create tmglobal_tmtrafficpolicy_binding.


`,
			Keywords: []string{
				"traffic",
				"management",
				"tmglobal",
				"tmtrafficpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) The priority of the policy.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound. Possible values: [ REQ_OVERRIDE, REQ_DEFAULT, RES_OVERRIDE, RES_DEFAULT ]`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) . Possible values: [ SYSTEM_GLOBAL, VPN_GLOBAL, RNAT_GLOBAL ]`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance tmsession policy. Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmglobal_tmtrafficpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A tmglobal_tmtrafficpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmglobal_tmtrafficpolicy_binding.tf_tmglobal_tmtrafficpolicy_binding my_tmtrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmglobal_tmtrafficpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A tmglobal_tmtrafficpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmglobal_tmtrafficpolicy_binding.tf_tmglobal_tmtrafficpolicy_binding my_tmtrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_tmsamlssoprofile",
			Category:         "Traffic Management",
			ShortDescription: ``,
			Description:      ``,
			Keywords: []string{
				"traffic",
				"management",
				"tmsamlssoprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new saml single sign-on profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after an SSO action is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "samlsigningcertname",
					Description: `(Optional) Name of the SSL certificate that is used to Sign Assertion. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "assertionconsumerserviceurl",
					Description: `(Optional) URL to which the assertion is to be sent. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "relaystaterule",
					Description: `(Optional) Expression to extract relaystate to be sent along with assertion. Evaluation of this expression should return TEXT content. This is typically a targ et url to which user is redirected after the recipient validates SAML token.`,
				},
				resource.Attribute{
					Name:        "sendpassword",
					Description: `(Optional) Option to send password in assertion. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "samlissuername",
					Description: `(Optional) The name to be used in requests sent from Citrix ADC to IdP to uniquely identify Citrix ADC. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "signaturealg",
					Description: `(Optional) Algorithm to be used to sign/verify SAML transactions. Possible values: [ RSA-SHA1, RSA-SHA256 ]`,
				},
				resource.Attribute{
					Name:        "digestmethod",
					Description: `(Optional) Algorithm to be used to compute/verify digest for SAML transactions. Possible values: [ SHA1, SHA256 ]`,
				},
				resource.Attribute{
					Name:        "audience",
					Description: `(Optional) Audience for which assertion sent by IdP is applicable. This is typically entity name or url that represents ServiceProvider.`,
				},
				resource.Attribute{
					Name:        "nameidformat",
					Description: `(Optional) Format of Name Identifier sent in Assertion. Possible values: [ Unspecified, emailAddress, X509SubjectName, WindowsDomainQualifiedName, kerberos, entity, persistent, transient ]`,
				},
				resource.Attribute{
					Name:        "nameidexpr",
					Description: `(Optional) Expression that will be evaluated to obtain NameIdentifier to be sent in assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute1",
					Description: `(Optional) Name of attribute1 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute1expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute1's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute1friendlyname",
					Description: `(Optional) User-Friendly Name of attribute1 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute1format",
					Description: `(Optional) Format of Attribute1 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute2",
					Description: `(Optional) Name of attribute2 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute2expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute2's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute2friendlyname",
					Description: `(Optional) User-Friendly Name of attribute2 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute2format",
					Description: `(Optional) Format of Attribute2 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute3",
					Description: `(Optional) Name of attribute3 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute3expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute3's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute3friendlyname",
					Description: `(Optional) User-Friendly Name of attribute3 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute3format",
					Description: `(Optional) Format of Attribute3 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute4",
					Description: `(Optional) Name of attribute4 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute4expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute4's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute4friendlyname",
					Description: `(Optional) User-Friendly Name of attribute4 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute4format",
					Description: `(Optional) Format of Attribute4 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute5",
					Description: `(Optional) Name of attribute5 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute5expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute5's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute5friendlyname",
					Description: `(Optional) User-Friendly Name of attribute5 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute5format",
					Description: `(Optional) Format of Attribute5 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute6",
					Description: `(Optional) Name of attribute6 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute6expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute6's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute6friendlyname",
					Description: `(Optional) User-Friendly Name of attribute6 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute6format",
					Description: `(Optional) Format of Attribute6 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute7",
					Description: `(Optional) Name of attribute7 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute7expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute7's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute7friendlyname",
					Description: `(Optional) User-Friendly Name of attribute7 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute7format",
					Description: `(Optional) Format of Attribute7 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute8",
					Description: `(Optional) Name of attribute8 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute8expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute8's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute8friendlyname",
					Description: `(Optional) User-Friendly Name of attribute8 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute8format",
					Description: `(Optional) Format of Attribute8 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute9",
					Description: `(Optional) Name of attribute9 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute9expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute9's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute9friendlyname",
					Description: `(Optional) User-Friendly Name of attribute9 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute9format",
					Description: `(Optional) Format of Attribute9 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute10",
					Description: `(Optional) Name of attribute10 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute10expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute10's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute10friendlyname",
					Description: `(Optional) User-Friendly Name of attribute10 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute10format",
					Description: `(Optional) Format of Attribute10 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute11",
					Description: `(Optional) Name of attribute11 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute11expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute11's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute11friendlyname",
					Description: `(Optional) User-Friendly Name of attribute11 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute11format",
					Description: `(Optional) Format of Attribute11 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute12",
					Description: `(Optional) Name of attribute12 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute12expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute12's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute12friendlyname",
					Description: `(Optional) User-Friendly Name of attribute12 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute12format",
					Description: `(Optional) Format of Attribute12 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute13",
					Description: `(Optional) Name of attribute13 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute13expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute13's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute13friendlyname",
					Description: `(Optional) User-Friendly Name of attribute13 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute13format",
					Description: `(Optional) Format of Attribute13 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute14",
					Description: `(Optional) Name of attribute14 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute14expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute14's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute14friendlyname",
					Description: `(Optional) User-Friendly Name of attribute14 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute14format",
					Description: `(Optional) Format of Attribute14 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute15",
					Description: `(Optional) Name of attribute15 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute15expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute15's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute15friendlyname",
					Description: `(Optional) User-Friendly Name of attribute15 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute15format",
					Description: `(Optional) Format of Attribute15 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "attribute16",
					Description: `(Optional) Name of attribute16 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute16expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute16's value to be sent in Assertion. Maximum length = 128`,
				},
				resource.Attribute{
					Name:        "attribute16friendlyname",
					Description: `(Optional) User-Friendly Name of attribute16 that needs to be sent in SAML Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute16format",
					Description: `(Optional) Format of Attribute16 to be sent in Assertion. Possible values: [ URI, Basic ]`,
				},
				resource.Attribute{
					Name:        "encryptassertion",
					Description: `(Optional) Option to encrypt assertion when Citrix ADC sends one. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "samlspcertname",
					Description: `(Optional) Name of the SSL certificate of peer/receving party using which Assertion is encrypted. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "encryptionalgorithm",
					Description: `(Optional) Algorithm to be used to encrypt SAML assertion. Possible values: [ DES3, AES128, AES192, AES256 ]`,
				},
				resource.Attribute{
					Name:        "skewtime",
					Description: `(Optional) This option specifies the number of minutes on either side of current time that the assertion would be valid. For example, if skewTime is 10, then assertion would be valid from (current time - 10) min to (current time + 10) min, ie 20min in all.`,
				},
				resource.Attribute{
					Name:        "signassertion",
					Description: `(Optional) Option to sign portions of assertion when Citrix ADC IDP sends one. Based on the user selection, either Assertion or Response or Both or none can be signed. Possible values: [ NONE, ASSERTION, RESPONSE, BOTH ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmsamlssoprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tmsamlssoprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmsamlssoprofile.tf_tmsamlssoprofile my_tmsamlssoprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmsamlssoprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tmsamlssoprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmsamlssoprofile.tf_tmsamlssoprofile my_tmsamlssoprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_tmsessionaction",
			Category:         "Traffic Management",
			ShortDescription: ``,
			Description: `

The tmsessionaction resource is used to create tmsessionaction.


`,
			Keywords: []string{
				"traffic",
				"management",
				"tmsessionaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the session action. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after a session action is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "sesstimeout",
					Description: `(Optional) Session timeout, in minutes. If there is no traffic during the timeout period, the user is disconnected and must reauthenticate to access intranet resources. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "defaultauthorizationaction",
					Description: `(Optional) Allow or deny access to content for which there is no specific authorization policy. Possible values: [ ALLOW, DENY ]`,
				},
				resource.Attribute{
					Name:        "sso",
					Description: `(Optional) Use single sign-on (SSO) to log users on to all web applications automatically after they authenticate, or pass users to the web application logon page to authenticate to each application individually. Note that this configuration does not honor the following authentication types for security reason. BASIC, DIGEST, and NTLM (without Negotiate NTLM2 Key or Negotiate Sign Flag). Use TM TrafficAction to configure SSO for these authentication types. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "ssocredential",
					Description: `(Optional) Use the primary or secondary authentication credentials for single sign-on (SSO). Possible values: [ PRIMARY, SECONDARY ]`,
				},
				resource.Attribute{
					Name:        "ssodomain",
					Description: `(Optional) Domain to use for single sign-on (SSO). Minimum length = 1 Maximum length = 32`,
				},
				resource.Attribute{
					Name:        "httponlycookie",
					Description: `(Optional) Allow only an HTTP session cookie, in which case the cookie cannot be accessed by scripts. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "kcdaccount",
					Description: `(Optional) Kerberos constrained delegation account name. Minimum length = 1 Maximum length = 32`,
				},
				resource.Attribute{
					Name:        "persistentcookie",
					Description: `(Optional) Enable or disable persistent SSO cookies for the traffic management (TM) session. A persistent cookie remains on the user device and is sent with each HTTP request. The cookie becomes stale if the session ends. This setting is overwritten if a traffic action sets persistent cookie to OFF. Note: If persistent cookie is enabled, make sure you set the persistent cookie validity. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "persistentcookievalidity",
					Description: `(Optional) Integer specifying the number of minutes for which the persistent cookie remains valid. Can be set only if the persistent cookie setting is enabled. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "homepage",
					Description: `(Optional) Web address of the home page that a user is displayed when authentication vserver is bookmarked and used to login. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmsessionaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tmsessionaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmsessionaction.tf_tmsessionaction my_tmsession_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmsessionaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tmsessionaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmsessionaction.tf_tmsessionaction my_tmsession_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_tmsessionparameter",
			Category:         "Traffic Management",
			ShortDescription: ``,
			Description: `

The tmsessionparameter resource is used to create tmsessionparameter.


`,
			Keywords: []string{
				"traffic",
				"management",
				"tmsessionparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "sesstimeout",
					Description: `(Optional) Session timeout, in minutes. If there is no traffic during the timeout period, the user is disconnected and must reauthenticate to access the intranet resources. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "defaultauthorizationaction",
					Description: `(Optional) Allow or deny access to content for which there is no specific authorization policy. Possible values: [ ALLOW, DENY ]`,
				},
				resource.Attribute{
					Name:        "sso",
					Description: `(Optional) Log users on to all web applications automatically after they authenticate, or pass users to the web application logon page to authenticate for each application. Note that this configuration does not honor the following authentication types for security reason. BASIC, DIGEST, and NTLM (without Negotiate NTLM2 Key or Negotiate Sign Flag). Use TM TrafficAction to configure SSO for these authentication types. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "ssocredential",
					Description: `(Optional) Use primary or secondary authentication credentials for single sign-on. Possible values: [ PRIMARY, SECONDARY ]`,
				},
				resource.Attribute{
					Name:        "ssodomain",
					Description: `(Optional) Domain to use for single sign-on. Minimum length = 1 Maximum length = 32`,
				},
				resource.Attribute{
					Name:        "kcdaccount",
					Description: `(Optional) Kerberos constrained delegation account name. Minimum length = 1 Maximum length = 32`,
				},
				resource.Attribute{
					Name:        "httponlycookie",
					Description: `(Optional) Allow only an HTTP session cookie, in which case the cookie cannot be accessed by scripts. Possible values: [ YES, NO ]`,
				},
				resource.Attribute{
					Name:        "persistentcookie",
					Description: `(Optional) Use persistent SSO cookies for the traffic session. A persistent cookie remains on the user device and is sent with each HTTP request. The cookie becomes stale if the session ends. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "persistentcookievalidity",
					Description: `(Optional) Integer specifying the number of minutes for which the persistent cookie remains valid. Can be set only if the persistence cookie setting is enabled. Minimum value = 1`,
				},
				resource.Attribute{
					Name:        "homepage",
					Description: `(Optional) Web address of the home page that a user is displayed when authentication vserver is bookmarked and used to login. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmsessionparameter. It is a unique string prefixed with ` + "`" + `tf-tmsessionparameter-` + "`" + ` attribute.`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmsessionparameter. It is a unique string prefixed with ` + "`" + `tf-tmsessionparameter-` + "`" + ` attribute.`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_tmsessionpolicy",
			Category:         "Traffic Management",
			ShortDescription: ``,
			Description: `

The tmsessionpolicy resource is used to create tmsessionpolicy.


`,
			Keywords: []string{
				"traffic",
				"management",
				"tmsessionpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the session policy. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Cannot be changed after a session policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policy" or 'my policy'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression, against which traffic is evaluated. Both classic and advance expressions are supported in default partition but only advance expressions in non-default partition. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Action to be applied to connections that match this policy. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmsessionpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tmsessionpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmsessionpolicy.tf_tmsessionpolicy my_tmsession_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmsessionpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tmsessionpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmsessionpolicy.tf_tmsessionpolicy my_tmsession_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_tmtrafficaction",
			Category:         "Traffic Management",
			ShortDescription: ``,
			Description: `

The tmtrafficaction resource is used to create tmtrafficaction.


`,
			Keywords: []string{
				"traffic",
				"management",
				"tmtrafficaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the traffic action. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after a traffic action is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "apptimeout",
					Description: `(Optional) Time interval, in minutes, of user inactivity after which the connection is closed. Minimum value = 1 Maximum value = 715827`,
				},
				resource.Attribute{
					Name:        "sso",
					Description: `(Optional) Use single sign-on for the resource that the user is accessing now. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "formssoaction",
					Description: `(Optional) Name of the configured form-based single sign-on profile.`,
				},
				resource.Attribute{
					Name:        "persistentcookie",
					Description: `(Optional) Use persistent cookies for the traffic session. A persistent cookie remains on the user device and is sent with each HTTP request. The cookie becomes stale if the session ends. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "initiatelogout",
					Description: `(Optional) Initiate logout for the traffic management (TM) session if the policy evaluates to true. The session is then terminated after two minutes. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "kcdaccount",
					Description: `(Optional) Kerberos constrained delegation account name. Minimum length = 1 Maximum length = 32`,
				},
				resource.Attribute{
					Name:        "samlssoprofile",
					Description: `(Optional) Profile to be used for doing SAML SSO to remote relying party. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "forcedtimeout",
					Description: `(Optional) Setting to start, stop or reset TM session force timer. Possible values: [ START, STOP, RESET ]`,
				},
				resource.Attribute{
					Name:        "forcedtimeoutval",
					Description: `(Optional) Time interval, in minutes, for which force timer should be set.`,
				},
				resource.Attribute{
					Name:        "userexpression",
					Description: `(Optional) expression that will be evaluated to obtain username for SingleSignOn. Maximum length = 256`,
				},
				resource.Attribute{
					Name:        "passwdexpression",
					Description: `(Optional) expression that will be evaluated to obtain password for SingleSignOn. Maximum length = 256 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmtrafficaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tmtrafficaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmtrafficaction.tf_tmtrafficaction my_traffic_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmtrafficaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tmtrafficaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmtrafficaction.tf_tmtrafficaction my_traffic_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_tmtrafficpolicy",
			Category:         "Traffic Management",
			ShortDescription: ``,
			Description: `

The tmtrafficpolicy resource is used to create tmtrafficpolicy.


`,
			Keywords: []string{
				"traffic",
				"management",
				"tmtrafficpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the traffic policy. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policy" or 'my policy'). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Name of the Citrix ADC named expression, or an expression, that the policy uses to determine whether to apply certain action on the current traffic.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Name of the action to apply to requests or connections that match this policy. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmtrafficpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tmtrafficpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmtrafficpolicy.tf_tmtrafficpolicy my_tmtraffic_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tmtrafficpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tmtrafficpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tmtrafficpolicy.tf_tmtrafficpolicy my_tmtraffic_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_transformaction",
			Category:         "Transform",
			ShortDescription: ``,
			Description: `

The transformaction resource is used to create transform actions.


`,
			Keywords: []string{
				"transform",
				"transformaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the URL transformation action. Must begin with a letter, number, or the underscore character (\_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the URL Transformation action is added.`,
				},
				resource.Attribute{
					Name:        "profilename",
					Description: `(Optional) Name of the URL Transformation profile with which to associate this action.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Positive integer specifying the priority of the action within the profile. A lower number specifies a higher priority. Must be unique within the list of actions bound to the profile. Policies are evaluated in the order of their priority numbers, and the first policy that matches is applied.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Enable or disable this action. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "requrlfrom",
					Description: `(Optional) PCRE-format regular expression that describes the request URL pattern to be transformed.`,
				},
				resource.Attribute{
					Name:        "requrlinto",
					Description: `(Optional) PCRE-format regular expression that describes the transformation to be performed on URLs that match the reqUrlFrom pattern.`,
				},
				resource.Attribute{
					Name:        "resurlfrom",
					Description: `(Optional) PCRE-format regular expression that describes the response URL pattern to be transformed.`,
				},
				resource.Attribute{
					Name:        "resurlinto",
					Description: `(Optional) PCRE-format regular expression that describes the transformation to be performed on URLs that match the resUrlFrom pattern.`,
				},
				resource.Attribute{
					Name:        "cookiedomainfrom",
					Description: `(Optional) Pattern that matches the domain to be transformed in Set-Cookie headers.`,
				},
				resource.Attribute{
					Name:        "cookiedomaininto",
					Description: `(Optional) PCRE-format regular expression that describes the transformation to be performed on cookie domains that match the cookieDomainFrom pattern. NOTE: The cookie domain to be transformed is extracted from the request.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this URL Transformation action. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the transformaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A transformaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_transformaction.tf_trans_action tf_trans_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the transformaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A transformaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_transformaction.tf_trans_action tf_trans_action ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_transformglobal_transformpolicy_binding",
			Category:         "Transform",
			ShortDescription: ``,
			Description: `

Thetransformglobal_transformpolicy_binding resource is used to create Transform global transform policy binding.


`,
			Keywords: []string{
				"transform",
				"transformglobal",
				"transformpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the dns policy.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy with which it is bound. Maximum allowed priority should be less than 65535`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) 0`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression or other value specifying the next policy to be evaluated if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) Invoke flag.`,
				},
				resource.Attribute{
					Name:        "labelname",
					Description: `(Optional) Name of the label to invoke if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of policy label invocation.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of global bind point for which to show bound policies. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the transformglobal_transformpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A transformglobal_transformpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_transformglobal_transformpolicy_binding.transformglobal_transformpolicy_binding tf_trans_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the transformglobal_transformpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A transformglobal_transformpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_transformglobal_transformpolicy_binding.transformglobal_transformpolicy_binding tf_trans_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_transformpolicy",
			Category:         "Transform",
			ShortDescription: ``,
			Description: `

The transformpolicy resource is used to create transform policies


`,
			Keywords: []string{
				"transform",
				"transformpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the URL Transformation policy. Must begin with a letter, number, or the underscore character (\_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Can be changed after the URL Transformation policy is added.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Expression, or name of a named expression, against which to evaluate traffic. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "profilename",
					Description: `(Optional) Name of the URL Transformation profile to use to transform requests and responses that match the policy.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this URL Transformation policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Log server to use to log connections that match this policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the transformpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A transformpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_transformpolicy.tf_trans_policy tf_trans_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the transformpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A transformpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_transformpolicy.tf_trans_policy tf_trans_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_transformpolicylabel",
			Category:         "Transform",
			ShortDescription: ``,
			Description: `

The transformpolicylabel resource is used to create Transform policylabel.


`,
			Keywords: []string{
				"transform",
				"transformpolicylabel",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name for the policy label. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Can be changed after the URL Transformation policy label is added. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, my transform policylabel or my transform policylabel).`,
				},
				resource.Attribute{
					Name:        "policylabeltype",
					Description: `(Required) Types of transformations allowed by the policies bound to the label. For URL transformation, always http_req (HTTP Request). ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the transformpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A transformpolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_transformpolicylabel.transformpolicylabel label_1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the transformpolicylabel. It has the same value as the ` + "`" + `labelname` + "`" + ` attribute. ## Import A transformpolicylabel can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_transformpolicylabel.transformpolicylabel label_1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_transformpolicylabel_transformpolicy_binding",
			Category:         "Transform",
			ShortDescription: ``,
			Description: `

The transformpolicylabel_transformpolicy_binding resource is used to create Transform policylabel policy binding.


`,
			Keywords: []string{
				"transform",
				"transformpolicylabel",
				"transformpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "labelname",
					Description: `(Required) Name of the URL Transformation policy label to which to bind the policy.`,
				},
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Name of the URL Transformation policy to bind to the policy label.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Specifies the priority of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "invoke",
					Description: `(Optional) If the current policy evaluates to TRUE, terminate evaluation of policies bound to the current policy label, and then forward the request to the specified virtual server or evaluate the specified policy label.`,
				},
				resource.Attribute{
					Name:        "invoke_labelname",
					Description: `(Optional) Name of the policy label.`,
				},
				resource.Attribute{
					Name:        "labeltype",
					Description: `(Optional) Type of invocation. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the transformpolicylabel_transformpolicy_binding. It has the same value as the ` + "`" + `labelname,policyname` + "`" + ` attribute. ## Import A transformpolicylabel_transformpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_transformpolicylabel_transformpolicy_binding.transformpolicylabel_transformpolicy_binding label_1,tf_trans_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the transformpolicylabel_transformpolicy_binding. It has the same value as the ` + "`" + `labelname,policyname` + "`" + ` attribute. ## Import A transformpolicylabel_transformpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_transformpolicylabel_transformpolicy_binding.transformpolicylabel_transformpolicy_binding label_1,tf_trans_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_transformprofile",
			Category:         "Transform",
			ShortDescription: ``,
			Description: `

The transformprofile resource is used to create transform profiles.


`,
			Keywords: []string{
				"transform",
				"transformprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Optional) Name for the URL transformation profile. Must begin with a letter, number, or the underscore character (\_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Cannot be changed after the URL transformation profile is added.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Type of transformation. Always URL for URL Transformation profiles. Possible values: [ URL ]`,
				},
				resource.Attribute{
					Name:        "onlytransformabsurlinbody",
					Description: `(Optional) In the HTTP body, transform only absolute URLs. Relative URLs are ignored. Possible values: [ on, off ]`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this URL Transformation profile. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the transformprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A transformprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_transformprofile.tf_trans_profile tf_trans_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the transformprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A transformprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_transformprofile.tf_trans_profile tf_trans_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_tunnelglobal_tunneltrafficpolicy_binding",
			Category:         "Tunnel",
			ShortDescription: ``,
			Description: `

The tunnelglobal_tunneltrafficpolicy_binding resource is used to create tunnelglobal_tunneltrafficpolicy_binding.


`,
			Keywords: []string{
				"tunnel",
				"tunnelglobal",
				"tunneltrafficpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) Policy name.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Required) Priority.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) Bind point to which the policy is bound. Possible values: [REQ_OVERRIDE, REQ_DEFAULT, RES_OVERRIDE, RES_DEFAULT]`,
				},
				resource.Attribute{
					Name:        "feature",
					Description: `(Optional) The feature to be checked while applying this config`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Expression specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Current state of the binding. If the binding is enabled, the policy is active. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tunnelglobal_tunneltrafficpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tunnelglobal_tunneltrafficpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tunnelglobal_tunneltrafficpolicy_binding.tf_tunnelglobal_tunneltrafficpolicy_binding my_tunneltrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tunnelglobal_tunneltrafficpolicy_binding. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tunnelglobal_tunneltrafficpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tunnelglobal_tunneltrafficpolicy_binding.tf_tunnelglobal_tunneltrafficpolicy_binding my_tunneltrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_tunneltrafficpolicy",
			Category:         "Tunnel",
			ShortDescription: ``,
			Description: `

The tunneltrafficpolicy resource is used to create tunneltrafficpolicy.


`,
			Keywords: []string{
				"tunnel",
				"tunneltrafficpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the tunnel traffic policy. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policy" or 'my policy)'.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression, against which traffic is evaluated. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Name of the built-in compression action to associate with the policy.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of the messagelog action to use for requests that match this policy. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tunneltrafficpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tunneltrafficpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tunneltrafficpolicy.tf_tunneltrafficpolicy my_tunneltrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the tunneltrafficpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A tunneltrafficpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_tunneltrafficpolicy.tf_tunneltrafficpolicy my_tunneltrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_userprotocol",
			Category:         "User",
			ShortDescription: ``,
			Description: `

The userprotocol resource is used to create userprotocol.


`,
			Keywords: []string{
				"user",
				"userprotocol",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Unique name for the user protocol. Not case sensitive. Must begin with an ASCII letter or underscore (_) character, and must consist only of ASCII alphanumeric or underscore characters. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "transport",
					Description: `(Required) Transport layer's protocol. Possible values: [ TCP, SSL ]`,
				},
				resource.Attribute{
					Name:        "extension",
					Description: `(Required) Name of the extension to add parsing and runtime handling of the protocol packets.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments associated with the protocol. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the userprotocol. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A userprotocol can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_userprotocol.tf_userprotocol my_userprotocol ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the userprotocol. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A userprotocol can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_userprotocol.tf_userprotocol my_userprotocol ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_uservserver",
			Category:         "User",
			ShortDescription: ``,
			Description: `

The uservserver resource is used to create uservserver.


`,
			Keywords: []string{
				"user",
				"uservserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the virtual server. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. CLI Users: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vserver" or 'my vserver'). . Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "userprotocol",
					Description: `(Required) User protocol uesd by the service.`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) IPv4 or IPv6 address to assign to the virtual server.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Required) Port number for the virtual server. Range 1 - 65535`,
				},
				resource.Attribute{
					Name:        "defaultlb",
					Description: `(Optional) Name of the default Load Balancing virtual server used for load balancing of services. The protocol type of default Load Balancing virtual server should be a user type.`,
				},
				resource.Attribute{
					Name:        "Params",
					Description: `(Optional) Any comments associated with the protocol.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments that you might want to associate with the virtual server.`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) Initial state of the user vserver. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the uservserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A uservserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_uservserver.tf_uservserver my_user_vserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the uservserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A uservserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_uservserver.tf_uservserver my_user_vserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_videooptimizationdetectionaction",
			Category:         "VideoOptimization",
			ShortDescription: ``,
			Description: `

The videooptimizationdetectionaction resource is used to create videooptimization detectionaction resource.


`,
			Keywords: []string{
				"videooptimization",
				"videooptimizationdetectionaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the video optimization detection action. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Required) Type of video optimization action. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Comment. Any type of information about this video optimization detection action.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the videooptimization detection action. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the videooptimizationdetectionaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A videooptimizationdetectionaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_videooptimizationdetectionaction.tf_detectionaction tf_videooptimizationdetectionaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the videooptimizationdetectionaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A videooptimizationdetectionaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_videooptimizationdetectionaction.tf_detectionaction tf_videooptimizationdetectionaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_videooptimizationdetectionpolicy",
			Category:         "VideoOptimization",
			ShortDescription: ``,
			Description: `

The videooptimizationdetectionpolicy resource is used to create videooptimization detectionpolicy resource.


`,
			Keywords: []string{
				"videooptimization",
				"videooptimizationdetectionpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the videooptimization detection policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at (@), equals (=), colon (:), and underscore characters.Can be modified, removed or renamed.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression that determines which request or response match the video optimization detection policy. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Name of the videooptimization detection action to perform if the request matches this videooptimization detection policy. Built-in actions should be used. These are:`,
				},
				resource.Attribute{
					Name:        "undefaction",
					Description: `(Optional) Action to perform if the result of policy evaluation is undefined (UNDEF). An UNDEF event indicates an internal error condition. Only the above built-in actions can be used.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any type of information about this videooptimization detection policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of the messagelog action to use for requests that match this policy.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the videooptimization detection policy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the videooptimizationdetectionpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A videooptimizationdetectionpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_videooptimizationdetectionpolicy.tf_detectionpolicy tf_videooptimizationdetectionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the videooptimizationdetectionpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A videooptimizationdetectionpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_videooptimizationdetectionpolicy.tf_detectionpolicy tf_videooptimizationdetectionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vlan",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The vlan resource is used to create vlans.


`,
			Keywords: []string{
				"network",
				"vlan",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vlanid",
					Description: `(Requiredc) A positive integer that uniquely identifies a VLAN.`,
				},
				resource.Attribute{
					Name:        "aliasname",
					Description: `(Optional) A name for the VLAN. Must begin with a letter, a number, or the underscore symbol, and can consist of from 1 to 31 letters, numbers, and the hyphen (-), period (.) pound (#), space ( ), at sign (@), equals (=), colon (:), and underscore (\_) characters. You should choose a name that helps identify the VLAN. However, you cannot perform any VLAN operation by specifying this name instead of the VLAN ID.`,
				},
				resource.Attribute{
					Name:        "dynamicrouting",
					Description: `(Optional) Enable dynamic routing on this VLAN. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "ipv6dynamicrouting",
					Description: `(Optional) Enable all IPv6 dynamic routing protocols on this VLAN. Note: For the ENABLED setting to work, you must configure IPv6 dynamic routing protocols from the VTYSH command line. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "mtu",
					Description: `(Optional) Specifies the maximum transmission unit (MTU), in bytes. The MTU is the largest packet size, excluding 14 bytes of ethernet header and 4 bytes of crc, that can be transmitted and received over this VLAN.`,
				},
				resource.Attribute{
					Name:        "sharing",
					Description: `(Optional) If sharing is enabled, then this vlan can be shared across multiple partitions by binding it to all those partitions. If sharing is disabled, then this vlan can be bound to only one of the partitions. Possible values: [ ENABLED, DISABLED ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vlan. It has the same value as the ` + "`" + `vlanid` + "`" + ` attribute. ## Import A can be imported using its ` + "`" + `vlanid` + "`" + `, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vlan.tf_vlan 40 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vlan. It has the same value as the ` + "`" + `vlanid` + "`" + ` attribute. ## Import A can be imported using its ` + "`" + `vlanid` + "`" + `, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vlan.tf_vlan 40 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vlan_channel_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The vlan_channel_binding resource is used to create vlan_channel_binding.


`,
			Keywords: []string{
				"network",
				"vlan",
				"channel",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ifnum",
					Description: `(Required) The interface to be bound to the VLAN, specified in slot/port notation (for example, 1/3). Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "vlanid",
					Description: `(Required) Specifies the virtual LAN ID. Minimum value = 1 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "tagged",
					Description: `(Optional) Make the interface an 802.1q tagged interface. Packets sent on this interface on this VLAN have an additional 4-byte 802.1q tag, which identifies the VLAN. To use 802.1q tagging, you must also configure the switch connected to the appliance's interfaces.`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for this vlan. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vlan_channel_binding. It has the same value as the ` + "`" + `vlanid` + "`" + ` and ` + "`" + `ifnum` + "`" + ` attributes separated by a comma. ## Import A vlan_channel_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vlan_channel_binding.tf_vlan_channel_binding 2,LA/2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vlan_channel_binding. It has the same value as the ` + "`" + `vlanid` + "`" + ` and ` + "`" + `ifnum` + "`" + ` attributes separated by a comma. ## Import A vlan_channel_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vlan_channel_binding.tf_vlan_channel_binding 2,LA/2 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vlan_interface_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `\_interface\_binding

The vlan\_interface\_binding resource is used to bind a vlan to an interface.


`,
			Keywords: []string{
				"network",
				"vlan",
				"interface",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ifnum",
					Description: `(Required) The interface to be bound to the VLAN, specified in slot/port notation (for example, 1/3).`,
				},
				resource.Attribute{
					Name:        "tagged",
					Description: `(Optional) Make the interface an 802.1q tagged interface. Packets sent on this interface on this VLAN have an additional 4-byte 802.1q tag, which identifies the VLAN. To use 802.1q tagging, you must also configure the switch connected to the appliance's interfaces.`,
				},
				resource.Attribute{
					Name:        "vlanid",
					Description: `(Required) Specifies the virtual LAN ID.`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for this vlan. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vlan\_interface\_binding. It is the concatenation of the vlanid and ifnum attributes separated by a comma. ## Import A vlan\_interface\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vlan_interface_binding.tf_bind 40,1/1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vlan\_interface\_binding. It is the concatenation of the vlanid and ifnum attributes separated by a comma. ## Import A vlan\_interface\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vlan_interface_binding.tf_bind 40,1/1 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vlan_nsip6_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The vlan_nsip6_binding resource is used to create vlan_nsip6_binding.


`,
			Keywords: []string{
				"network",
				"vlan",
				"nsip6",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vlanid",
					Description: `(Required) Specifies the virtual LAN ID. Minimum value = 1 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) The IP address assigned to the VLAN.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0. Minimum value = 0 Maximum value = 4094`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for this vlan. Minimum length = 1`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) Subnet mask for the network address defined for this VLAN. Minimum length = 1 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vlan_nsip6_binding. It has the same value as the ` + "`" + `vlanid` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by a comma. ## Import A vlan_nsip6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vlan_nsip6_binding.tf_vlan_nsip6_binding 2,2001::a/96 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vlan_nsip6_binding. It has the same value as the ` + "`" + `vlanid` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by a comma. ## Import A vlan_nsip6_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vlan_nsip6_binding.tf_vlan_nsip6_binding 2,2001::a/96 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vlan_nsip_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `\_nsip\_binding

The vlan\_nsip\_binding resource is used to bind vlan to ipv4 nsip address.


`,
			Keywords: []string{
				"network",
				"vlan",
				"nsip",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) The IP address assigned to the VLAN.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) Subnet mask for the network address defined for this VLAN.`,
				},
				resource.Attribute{
					Name:        "td",
					Description: `(Optional) Integer value that uniquely identifies the traffic domain in which you want to configure the entity. If you do not specify an ID, the entity becomes part of the default traffic domain, which has an ID of 0.`,
				},
				resource.Attribute{
					Name:        "ownergroup",
					Description: `(Optional) The owner node group in a Cluster for this vlan.`,
				},
				resource.Attribute{
					Name:        "vlanid",
					Description: `(Required) Specifies the virtual LAN ID. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vlan\_nsip\_binding. It is the concatenation of the ` + "`" + `vlanid` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by a comma. ## Import A vlan\_nsip\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vlan_nsip_binding.tf_bind 40,10.222.74.146 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vlan\_nsip\_binding. It is the concatenation of the ` + "`" + `vlanid` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes separated by a comma. ## Import A vlan\_nsip\_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vlan_nsip_binding.tf_bind 40,10.222.74.146 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnalwaysonprofile",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnalwaysonprofile resource is used to ensure that users are always connected to the enterprise network.


`,
			Keywords: []string{
				"vpn",
				"vpnalwaysonprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) name of AlwaysON profile.`,
				},
				resource.Attribute{
					Name:        "networkaccessonvpnfailure",
					Description: `(Optional) Option to block network traffic when tunnel is not established(and the config requires that tunnel be established). When set to onlyToGateway, the network traffic to and from the client (except Gateway IP) is blocked. When set to fullAccess, the network traffic is not blocked. Possible values: [ onlyToGateway, fullAccess ]`,
				},
				resource.Attribute{
					Name:        "clientcontrol",
					Description: `(Optional) Allow/Deny user to log off and connect to another Gateway. Possible values: [ ALLOW, DENY ]`,
				},
				resource.Attribute{
					Name:        "locationbasedvpn",
					Description: `(Optional) Option to decide if tunnel should be established when in enterprise network. When locationBasedVPN is remote, client tries to detect if it is located in enterprise network or not and establishes the tunnel if not in enterprise network. Dns suffixes configured using -add dns suffix- are used to decide if the client is in the enterprise network or not. If the resolution of the DNS suffix results in private IP, client is said to be in enterprise network. When set to EveryWhere, the client skips the check to detect if it is on the enterprise network and tries to establish the tunnel. Possible values: [ Remote, Everywhere ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnalwaysonprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnalwaysonprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnalwaysonprofile.tf_vpnalwaysonprofile tf_vpnalwaysonprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnalwaysonprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnalwaysonprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnalwaysonprofile.tf_vpnalwaysonprofile tf_vpnalwaysonprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnclientlessaccesspolicy",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnclientlessaccesspolicy resource, when configured for a resource on the Citrix ADC appliance, allows end-users to access the resource without using the Citrix Gateway client software.


`,
			Keywords: []string{
				"vpn",
				"vpnclientlessaccesspolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the new clientless access policy.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Optional) Expression, or name of a named expression, specifying the traffic that matches the policy. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "profilename",
					Description: `(Optional) Name of the profile to invoke for the clientless access. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnclientlessaccesspolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnclientlessaccesspolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnclientlessaccesspolicy.tf_vpnclientlessaccesspolicy tf_vpnclientlessaccesspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnclientlessaccesspolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnclientlessaccesspolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnclientlessaccesspolicy.tf_vpnclientlessaccesspolicy tf_vpnclientlessaccesspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnclientlessaccessprofile",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnclientlessaccessprofile resource is used to ads a collection of settings that allows clientless access to a given application..


`,
			Keywords: []string{
				"vpn",
				"vpnclientlessaccessprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "profilename",
					Description: `(Required) Name for the Citrix Gateway clientless access profile. Must begin with an ASCII alphabetic or underscore (_) character, and must consist only of ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my profile" or 'my profile').`,
				},
				resource.Attribute{
					Name:        "urlrewritepolicylabel",
					Description: `(Optional) Name of the configured URL rewrite policy label. If you do not specify a policy label name, then URLs are not rewritten.`,
				},
				resource.Attribute{
					Name:        "javascriptrewritepolicylabel",
					Description: `(Optional) Name of the configured JavaScript rewrite policy label. If you do not specify a policy label name, then JAVA scripts are not rewritten.`,
				},
				resource.Attribute{
					Name:        "reqhdrrewritepolicylabel",
					Description: `(Optional) Name of the configured Request rewrite policy label. If you do not specify a policy label name, then requests are not rewritten.`,
				},
				resource.Attribute{
					Name:        "reshdrrewritepolicylabel",
					Description: `(Optional) Name of the configured Response rewrite policy label.`,
				},
				resource.Attribute{
					Name:        "regexforfindingurlinjavascript",
					Description: `(Optional) Name of the pattern set that contains the regular expressions, which match the URL in Java script.`,
				},
				resource.Attribute{
					Name:        "regexforfindingurlincss",
					Description: `(Optional) Name of the pattern set that contains the regular expressions, which match the URL in the CSS.`,
				},
				resource.Attribute{
					Name:        "regexforfindingurlinxcomponent",
					Description: `(Optional) Name of the pattern set that contains the regular expressions, which match the URL in X Component.`,
				},
				resource.Attribute{
					Name:        "regexforfindingurlinxml",
					Description: `(Optional) Name of the pattern set that contains the regular expressions, which match the URL in XML.`,
				},
				resource.Attribute{
					Name:        "regexforfindingcustomurls",
					Description: `(Optional) Name of the pattern set that contains the regular expressions, which match the URLs in the custom content type other than HTML, CSS, XML, XCOMP, and JavaScript. The custom content type should be included in the patset ns_cvpn_custom_content_types.`,
				},
				resource.Attribute{
					Name:        "clientconsumedcookies",
					Description: `(Optional) Specify the name of the pattern set containing the names of the cookies, which are allowed between the client and the server. If a pattern set is not specified, Citrix Gateway does not allow any cookies between the client and the server. A cookie that is not specified in the pattern set is handled by Citrix Gateway on behalf of the client.`,
				},
				resource.Attribute{
					Name:        "requirepersistentcookie",
					Description: `(Optional) Specify whether a persistent session cookie is set and accepted for clientless access. If this parameter is set to ON, COM objects, such as MSOffice, which are invoked by the browser can access the files using clientless access. Use caution because the persistent cookie is stored on the disk. Possible values: [ on, off ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnclientlessaccessprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnclientlessaccessprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnclientlessaccessprofile.tf_vpnclientlessaccessprofile tf_vpnclientlessaccessprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnclientlessaccessprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnclientlessaccessprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnclientlessaccessprofile.tf_vpnclientlessaccessprofile tf_vpnclientlessaccessprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpneula",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpneula resource is used to create a new eula entity.


`,
			Keywords: []string{
				"vpn",
				"vpneula",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the eula. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpneula. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpneula can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpneula.tf_vpneula tf_vpneula ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpneula. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpneula can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpneula.tf_vpneula tf_vpneula ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnformssoaction",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnformssoaction resource is used to create a form-based single sign-on profile.


`,
			Keywords: []string{
				"vpn",
				"vpnformssoaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the form based single sign-on profile.`,
				},
				resource.Attribute{
					Name:        "actionurl",
					Description: `(Required) Root-relative URL to which the completed form is submitted.`,
				},
				resource.Attribute{
					Name:        "userfield",
					Description: `(Required) Name of the form field in which the user types in the user ID.`,
				},
				resource.Attribute{
					Name:        "passwdfield",
					Description: `(Required) Name of the form field in which the user types in the password.`,
				},
				resource.Attribute{
					Name:        "ssosuccessrule",
					Description: `(Required) Expression that defines the criteria for SSO success. Expression such as checking for cookie in the response is a common example.`,
				},
				resource.Attribute{
					Name:        "namevaluepair",
					Description: `(Optional) Other name-value pair attributes to send to the server, in addition to sending the user name and password. Value names are separated by an ampersand (&), such as in name1=value1&name2=value2.`,
				},
				resource.Attribute{
					Name:        "responsesize",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "nvtype",
					Description: `(Optional) How to process the name-value pair. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "submitmethod",
					Description: `(Optional) HTTP method (GET or POST) used by the single sign-on form to send the logon credentials to the logon server. Possible values: [ GET, POST ] ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnformssoaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnformssoaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnformssoaction.tf_vpnformssoaction tf_vpnformssoaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnformssoaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnformssoaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnformssoaction.tf_vpnformssoaction tf_vpnformssoaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_appcontroller_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_appcontroller_binding resource is used to bind an App Controller server to the global configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"appcontroller",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "appcontroller",
					Description: `(Optional) Configured App Controller server.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_appcontroller_binding. It has the same value as the ` + "`" + `appcontroller` + "`" + ` attribute. ## Import A vpnglobal_appcontroller_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_appcontroller_binding.tf_vpnglobal_appcontroller_binding http://www.citrix.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_appcontroller_binding. It has the same value as the ` + "`" + `appcontroller` + "`" + ` attribute. ## Import A vpnglobal_appcontroller_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_appcontroller_binding.tf_vpnglobal_appcontroller_binding http://www.citrix.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_auditsyslogpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_auditsyslogpolicy_binding resource is used to bind auditsyslogpolicy to vpnglobal configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"auditsyslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Bind the Authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called it primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the priority number, the higher the policy's priority. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only to a primary authentication server but also to a secondary authentication server. User groups are aggregated across both authentication servers. The user name must be exactly the same on both authentication servers, but the authentication servers can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_auditsyslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_auditsyslogpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_auditsyslogpolicy_binding.tf_bind new_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_auditsyslogpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_auditsyslogpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_auditsyslogpolicy_binding.tf_bind new_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_authenticationcertpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_authenticationcertpolicy_binding resource is used to bind authenticationcertpolicy to vpnglobal configuration..


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"authenticationcertpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Bind the Authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called it primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the priority number, the higher the policy's priority. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only to a primary authentication server but also to a secondary authentication server. User groups are aggregated across both authentication servers. The user name must be exactly the same on both authentication servers, but the authentication servers can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationcertpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationcertpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationcertpolicy_binding.tf_bind tf_certpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationcertpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationcertpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationcertpolicy_binding.tf_bind tf_certpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_authenticationldappolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_authenticationldappolicy_binding resource is used to bind authentication ldappolicy to global configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"authenticationldappolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Bind the Authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called it primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the priority number, the higher the policy's priority. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only to a primary authentication server but also to a secondary authentication server. User groups are aggregated across both authentication servers. The user name must be exactly the same on both authentication servers, but the authentication servers can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationldappolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationldappolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationldappolicy_binding.tf_bind tf_ldappolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationldappolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationldappolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationldappolicy_binding.tf_bind tf_ldappolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_authenticationlocalpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_authenticationlocalpolicy_binding resource is used to bind authentication localpolicy to vpnglobal configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"authenticationlocalpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Bind the Authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called it primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the priority number, the higher the policy's priority. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only to a primary authentication server but also to a secondary authentication server. User groups are aggregated across both authentication servers. The user name must be exactly the same on both authentication servers, but the authentication servers can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationlocalpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationlocalpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationlocalpolicy_binding.tf_bind tf_localpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationlocalpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationlocalpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationlocalpolicy_binding.tf_bind tf_localpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_authenticationnegotiatepolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_authenticationnegotiatepolicy_binding resource is used to bind authenticationnegotiatepolicy to vpnglobal configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"authenticationnegotiatepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Bind the Authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called it primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the priority number, the higher the policy's priority. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only to a primary authentication server but also to a secondary authentication server. User groups are aggregated across both authentication servers. The user name must be exactly the same on both authentication servers, but the authentication servers can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationnegotiatepolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationnegotiatepolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationnegotiatepolicy_binding.tf_binding tf_negotiatepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationnegotiatepolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationnegotiatepolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationnegotiatepolicy_binding.tf_binding tf_negotiatepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_authenticationradiuspolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_authenticationradiuspolicy_binding resource is used to bind authenticationradiuspolicy to vpnglobal configuration resource.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"authenticationradiuspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Bind the Authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called it primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the priority number, the higher the policy's priority. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only to a primary authentication server but also to a secondary authentication server. User groups are aggregated across both authentication servers. The user name must be exactly the same on both authentication servers, but the authentication servers can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationradiuspolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationradiuspolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationradiuspolicy_binding.tf_bind tf_radiuspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationradiuspolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationradiuspolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationradiuspolicy_binding.tf_bind tf_radiuspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_authenticationsamlpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_authenticationsamlpolicy_binding resource is used ti bind authenticationsamlpolicy to vpnglobal configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"authenticationsamlpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Bind the Authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called it primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the priority number, the higher the policy's priority. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only to a primary authentication server but also to a secondary authentication server. User groups are aggregated across both authentication servers. The user name must be exactly the same on both authentication servers, but the authentication servers can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationsamlpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationsamlpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationsamlpolicy_binding.tf_bind tf_samlpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationsamlpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationsamlpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationsamlpolicy_binding.tf_bind tf_samlpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_authenticationtacacspolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_authenticationtacacspolicy_binding resource is used to bind authenticationtacacspolicy to the vpnglobal resource.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"authenticationtacacspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Bind the Authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called it primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the priority number, the higher the policy's priority. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only to a primary authentication server but also to a secondary authentication server. User groups are aggregated across both authentication servers. The user name must be exactly the same on both authentication servers, but the authentication servers can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationtacacspolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationtacacspolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationtacacspolicy_binding.tf_bind tf_tacacspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_authenticationtacacspolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_authenticationtacacspolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_authenticationtacacspolicy_binding.tf_bind tf_tacacspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_domain_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_domain_binding resource is used to domain to vpnglobal configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"domain",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "intranetdomain",
					Description: `(Required) The conflicting intranet domain name.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_domain_binding. It has the same value as the ` + "`" + `intranetdomain` + "`" + ` attribute. ## Import A vpnglobal_domain_binding can be imported using its intranetdomain, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_domain_binding.tf_bind http://www.example.com/ ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_domain_binding. It has the same value as the ` + "`" + `intranetdomain` + "`" + ` attribute. ## Import A vpnglobal_domain_binding can be imported using its intranetdomain, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_domain_binding.tf_bind http://www.example.com/ ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_intranetip6_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_intranetip6_binding resource is used to bind intranetip6 to vpnglobal congiguration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"intranetip6",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "intranetip6",
					Description: `(Required) The intranet ip address or range.`,
				},
				resource.Attribute{
					Name:        "numaddr",
					Description: `(Optional) The intranet ip address or range's netmask.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_intranetip6_binding. It has the same value as the ` + "`" + `intranetip6` + "`" + ` attribute. ## Import A vpnglobal_intranetip6_binding can be imported using its intranetip6, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_intranetip6_binding.tf_bind 2.3.4.5 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_intranetip6_binding. It has the same value as the ` + "`" + `intranetip6` + "`" + ` attribute. ## Import A vpnglobal_intranetip6_binding can be imported using its intranetip6, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_intranetip6_binding.tf_bind 2.3.4.5 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_intranetip_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_intranetip_binding resource is used to bind intranetip to vpnglobal configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"intranetip",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "intranetip",
					Description: `(Required) The intranet ip address or range.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Required) The intranet ip address or range's netmask.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_intranetip_binding. It has the same value as the ` + "`" + `intranetip` + "`" + ` attribute. ## Import A vpnglobal_intranetip_binding can be imported using its intranetip, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_intranetip_binding.tf_bind 2.3.4.5 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_intranetip_binding. It has the same value as the ` + "`" + `intranetip` + "`" + ` attribute. ## Import A vpnglobal_intranetip_binding can be imported using its intranetip, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_intranetip_binding.tf_bind 2.3.4.5 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_sharefileserver_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_sharefileserver_binding resource is used to bind sharefileserver to vpnglobal congiguration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"sharefileserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "sharefile",
					Description: `(Required) Configured Sharefile server, in the format IP:PORT / FQDN:PORT`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_sharefileserver_binding. It has the same value as the ` + "`" + `sharefile` + "`" + ` attribute. ## Import A vpnglobal_sharefileserver_binding can be imported using its sharefile, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_sharefileserver_binding.tf_bind 3.4.5.2:8080 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_sharefileserver_binding. It has the same value as the ` + "`" + `sharefile` + "`" + ` attribute. ## Import A vpnglobal_sharefileserver_binding can be imported using its sharefile, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_sharefileserver_binding.tf_bind 3.4.5.2:8080 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_sslcertkey_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_sslcertkey_binding resource is used to bind an ssl CertKey to the global configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"sslcertkey",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "certkeyname",
					Description: `(Required) SSL certkey to use in signing tokens.`,
				},
				resource.Attribute{
					Name:        "cacert",
					Description: `(Optional) The name of the CA certificate binding.`,
				},
				resource.Attribute{
					Name:        "crlcheck",
					Description: `(Optional) The state of the CRL check parameter (Mandatory/Optional).`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "ocspcheck",
					Description: `(Optional) The state of the OCSP check parameter (Mandatory/Optional).`,
				},
				resource.Attribute{
					Name:        "userdataencryptionkey",
					Description: `(Optional) Certificate to be used for encrypting user data like KB Question and Answers, Alternate Email Address, etc. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_sslcertkey_binding. It has the same value as the ` + "`" + `certkeyname` + "`" + ` attribute. ## Import A vpnglobal_sslcertkey_binding can be imported using its certkeyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_sslcertkey_binding.tf_vpnglobal_slcertkey_binding sample_ssl_cert ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_sslcertkey_binding. It has the same value as the ` + "`" + `certkeyname` + "`" + ` attribute. ## Import A vpnglobal_sslcertkey_binding can be imported using its certkeyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_sslcertkey_binding.tf_vpnglobal_slcertkey_binding sample_ssl_cert ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_staserver_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_staserver_binding resource is used to bind staserver to vpnglobal configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"staserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "staserver",
					Description: `(Required) Configured Secure Ticketing Authority (STA) server.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "staaddresstype",
					Description: `(Optional) Type of the STA server address(ipv4/v6). ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_staserver_binding. It has the same value as the ` + "`" + `staserver` + "`" + ` attribute. ## Import A vpnglobal_staserver_binding can be imported using its staserver, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_staserver_binding.tf_bind http://www.example.com/ ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_staserver_binding. It has the same value as the ` + "`" + `staserver` + "`" + ` attribute. ## Import A vpnglobal_staserver_binding can be imported using its staserver, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_staserver_binding.tf_bind http://www.example.com/ ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_vpnclientlessaccesspolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_vpnclientlessaccesspolicy_binding resource is used to bind vpnclientlessaccesspolicy to vpnglobal configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"vpnclientlessaccesspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "builtin",
					Description: `(Optional) Indicates that a variable is a built-in (SYSTEM INTERNAL) type.`,
				},
				resource.Attribute{
					Name:        "feature",
					Description: `(Optional) The feature to be checked while applying this config`,
				},
				resource.Attribute{
					Name:        "globalbindtype",
					Description: `(Optional) 0`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Bind the Authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called it primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the priority number, the higher the policy's priority. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only to a primary authentication server but also to a secondary authentication server. User groups are aggregated across both authentication servers. The user name must be exactly the same on both authentication servers, but the authentication servers can require different passwords.`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) Bindpoint to which the policy is bound ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnclientlessaccesspolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_vpnclientlessaccesspolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnclientlessaccesspolicy_binding.tf_bind tf_vpnclientlessaccesspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnclientlessaccesspolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_vpnclientlessaccesspolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnclientlessaccesspolicy_binding.tf_bind tf_vpnclientlessaccesspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_vpneula_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_vpneula_binding resource is used to bind vpneula to vpnglobal configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"vpneula",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "eula",
					Description: `(Required) Name of the EULA bound to vpnglobal`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpneula_binding. It has the same value as the ` + "`" + `eula` + "`" + ` attribute. ## Import A vpnglobal_vpneula_binding can be imported using its eula, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpneula_binding.tf_bind tf_vpneula ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpneula_binding. It has the same value as the ` + "`" + `eula` + "`" + ` attribute. ## Import A vpnglobal_vpneula_binding can be imported using its eula, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpneula_binding.tf_bind tf_vpneula ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_vpnintranetapplication_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_vpnintranetapplication_binding resource is used to bind vpnintranetapplication to vpnglobal configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"vpnintranetapplication",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "intranetapplication",
					Description: `(Required) The intranet vpn application.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnintranetapplication_binding. It has the same value as the ` + "`" + `intranetapplication` + "`" + ` attribute. ## Import A vpnglobal_vpnintranetapplication_binding can be imported using its intranetapplication, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnintranetapplication_binding.tf_bind tf_vpnintranetapplication ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnintranetapplication_binding. It has the same value as the ` + "`" + `intranetapplication` + "`" + ` attribute. ## Import A vpnglobal_vpnintranetapplication_binding can be imported using its intranetapplication, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnintranetapplication_binding.tf_bind tf_vpnintranetapplication ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_vpnnexthopserver_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_vpnnexthopserver_binding resource is used to bind vpnnexthopserver to vpnglobal configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"vpnnexthopserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "nexthopserver",
					Description: `(Required) The name of the next hop server bound to vpn global.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnnexthopserver_binding. It has the same value as the ` + "`" + `nexthopserver` + "`" + ` attribute. ## Import A vpnglobal_vpnnexthopserver_binding can be imported using its nexthopserver, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnnexthopserver_binding.tf_bind tf_vpnnexthopserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnnexthopserver_binding. It has the same value as the ` + "`" + `nexthopserver` + "`" + ` attribute. ## Import A vpnglobal_vpnnexthopserver_binding can be imported using its nexthopserver, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnnexthopserver_binding.tf_bind tf_vpnnexthopserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_vpnportaltheme_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_vpnportaltheme_binding resource is used to bind the vpnportaltheme to the vpnglobal configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"vpnportaltheme",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "portaltheme",
					Description: `(Required) Name of the portal theme bound to vpnglobal`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnportaltheme_binding. It has the same value as the ` + "`" + `portaltheme` + "`" + ` attribute. ## Import A vpnglobal_vpnportaltheme_binding can be imported using its portaltheme, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnportaltheme_binding.tf_bind tf_vpnportaltheme ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnportaltheme_binding. It has the same value as the ` + "`" + `portaltheme` + "`" + ` attribute. ## Import A vpnglobal_vpnportaltheme_binding can be imported using its portaltheme, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnportaltheme_binding.tf_bind tf_vpnportaltheme ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_vpnsessionpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_vpnsessionpolicy_binding resource is used to bind vpn sessionpolicy to the global configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"vpnsessionpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "builtin",
					Description: `(Optional) Indicates that a variable is a built-in (SYSTEM INTERNAL) type.`,
				},
				resource.Attribute{
					Name:        "feature",
					Description: `(Optional) The feature to be checked while applying this config`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Bind the Authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called it primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the priority number, the higher the policy's priority. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only to a primary authentication server but also to a secondary authentication server. User groups are aggregated across both authentication servers. The user name must be exactly the same on both authentication servers, but the authentication servers can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnsessionpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_vpnsessionpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnsessionpolicy_binding.tf_bind tf_vpnsessionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnsessionpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_vpnsessionpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnsessionpolicy_binding.tf_bind tf_vpnsessionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_vpntrafficpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_vpntrafficpolicy_binding resource is used to bind vpn trafficpolicy to the global configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"vpntrafficpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Bind the Authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called it primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the priority number, the higher the policy's priority. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only to a primary authentication server but also to a secondary authentication server. User groups are aggregated across both authentication servers. The user name must be exactly the same on both authentication servers, but the authentication servers can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpntrafficpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_vpntrafficpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpngobal_vpntrafficpolicy_binding.tf_bond tf_vpntrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpntrafficpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_vpntrafficpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpngobal_vpntrafficpolicy_binding.tf_bond tf_vpntrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_vpnurl_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_vpnurl_binding resource is used to bind vpnurl to global configuraton.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"vpnurl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "urlname",
					Description: `(Required) The intranet url.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnurl_binding. It has the same value as the ` + "`" + `urlname` + "`" + ` attribute. ## Import A vpnglobal_vpnurl_binding can be imported using its urlname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnurl_binding.tf_bind Firsturl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnurl_binding. It has the same value as the ` + "`" + `urlname` + "`" + ` attribute. ## Import A vpnglobal_vpnurl_binding can be imported using its urlname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnurl_binding.tf_bind Firsturl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnglobal_vpnurlpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnglobal_vpnurlpolicy_binding resource is used to bind vpnurlpolicy  to vpnglobal configuration.


`,
			Keywords: []string{
				"vpn",
				"vpnglobal",
				"vpnurlpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "policyname",
					Description: `(Required) The name of the policy.`,
				},
				resource.Attribute{
					Name:        "builtin",
					Description: `(Optional) Indicates that a variable is a built-in (SYSTEM INTERNAL) type.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. An expression or other value specifying the priority of the next policy which will get evaluated if the current policy rule evaluates to TRUE.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Bind the Authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called it primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the priority number, the higher the policy's priority. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Bind the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only to a primary authentication server but also to a secondary authentication server. User groups are aggregated across both authentication servers. The user name must be exactly the same on both authentication servers, but the authentication servers can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnurlpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_vpnurlpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnurlpolicy_binding.tf_bind new_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnglobal_vpnurlpolicy_binding. It has the same value as the ` + "`" + `policyname` + "`" + ` attribute. ## Import A vpnglobal_vpnurlpolicy_binding can be imported using its policyname, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnglobal_vpnurlpolicy_binding.tf_bind new_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnintranetapplication",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnintranetapplication resource is used to create vpn intranet application resource.


`,
			Keywords: []string{
				"vpn",
				"vpnintranetapplication",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "intranetapplication",
					Description: `(Required) Name of the intranet application.`,
				},
				resource.Attribute{
					Name:        "clientapplication",
					Description: `(Optional) Names of the client applications, such as PuTTY and Xshell.`,
				},
				resource.Attribute{
					Name:        "destip",
					Description: `(Optional) Destination IP address, IP range, or host name of the intranet application. This address is the server IP address.`,
				},
				resource.Attribute{
					Name:        "destport",
					Description: `(Optional) Destination TCP or UDP port number for the intranet application. Use a hyphen to specify a range of port numbers, for example 90-95.`,
				},
				resource.Attribute{
					Name:        "hostname",
					Description: `(Optional) Name of the host for which to configure interception. The names are resolved during interception when users log on with the Citrix Gateway Plug-in.`,
				},
				resource.Attribute{
					Name:        "interception",
					Description: `(Optional) Interception mode for the intranet application or resource. Correct value depends on the type of client software used to make connections. If the interception mode is set to TRANSPARENT, users connect with the Citrix Gateway Plug-in for Windows. With the PROXY setting, users connect with the Citrix Gateway Plug-in for Java.`,
				},
				resource.Attribute{
					Name:        "iprange",
					Description: `(Optional) If you have multiple servers in your network, such as web, email, and file shares, configure an intranet application that includes the IP range for all the network applications. This allows users to access all the intranet applications contained in the IP address range.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) Destination subnet mask for the intranet application.`,
				},
				resource.Attribute{
					Name:        "protocol",
					Description: `(Optional) Protocol used by the intranet application. If protocol is set to BOTH, TCP and UDP traffic is allowed.`,
				},
				resource.Attribute{
					Name:        "spoofiip",
					Description: `(Optional) IP address that the intranet application will use to route the connection through the virtual adapter.`,
				},
				resource.Attribute{
					Name:        "srcip",
					Description: `(Optional) Source IP address. Required if interception mode is set to PROXY. Default is the loopback address, 127.0.0.1.`,
				},
				resource.Attribute{
					Name:        "srcport",
					Description: `(Optional) Source port for the application for which the Citrix Gateway virtual server proxies the traffic. If users are connecting from a device that uses the Citrix Gateway Plug-in for Java, applications must be configured manually by using the source IP address and TCP port values specified in the intranet application profile. If a port value is not set, the destination port value is used. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnintranetapplication. It has the same value as the ` + "`" + `intranetapplication` + "`" + ` attribute. ## Import A vpnintranetapplication can be imported using its intranetapplication, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnintranetapplication.tf_vpnintranetapplication tf_vpnintranetapplication ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnintranetapplication. It has the same value as the ` + "`" + `intranetapplication` + "`" + ` attribute. ## Import A vpnintranetapplication can be imported using its intranetapplication, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnintranetapplication.tf_vpnintranetapplication tf_vpnintranetapplication ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnnexthopserver",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnnexthopserver resource is used to create Next Hop Server resource.


`,
			Keywords: []string{
				"vpn",
				"vpnnexthopserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the Citrix Gateway appliance in the first DMZ.`,
				},
				resource.Attribute{
					Name:        "nexthopport",
					Description: `(Required) Port number of the Citrix Gateway proxy in the second DMZ.`,
				},
				resource.Attribute{
					Name:        "nexthopfqdn",
					Description: `(Optional) FQDN of the Citrix Gateway proxy in the second DMZ.`,
				},
				resource.Attribute{
					Name:        "nexthopip",
					Description: `(Optional) IP address of the Citrix Gateway proxy in the second DMZ.`,
				},
				resource.Attribute{
					Name:        "resaddresstype",
					Description: `(Optional) Address Type (IPV4/IPv6) of DNS name of nextHopServer FQDN.`,
				},
				resource.Attribute{
					Name:        "secure",
					Description: `(Optional) Use of a secure port, such as 443, for the double-hop configuration. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnnexthopserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnnexthopserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnnexthopserver.tf_vpnnexthopserver tf_vpnnexthopserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnnexthopserver. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnnexthopserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnnexthopserver.tf_vpnnexthopserver tf_vpnnexthopserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnparameter",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnparameter resource is used to update the ADC VPN parameters.


`,
			Keywords: []string{
				"vpn",
				"vpnparameter",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "advancedclientlessvpnmode",
					Description: `(Optional) Option to enable/disable Advanced ClientlessVpnMode. Additionaly, it can be set to STRICT to block Classic ClientlessVpnMode while in AdvancedClientlessMode.`,
				},
				resource.Attribute{
					Name:        "allowedlogingroups",
					Description: `(Optional) Specify groups that have permission to log on to Citrix Gateway. Users who do not belong to this group or groups are denied access even if they have valid credentials.`,
				},
				resource.Attribute{
					Name:        "allprotocolproxy",
					Description: `(Optional) IP address of the proxy server to use for all protocols supported by Citrix Gateway.`,
				},
				resource.Attribute{
					Name:        "alwaysonprofilename",
					Description: `(Optional) Name of the AlwaysON profile. The builtin profile named none can be used to explicitly disable AlwaysON.`,
				},
				resource.Attribute{
					Name:        "apptokentimeout",
					Description: `(Optional) The timeout value in seconds for tokens to access XenMobile applications`,
				},
				resource.Attribute{
					Name:        "authorizationgroup",
					Description: `(Optional) Comma-separated list of groups in which the user is placed when none of the groups that the user is a part of is configured on Citrix Gateway. The authorization policy can be bound to these groups to control access to the resources.`,
				},
				resource.Attribute{
					Name:        "autoproxyurl",
					Description: `(Optional) URL to auto proxy config file`,
				},
				resource.Attribute{
					Name:        "backendcertvalidation",
					Description: `(Optional) enables backend server certificate validation`,
				},
				resource.Attribute{
					Name:        "backendserversni",
					Description: `(Optional) enables sni extension for backend server handshakes`,
				},
				resource.Attribute{
					Name:        "citrixreceiverhome",
					Description: `(Optional) Web address for the Citrix Receiver home page. Configure Citrix Gateway so that when users log on to the appliance, the Citrix Gateway Plug-in opens a web browser that allows single sign-on to the Citrix Receiver home page.`,
				},
				resource.Attribute{
					Name:        "clientchoices",
					Description: `(Optional) Provide users with multiple logon options. With client choices, users have the option of logging on by using the Citrix Gateway Plug-in for Windows, Citrix Gateway Plug-in for Java, the Web Interface, or clientless access from one location. Depending on how Citrix Gateway is configured, users are presented with up to three icons for logon choices. The most common are the Citrix Gateway Plug-in for Windows, Web Interface, and clientless access.`,
				},
				resource.Attribute{
					Name:        "clientcleanupprompt",
					Description: `(Optional) Prompt for client-side cache clean-up when a client-initiated session closes.`,
				},
				resource.Attribute{
					Name:        "clientconfiguration",
					Description: `(Optional) Allow users to change client Debug logging level in Configuration tab of the Citrix Gateway Plug-in for Windows.`,
				},
				resource.Attribute{
					Name:        "clientdebug",
					Description: `(Optional) Set the trace level on Citrix Gateway. Technical support technicians use these debug logs for in-depth debugging and troubleshooting purposes. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "clientidletimeout",
					Description: `(Optional) Time, in minutes, after which to time out the user session if Citrix Gateway does not detect mouse or keyboard activity.`,
				},
				resource.Attribute{
					Name:        "clientlessmodeurlencoding",
					Description: `(Optional) When clientless access is enabled, you can choose to encode the addresses of internal web applications or to leave the address as clear text. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "clientlesspersistentcookie",
					Description: `(Optional) State of persistent cookies in clientless access mode. Persistent cookies are required for accessing certain features of SharePoint, such as opening and editing Microsoft Word, Excel, and PowerPoint documents hosted on the SharePoint server. A persistent cookie remains on the user device and is sent with each HTTP request. Citrix Gateway encrypts the persistent cookie before sending it to the plug-in on the user device, and refreshes the cookie periodically as long as the session exists. The cookie becomes stale if the session ends. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "clientlessvpnmode",
					Description: `(Optional) Enable clientless access for web, XenApp or XenDesktop, and FileShare resources without installing the Citrix Gateway Plug-in. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "clientoptions",
					Description: `(Optional) Display only the configured menu options when you select the "Configure Citrix Gateway" option in the Citrix Gateway Plug-in's system tray icon for Windows.`,
				},
				resource.Attribute{
					Name:        "clientsecurity",
					Description: `(Optional) Specify the client security check for the user device to permit a Citrix Gateway session. The web address or IP address is not included in the expression for the client security check.`,
				},
				resource.Attribute{
					Name:        "clientsecuritygroup",
					Description: `(Optional) The client security group that will be assigned on failure of the client security check. Users can in general be organized into Groups. In this case, the Client Security Group may have a more restrictive security policy.`,
				},
				resource.Attribute{
					Name:        "clientsecuritylog",
					Description: `(Optional) Specifies whether or not to display all failed Client Security scans to the end user`,
				},
				resource.Attribute{
					Name:        "clientsecuritymessage",
					Description: `(Optional) The client security message that will be displayed on failure of the client security check.`,
				},
				resource.Attribute{
					Name:        "clientversions",
					Description: `(Optional) checkversion api`,
				},
				resource.Attribute{
					Name:        "defaultauthorizationaction",
					Description: `(Optional) Specify the network resources that users have access to when they log on to the internal network. The default setting for authorization is to deny access to all network resources. Citrix recommends using the default global setting and then creating authorization policies to define the network resources users can access. If you set the default authorization policy to DENY, you must explicitly authorize access to any network resource, which improves security.`,
				},
				resource.Attribute{
					Name:        "dnsvservername",
					Description: `(Optional) Name of the DNS virtual server for the user session.`,
				},
				resource.Attribute{
					Name:        "emailhome",
					Description: `(Optional) Web address for the web-based email, such as Outlook Web Access.`,
				},
				resource.Attribute{
					Name:        "encryptcsecexp",
					Description: `(Optional) Enable encryption of client security expressions.`,
				},
				resource.Attribute{
					Name:        "epaclienttype",
					Description: `(Optional) Choose between two types of End point Windows Client a) Application Agent - which always runs in the task bar as a standalone application and also has a supporting service which runs permanently when installed b) Activex Control - ActiveX control run by Microsoft Internet Explorer.`,
				},
				resource.Attribute{
					Name:        "forcecleanup",
					Description: `(Optional) Force cache clean-up when the user closes a session. You can specify all, none, or any combination of the client-side items.`,
				},
				resource.Attribute{
					Name:        "forcedtimeout",
					Description: `(Optional) Force a disconnection from the Citrix Gateway Plug-in with Citrix Gateway after a specified number of minutes. If the session closes, the user must log on again.`,
				},
				resource.Attribute{
					Name:        "forcedtimeoutwarning",
					Description: `(Optional) Number of minutes to warn a user before the user session is disconnected.`,
				},
				resource.Attribute{
					Name:        "fqdnspoofedip",
					Description: `(Optional) Spoofed IP address range that can be used by client for FQDN based split tunneling`,
				},
				resource.Attribute{
					Name:        "ftpproxy",
					Description: `(Optional) IP address of the proxy server to be used for FTP access for all subsequent connections to the internal network.`,
				},
				resource.Attribute{
					Name:        "gopherproxy",
					Description: `(Optional) IP address of the proxy server to be used for GOPHER access for all subsequent connections to the internal network.`,
				},
				resource.Attribute{
					Name:        "homepage",
					Description: `(Optional) Web address of the home page that appears when users log on. Otherwise, users receive the default home page for Citrix Gateway, which is the Access Interface.`,
				},
				resource.Attribute{
					Name:        "httpport",
					Description: `(Optional) Destination port numbers other than port 80, added as a comma-separated list. Traffic to these ports is processed as HTTP traffic, which allows functionality, such as HTTP authorization and single sign-on to a web application to work.`,
				},
				resource.Attribute{
					Name:        "httpproxy",
					Description: `(Optional) IP address of the proxy server to be used for HTTP access for all subsequent connections to the internal network.`,
				},
				resource.Attribute{
					Name:        "icaproxy",
					Description: `(Optional) Enable ICA proxy to configure secure Internet access to servers running Citrix XenApp or XenDesktop by using Citrix Receiver instead of the Citrix Gateway Plug-in.`,
				},
				resource.Attribute{
					Name:        "icasessiontimeout",
					Description: `(Optional) Enable or disable ica session timeout. If enabled and in case AAA session gets terminated, ICA connections associated with that will also get terminated`,
				},
				resource.Attribute{
					Name:        "icauseraccounting",
					Description: `(Optional) The name of the radiusPolicy to use for RADIUS user accounting info on the session.`,
				},
				resource.Attribute{
					Name:        "iconwithreceiver",
					Description: `(Optional) Option to decide whether to show plugin icon along with receiver icon`,
				},
				resource.Attribute{
					Name:        "iipdnssuffix",
					Description: `(Optional) An intranet IP DNS suffix. When a user logs on to Citrix Gateway and is assigned an IP address, a DNS record for the user name and IP address combination is added to the Citrix Gateway DNS cache. You can configure a DNS suffix to append to the user name when the DNS record is added to the cache. You can reach to the host from where the user is logged on by using the user's name, which can be easier to remember than an IP address. When the user logs off from Citrix Gateway, the record is removed from the DNS cache.`,
				},
				resource.Attribute{
					Name:        "kcdaccount",
					Description: `(Optional) The KCD account details to be used in SSO`,
				},
				resource.Attribute{
					Name:        "killconnections",
					Description: `(Optional) Specify whether the Citrix Gateway Plug-in should disconnect all preexisting connections, such as the connections existing before the user logged on to Citrix Gateway, and prevent new incoming connections on the Citrix Gateway Plug-in for Windows and MAC when the user is connected to Citrix Gateway and split tunneling is disabled.`,
				},
				resource.Attribute{
					Name:        "linuxpluginupgrade",
					Description: `(Optional) Option to set plugin upgrade behaviour for Linux`,
				},
				resource.Attribute{
					Name:        "locallanaccess",
					Description: `(Optional) Set local LAN access. If split tunneling is OFF, and you set local LAN access to ON, the local client can route traffic to its local interface. When the local area network switch is specified, this combination of switches is useful. The client can allow local LAN access to devices that commonly have non-routable addresses, such as local printers or local file servers.`,
				},
				resource.Attribute{
					Name:        "loginscript",
					Description: `(Optional) Path to the logon script that is run when a session is established. Separate multiple scripts by using comma. A "$" in the path signifies that the word following the "$" is an environment variable.`,
				},
				resource.Attribute{
					Name:        "logoutscript",
					Description: `(Optional) Path to the logout script. Separate multiple scripts by using comma. A "$" in the path signifies that the word following the "$" is an environment variable.`,
				},
				resource.Attribute{
					Name:        "macpluginupgrade",
					Description: `(Optional) Option to set plugin upgrade behaviour for Mac`,
				},
				resource.Attribute{
					Name:        "mdxtokentimeout",
					Description: `(Optional) Validity of MDX Token in minutes. This token is used for mdx services to access backend and valid HEAD and GET request.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) The netmask for the spoofed ip address`,
				},
				resource.Attribute{
					Name:        "ntdomain",
					Description: `(Optional) Single sign-on domain to use for single sign-on to applications in the internal network. This setting can be overwritten by the domain that users specify at the time of logon or by the domain that the authentication server returns.`,
				},
				resource.Attribute{
					Name:        "pcoipprofilename",
					Description: `(Optional) Name of the PCOIP profile.`,
				},
				resource.Attribute{
					Name:        "proxy",
					Description: `(Optional) Set options to apply proxy for accessing the internal resources. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "proxyexception",
					Description: `(Optional) Proxy exception string that will be configured in the browser for bypassing the previously configured proxies. Allowed only if proxy type is Browser.`,
				},
				resource.Attribute{
					Name:        "proxylocalbypass",
					Description: `(Optional) Bypass proxy server for local addresses option in Internet Explorer and Firefox proxy server settings.`,
				},
				resource.Attribute{
					Name:        "rdpclientprofilename",
					Description: `(Optional) Name of the RDP profile associated with the vserver.`,
				},
				resource.Attribute{
					Name:        "rfc1918",
					Description: `(Optional) As defined in the local area network, allow only the following local area network addresses to bypass the VPN tunnel when the local LAN access feature is enabled:`,
				},
				resource.Attribute{
					Name:        "samesite",
					Description: `(Optional) SameSite attribute value for Cookies generated in VPN context. This attribute value will be appended only for the cookies which are specified in the builtin patset ns_cookies_samesite`,
				},
				resource.Attribute{
					Name:        "securebrowse",
					Description: `(Optional) Allow users to connect through Citrix Gateway to network resources from iOS and Android mobile devices with Citrix Receiver. Users do not need to establish a full VPN tunnel to access resources in the secure network.`,
				},
				resource.Attribute{
					Name:        "sesstimeout",
					Description: `(Optional) Number of minutes after which the session times out.`,
				},
				resource.Attribute{
					Name:        "smartgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups.`,
				},
				resource.Attribute{
					Name:        "socksproxy",
					Description: `(Optional) IP address of the proxy server to be used for SOCKS access for all subsequent connections to the internal network.`,
				},
				resource.Attribute{
					Name:        "splitdns",
					Description: `(Optional) Route the DNS requests to the local DNS server configured on the user device, or Citrix Gateway (remote), or both.`,
				},
				resource.Attribute{
					Name:        "splittunnel",
					Description: `(Optional) Send, through the tunnel, traffic only for intranet applications that are defined in Citrix Gateway. Route all other traffic directly to the Internet. The OFF setting routes all traffic through Citrix Gateway. With the REVERSE setting, intranet applications define the network traffic that is not intercepted. All network traffic directed to internal IP addresses bypasses the VPN tunnel, while other traffic goes through Citrix Gateway. Reverse split tunneling can be used to log all non-local LAN traffic. For example, if users have a home network and are logged on through the Citrix Gateway Plug-in, network traffic destined to a printer or another device within the home network is not intercepted.`,
				},
				resource.Attribute{
					Name:        "spoofiip",
					Description: `(Optional) Indicate whether or not the application requires IP spoofing, which routes the connection to the intranet application through the virtual adapter.`,
				},
				resource.Attribute{
					Name:        "sslproxy",
					Description: `(Optional) IP address of the proxy server to be used for SSL access for all subsequent connections to the internal network.`,
				},
				resource.Attribute{
					Name:        "sso",
					Description: `(Optional) Set single sign-on (SSO) for the session. When the user accesses a server, the user's logon credentials are passed to the server for authentication. NOTE : This configuration does not honor the following authentication types for security reason. BASIC, DIGEST, and NTLM (without Negotiate NTLM2 Key or Negotiate Sign Flag). Use VPN TrafficAction to configure SSO for these authentication types.`,
				},
				resource.Attribute{
					Name:        "ssocredential",
					Description: `(Optional) Specify whether to use the primary or secondary authentication credentials for single sign-on to the server.`,
				},
				resource.Attribute{
					Name:        "storefronturl",
					Description: `(Optional) Web address for StoreFront to be used in this session for enumeration of resources from XenApp or XenDesktop.`,
				},
				resource.Attribute{
					Name:        "transparentinterception",
					Description: `(Optional) Allow access to network resources by using a single IP address and subnet mask or a range of IP addresses. The OFF setting sets the mode to proxy, in which you configure destination and source IP addresses and port numbers. If you are using the Citrix Gateway Plug-in for Windows, set this parameter to ON, in which the mode is set to transparent. If you are using the Citrix Gateway Plug-in for Java, set this parameter to OFF.`,
				},
				resource.Attribute{
					Name:        "uitheme",
					Description: `(Optional) Set VPN UI Theme to Green-Bubble, Caxton or Custom; default is Caxton.`,
				},
				resource.Attribute{
					Name:        "useiip",
					Description: `(Optional) Define IP address pool options. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "usemip",
					Description: `(Optional) Enable or disable the use of a unique IP address alias, or a mapped IP address, as the client IP address for each client session. Allow Citrix Gateway to use the mapped IP address as an intranet IP address when all other IP addresses are not available. When IP pooling is configured and the mapped IP is used as an intranet IP address, the mapped IP address is used when an intranet IP address cannot be assigned.`,
				},
				resource.Attribute{
					Name:        "userdomains",
					Description: `(Optional) List of user domains specified as comma seperated value`,
				},
				resource.Attribute{
					Name:        "wihome",
					Description: `(Optional) Web address of the Web Interface server, such as http://<ipAddress>/Citrix/XenApp, or Receiver for Web, which enumerates the virtualized resources, such as XenApp, XenDesktop, and cloud applications. This web address is used as the home page in ICA proxy mode. If Client Choices is ON, you must configure this setting. Because the user can choose between FullClient and ICAProxy, the user may see a different home page. An Internet web site may appear if the user gets the FullClient option, or a Web Interface site if the user gets the ICAProxy option. If the setting is not configured, the XenApp option does not appear as a client choice.`,
				},
				resource.Attribute{
					Name:        "wihomeaddresstype",
					Description: `(Optional) Type of the wihome address(IPV4/V6)`,
				},
				resource.Attribute{
					Name:        "windowsautologon",
					Description: `(Optional) Enable or disable the Windows Auto Logon for the session. If a VPN session is established after this setting is enabled, the user is automatically logged on by using Windows credentials after the system is restarted.`,
				},
				resource.Attribute{
					Name:        "windowsclienttype",
					Description: `(Optional) The Windows client type. Choose between two types of Windows Client\ a) Application Agent - which always runs in the task bar as a standalone application and also has a supporting service which runs permanently when installed\ b) Activex Control - ActiveX control run by Microsoft Internet Explorer.`,
				},
				resource.Attribute{
					Name:        "windowspluginupgrade",
					Description: `(Optional) Option to set plugin upgrade behaviour for Win`,
				},
				resource.Attribute{
					Name:        "winsip",
					Description: `(Optional) WINS server IP address to add to Citrix Gateway for name resolution.`,
				},
				resource.Attribute{
					Name:        "wiportalmode",
					Description: `(Optional) Layout on the Access Interface. The COMPACT value indicates the use of small icons. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnparameter. It is a unique string prefixed with "tf-vpnparameter-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnparameter. It is a unique string prefixed with "tf-vpnparameter-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnpcoipprofile",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnpcoipprofile resource is used to create vpn PCoIP profile resource.


`,
			Keywords: []string{
				"vpn",
				"vpnpcoipprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) name of PCoIP profile`,
				},
				resource.Attribute{
					Name:        "conserverurl",
					Description: `(Required) Connection server URL`,
				},
				resource.Attribute{
					Name:        "icvverification",
					Description: `(Optional) ICV verification for PCOIP transport packets.`,
				},
				resource.Attribute{
					Name:        "sessionidletimeout",
					Description: `(Optional) PCOIP Idle Session timeout ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnpcoipprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnpcoipprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnpcoipprofile.tf_vpnpcoipprofile tf_vpnpcoipprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnpcoipprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnpcoipprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnpcoipprofile.tf_vpnpcoipprofile tf_vpnpcoipprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnpcoipvserverprofile",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnpcoipvserverprofile resource is used to create PCoIP vserver profile resource.


`,
			Keywords: []string{
				"vpn",
				"vpnpcoipvserverprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) name of PCoIP vserver profile`,
				},
				resource.Attribute{
					Name:        "logindomain",
					Description: `(Required) Login domain for PCoIP users`,
				},
				resource.Attribute{
					Name:        "udpport",
					Description: `(Optional) UDP port for PCoIP data traffic ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnpcoipvserverprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnpcoipvserverprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnpcoipvserverprofile.tf_vpnpcoipvserverprofile tf_vpnpcoipvserverprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnpcoipvserverprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnpcoipvserverprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnpcoipvserverprofile.tf_vpnpcoipvserverprofile tf_vpnpcoipvserverprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnportaltheme",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnportaltheme resource is used to create vpn portal theme resource.


`,
			Keywords: []string{
				"vpn",
				"vpnportaltheme",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the uitheme`,
				},
				resource.Attribute{
					Name:        "basetheme",
					Description: `(Required) 0 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnportaltheme. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnportaltheme can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnportaltheme.tf_vpnportaltheme tf_vpnportaltheme ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnportaltheme. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnportaltheme can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnportaltheme.tf_vpnportaltheme tf_vpnportaltheme ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnsamlssoprofile",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnsamlssoprofile resource is used to create of vpn SAML sso profile resource.


`,
			Keywords: []string{
				"vpn",
				"vpnsamlssoprofile",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new saml single sign-on profile. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after an SSO action is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action').`,
				},
				resource.Attribute{
					Name:        "assertionconsumerserviceurl",
					Description: `(Required) URL to which the assertion is to be sent.`,
				},
				resource.Attribute{
					Name:        "attribute1",
					Description: `(Optional) Name of attribute1 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute10",
					Description: `(Optional) Name of attribute10 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute10expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute10's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute10format",
					Description: `(Optional) Format of Attribute10 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute10friendlyname",
					Description: `(Optional) User-Friendly Name of attribute10 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute11",
					Description: `(Optional) Name of attribute11 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute11expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute11's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute11format",
					Description: `(Optional) Format of Attribute11 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute11friendlyname",
					Description: `(Optional) User-Friendly Name of attribute11 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute12",
					Description: `(Optional) Name of attribute12 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute12expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute12's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute12format",
					Description: `(Optional) Format of Attribute12 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute12friendlyname",
					Description: `(Optional) User-Friendly Name of attribute12 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute13",
					Description: `(Optional) Name of attribute13 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute13expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute13's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute13format",
					Description: `(Optional) Format of Attribute13 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute13friendlyname",
					Description: `(Optional) User-Friendly Name of attribute13 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute14",
					Description: `(Optional) Name of attribute14 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute14expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute14's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute14format",
					Description: `(Optional) Format of Attribute14 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute14friendlyname",
					Description: `(Optional) User-Friendly Name of attribute14 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute15",
					Description: `(Optional) Name of attribute15 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute15expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute15's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute15format",
					Description: `(Optional) Format of Attribute15 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute15friendlyname",
					Description: `(Optional) User-Friendly Name of attribute15 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute16",
					Description: `(Optional) Name of attribute16 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute16expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute16's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute16format",
					Description: `(Optional) Format of Attribute16 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute16friendlyname",
					Description: `(Optional) User-Friendly Name of attribute16 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute1expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute1's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute1format",
					Description: `(Optional) Format of Attribute1 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute1friendlyname",
					Description: `(Optional) User-Friendly Name of attribute1 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute2",
					Description: `(Optional) Name of attribute2 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute2expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute2's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute2format",
					Description: `(Optional) Format of Attribute2 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute2friendlyname",
					Description: `(Optional) User-Friendly Name of attribute2 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute3",
					Description: `(Optional) Name of attribute3 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute3expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute3's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute3format",
					Description: `(Optional) Format of Attribute3 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute3friendlyname",
					Description: `(Optional) User-Friendly Name of attribute3 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute4",
					Description: `(Optional) Name of attribute4 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute4expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute4's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute4format",
					Description: `(Optional) Format of Attribute4 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute4friendlyname",
					Description: `(Optional) User-Friendly Name of attribute4 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute5",
					Description: `(Optional) Name of attribute5 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute5expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute5's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute5format",
					Description: `(Optional) Format of Attribute5 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute5friendlyname",
					Description: `(Optional) User-Friendly Name of attribute5 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute6",
					Description: `(Optional) Name of attribute6 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute6expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute6's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute6format",
					Description: `(Optional) Format of Attribute6 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute6friendlyname",
					Description: `(Optional) User-Friendly Name of attribute6 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute7",
					Description: `(Optional) Name of attribute7 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute7expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute7's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute7format",
					Description: `(Optional) Format of Attribute7 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute7friendlyname",
					Description: `(Optional) User-Friendly Name of attribute7 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute8",
					Description: `(Optional) Name of attribute8 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute8expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute8's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute8format",
					Description: `(Optional) Format of Attribute8 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute8friendlyname",
					Description: `(Optional) User-Friendly Name of attribute8 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute9",
					Description: `(Optional) Name of attribute9 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "attribute9expr",
					Description: `(Optional) Expression that will be evaluated to obtain attribute9's value to be sent in Assertion`,
				},
				resource.Attribute{
					Name:        "attribute9format",
					Description: `(Optional) Format of Attribute9 to be sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "attribute9friendlyname",
					Description: `(Optional) User-Friendly Name of attribute9 that needs to be sent in SAML Assertion`,
				},
				resource.Attribute{
					Name:        "audience",
					Description: `(Optional) Audience for which assertion sent by IdP is applicable. This is typically entity name or url that represents ServiceProvider`,
				},
				resource.Attribute{
					Name:        "digestmethod",
					Description: `(Optional) Algorithm to be used to compute/verify digest for SAML transactions`,
				},
				resource.Attribute{
					Name:        "encryptassertion",
					Description: `(Optional) Option to encrypt assertion when Citrix ADC sends one.`,
				},
				resource.Attribute{
					Name:        "encryptionalgorithm",
					Description: `(Optional) Algorithm to be used to encrypt SAML assertion`,
				},
				resource.Attribute{
					Name:        "nameidexpr",
					Description: `(Optional) Expression that will be evaluated to obtain NameIdentifier to be sent in assertion`,
				},
				resource.Attribute{
					Name:        "nameidformat",
					Description: `(Optional) Format of Name Identifier sent in Assertion.`,
				},
				resource.Attribute{
					Name:        "relaystaterule",
					Description: `(Optional) Expression to extract relaystate to be sent along with assertion. Evaluation of this expression should return TEXT content. This is typically a target url to which user is redirected after the recipient validates SAML token`,
				},
				resource.Attribute{
					Name:        "samlissuername",
					Description: `(Optional) The name to be used in requests sent from Citrix ADC to IdP to uniquely identify Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "samlsigningcertname",
					Description: `(Optional) Name of the signing authority as given in the SAML server's SSL certificate.`,
				},
				resource.Attribute{
					Name:        "samlspcertname",
					Description: `(Optional) Name of the SSL certificate of peer/receving party using which Assertion is encrypted.`,
				},
				resource.Attribute{
					Name:        "sendpassword",
					Description: `(Optional) Option to send password in assertion.`,
				},
				resource.Attribute{
					Name:        "signassertion",
					Description: `(Optional) Option to sign portions of assertion when Citrix ADC IDP sends one. Based on the user selection, either Assertion or Response or Both or none can be signed`,
				},
				resource.Attribute{
					Name:        "signaturealg",
					Description: `(Optional) Algorithm to be used to sign/verify SAML transactions`,
				},
				resource.Attribute{
					Name:        "signatureservice",
					Description: `(Optional) Name of the service in cloud used to sign the data`,
				},
				resource.Attribute{
					Name:        "skewtime",
					Description: `(Optional) This option specifies the number of minutes on either side of current time that the assertion would be valid. For example, if skewTime is 10, then assertion would be valid from (current time - 10) min to (current time + 10) min, ie 20min in all. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnsamlssoprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnsamlssoprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnsamlssoprofile.tf_vpnsamlssoprofile tf_vpnsamlssoprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnsamlssoprofile. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnsamlssoprofile can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnsamlssoprofile.tf_vpnsamlssoprofile tf_vpnsamlssoprofile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnsessionaction",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnsessionaction resource is used to create vpn session action.

`,
			Keywords: []string{
				"vpn",
				"vpnsessionaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the Citrix Gateway profile (action). Must begin with an ASCII alphabetic or underscore (_) character, and must consist only of ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the profile is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action').`,
				},
				resource.Attribute{
					Name:        "advancedclientlessvpnmode",
					Description: `(Optional) Option to enable/disable Advanced ClientlessVpnMode. Additionaly, it can be set to STRICT to block Classic ClientlessVpnMode while in AdvancedClientlessMode.`,
				},
				resource.Attribute{
					Name:        "allowedlogingroups",
					Description: `(Optional) Specify groups that have permission to log on to Citrix Gateway. Users who do not belong to this group or groups are denied access even if they have valid credentials.`,
				},
				resource.Attribute{
					Name:        "allprotocolproxy",
					Description: `(Optional) IP address of the proxy server to use for all protocols supported by Citrix Gateway.`,
				},
				resource.Attribute{
					Name:        "alwaysonprofilename",
					Description: `(Optional) Name of the AlwaysON profile associated with the session action. The builtin profile named none can be used to explicitly disable AlwaysON for the session action.`,
				},
				resource.Attribute{
					Name:        "authorizationgroup",
					Description: `(Optional) Comma-separated list of groups in which the user is placed when none of the groups that the user is a part of is configured on Citrix Gateway. The authorization policy can be bound to these groups to control access to the resources.`,
				},
				resource.Attribute{
					Name:        "autoproxyurl",
					Description: `(Optional) URL to auto proxy config file`,
				},
				resource.Attribute{
					Name:        "citrixreceiverhome",
					Description: `(Optional) Web address for the Citrix Receiver home page. Configure Citrix Gateway so that when users log on to the appliance, the Citrix Gateway Plug-in opens a web browser that allows single sign-on to the Citrix Receiver home page.`,
				},
				resource.Attribute{
					Name:        "clientchoices",
					Description: `(Optional) Provide users with multiple logon options. With client choices, users have the option of logging on by using the Citrix Gateway Plug-in for Windows, Citrix Gateway Plug-in for Java, the Web Interface, or clientless access from one location. Depending on how Citrix Gateway is configured, users are presented with up to three icons for logon choices. The most common are the Citrix Gateway Plug-in for Windows, Web Interface, and clientless access.`,
				},
				resource.Attribute{
					Name:        "clientcleanupprompt",
					Description: `(Optional) Prompt for client-side cache clean-up when a client-initiated session closes.`,
				},
				resource.Attribute{
					Name:        "clientconfiguration",
					Description: `(Optional) Allow users to change client Debug logging level in Configuration tab of the Citrix Gateway Plug-in for Windows.`,
				},
				resource.Attribute{
					Name:        "clientdebug",
					Description: `(Optional) Set the trace level on Citrix Gateway. Technical support technicians use these debug logs for in-depth debugging and troubleshooting purposes. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "clientidletimeout",
					Description: `(Optional) Time, in minutes, after which to time out the user session if Citrix Gateway does not detect mouse or keyboard activity.`,
				},
				resource.Attribute{
					Name:        "clientlessmodeurlencoding",
					Description: `(Optional) When clientless access is enabled, you can choose to encode the addresses of internal web applications or to leave the address as clear text. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "clientlesspersistentcookie",
					Description: `(Optional) State of persistent cookies in clientless access mode. Persistent cookies are required for accessing certain features of SharePoint, such as opening and editing Microsoft Word, Excel, and PowerPoint documents hosted on the SharePoint server. A persistent cookie remains on the user device and is sent with each HTTP request. Citrix Gateway encrypts the persistent cookie before sending it to the plug-in on the user device, and refreshes the cookie periodically as long as the session exists. The cookie becomes stale if the session ends. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "clientlessvpnmode",
					Description: `(Optional) Enable clientless access for web, XenApp or XenDesktop, and FileShare resources without installing the Citrix Gateway Plug-in. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "clientoptions",
					Description: `(Optional) Display only the configured menu options when you select the "Configure Citrix Gateway" option in the Citrix Gateway Plug-in system tray icon for Windows.`,
				},
				resource.Attribute{
					Name:        "clientsecurity",
					Description: `(Optional) Specify the client security check for the user device to permit a Citrix Gateway session. The web address or IP address is not included in the expression for the client security check.`,
				},
				resource.Attribute{
					Name:        "clientsecuritygroup",
					Description: `(Optional) The client security group that will be assigned on failure of the client security check. Users can in general be organized into Groups. In this case, the Client Security Group may have a more restrictive security policy.`,
				},
				resource.Attribute{
					Name:        "clientsecuritylog",
					Description: `(Optional) Set the logging of client security checks.`,
				},
				resource.Attribute{
					Name:        "clientsecuritymessage",
					Description: `(Optional) The client security message that will be displayed on failure of the client security check.`,
				},
				resource.Attribute{
					Name:        "defaultauthorizationaction",
					Description: `(Optional) Specify the network resources that users have access to when they log on to the internal network. The default setting for authorization is to deny access to all network resources. Citrix recommends using the default global setting and then creating authorization policies to define the network resources users can access. If you set the default authorization policy to DENY, you must explicitly authorize access to any network resource, which improves security.`,
				},
				resource.Attribute{
					Name:        "dnsvservername",
					Description: `(Optional) Name of the DNS virtual server for the user session.`,
				},
				resource.Attribute{
					Name:        "emailhome",
					Description: `(Optional) Web address for the web-based email, such as Outlook Web Access.`,
				},
				resource.Attribute{
					Name:        "epaclienttype",
					Description: `(Optional) Choose between two types of End point Windows Client a) Application Agent - which always runs in the task bar as a standalone application and also has a supporting service which runs permanently when installed b) Activex Control - ActiveX control run by Microsoft Internet Explorer.`,
				},
				resource.Attribute{
					Name:        "forcecleanup",
					Description: `(Optional) Force cache clean-up when the user closes a session. You can specify all, none, or any combination of the client-side items.`,
				},
				resource.Attribute{
					Name:        "forcedtimeout",
					Description: `(Optional) Force a disconnection from the Citrix Gateway Plug-in with Citrix Gateway after a specified number of minutes. If the session closes, the user must log on again.`,
				},
				resource.Attribute{
					Name:        "forcedtimeoutwarning",
					Description: `(Optional) Number of minutes to warn a user before the user session is disconnected.`,
				},
				resource.Attribute{
					Name:        "fqdnspoofedip",
					Description: `(Optional) Spoofed IP address range that can be used by client for FQDN based split tunneling`,
				},
				resource.Attribute{
					Name:        "ftpproxy",
					Description: `(Optional) IP address of the proxy server to be used for FTP access for all subsequent connections to the internal network.`,
				},
				resource.Attribute{
					Name:        "gopherproxy",
					Description: `(Optional) IP address of the proxy server to be used for GOPHER access for all subsequent connections to the internal network.`,
				},
				resource.Attribute{
					Name:        "homepage",
					Description: `(Optional) Web address of the home page that appears when users log on. Otherwise, users receive the default home page for Citrix Gateway, which is the Access Interface.`,
				},
				resource.Attribute{
					Name:        "httpport",
					Description: `(Optional) Destination port numbers other than port 80, added as a comma-separated list. Traffic to these ports is processed as HTTP traffic, which allows functionality, such as HTTP authorization and single sign-on to a web application to work.`,
				},
				resource.Attribute{
					Name:        "httpproxy",
					Description: `(Optional) IP address of the proxy server to be used for HTTP access for all subsequent connections to the internal network.`,
				},
				resource.Attribute{
					Name:        "icaproxy",
					Description: `(Optional) Enable ICA proxy to configure secure Internet access to servers running Citrix XenApp or XenDesktop by using Citrix Receiver instead of the Citrix Gateway Plug-in.`,
				},
				resource.Attribute{
					Name:        "iconwithreceiver",
					Description: `(Optional) Option to decide whether to show plugin icon along with receiver`,
				},
				resource.Attribute{
					Name:        "iipdnssuffix",
					Description: `(Optional) An intranet IP DNS suffix. When a user logs on to Citrix Gateway and is assigned an IP address, a DNS record for the user name and IP address combination is added to the Citrix Gateway DNS cache. You can configure a DNS suffix to append to the user name when the DNS record is added to the cache. You can reach to the host from where the user is logged on by using the user's name, which can be easier to remember than an IP address. When the user logs off from Citrix Gateway, the record is removed from the DNS cache.`,
				},
				resource.Attribute{
					Name:        "kcdaccount",
					Description: `(Optional) The kcd account details to be used in SSO`,
				},
				resource.Attribute{
					Name:        "killconnections",
					Description: `(Optional) Specify whether the Citrix Gateway Plug-in should disconnect all preexisting connections, such as the connections existing before the user logged on to Citrix Gateway, and prevent new incoming connections on the Citrix Gateway Plug-in for Windows and MAC when the user is connected to Citrix Gateway and split tunneling is disabled.`,
				},
				resource.Attribute{
					Name:        "linuxpluginupgrade",
					Description: `(Optional) Option to set plugin upgrade behaviour for Linux`,
				},
				resource.Attribute{
					Name:        "locallanaccess",
					Description: `(Optional) Set local LAN access. If split tunneling is OFF, and you set local LAN access to ON, the local client can route traffic to its local interface. When the local area network switch is specified, this combination of switches is useful. The client can allow local LAN access to devices that commonly have non-routable addresses, such as local printers or local file servers.`,
				},
				resource.Attribute{
					Name:        "loginscript",
					Description: `(Optional) Path to the logon script that is run when a session is established. Separate multiple scripts by using comma. A "$" in the path signifies that the word following the "$" is an environment variable.`,
				},
				resource.Attribute{
					Name:        "logoutscript",
					Description: `(Optional) Path to the logout script. Separate multiple scripts by using comma. A "$" in the path signifies that the word following the "$" is an environment variable.`,
				},
				resource.Attribute{
					Name:        "macpluginupgrade",
					Description: `(Optional) Option to set plugin upgrade behaviour for Mac`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) The netmask for the spoofed ip address`,
				},
				resource.Attribute{
					Name:        "ntdomain",
					Description: `(Optional) Single sign-on domain to use for single sign-on to applications in the internal network. This setting can be overwritten by the domain that users specify at the time of logon or by the domain that the authentication server returns.`,
				},
				resource.Attribute{
					Name:        "pcoipprofilename",
					Description: `(Optional) Name of the PCOIP profile associated with the session action. The builtin profile named none can be used to explicitly disable PCOIP for the session action.`,
				},
				resource.Attribute{
					Name:        "proxy",
					Description: `(Optional) Set options to apply proxy for accessing the internal resources. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "proxyexception",
					Description: `(Optional) Proxy exception string that will be configured in the browser for bypassing the previously configured proxies. Allowed only if proxy type is Browser.`,
				},
				resource.Attribute{
					Name:        "proxylocalbypass",
					Description: `(Optional) Bypass proxy server for local addresses option in Internet Explorer and Firefox proxy server settings.`,
				},
				resource.Attribute{
					Name:        "rdpclientprofilename",
					Description: `(Optional) Name of the RDP profile associated with the vserver.`,
				},
				resource.Attribute{
					Name:        "rfc1918",
					Description: `(Optional) As defined in the local area network, allow only the following local area network addresses to bypass the VPN tunnel when the local LAN access feature is enabled:`,
				},
				resource.Attribute{
					Name:        "securebrowse",
					Description: `(Optional) Allow users to connect through Citrix Gateway to network resources from iOS and Android mobile devices with Citrix Receiver. Users do not need to establish a full VPN tunnel to access resources in the secure network.`,
				},
				resource.Attribute{
					Name:        "sesstimeout",
					Description: `(Optional) Number of minutes after which the session times out.`,
				},
				resource.Attribute{
					Name:        "sfgatewayauthtype",
					Description: `(Optional) The authentication type configured for the Citrix Gateway on StoreFront.`,
				},
				resource.Attribute{
					Name:        "smartgroup",
					Description: `(Optional) This is the default group that is chosen when the authentication succeeds in addition to extracted groups.`,
				},
				resource.Attribute{
					Name:        "socksproxy",
					Description: `(Optional) IP address of the proxy server to be used for SOCKS access for all subsequent connections to the internal network.`,
				},
				resource.Attribute{
					Name:        "splitdns",
					Description: `(Optional) Route the DNS requests to the local DNS server configured on the user device, or Citrix Gateway (remote), or both.`,
				},
				resource.Attribute{
					Name:        "splittunnel",
					Description: `(Optional) Send, through the tunnel, traffic only for intranet applications that are defined in Citrix Gateway. Route all other traffic directly to the Internet. The OFF setting routes all traffic through Citrix Gateway. With the REVERSE setting, intranet applications define the network traffic that is not intercepted. All network traffic directed to internal IP addresses bypasses the VPN tunnel, while other traffic goes through Citrix Gateway. Reverse split tunneling can be used to log all non-local LAN traffic. For example, if users have a home network and are logged on through the Citrix Gateway Plug-in, network traffic destined to a printer or another device within the home network is not intercepted.`,
				},
				resource.Attribute{
					Name:        "spoofiip",
					Description: `(Optional) IP address that the intranet application uses to route the connection through the virtual adapter.`,
				},
				resource.Attribute{
					Name:        "sslproxy",
					Description: `(Optional) IP address of the proxy server to be used for SSL access for all subsequent connections to the internal network.`,
				},
				resource.Attribute{
					Name:        "sso",
					Description: `(Optional) Set single sign-on (SSO) for the session. When the user accesses a server, the user's logon credentials are passed to the server for authentication. NOTE : This configuration does not honor the following authentication types for security reason. BASIC, DIGEST, and NTLM (without Negotiate NTLM2 Key or Negotiate Sign Flag). Use VPN TrafficAction to configure SSO for these authentication types.`,
				},
				resource.Attribute{
					Name:        "ssocredential",
					Description: `(Optional) Specify whether to use the primary or secondary authentication credentials for single sign-on to the server.`,
				},
				resource.Attribute{
					Name:        "storefronturl",
					Description: `(Optional) Web address for StoreFront to be used in this session for enumeration of resources from XenApp or XenDesktop.`,
				},
				resource.Attribute{
					Name:        "transparentinterception",
					Description: `(Optional) Allow access to network resources by using a single IP address and subnet mask or a range of IP addresses. The OFF setting sets the mode to proxy, in which you configure destination and source IP addresses and port numbers. If you are using the Citrix Gateway Plug-in for Windows, set this parameter to ON, in which the mode is set to transparent. If you are using the Citrix Gateway Plug-in for Java, set this parameter to OFF.`,
				},
				resource.Attribute{
					Name:        "useiip",
					Description: `(Optional) Define IP address pool options. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "usemip",
					Description: `(Optional) Enable or disable the use of a unique IP address alias, or a mapped IP address, as the client IP address for each client session. Allow Citrix Gateway to use the mapped IP address as an intranet IP address when all other IP addresses are not available. When IP pooling is configured and the mapped IP is used as an intranet IP address, the mapped IP address is used when an intranet IP address cannot be assigned.`,
				},
				resource.Attribute{
					Name:        "useraccounting",
					Description: `(Optional) The name of the radiusPolicy to use for RADIUS user accounting info on the session.`,
				},
				resource.Attribute{
					Name:        "wihome",
					Description: `(Optional) Web address of the Web Interface server, such as http://<ipAddress>/Citrix/XenApp, or Receiver for Web, which enumerates the virtualized resources, such as XenApp, XenDesktop, and cloud applications. This web address is used as the home page in ICA proxy mode. If Client Choices is ON, you must configure this setting. Because the user can choose between FullClient and ICAProxy, the user may see a different home page. An Internet web site may appear if the user gets the FullClient option, or a Web Interface site if the user gets the ICAProxy option. If the setting is not configured, the XenApp option does not appear as a client choice.`,
				},
				resource.Attribute{
					Name:        "wihomeaddresstype",
					Description: `(Optional) Type of the wihome address(IPV4/V6)`,
				},
				resource.Attribute{
					Name:        "windowsautologon",
					Description: `(Optional) Enable or disable the Windows Auto Logon for the session. If a VPN session is established after this setting is enabled, the user is automatically logged on by using Windows credentials after the system is restarted.`,
				},
				resource.Attribute{
					Name:        "windowsclienttype",
					Description: `(Optional) Choose between two types of Windows Client\ a) Application Agent - which always runs in the task bar as a standalone application and also has a supporting service which runs permanently when installed\ b) Activex Control - ActiveX control run by Microsoft Internet Explorer.`,
				},
				resource.Attribute{
					Name:        "windowspluginupgrade",
					Description: `(Optional) Option to set plugin upgrade behaviour for Win`,
				},
				resource.Attribute{
					Name:        "winsip",
					Description: `(Optional) WINS server IP address to add to Citrix Gateway for name resolution.`,
				},
				resource.Attribute{
					Name:        "wiportalmode",
					Description: `(Optional) Layout on the Access Interface. The COMPACT value indicates the use of small icons. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnsessionaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnsessionaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnsessionaction.tf_sessionaction newsession ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnsessionaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnsessionaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnsessionaction.tf_sessionaction newsession ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnsessionpolicy",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnsessionpolicy resource is used to create vpn session policy.


`,
			Keywords: []string{
				"vpn",
				"vpnsessionpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new session policy that is applied after the user logs on to Citrix Gateway.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Action to be applied by the new session policy if the rule criteria are met.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression, or name of a named expression, specifying the traffic that matches the policy. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnsessionpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnsessionpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnsessionpolicy.tf_vpnsessionpolicy tf_vpnsessionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnsessionpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnsessionpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnsessionpolicy.tf_vpnsessionpolicy tf_vpnsessionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpntrafficaction",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpntrafficaction resource is used to create vpn traffic action.


`,
			Keywords: []string{
				"vpn",
				"vpntrafficaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the traffic action. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after a traffic action is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my action" or 'my action').`,
				},
				resource.Attribute{
					Name:        "qual",
					Description: `(Required) Protocol, either HTTP or TCP, to be used with the action.`,
				},
				resource.Attribute{
					Name:        "apptimeout",
					Description: `(Optional) Maximum amount of time, in minutes, a user can stay logged on to the web application.`,
				},
				resource.Attribute{
					Name:        "formssoaction",
					Description: `(Optional) Name of the form-based single sign-on profile. Form-based single sign-on allows users to log on one time to all protected applications in your network, instead of requiring them to log on separately to access each one.`,
				},
				resource.Attribute{
					Name:        "fta",
					Description: `(Optional) Specify file type association, which is a list of file extensions that users are allowed to open.`,
				},
				resource.Attribute{
					Name:        "hdx",
					Description: `(Optional) Provide hdx proxy to the ICA traffic`,
				},
				resource.Attribute{
					Name:        "kcdaccount",
					Description: `(Optional) Kerberos constrained delegation account name`,
				},
				resource.Attribute{
					Name:        "passwdexpression",
					Description: `(Optional) expression that will be evaluated to obtain password for SingleSignOn`,
				},
				resource.Attribute{
					Name:        "proxy",
					Description: `(Optional) IP address and Port of the proxy server to be used for HTTP access for this request.`,
				},
				resource.Attribute{
					Name:        "samlssoprofile",
					Description: `(Optional) Profile to be used for doing SAML SSO to remote relying party`,
				},
				resource.Attribute{
					Name:        "sso",
					Description: `(Optional) Provide single sign-on to the web application. NOTE : Authentication mechanisms like Basic-authentication require the user credentials to be sent in plaintext which is not secure if the server is running on HTTP (instead of HTTPS).`,
				},
				resource.Attribute{
					Name:        "userexpression",
					Description: `(Optional) expression that will be evaluated to obtain username for SingleSignOn`,
				},
				resource.Attribute{
					Name:        "wanscaler",
					Description: `(Optional) Use the Repeater Plug-in to optimize network traffic. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpntrafficaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpntrafficaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpntrafficaction.tf_vpntrafficaction Testing ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpntrafficaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpntrafficaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpntrafficaction.tf_vpntrafficaction Testing ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpntrafficpolicy",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpntrafficpolicy resource is used to create vpn traffic policy.


`,
			Keywords: []string{
				"vpn",
				"vpntrafficpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the traffic policy. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Cannot be changed after the policy is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my policy" or 'my policy').`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Action to apply to traffic that matches the policy.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression, or name of a named expression, against which traffic is evaluated. The following requirements apply only to the Citrix ADC CLI:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpntrafficpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpntrafficpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpntrafficpolicy.tf_vpntrafficpolicy tf_vpntrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpntrafficpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpntrafficpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpntrafficpolicy.tf_vpntrafficpolicy tf_vpntrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnurl",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnurl resource is used to create a new vpn-url.


`,
			Keywords: []string{
				"vpn",
				"vpnurl",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "urlname",
					Description: `(Required) Name of the bookmark link.`,
				},
				resource.Attribute{
					Name:        "actualurl",
					Description: `(Required) Web address for the bookmark link.`,
				},
				resource.Attribute{
					Name:        "linkname",
					Description: `(Required) Description of the bookmark link. The description appears in the Access Interface.`,
				},
				resource.Attribute{
					Name:        "appjson",
					Description: `(Optional) To store the template details in the json format.`,
				},
				resource.Attribute{
					Name:        "applicationtype",
					Description: `(Optional) The type of application this VPN URL represents. Possible values are CVPN/SaaS/VPN`,
				},
				resource.Attribute{
					Name:        "clientlessaccess",
					Description: `(Optional) If clientless access to the resource hosting the link is allowed, also use clientless access for the bookmarked web address in the Secure Client Access based session. Allows single sign-on and other HTTP processing on Citrix Gateway for HTTPS resources.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments associated with the bookmark link.`,
				},
				resource.Attribute{
					Name:        "iconurl",
					Description: `(Optional) URL to fetch icon file for displaying this resource.`,
				},
				resource.Attribute{
					Name:        "samlssoprofile",
					Description: `(Optional) Profile to be used for doing SAML SSO`,
				},
				resource.Attribute{
					Name:        "ssotype",
					Description: `(Optional) Single sign on type for unified gateway`,
				},
				resource.Attribute{
					Name:        "vservername",
					Description: `(Optional) Name of the associated LB/CS vserver ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnurl. It has the same value as the ` + "`" + `urlname` + "`" + ` attribute. ## Import A vpnurl can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnurl.tf_vpnurl Firsturl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnurl. It has the same value as the ` + "`" + `urlname` + "`" + ` attribute. ## Import A vpnurl can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnurl.tf_vpnurl Firsturl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnurlaction",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnurlaction resource is used to create vpn url action.


`,
			Keywords: []string{
				"vpn",
				"vpnurlaction",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the bookmark link.`,
				},
				resource.Attribute{
					Name:        "linkname",
					Description: `(Required) Description of the bookmark link. The description appears in the Access Interface.`,
				},
				resource.Attribute{
					Name:        "actualurl",
					Description: `(Required) Web address for the bookmark link.`,
				},
				resource.Attribute{
					Name:        "applicationtype",
					Description: `(Optional) The type of application this VPN URL represents. Possible values are CVPN/SaaS/VPN`,
				},
				resource.Attribute{
					Name:        "clientlessaccess",
					Description: `(Optional) If clientless access to the resource hosting the link is allowed, also use clientless access for the bookmarked web address in the Secure Client Access based session. Allows single sign-on and other HTTP processing on NetScaler Gateway for HTTPS resources.`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments associated with the bookmark link.`,
				},
				resource.Attribute{
					Name:        "iconurl",
					Description: `(Optional) URL to fetch icon file for displaying this resource.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the vpn urlAction. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. The following requirement applies only to the NetScaler CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vpnurl action" or 'my vpnurl action').`,
				},
				resource.Attribute{
					Name:        "samlssoprofile",
					Description: `(Optional) Profile to be used for doing SAML SSO`,
				},
				resource.Attribute{
					Name:        "ssotype",
					Description: `(Optional) Single sign on type for unified gateway`,
				},
				resource.Attribute{
					Name:        "vservername",
					Description: `(Optional) Name of the associated vserver to handle selfAuth SSO ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnurlaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnurlaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnurlaction.tf_vpnurlaction tf_vpnurlaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnurlaction. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnurlaction can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnurlaction.tf_vpnurlaction tf_vpnurlaction ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnurlpolicy",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnurlpolicy resource is used to create vpn url policy.


`,
			Keywords: []string{
				"vpn",
				"vpnurlpolicy",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the new urlPolicy.`,
				},
				resource.Attribute{
					Name:        "action",
					Description: `(Required) Action to be applied by the new urlPolicy if the rule criteria are met.`,
				},
				resource.Attribute{
					Name:        "rule",
					Description: `(Required) Expression, or name of a named expression, specifying the traffic that matches the policy. The following requirements apply only to the NetScaler CLI:`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments to preserve information about this policy.`,
				},
				resource.Attribute{
					Name:        "logaction",
					Description: `(Optional) Name of messagelog action to use when a request matches this policy.`,
				},
				resource.Attribute{
					Name:        "newname",
					Description: `(Optional) New name for the vpn urlPolicy. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.) hash (#), space ( ), at (@), equals (=), colon (:), and underscore characters. The following requirement applies only to the NetScaler CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my vpnurl policy" or 'my vpnurl policy'). ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnurlpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnurlpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnurlpolicy.tf_vpnurlpolicy new_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnurlpolicy. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnurlpolicy can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnurlpolicy.tf_vpnurlpolicy new_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The ` + "`" + `vpnvserver` + "`" + ` resource is used to create SSL VPN virtual server.

`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name for the Citrix Gateway virtual server. Must begin with an ASCII alphabetic or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at (@), equals (=), and hyphen (-) characters. Can be changed after the virtual server is created. The following requirement applies only to the Citrix ADC CLI: If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, "my server" or 'my server').`,
				},
				resource.Attribute{
					Name:        "servicetype",
					Description: `(Required) Protocol used by the Citrix Gateway virtual server.`,
				},
				resource.Attribute{
					Name:        "advancedepa",
					Description: `(Optional) This option tells whether advanced EPA is enabled on this virtual server`,
				},
				resource.Attribute{
					Name:        "appflowlog",
					Description: `(Optional) Log AppFlow records that contain standard NetFlow or IPFIX information, such as time stamps for the beginning and end of a flow, packet count, and byte count. Also log records that contain application-level information, such as HTTP web addresses, HTTP request methods and response status codes, server response time, and latency.`,
				},
				resource.Attribute{
					Name:        "authentication",
					Description: `(Optional) Require authentication for users connecting to Citrix Gateway.`,
				},
				resource.Attribute{
					Name:        "authnprofile",
					Description: `(Optional) Authentication Profile entity on virtual server. This entity can be used to offload authentication to AAA vserver for multi-factor(nFactor) authentication`,
				},
				resource.Attribute{
					Name:        "certkeynames",
					Description: `(Optional) Name of the certificate key that was bound to the corresponding SSL virtual server as the Certificate Authority for the device certificate`,
				},
				resource.Attribute{
					Name:        "cginfrahomepageredirect",
					Description: `(Optional) When client requests ShareFile resources and Citrix Gateway detects that the user is unauthenticated or the user session has expired, disabling this option takes the user to the originally requested ShareFile resource after authentication (instead of taking the user to the default VPN home page)`,
				},
				resource.Attribute{
					Name:        "comment",
					Description: `(Optional) Any comments associated with the virtual server.`,
				},
				resource.Attribute{
					Name:        "deploymenttype",
					Description: `(Optional) 0`,
				},
				resource.Attribute{
					Name:        "devicecert",
					Description: `(Optional) Indicates whether device certificate check as a part of EPA is on or off.`,
				},
				resource.Attribute{
					Name:        "doublehop",
					Description: `(Optional) Use the Citrix Gateway appliance in a double-hop configuration. A double-hop deployment provides an extra layer of security for the internal network by using three firewalls to divide the DMZ into two stages. Such a deployment can have one appliance in the DMZ and one appliance in the secure network.`,
				},
				resource.Attribute{
					Name:        "downstateflush",
					Description: `(Optional) Close existing connections when the virtual server is marked DOWN, which means the server might have timed out. Disconnecting existing connections frees resources and in certain cases speeds recovery of overloaded load balancing setups. Enable this setting on servers in which the connections can safely be closed when they are marked DOWN. Do not enable DOWN state flush on servers that must complete their transactions.`,
				},
				resource.Attribute{
					Name:        "dtls",
					Description: `(Optional) This option starts/stops the turn service on the vserver`,
				},
				resource.Attribute{
					Name:        "failedlogintimeout",
					Description: `(Optional) Number of minutes an account will be locked if user exceeds maximum permissible attempts`,
				},
				resource.Attribute{
					Name:        "httpprofilename",
					Description: `(Optional) Name of the HTTP profile to assign to this virtual server.`,
				},
				resource.Attribute{
					Name:        "icaonly",
					Description: `(Optional) - When set to ON, it implies Basic mode where the user can log on using either Citrix Receiver or a browser and get access to the published apps configured at the XenApp/XenDEsktop environment pointed out by the WIHome parameter. Users are not allowed to connect using the Citrix Gateway Plug-in and end point scans cannot be configured. Number of users that can log in and access the apps are not limited by the license in this mode. - When set to OFF, it implies Smart Access mode where the user can log on using either Citrix Receiver or a browser or a Citrix Gateway Plug-in. The admin can configure end point scans to be run on the client systems and then use the results to control access to the published apps. In this mode, the client can connect to the gateway in other client modes namely VPN and CVPN. Number of users that can log in and access the resources are limited by the CCU licenses in this mode.`,
				},
				resource.Attribute{
					Name:        "icaproxysessionmigration",
					Description: `(Optional) This option determines if an existing ICA Proxy session is transferred when the user logs on from another device.`,
				},
				resource.Attribute{
					Name:        "icmpvsrresponse",
					Description: `(Optional) Criterion for responding to PING requests sent to this virtual server. If this parameter is set to ACTIVE, respond only if the virtual server is available. With the PASSIVE setting, respond even if the virtual server is not available.`,
				},
				resource.Attribute{
					Name:        "ipset",
					Description: `(Optional) The list of IPv4/IPv6 addresses bound to ipset would form a part of listening service on the current vpn vserver`,
				},
				resource.Attribute{
					Name:        "ipv46",
					Description: `(Optional) IPv4 or IPv6 address of the Citrix Gateway virtual server. Usually a public IP address. User devices send connection requests to this IP address.`,
				},
				resource.Attribute{
					Name:        "l2conn",
					Description: `(Optional) Use Layer 2 parameters (channel number, MAC address, and VLAN ID) in addition to the 4-tuple (<source IP>:<source port>::<destination IP>:<destination port>) that is used to identify a connection. Allows multiple TCP and non-TCP connections with the same 4-tuple to coexist on the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "linuxepapluginupgrade",
					Description: `(Optional) Option to set plugin upgrade behaviour for Linux`,
				},
				resource.Attribute{
					Name:        "listenpolicy",
					Description: `(Optional) String specifying the listen policy for the Citrix Gateway virtual server. Can be either a named expression or an expression. The Citrix Gateway virtual server processes only the traffic for which the expression evaluates to true.`,
				},
				resource.Attribute{
					Name:        "listenpriority",
					Description: `(Optional) Integer specifying the priority of the listen policy. A higher number specifies a lower priority. If a request matches the listen policies of more than one virtual server, the virtual server whose listen policy has the highest priority (the lowest priority number) accepts the request.`,
				},
				resource.Attribute{
					Name:        "loginonce",
					Description: `(Optional) This option enables/disables seamless SSO for this Vserver.`,
				},
				resource.Attribute{
					Name:        "logoutonsmartcardremoval",
					Description: `(Optional) Option to VPN plugin behavior when smartcard or its reader is removed`,
				},
				resource.Attribute{
					Name:        "macepapluginupgrade",
					Description: `(Optional) Option to set plugin upgrade behaviour for Mac`,
				},
				resource.Attribute{
					Name:        "maxaaausers",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "maxloginattempts",
					Description: `(Optional)`,
				},
				resource.Attribute{
					Name:        "netprofile",
					Description: `(Optional) The name of the network profile.`,
				},
				resource.Attribute{
					Name:        "pcoipvserverprofilename",
					Description: `(Optional) Name of the PCoIP vserver profile associated with the vserver.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) TCP port on which the virtual server listens.`,
				},
				resource.Attribute{
					Name:        "range",
					Description: `(Optional) Range of Citrix Gateway virtual server IP addresses. The consecutively numbered range of IP addresses begins with the address specified by the IP Address parameter. In the configuration utility, select Network VServer to enter a range.`,
				},
				resource.Attribute{
					Name:        "rdpserverprofilename",
					Description: `(Optional) Name of the RDP server profile associated with the vserver.`,
				},
				resource.Attribute{
					Name:        "rhistate",
					Description: `(Optional) A host route is injected according to the setting on the virtual servers.`,
				},
				resource.Attribute{
					Name:        "samesite",
					Description: `(Optional) SameSite attribute value for Cookies generated in VPN context. This attribute value will be appended only for the cookies which are specified in the builtin patset ns_cookies_samesite`,
				},
				resource.Attribute{
					Name:        "state",
					Description: `(Optional) State of the virtual server. If the virtual server is disabled, requests are not processed.`,
				},
				resource.Attribute{
					Name:        "tcpprofilename",
					Description: `(Optional) Name of the TCP profile to assign to this virtual server.`,
				},
				resource.Attribute{
					Name:        "userdomains",
					Description: `(Optional) List of user domains specified as comma seperated value`,
				},
				resource.Attribute{
					Name:        "vserverfqdn",
					Description: `(Optional) Fully qualified domain name for a VPN virtual server. This is used during StoreFront configuration generation.`,
				},
				resource.Attribute{
					Name:        "windowsepapluginupgrade",
					Description: `(Optional) Option to set plugin upgrade behaviour for Win ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `vpnvserver` + "`" + `. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnvserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver.tf_vpnserver tf.citrix.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the ` + "`" + `vpnvserver` + "`" + `. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vpnvserver can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver.tf_vpnserver tf.citrix.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_aaapreauthenticationpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_aaapreauthenticationpolicy_binding resource is used to to bind aaapreauthenticationpolicy to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"aaapreauthenticationpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_aaapreauthenticationpolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_aaapreauthenticationpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_aaapreauthenticationpolicy_binding.tf_binding tf_vpnvserverexample,tf_aaapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_aaapreauthenticationpolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_aaapreauthenticationpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_aaapreauthenticationpolicy_binding.tf_binding tf_vpnvserverexample,tf_aaapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_analyticsprofile_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_analyticsprofile_binding resource is used to bind analyticsprofile to vpnvserver.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"analyticsprofile",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "analyticsprofile",
					Description: `(Required) Name of the analytics profile bound to the VPN Vserver ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_analyticsprofile_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `analyticsprofile` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_analyticsprofile_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_analyticsprofile_binding.tf_bind tf_vserver,new_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_analyticsprofile_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `analyticsprofile` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_analyticsprofile_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_analyticsprofile_binding.tf_bind tf_vserver,new_profile ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_appcontroller_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_appcontroller_binding resource is used to bind appcontroller to vpnvserver.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"appcontroller",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "appcontroller",
					Description: `(Required) Configured App Controller server in XenMobile deployment. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_appcontroller_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `appcontroller` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_appcontroller_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_appcontroller_binding.tf_bind tf_newvserver,http://www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_appcontroller_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `appcontroller` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_appcontroller_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_appcontroller_binding.tf_bind tf_newvserver,http://www.example.com ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_appflowpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_appflowpolicy_binding resource is used to bind appflowpolicy to vpnvserver.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"appflowpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bindpoint to which the policy is bound.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Next priority expression.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_appflowpolicy_binding. t is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_appflowpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_appflowpolicy_binding.tf_bind tf_vpnvserver,tf_appflowpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_appflowpolicy_binding. t is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_appflowpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_appflowpolicy_binding.tf_bind tf_vpnvserver,tf_appflowpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_auditnslogpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_auditnslogpolicy_binding resource is used to bind auditnslogpolicy to vpnvserver.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"auditnslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_auditnslogpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_auditnslogpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_auditnslogpolicy_binding.tf_bind tf_vpnvserver,tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_auditnslogpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_auditnslogpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_auditnslogpolicy_binding.tf_bind tf_vpnvserver,tf_auditnslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_auditsyslogpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_auditsyslogpolicy_binding resource is used to bind vpnvserver to auditsyslogpolicy resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"auditsyslogpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_auditsyslogpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_auditsyslogpolicy_binding can be imported using its id , e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_auditsyslogpolicy_binding.tf_bind tf_vpnvserver,tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_auditsyslogpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_auditsyslogpolicy_binding can be imported using its id , e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_auditsyslogpolicy_binding.tf_bind tf_vpnvserver,tf_auditsyslogpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_authenticationcertpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_authenticationcertpolicy_binding resource is used to bing the authenticationcertpolicy to the vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"authenticationcertpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationcertpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationcertpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationcertpolicy_binding.tf_bind tf_vserver,tf_certpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationcertpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationcertpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationcertpolicy_binding.tf_bind tf_vserver,tf_certpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_authenticationdfapolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_authenticationdfapolicy_binding resource is used to bind authenticationdfapolicy to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"authenticationdfapolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationdfapolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationdfapolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationdfapolicy_binding.tf_bind tf_vpnvserver,td_dfapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationdfapolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationdfapolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationdfapolicy_binding.tf_bind tf_vpnvserver,td_dfapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_authenticationldappolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_authenticationldappolicy_binding resource is used to bind vpnvserver to authentication ldap policy.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"authenticationldappolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationldappolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_authenticationldappolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationldappolicy_binding.tf_bind vpn_vserver,tf_ldappolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationldappolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_authenticationldappolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationldappolicy_binding.tf_bind vpn_vserver,tf_ldappolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_authenticationlocalpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_authenticationlocalpolicy_binding resource is used to bind authenticationlocalpolicy to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"authenticationlocalpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationlocalpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationlocalpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationlocalpolicy_binding.tf_bind tfvserver_example,tf_localpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationlocalpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationlocalpolicy_binding can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationlocalpolicy_binding.tf_bind tfvserver_example,tf_localpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_authenticationloginschemapolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_authenticationloginschemapolicy_binding resource is used to bind authenticationloginschemapolicy to vpnvserver.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"authenticationloginschemapolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Next priority expression.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationloginschemapolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationloginschemapolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationloginschemapolicy_binding.tf_bind tf_vserver_example,tf_loginschemapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationloginschemapolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationloginschemapolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationloginschemapolicy_binding.tf_bind tf_vserver_example,tf_loginschemapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_authenticationnegotiatepolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_authenticationnegotiatepolicy_binding resource is used to bind authenticationnegotiatepolicy to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"authenticationnegotiatepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationnegotiatepolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationnegotiatepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationnegotiatepolicy_binding.tf_binding tf_vpnvserver,tf_negotiatepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationnegotiatepolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationnegotiatepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationnegotiatepolicy_binding.tf_binding tf_vpnvserver,tf_negotiatepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_authenticationoauthidppolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_authenticationoauthidppolicy_binding resource is used to bind authenticationoauthidppolicy to vpnvserver.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"authenticationoauthidppolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Next priority expression.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationoauthidppolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationoauthidppolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationoauthidppolicy_binding.tf_bind tf_vpnvserver,tf_idppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationoauthidppolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationoauthidppolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationoauthidppolicy_binding.tf_bind tf_vpnvserver,tf_idppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_authenticationradiuspolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_authenticationradiuspolicy_binding resource is used to bind vpnvserver to authentication Radiuspolicy.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"authenticationradiuspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationradiuspolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_authenticationradiuspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationradiuspolicy_binding.tf_bind tf_vpnvserver,tf_radiuspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationradiuspolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_authenticationradiuspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationradiuspolicy_binding.tf_bind tf_vpnvserver,tf_radiuspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_authenticationsamlidppolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_authenticationsamlidppolicy_binding resource is used to bind authenticationsamlidppolicy to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"authenticationsamlidppolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Next priority expression.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationsamlidppolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationsamlidppolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationsamlidppolicy_binding.tf_binding tf_vserver,tf_samlidppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationsamlidppolicy_binding. It is the concatenation of both ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationsamlidppolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationsamlidppolicy_binding.tf_binding tf_vserver,tf_samlidppolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_authenticationsamlpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_authenticationsamlpolicy_binding resource is used to bind the authenticationsamlpolicy to the vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"authenticationsamlpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationsamlpolicy_binding. It id the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationsamlpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationsamlpolicy_binding.tf_bind tf_vserver_examples,tf_samlpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationsamlpolicy_binding. It id the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationsamlpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationsamlpolicy_binding.tf_bind tf_vserver_examples,tf_samlpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_authenticationtacacspolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_authenticationtacacspolicy_binding resource is used to bind authenticationtacacspolicy to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"authenticationtacacspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationtacacspolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationtacacspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationtacacspolicy_binding.tf_bind tf_examplecom,tf_tacacspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationtacacspolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationtacacspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationtacacspolicy_binding.tf_bind tf_examplecom,tf_tacacspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_authenticationwebauthpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_authenticationwebauthpolicy_binding resource is used to bind the authenticationwebpolicy with the vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"authenticationwebauthpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationwebauthpolicy_binding. It is the concateation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationwebauthpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationwebauthpolicy_binding.tf_bind tf_examplevserver,tf_webauthpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_authenticationwebauthpolicy_binding. It is the concateation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_authenticationwebauthpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_authenticationwebauthpolicy_binding.tf_bind tf_examplevserver,tf_webauthpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_cachepolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_cachepolicy_binding resource is used to bind cachepolicy to the vpnvserver.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"cachepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Next priority expression.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_cachepolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_cachepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_cachepolicy_binding.tf_bind tf_examplecom,tf_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_cachepolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_cachepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_cachepolicy_binding.tf_bind tf_examplecom,tf_cachepolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_cspolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_cspolicy_binding resource is used to bind cspolicy to vpnvserver.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"cspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Next priority expression.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_cspolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_cspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_cspolicy_binding.tf_bind tf_example,test_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_cspolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_cspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_cspolicy_binding.tf_bind tf_example,test_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_feopolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_feopolicy_binding resource is used to bind feopolicy to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"feopolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) Name of a policy to bind to the virtual server (for example, the name of an authentication, session, or endpoint analysis policy).`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bindpoint to which the policy is bound.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Next priority expression.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_feopolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_feopolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_feopolicy_binding.tf_bind tf_vservercom,tf_feopolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_feopolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_feopolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_feopolicy_binding.tf_bind tf_vservercom,tf_feopolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_icapolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_icapolicy_binding resource is used to bind icapolicy to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"icapolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Next priority expression.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_icapolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_icapolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_icapolicy_binding.tf_binding tf_vpnvserverexample,tf_icapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_icapolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_icapolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_icapolicy_binding.tf_binding tf_vpnvserverexample,tf_icapolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_intranetip6_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_intranetip6_binding resource is used to bind intranetip6 to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"intranetip6",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "intranetip6",
					Description: `(Required) The network id for the range of intranet IP6 addresses or individual intranet ip to be bound to the vserver.`,
				},
				resource.Attribute{
					Name:        "numaddr",
					Description: `(Optional) The number of ipv6 addresses ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_intranetip6_binding. It is concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `intranetip6` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_intranetip6_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_intranetip6_binding.tf_bind tf_vserverexample,2.3.4.5 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_intranetip6_binding. It is concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `intranetip6` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_intranetip6_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_intranetip6_binding.tf_bind tf_vserverexample,2.3.4.5 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_intranetip_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_intranetip_binding resource is used to bind intranetip to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"intranetip",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "intranetip",
					Description: `(Required) The network ID for the range of intranet IP addresses or individual intranet IP addresses to be bound to the virtual server.`,
				},
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) The netmask of the intranet IP address or range. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_intranetip_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `intranetip` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_intranetip_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_intranetip_binding.tf_bind tf_vserverexample,2.3.4.5 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_intranetip_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `intranetip` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_intranetip_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_intranetip_binding.tf_bind tf_vserverexample,2.3.4.5 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_responderpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_responderpolicy_binding resource is used to bind responderpolicy to vpnvserver.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"responderpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bindpoint to which the policy is bound.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Next priority expression.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_responderpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_responderpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_responderpolicy_binding.tf_bind tf_examplevserver,tf_responder_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_responderpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_responderpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_responderpolicy_binding.tf_bind tf_examplevserver,tf_responder_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_rewritepolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_rewritepolicy_binding resource is used to bind vpnvserver to rewrite policy.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"rewritepolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bindpoint to which the policy is bound.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Next priority expression.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_rewritepolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_rewritepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_rewritepolicy_binding.tf_bind tf_example_server,tf_test_rewrite_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_rewritepolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_rewritepolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_rewritepolicy_binding.tf_bind tf_example_server,tf_test_rewrite_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_sharefileserver_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_sharefileserver_binding resource is used to bind sharefileserver to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"sharefileserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "sharefile",
					Description: `(Required) Configured ShareFile server in XenMobile deployment. Format IP:PORT / FQDN:PORT ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_sharefileserver_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `sharefile` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_sharefileserver_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_sharefileserver_binding.tf_bind tf_vpnvserver,3.3.4.3:90 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_sharefileserver_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `sharefile` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_sharefileserver_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_sharefileserver_binding.tf_bind tf_vpnvserver,3.3.4.3:90 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_staserver_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_staserver_binding resource is used to bind staserver to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"staserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "staserver",
					Description: `(Required) Configured Secure Ticketing Authority (STA) server.`,
				},
				resource.Attribute{
					Name:        "staaddresstype",
					Description: `(Optional) Type of the STA server address(ipv4/v6). ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_staserver_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `staserver` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_staserver_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_staserver_binding.tf_binding tf_vserver,http://www.example.com/ ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_staserver_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `staserver` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_staserver_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_staserver_binding.tf_binding tf_vserver,http://www.example.com/ ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_vpnclientlessaccesspolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_vpnclientlessaccesspolicy_binding resource is used to bind vpnclientlessaccesspolicy to vpnvserver.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"vpnclientlessaccesspolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bindpoint to which the policy is bound.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Next priority expression.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnclientlessaccesspolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_vpnclientlessaccesspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnclientlessaccesspolicy_binding.tf_bind tf_example.com,tf_vpnclientlessaccesspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnclientlessaccesspolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_vpnclientlessaccesspolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnclientlessaccesspolicy_binding.tf_bind tf_example.com,tf_vpnclientlessaccesspolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_vpneula_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_vpneula_binding resource is used to bind vpneula to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"vpneula",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "eula",
					Description: `(Required) Name of the EULA bound to VPN vserver. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpneula_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `eula` + "`" + ` attributes serprated by comma. ## Import A vpnvserver_vpneula_binding can be imported using its id , e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpneula_binding.tf_bind tf_examplevserver,tf_vpneula ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpneula_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `eula` + "`" + ` attributes serprated by comma. ## Import A vpnvserver_vpneula_binding can be imported using its id , e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpneula_binding.tf_bind tf_examplevserver,tf_vpneula ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_vpnintranetapplication_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_vpnintranetapplication_binding resource is used to bind vpnintranetapplication to vpnvserver Resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"vpnintranetapplication",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "intranetapplication",
					Description: `(Required) The intranet VPN application. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnintranetapplication_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `intranetapplication` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_vpnintranetapplication_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnintranetapplication_binding.tf_bind tf_examplevserver,tf_vpnintranetapplication ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnintranetapplication_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `intranetapplication` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_vpnintranetapplication_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnintranetapplication_binding.tf_bind tf_examplevserver,tf_vpnintranetapplication ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_vpnnexthopserver_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_vpnnexthopserver_binding resource is used to bind vpnnexthopserver to vpnvserver.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"vpnnexthopserver",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "nexthopserver",
					Description: `(Required) The name of the next hop server bound to the VPN virtual server. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnnexthopserver_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `nexthopserver` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_vpnnexthopserver_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnnexthopserver_binding.tf_bind tf_exampleserver,tf_vpnnexthopserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnnexthopserver_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `nexthopserver` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_vpnnexthopserver_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnnexthopserver_binding.tf_bind tf_exampleserver,tf_vpnnexthopserver ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_vpnportaltheme_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_vpnportaltheme_binding resource is used to bind vpnportaltheme to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"vpnportaltheme",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "portaltheme",
					Description: `(Required) Name of the portal theme bound to VPN vserver ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnportaltheme_binding. It is the concatenation ` + "`" + `name` + "`" + ` and ` + "`" + `portaltheme` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_vpnportaltheme_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnportaltheme_binding.tf_bind tf_exampleserver,tf_vpnportaltheme ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnportaltheme_binding. It is the concatenation ` + "`" + `name` + "`" + ` and ` + "`" + `portaltheme` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_vpnportaltheme_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnportaltheme_binding.tf_bind tf_exampleserver,tf_vpnportaltheme ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_vpnsessionpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_vpnsessionpolicy_binding resource is used to bind vpnvserver to vpnsessionpolicy


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"vpnsessionpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnsessionpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_vpnsessionpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnsessionpolicy_binding.tf_bind vpn_vserver,tf_vpnsessionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnsessionpolicy_binding. It is the concatenation of the ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes separated by a comma. ## Import A vpnvserver_vpnsessionpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnsessionpolicy_binding.tf_bind vpn_vserver,tf_vpnsessionpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_vpntrafficpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_vpntrafficpolicy_binding resource is used to bind vpntrafficpolicy to vpnvserver


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"vpntrafficpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Applicable only to advance vpn session policy. Expression or other value specifying the next policy to evaluate if the current policy evaluates to TRUE. Specify one of the following values:`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpntrafficpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_vpntrafficpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpntrafficpolicy_binding.tf_bind tf_examplevserver,tf_vpntrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpntrafficpolicy_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_vpntrafficpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpntrafficpolicy_binding.tf_bind tf_examplevserver,tf_vpntrafficpolicy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_vpnurl_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_vpnurl_binding resource is used to bind vpnurl to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"vpnurl",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "urlname",
					Description: `(Required) The intranet URL. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `urlname` + "`" + ` attribute seperated by comma. ## Import A vpnvserver_vpnurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnurl_binding.tf_bind tf_examplevserver,Firsturl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnurl_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `urlname` + "`" + ` attribute seperated by comma. ## Import A vpnvserver_vpnurl_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnurl_binding.tf_bind tf_examplevserver,Firsturl ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vpnvserver_vpnurlpolicy_binding",
			Category:         "VPN",
			ShortDescription: ``,
			Description: `

The vpnvserver_vpnurlpolicy_binding resource is used to bind vpnurlpolicy to vpnvserver resource.


`,
			Keywords: []string{
				"vpn",
				"vpnvserver",
				"vpnurlpolicy",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the virtual server.`,
				},
				resource.Attribute{
					Name:        "policy",
					Description: `(Required) The name of the policy, if any, bound to the VPN virtual server.`,
				},
				resource.Attribute{
					Name:        "bindpoint",
					Description: `(Optional) Bind point to which to bind the policy. Applies only to rewrite and cache policies. If you do not set this parameter, the policy is bound to REQ_DEFAULT or RES_DEFAULT, depending on whether the policy rule is a response-time or a request-time expression.`,
				},
				resource.Attribute{
					Name:        "gotopriorityexpression",
					Description: `(Optional) Next priority expression.`,
				},
				resource.Attribute{
					Name:        "groupextraction",
					Description: `(Optional) Binds the authentication policy to a tertiary chain which will be used only for group extraction. The user will not authenticate against this server, and this will only be called if primary and/or secondary authentication has succeeded.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Integer specifying the policy's priority. The lower the number, the higher the priority. Policies are evaluated in the order of their priority numbers. Maximum value for default syntax policies is 2147483647 and for classic policies is 64000.`,
				},
				resource.Attribute{
					Name:        "secondary",
					Description: `(Optional) Binds the authentication policy as the secondary policy to use in a two-factor configuration. A user must then authenticate not only via a primary authentication method but also via a secondary authentication method. User groups are aggregated across both. The user name must be exactly the same for both authentication methods, but they can require different passwords. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnurlpolicy_binding. It is concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_vpnurlpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnurlpolicy_binding.tf_bind tf_example_vserver,new_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vpnvserver_vpnurlpolicy_binding. It is concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `policy` + "`" + ` attributes seperated by comma. ## Import A vpnvserver_vpnurlpolicy_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vpnvserver_vpnurlpolicy_binding.tf_bind tf_example_vserver,new_policy ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vrid",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The vrid resource is used for Configuration of Virtual Router ID resource.


`,
			Keywords: []string{
				"network",
				"vrid",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vrid_id",
					Description: `(Required) Integer that uniquely identifies the VMAC address. The generic VMAC address is in the form of 00:00:5e:00:01:<VRID>. For example, if you add a VRID with a value of 60 and bind it to an interface, the resulting VMAC address is 00:00:5e:00:01:3c, where 3c is the hexadecimal representation of 60.`,
				},
				resource.Attribute{
					Name:        "all",
					Description: `(Optional) Remove all the configured VMAC addresses from the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "ownernode",
					Description: `(Optional) In a cluster setup, assign a cluster node as the owner of this VMAC address for IP based VRRP configuration. If no owner is configured, owner node is displayed as ALL and one node is dynamically elected as the owner.`,
				},
				resource.Attribute{
					Name:        "preemption",
					Description: `(Optional) In an active-active mode configuration, make a backup VIP address the master if its priority becomes higher than that of a master VIP address bound to this VMAC address. If you disable pre-emption while a backup VIP address is the master, the backup VIP address remains master until the original master VIP's priority becomes higher than that of the current master.`,
				},
				resource.Attribute{
					Name:        "preemptiondelaytimer",
					Description: `(Optional) Preemption delay time, in seconds, in an active-active configuration. If any high priority node will come in network, it will wait for these many seconds before becoming master.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Base priority (BP), in an active-active mode configuration, which ordinarily determines the master VIP address.`,
				},
				resource.Attribute{
					Name:        "sharing",
					Description: `(Optional) In an active-active mode configuration, enable the backup VIP address to process any traffic instead of dropping it.`,
				},
				resource.Attribute{
					Name:        "trackifnumpriority",
					Description: `(Optional) Priority by which the Effective priority will be reduced if any of the tracked interfaces goes down in an active-active configuration.`,
				},
				resource.Attribute{
					Name:        "tracking",
					Description: `(Optional) The effective priority (EP) value, relative to the base priority (BP) value in an active-active mode configuration. When EP is set to a value other than None, it is EP, not BP, which determines the master VIP address. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vrid. It has the same value as the ` + "`" + `vrid_id` + "`" + ` attribute. ## Import A vrid can be imported using its vrid_id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vrid.tf_vrid 3 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vrid. It has the same value as the ` + "`" + `vrid_id` + "`" + ` attribute. ## Import A vrid can be imported using its vrid_id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vrid.tf_vrid 3 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vrid6",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The vrid6 resource is used to create Virtual Router ID resource.


`,
			Keywords: []string{
				"network",
				"vrid6",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vrid6_id",
					Description: `(Required) Integer value that uniquely identifies a VMAC6 address.`,
				},
				resource.Attribute{
					Name:        "all",
					Description: `(Optional) Remove all configured VMAC6 addresses from the Citrix ADC.`,
				},
				resource.Attribute{
					Name:        "ownernode",
					Description: `(Optional) In a cluster setup, assign a cluster node as the owner of this VMAC address for IP based VRRP configuration. If no owner is configured, ow ner node is displayed as ALL and one node is dynamically elected as the owner.`,
				},
				resource.Attribute{
					Name:        "preemption",
					Description: `(Optional) In an active-active mode configuration, make a backup VIP address the master if its priority becomes higher than that of a master VIP address bound to this VMAC address. If you disable pre-emption while a backup VIP address is the master, the backup VIP address remains master until the original master VIP's priority becomes higher than that of the current master.`,
				},
				resource.Attribute{
					Name:        "preemptiondelaytimer",
					Description: `(Optional) Preemption delay time in seconds, in an active-active configuration. If any high priority node will come in network, it will wait for these many seconds before becoming master.`,
				},
				resource.Attribute{
					Name:        "priority",
					Description: `(Optional) Base priority (BP), in an active-active mode configuration, which ordinarily determines the master VIP address.`,
				},
				resource.Attribute{
					Name:        "sharing",
					Description: `(Optional) In an active-active mode configuration, enable the backup VIP address to process any traffic instead of dropping it.`,
				},
				resource.Attribute{
					Name:        "trackifnumpriority",
					Description: `(Optional) Priority by which the Effective priority will be reduced if any of the tracked interfaces goes down in an active-active configuration.`,
				},
				resource.Attribute{
					Name:        "tracking",
					Description: `(Optional) The effective priority (EP) value, relative to the base priority (BP) value in an active-active mode configuration. When EP is set to a value other than None, it is EP, not BP, which determines the master VIP address. Available settings function as follows:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vrid6. It has the same value as the ` + "`" + `vrid6_id` + "`" + ` attribute. ## Import A vrid6 can be imported using its vrid6_id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vrid6.tf_vrid6 3 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vrid6. It has the same value as the ` + "`" + `vrid6_id` + "`" + ` attribute. ## Import A vrid6 can be imported using its vrid6_id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vrid6.tf_vrid6 3 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vridparam",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The vridparam resource is used to configure VR ID parameter resource..


`,
			Keywords: []string{
				"network",
				"vridparam",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "sendtomaster",
					Description: `(Optional) Forward packets to the master node, in an active-active mode configuration, if the virtual server is in the backup state and sharing is disabled. Possible values: [ ENABLED, DISABLED ]`,
				},
				resource.Attribute{
					Name:        "hellointerval",
					Description: `(Optional) Interval, in milliseconds, between vrrp advertisement messages sent to the peer node in active-active mode. Minimum value = 200 Maximum value = 1000`,
				},
				resource.Attribute{
					Name:        "deadinterval",
					Description: `(Optional) Number of seconds after which a peer node in active-active mode is marked down if vrrp advertisements are not received from the peer node. Minimum value = 1 Maximum value = 60 ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vridparam. It is a unique string prefixed with "tf-vridparam-"`,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vridparam. It is a unique string prefixed with "tf-vridparam-"`,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vxlan",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The vxlan resource is used to create vxlan resource.


`,
			Keywords: []string{
				"network",
				"vxlan",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vxlanid",
					Description: `(Required) A positive integer, which is also called VXLAN Network Identifier (VNI), that uniquely identifies a VXLAN.`,
				},
				resource.Attribute{
					Name:        "dynamicrouting",
					Description: `(Optional) Enable dynamic routing on this VXLAN.`,
				},
				resource.Attribute{
					Name:        "innervlantagging",
					Description: `(Optional) Specifies whether Citrix ADC should generate VXLAN packets with inner VLAN tag.`,
				},
				resource.Attribute{
					Name:        "ipv6dynamicrouting",
					Description: `(Optional) Enable all IPv6 dynamic routing protocols on this VXLAN. Note: For the ENABLED setting to work, you must configure IPv6 dynamic routing protocols from the VTYSH command line.`,
				},
				resource.Attribute{
					Name:        "port",
					Description: `(Optional) Specifies UDP destination port for VXLAN packets.`,
				},
				resource.Attribute{
					Name:        "protocol",
					Description: `(Optional) VXLAN-GPE next protocol. RESERVED, IPv4, IPv6, ETHERNET, NSH`,
				},
				resource.Attribute{
					Name:        "type",
					Description: `(Optional) VXLAN encapsulation type. VXLAN, VXLANGPE`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) ID of VLANs whose traffic is allowed over this VXLAN. If you do not specify any VLAN IDs, the Citrix ADC allows traffic of all VLANs that are not part of any other VXLANs. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vxlan. It has the same value as the ` + "`" + `vxlanid` + "`" + ` attribute. ## Import A vxlan can be imported using its vxlanid, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vxlan.tf_vxlan 123 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vxlan. It has the same value as the ` + "`" + `vxlanid` + "`" + ` attribute. ## Import A vxlan can be imported using its vxlanid, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vxlan.tf_vxlan 123 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vxlan_nsip6_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The vxlan_nsip6_binding resource is used to bind nsip6 to vxlan resource.


`,
			Keywords: []string{
				"network",
				"vxlan",
				"nsip6",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vxlanid",
					Description: `(Required) A positive integer, which is also called VXLAN Network Identifier (VNI), that uniquely identifies a VXLAN.`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) The IP address assigned to the VXLAN.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) Subnet mask for the network address defined for this VXLAN. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vxlan_nsip6_binding. It is the concatenation of ` + "`" + `vxlanid` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes seperated by comma. ## Import A vxlan_nsip6_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vxlan_nsip6_binding.tf_binding 123,2001:db8:100::fb/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vxlan_nsip6_binding. It is the concatenation of ` + "`" + `vxlanid` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes seperated by comma. ## Import A vxlan_nsip6_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vxlan_nsip6_binding.tf_binding 123,2001:db8:100::fb/64 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vxlan_nsip_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The vxlan_nsip_binding resource is used to bind nsip to vxlan resource.


`,
			Keywords: []string{
				"network",
				"vxlan",
				"nsip",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vxlanid",
					Description: `(Required) A positive integer, which is also called VXLAN Network Identifier (VNI), that uniquely identifies a VXLAN.`,
				},
				resource.Attribute{
					Name:        "ipaddress",
					Description: `(Required) The IP address assigned to the VXLAN.`,
				},
				resource.Attribute{
					Name:        "netmask",
					Description: `(Optional) Subnet mask for the network address defined for this VXLAN. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vxlan_nsip_binding. It has the same value as the ` + "`" + `vxlanid` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes seperated by comma. ## Import A vxlan_nsip_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vxlan_nsip_binding.tf_binding 123,10.222.74.146 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vxlan_nsip_binding. It has the same value as the ` + "`" + `vxlanid` + "`" + ` and ` + "`" + `ipaddress` + "`" + ` attributes seperated by comma. ## Import A vxlan_nsip_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vxlan_nsip_binding.tf_binding 123,10.222.74.146 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vxlan_srcip_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The vxlan_srcip_binding resource is used to bind srcip to vxlan resource.


`,
			Keywords: []string{
				"network",
				"vxlan",
				"srcip",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "vxlanid",
					Description: `(Required) A positive integer, which is also called VXLAN Network Identifier (VNI), that uniquely identifies a VXLAN.`,
				},
				resource.Attribute{
					Name:        "srcip",
					Description: `(Required) The source IP address to use in outgoing vxlan packets. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vxlan_srcip_binding. It is the concatenation of ` + "`" + `vxlanid` + "`" + ` and ` + "`" + `srcip` + "`" + ` attributes seperated by comma. ## Import A vxlan_srcip_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vxlan_srcip_binding.tf_binding 123,11.22.33.44 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vxlan_srcip_binding. It is the concatenation of ` + "`" + `vxlanid` + "`" + ` and ` + "`" + `srcip` + "`" + ` attributes seperated by comma. ## Import A vxlan_srcip_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vxlan_srcip_binding.tf_binding 123,11.22.33.44 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vxlanvlanmap",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The vxlanvlanmap resource is used to create vxlanvlanmap.


`,
			Keywords: []string{
				"network",
				"vxlanvlanmap",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the mapping table. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vxlanvlanmap. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vxlanvlanmap can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vxlanvlanmap.tf_vxlanvlanmp tf_vxlanvlanmp ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vxlanvlanmap. It has the same value as the ` + "`" + `name` + "`" + ` attribute. ## Import A vxlanvlanmap can be imported using its name, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vxlanvlanmap.tf_vxlanvlanmp tf_vxlanvlanmp ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
		&resource.Resource{
			Name:             "",
			Type:             "citrixadc_vxlanvlanmap_vxlan_binding",
			Category:         "Network",
			ShortDescription: ``,
			Description: `

The vxlanvlanmap_vxlan_binding resource is used to bind vxlan to vxlanvlanmap resource.


`,
			Keywords: []string{
				"network",
				"vxlanvlanmap",
				"vxlan",
				"binding",
			},
			Arguments: []resource.Attribute{
				resource.Attribute{
					Name:        "name",
					Description: `(Required) Name of the mapping table.`,
				},
				resource.Attribute{
					Name:        "vxlan",
					Description: `(Required) The VXLAN assigned to the vlan inside the cloud.`,
				},
				resource.Attribute{
					Name:        "vlan",
					Description: `(Optional) The vlan id or the range of vlan ids in the on-premise network. ## Attribute Reference In addition to the arguments, the following attributes are available:`,
				},
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vxlanvlanmap_vxlan_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `vxlan` + "`" + ` attributes seperated by comma. ## Import A vxlanvlanmap_vxlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vxlanvlanmap_vxlan_binding.tf_binding tf_vxlanvlanmp,123 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
			Attributes: []resource.Attribute{
				resource.Attribute{
					Name:        "id",
					Description: `The id of the vxlanvlanmap_vxlan_binding. It is the concatenation of ` + "`" + `name` + "`" + ` and ` + "`" + `vxlan` + "`" + ` attributes seperated by comma. ## Import A vxlanvlanmap_vxlan_binding can be imported using its id, e.g. ` + "`" + `` + "`" + `` + "`" + `shell terraform import citrixadc_vxlanvlanmap_vxlan_binding.tf_binding tf_vxlanvlanmp,123 ` + "`" + `` + "`" + `` + "`" + ``,
				},
			},
		},
	}

	resourcesMap = map[string]int{

		"citrixadc_aaacertparams":                                                 0,
		"citrixadc_aaaglobal_aaapreauthenticationpolicy_binding":                  1,
		"citrixadc_aaagroup":                                                      2,
		"citrixadc_aaagroup_aaauser_binding":                                      3,
		"citrixadc_aaagroup_auditnslogpolicy_binding":                             4,
		"citrixadc_aaagroup_auditsyslogpolicy_binding":                            5,
		"citrixadc_aaagroup_authorizationpolicy_binding":                          6,
		"citrixadc_aaagroup_intranetip_binding":                                   7,
		"citrixadc_aaagroup_tmsessionpolicy_binding":                              8,
		"citrixadc_aaagroup_vpnintranetapplication_binding":                       9,
		"citrixadc_aaagroup_vpnsessionpolicy_binding":                             10,
		"citrixadc_aaagroup_vpntrafficpolicy_binding":                             11,
		"citrixadc_aaagroup_vpnurl_binding":                                       12,
		"citrixadc_aaagroup_vpnurlpolicy_binding":                                 13,
		"citrixadc_aaakcdaccount":                                                 14,
		"citrixadc_aaaldapparams":                                                 15,
		"citrixadc_aaaotpparameter":                                               16,
		"citrixadc_aaaparameter":                                                  17,
		"citrixadc_aaapreauthenticationaction":                                    18,
		"citrixadc_aaapreauthenticationparameter":                                 19,
		"citrixadc_aaapreauthenticationpolicy":                                    20,
		"citrixadc_aaaradiusparams":                                               21,
		"citrixadc_aaassoprofile":                                                 22,
		"citrixadc_aaatacacsparams":                                               23,
		"citrixadc_aaauser":                                                       24,
		"citrixadc_aaauser_auditnslogpolicy_binding":                              25,
		"citrixadc_aaauser_auditsyslogpolicy_binding":                             26,
		"citrixadc_aaauser_authorizationpolicy_binding":                           27,
		"citrixadc_aaauser_intranetip6_binding":                                   28,
		"citrixadc_aaauser_intranetip_binding":                                    29,
		"citrixadc_aaauser_tmsessionpolicy_binding":                               30,
		"citrixadc_aaauser_vpnintranetapplication_binding":                        31,
		"citrixadc_aaauser_vpnsessionpolicy_binding":                              32,
		"citrixadc_aaauser_vpntrafficpolicy_binding":                              33,
		"citrixadc_aaauser_vpnurl_binding":                                        34,
		"citrixadc_aaauser_vpnurlpolicy_binding":                                  35,
		"citrixadc_admparameter":                                                  36,
		"citrixadc_analyticsprofile":                                              37,
		"citrixadc_appalgparam":                                                   38,
		"citrixadc_appflowaction":                                                 39,
		"citrixadc_appflowaction_analyticsprofile_binding":                        40,
		"citrixadc_appflowcollector":                                              41,
		"citrixadc_appflowglobal_appflowpolicy_binding":                           42,
		"citrixadc_appflowparam":                                                  43,
		"citrixadc_appflowpolicy":                                                 44,
		"citrixadc_appflowpolicylabel":                                            45,
		"citrixadc_appflowpolicylabel_appflowpolicy_binding":                      46,
		"citrixadc_appfwconfidfield":                                              47,
		"citrixadc_appfwfieldtype":                                                48,
		"citrixadc_appfwglobal_appfwpolicy_binding":                               49,
		"citrixadc_appfwglobal_auditnslogpolicy_binding":                          50,
		"citrixadc_appfwglobal_auditsyslogpolicy_binding":                         51,
		"citrixadc_appfwhtmlerrorpage":                                            52,
		"citrixadc_appfwjsoncontenttype":                                          53,
		"citrixadc_appfwjsonerrorpage":                                            54,
		"citrixadc_appfwlearningsettings":                                         55,
		"citrixadc_appfwmultipartformcontenttype":                                 56,
		"citrixadc_appfwpolicy":                                                   57,
		"citrixadc_appfwpolicylabel":                                              58,
		"citrixadc_appfwpolicylabel_appfwpolicy_binding":                          59,
		"citrixadc_appfwprofile":                                                  60,
		"citrixadc_appfwprofile_cmdinjection_binding":                             61,
		"citrixadc_appfwprofile_contenttype_binding":                              62,
		"citrixadc_appfwprofile_cookieconsistency_binding":                        63,
		"citrixadc_appfwprofile_creditcardnumber_binding":                         64,
		"citrixadc_appfwprofile_crosssitescripting_binding":                       65,
		"citrixadc_appfwprofile_csrftag_binding":                                  66,
		"citrixadc_appfwprofile_denyurl_binding":                                  67,
		"citrixadc_appfwprofile_excluderescontenttype_binding":                    68,
		"citrixadc_appfwprofile_fieldconsistency_binding":                         69,
		"citrixadc_appfwprofile_fieldformat_binding":                              70,
		"citrixadc_appfwprofile_fileuploadtype_binding":                           71,
		"citrixadc_appfwprofile_jsoncmdurl_binding":                               72,
		"citrixadc_appfwprofile_jsondosurl_binding":                               73,
		"citrixadc_appfwprofile_jsonsqlurl_binding":                               74,
		"citrixadc_appfwprofile_jsonxssurl_binding":                               75,
		"citrixadc_appfwprofile_logexpression_binding":                            76,
		"citrixadc_appfwprofile_safeobject_binding":                               77,
		"citrixadc_appfwprofile_sqlinjection_binding":                             78,
		"citrixadc_appfwprofile_starturl_binding":                                 79,
		"citrixadc_appfwprofile_trustedlearningclients_binding":                   80,
		"citrixadc_appfwprofile_xmlattachmenturl_binding":                         81,
		"citrixadc_appfwprofile_xmldosurl_binding":                                82,
		"citrixadc_appfwprofile_xmlsqlinjection_binding":                          83,
		"citrixadc_appfwprofile_xmlvalidationurl_binding":                         84,
		"citrixadc_appfwprofile_xmlwsiurl_binding":                                85,
		"citrixadc_appfwprofile_xmlxss_binding":                                   86,
		"citrixadc_appfwsettings":                                                 87,
		"citrixadc_appfwsignatures":                                               88,
		"citrixadc_appfwurlencodedformcontenttype":                                89,
		"citrixadc_appfwwsdl":                                                     90,
		"citrixadc_appfwxmlcontenttype":                                           91,
		"citrixadc_appfwxmlerrorpage":                                             92,
		"citrixadc_appfwxmlschema":                                                93,
		"citrixadc_appqoeaction":                                                  94,
		"citrixadc_appqoecustomresp":                                              95,
		"citrixadc_appqoeparameter":                                               96,
		"citrixadc_appqoepolicy":                                                  97,
		"citrixadc_arp":                                                           98,
		"citrixadc_arpparam":                                                      99,
		"citrixadc_auditmessageaction":                                            100,
		"citrixadc_auditnslogaction":                                              101,
		"citrixadc_auditnslogglobal_auditnslogpolicy_binding":                     102,
		"citrixadc_auditnslogparams":                                              103,
		"citrixadc_auditnslogpolicy":                                              104,
		"citrixadc_auditsyslogaction":                                             105,
		"citrixadc_auditsyslogglobal_auditsyslogpolicy_binding":                   106,
		"citrixadc_auditsyslogparams":                                             107,
		"citrixadc_auditsyslogpolicy":                                             108,
		"citrixadc_authenticationauthnprofile":                                    109,
		"citrixadc_authenticationcaptchaaction":                                   110,
		"citrixadc_authenticationcertaction":                                      111,
		"citrixadc_authenticationcertpolicy":                                      112,
		"citrixadc_authenticationcitrixauthaction":                                113,
		"citrixadc_authenticationdfaaction":                                       114,
		"citrixadc_authenticationdfapolicy":                                       115,
		"citrixadc_authenticationemailaction":                                     116,
		"citrixadc_authenticationepaaction":                                       117,
		"citrixadc_authenticationldapaction":                                      118,
		"citrixadc_authenticationldappolicy":                                      119,
		"citrixadc_authenticationlocalpolicy":                                     120,
		"citrixadc_authenticationloginschema":                                     121,
		"citrixadc_authenticationloginschemapolicy":                               122,
		"citrixadc_authenticationnegotiateaction":                                 123,
		"citrixadc_authenticationnegotiatepolicy":                                 124,
		"citrixadc_authenticationnoauthaction":                                    125,
		"citrixadc_authenticationoauthaction":                                     126,
		"citrixadc_authenticationoauthidppolicy":                                  127,
		"citrixadc_authenticationoauthidpprofile":                                 128,
		"citrixadc_authenticationpolicy":                                          129,
		"citrixadc_authenticationpolicylabel":                                     130,
		"citrixadc_authenticationpolicylabel_authenticationpolicy_binding":        131,
		"citrixadc_authenticationpushservice":                                     132,
		"citrixadc_authenticationradiusaction":                                    133,
		"citrixadc_authenticationradiuspolicy":                                    134,
		"citrixadc_authenticationsamlaction":                                      135,
		"citrixadc_authenticationsamlidppolicy":                                   136,
		"citrixadc_authenticationsamlidpprofile":                                  137,
		"citrixadc_authenticationsamlpolicy":                                      138,
		"citrixadc_authenticationstorefrontauthaction":                            139,
		"citrixadc_authenticationtacacsaction":                                    140,
		"citrixadc_authenticationtacacspolicy":                                    141,
		"citrixadc_authenticationvserver":                                         142,
		"citrixadc_authenticationvserver_auditnslogpolicy_binding":                143,
		"citrixadc_authenticationvserver_auditsyslogpolicy_binding":               144,
		"citrixadc_authenticationvserver_authenticationcertpolicy_binding":        145,
		"citrixadc_authenticationvserver_authenticationldappolicy_binding":        146,
		"citrixadc_authenticationvserver_authenticationlocalpolicy_binding":       147,
		"citrixadc_authenticationvserver_authenticationloginschemapolicy_binding": 148,
		"citrixadc_authenticationvserver_authenticationnegotiatepolicy_binding":   149,
		"citrixadc_authenticationvserver_authenticationoauthidppolicy_binding":    150,
		"citrixadc_authenticationvserver_authenticationpolicy_binding":            151,
		"citrixadc_authenticationvserver_authenticationradiuspolicy_binding":      152,
		"citrixadc_authenticationvserver_authenticationsamlidppolicy_binding":     153,
		"citrixadc_authenticationvserver_authenticationsamlpolicy_binding":        154,
		"citrixadc_authenticationvserver_authenticationtacacspolicy_binding":      155,
		"citrixadc_authenticationvserver_authenticationwebauthpolicy_binding":     156,
		"citrixadc_authenticationvserver_cachepolicy_binding":                     157,
		"citrixadc_authenticationvserver_cspolicy_binding":                        158,
		"citrixadc_authenticationvserver_responderpolicy_binding":                 159,
		"citrixadc_authenticationvserver_rewritepolicy_binding":                   160,
		"citrixadc_authenticationvserver_tmsessionpolicy_binding":                 161,
		"citrixadc_authenticationvserver_vpnportaltheme_binding":                  162,
		"citrixadc_authenticationwebauthaction":                                   163,
		"citrixadc_authenticationwebauthpolicy":                                   164,
		"citrixadc_authorizationpolicy":                                           165,
		"citrixadc_authorizationpolicylabel":                                      166,
		"citrixadc_authorizationpolicylabel_authorizationpolicy_binding":          167,
		"citrixadc_autoscaleaction":                                               168,
		"citrixadc_autoscalepolicy":                                               169,
		"citrixadc_autoscaleprofile":                                              170,
		"citrixadc_botglobal_botpolicy_binding":                                   171,
		"citrixadc_botpolicy":                                                     172,
		"citrixadc_botpolicylabel":                                                173,
		"citrixadc_botpolicylabel_botpolicy_binding":                              174,
		"citrixadc_botprofile":                                                    175,
		"citrixadc_botprofile_blacklist_binding":                                  176,
		"citrixadc_botprofile_captcha_binding":                                    177,
		"citrixadc_botprofile_ipreputation_binding":                               178,
		"citrixadc_botprofile_logexpression_binding":                              179,
		"citrixadc_botprofile_ratelimit_binding":                                  180,
		"citrixadc_botprofile_tps_binding":                                        181,
		"citrixadc_botprofile_trapinsertionurl_binding":                           182,
		"citrixadc_botprofile_whitelist_binding":                                  183,
		"citrixadc_botsettings":                                                   184,
		"citrixadc_botsignature":                                                  185,
		"citrixadc_bridgegroup":                                                   186,
		"citrixadc_bridgegroup_nsip6_binding":                                     187,
		"citrixadc_bridgegroup_nsip_binding":                                      188,
		"citrixadc_bridgegroup_vlan_binding":                                      189,
		"citrixadc_bridgetable":                                                   190,
		"citrixadc_cachecontentgroup":                                             191,
		"citrixadc_cacheforwardproxy":                                             192,
		"citrixadc_cacheglobal_cachepolicy_binding":                               193,
		"citrixadc_cacheparameter":                                                194,
		"citrixadc_cachepolicy":                                                   195,
		"citrixadc_cachepolicylabel":                                              196,
		"citrixadc_cachepolicylabel_cachepolicy_binding":                          197,
		"citrixadc_cacheselector":                                                 198,
		"citrixadc_change_password":                                               199,
		"citrixadc_channel":                                                       200,
		"citrixadc_cluster":                                                       201,
		"citrixadc_clusterfiles_syncer":                                           202,
		"citrixadc_clusterinstance":                                               203,
		"citrixadc_clusternode":                                                   204,
		"citrixadc_clusternode_routemonitor_binding":                              205,
		"citrixadc_clusternodegroup":                                              206,
		"citrixadc_clusternodegroup_authenticationvserver_binding":                207,
		"citrixadc_clusternodegroup_clusternode_binding":                          208,
		"citrixadc_clusternodegroup_crvserver_binding":                            209,
		"citrixadc_clusternodegroup_csvserver_binding":                            210,
		"citrixadc_clusternodegroup_gslbsite_binding":                             211,
		"citrixadc_clusternodegroup_gslbvserver_binding":                          212,
		"citrixadc_clusternodegroup_lbvserver_binding":                            213,
		"citrixadc_clusternodegroup_nslimitidentifier_binding":                    214,
		"citrixadc_clusternodegroup_service_binding":                              215,
		"citrixadc_clusternodegroup_streamidentifier_binding":                     216,
		"citrixadc_clusternodegroup_vpnvserver_binding":                           217,
		"citrixadc_cmpaction":                                                     218,
		"citrixadc_cmpglobal_cmppolicy_binding":                                   219,
		"citrixadc_cmpparameter":                                                  220,
		"citrixadc_cmppolicy":                                                     221,
		"citrixadc_cmppolicylabel":                                                222,
		"citrixadc_cmppolicylabel_cmppolicy_binding":                              223,
		"citrixadc_contentinspectionaction":                                       224,
		"citrixadc_contentinspectioncallout":                                      225,
		"citrixadc_contentinspectionglobal_contentinspectionpolicy_binding":       226,
		"citrixadc_contentinspectionparameter":                                    227,
		"citrixadc_contentinspectionpolicy":                                       228,
		"citrixadc_contentinspectionpolicylabel":                                  229,
		"citrixadc_contentinspectionpolicylabel_contentinspectionpolicy_binding":  230,
		"citrixadc_contentinspectionprofile":                                      231,
		"citrixadc_crpolicy":                                                      232,
		"citrixadc_crvserver":                                                     233,
		"citrixadc_crvserver_analyticsprofile_binding":                            234,
		"citrixadc_crvserver_appflowpolicy_binding":                               235,
		"citrixadc_crvserver_appfwpolicy_binding":                                 236,
		"citrixadc_crvserver_appqoepolicy_binding":                                237,
		"citrixadc_crvserver_cachepolicy_binding":                                 238,
		"citrixadc_crvserver_cmppolicy_binding":                                   239,
		"citrixadc_crvserver_crpolicy_binding":                                    240,
		"citrixadc_crvserver_cspolicy_binding":                                    241,
		"citrixadc_crvserver_feopolicy_binding":                                   242,
		"citrixadc_crvserver_filterpolicy_binding":                                243,
		"citrixadc_crvserver_icapolicy_binding":                                   244,
		"citrixadc_crvserver_lbvserver_binding":                                   245,
		"citrixadc_crvserver_policymap_binding":                                   246,
		"citrixadc_crvserver_responderpolicy_binding":                             247,
		"citrixadc_crvserver_rewritepolicy_binding":                               248,
		"citrixadc_crvserver_spilloverpolicy_binding":                             249,
		"citrixadc_csaction":                                                      250,
		"citrixadc_csparameter":                                                   251,
		"citrixadc_cspolicy":                                                      252,
		"citrixadc_cspolicylabel":                                                 253,
		"citrixadc_csvserver":                                                     254,
		"citrixadc_csvserver_analyticsprofile_binding":                            255,
		"citrixadc_csvserver_appfwpolicy_binding":                                 256,
		"citrixadc_csvserver_appqoepolicy_binding":                                257,
		"citrixadc_csvserver_auditnslogpolicy_binding":                            258,
		"citrixadc_csvserver_auditsyslogpolicy_binding":                           259,
		"citrixadc_csvserver_authorizationpolicy_binding":                         260,
		"citrixadc_csvserver_botpolicy_binding":                                   261,
		"citrixadc_csvserver_cachepolicy_binding":                                 262,
		"citrixadc_csvserver_cmppolicy_binding":                                   263,
		"citrixadc_csvserver_contentinspectionpolicy_binding":                     264,
		"citrixadc_csvserver_cspolicy_binding":                                    265,
		"citrixadc_csvserver_feopolicy_binding":                                   266,
		"citrixadc_csvserver_filterpolicy_binding":                                267,
		"citrixadc_csvserver_gslbvserver_binding":                                 268,
		"citrixadc_csvserver_responderpolicy_binding":                             269,
		"citrixadc_csvserver_rewritepolicy_binding":                               270,
		"citrixadc_csvserver_spilloverpolicy_binding":                             271,
		"citrixadc_csvserver_tmtrafficpolicy_binding":                             272,
		"citrixadc_csvserver_transformpolicy_binding":                             273,
		"citrixadc_csvserver_vpnvserver_binding":                                  274,
		"citrixadc_dbdbprofile":                                                   275,
		"citrixadc_dbuser":                                                        276,
		"citrixadc_dnsaaaarec":                                                    277,
		"citrixadc_dnsaction":                                                     278,
		"citrixadc_dnsaction64":                                                   279,
		"citrixadc_dnsaddrec":                                                     280,
		"citrixadc_dnscnamerec":                                                   281,
		"citrixadc_dnsglobal_dnspolicy_binding":                                   282,
		"citrixadc_dnskey":                                                        283,
		"citrixadc_dnsmxrec":                                                      284,
		"citrixadc_dnsnameserver":                                                 285,
		"citrixadc_dnsnaptrrec":                                                   286,
		"citrixadc_dnsnsrec":                                                      287,
		"citrixadc_dnsparameter":                                                  288,
		"citrixadc_dnspolicy":                                                     289,
		"citrixadc_dnspolicy64":                                                   290,
		"citrixadc_dnspolicylabel":                                                291,
		"citrixadc_dnspolicylabel_dnspolicy_binding":                              292,
		"citrixadc_dnsprofile":                                                    293,
		"citrixadc_dnsptrrec":                                                     294,
		"citrixadc_dnssoarec":                                                     295,
		"citrixadc_dnssrvrec":                                                     296,
		"citrixadc_dnssuffix":                                                     297,
		"citrixadc_dnstxtrec":                                                     298,
		"citrixadc_dnsview":                                                       299,
		"citrixadc_dnszone":                                                       300,
		"citrixadc_extendedmemoryparam":                                           301,
		"citrixadc_feoaction":                                                     302,
		"citrixadc_feoglobal_feopolicy_binding":                                   303,
		"citrixadc_feoparameter":                                                  304,
		"citrixadc_feopolicy":                                                     305,
		"citrixadc_filteraction":                                                  306,
		"citrixadc_filterglobal_filterpolicy_binding":                             307,
		"citrixadc_filterpolicy":                                                  308,
		"citrixadc_fis":                                                           309,
		"citrixadc_forwardingsession":                                             310,
		"citrixadc_gslbparameter":                                                 311,
		"citrixadc_gslbservice":                                                   312,
		"citrixadc_gslbservice_dnsview_binding":                                   313,
		"citrixadc_gslbservice_lbmonitor_binding":                                 314,
		"citrixadc_gslbservicegroup":                                              315,
		"citrixadc_gslbservicegroup_lbmonitor_binding":                            316,
		"citrixadc_gslbsite":                                                      317,
		"citrixadc_gslbvserver":                                                   318,
		"citrixadc_gslbvserver_domain_binding":                                    319,
		"citrixadc_gslbvserver_gslbservice_binding":                               320,
		"citrixadc_gslbvserver_gslbservicegroup_binding":                          321,
		"citrixadc_gslbvserver_spilloverpolicy_binding":                           322,
		"citrixadc_hafailover":                                                    323,
		"citrixadc_hanode":                                                        324,
		"citrixadc_hanode_routemonitor6_binding":                                  325,
		"citrixadc_hanode_routemonitor_binding":                                   326,
		"citrixadc_icaaccessprofile":                                              327,
		"citrixadc_icaaction":                                                     328,
		"citrixadc_icaglobal_icapolicy_binding":                                   329,
		"citrixadc_icalatencyprofile":                                             330,
		"citrixadc_icaparameter":                                                  331,
		"citrixadc_icapolicy":                                                     332,
		"citrixadc_inat":                                                          333,
		"citrixadc_inatparam":                                                     334,
		"citrixadc_installer":                                                     335,
		"citrixadc_interface":                                                     336,
		"citrixadc_interfacepair":                                                 337,
		"citrixadc_ip6tunnel":                                                     338,
		"citrixadc_ip6tunnelparam":                                                339,
		"citrixadc_ipsecalgprofile":                                               340,
		"citrixadc_ipsecparameter":                                                341,
		"citrixadc_ipsecprofile":                                                  342,
		"citrixadc_ipset":                                                         343,
		"citrixadc_ipset_nsip6_binding":                                           344,
		"citrixadc_ipset_nsip_binding":                                            345,
		"citrixadc_iptunnel":                                                      346,
		"citrixadc_iptunnelparam":                                                 347,
		"citrixadc_ipv6":                                                          348,
		"citrixadc_l2param":                                                       349,
		"citrixadc_l3param":                                                       350,
		"citrixadc_l4param":                                                       351,
		"citrixadc_lacp":                                                          352,
		"citrixadc_lbgroup":                                                       353,
		"citrixadc_lbgroup_lbvserver_binding":                                     354,
		"citrixadc_lbmetrictable":                                                 355,
		"citrixadc_lbmetrictable_metric_binding":                                  356,
		"citrixadc_lbmonitor":                                                     357,
		"citrixadc_lbmonitor_metric_binding":                                      358,
		"citrixadc_lbmonitor_sslcertkey_binding":                                  359,
		"citrixadc_lbparameter":                                                   360,
		"citrixadc_lbprofile":                                                     361,
		"citrixadc_lbroute":                                                       362,
		"citrixadc_lbroute6":                                                      363,
		"citrixadc_lbsipparameters":                                               364,
		"citrixadc_lbvserver":                                                     365,
		"citrixadc_lbvserver_analyticsprofile_binding":                            366,
		"citrixadc_lbvserver_appflowpolicy_binding":                               367,
		"citrixadc_lbvserver_appfwpolicy_binding":                                 368,
		"citrixadc_lbvserver_appqoepolicy_binding":                                369,
		"citrixadc_lbvserver_auditsyslogpolicy_binding":                           370,
		"citrixadc_lbvserver_authorizationpolicy_binding":                         371,
		"citrixadc_lbvserver_botpolicy_binding":                                   372,
		"citrixadc_lbvserver_cachepolicy_binding":                                 373,
		"citrixadc_lbvserver_cmppolicy_binding":                                   374,
		"citrixadc_lbvserver_contentinspectionpolicy_binding":                     375,
		"citrixadc_lbvserver_dnspolicy64_binding":                                 376,
		"citrixadc_lbvserver_feopolicy_binding":                                   377,
		"citrixadc_lbvserver_filterpolicy_binding":                                378,
		"citrixadc_lbvserver_responderpolicy_binding":                             379,
		"citrixadc_lbvserver_rewritepolicy_binding":                               380,
		"citrixadc_lbvserver_service_binding":                                     381,
		"citrixadc_lbvserver_servicegroup_binding":                                382,
		"citrixadc_lbvserver_spilloverpolicy_binding":                             383,
		"citrixadc_lbvserver_tmtrafficpolicy_binding":                             384,
		"citrixadc_lbvserver_transformpolicy_binding":                             385,
		"citrixadc_lbvserver_videooptimizationdetectionpolicy_binding":            386,
		"citrixadc_lbvserver_videooptimizationpacingpolicy_binding":               387,
		"citrixadc_linkset":                                                       388,
		"citrixadc_linkset_channel_binding":                                       389,
		"citrixadc_lldpparam":                                                     390,
		"citrixadc_location":                                                      391,
		"citrixadc_locationfile":                                                  392,
		"citrixadc_locationfile6":                                                 393,
		"citrixadc_locationfile6_import":                                          394,
		"citrixadc_locationfile_import":                                           395,
		"citrixadc_locationparameter":                                             396,
		"citrixadc_lsnappsattributes":                                             397,
		"citrixadc_lsnappsprofile":                                                398,
		"citrixadc_lsnappsprofile_lsnappsattributes_binding":                      399,
		"citrixadc_lsnappsprofile_port_binding":                                   400,
		"citrixadc_lsnclient":                                                     401,
		"citrixadc_lsnclient_network6_binding":                                    402,
		"citrixadc_lsnclient_network_binding":                                     403,
		"citrixadc_lsnclient_nsacl6_binding":                                      404,
		"citrixadc_lsnclient_nsacl_binding":                                       405,
		"citrixadc_lsngroup":                                                      406,
		"citrixadc_lsngroup_lsnappsprofile_binding":                               407,
		"citrixadc_lsngroup_lsnhttphdrlogprofile_binding":                         408,
		"citrixadc_lsngroup_lsnlogprofile_binding":                                409,
		"citrixadc_lsngroup_lsnpool_binding":                                      410,
		"citrixadc_lsngroup_lsntransportprofile_binding":                          411,
		"citrixadc_lsngroup_pcpserver_binding":                                    412,
		"citrixadc_lsnhttphdrlogprofile":                                          413,
		"citrixadc_lsnip6profile":                                                 414,
		"citrixadc_lsnlogprofile":                                                 415,
		"citrixadc_lsnparameter":                                                  416,
		"citrixadc_lsnpool":                                                       417,
		"citrixadc_lsnrtspalgprofile":                                             418,
		"citrixadc_lsnsipalgprofile":                                              419,
		"citrixadc_lsnstatic":                                                     420,
		"citrixadc_lsntransportprofile":                                           421,
		"citrixadc_mapbmr":                                                        422,
		"citrixadc_mapbmr_bmrv4network_binding":                                   423,
		"citrixadc_mapdmr":                                                        424,
		"citrixadc_mapdomain":                                                     425,
		"citrixadc_mapdomain_mapbmr_binding":                                      426,
		"citrixadc_nat64":                                                         427,
		"citrixadc_nat64param":                                                    428,
		"citrixadc_nd6":                                                           429,
		"citrixadc_nd6ravariables":                                                430,
		"citrixadc_nd6ravariables_onlinkipv6prefix_binding":                       431,
		"citrixadc_netbridge":                                                     432,
		"citrixadc_netbridge_iptunnel_binding":                                    433,
		"citrixadc_netbridge_nsip6_binding":                                       434,
		"citrixadc_netbridge_nsip_binding":                                        435,
		"citrixadc_netbridge_vlan_binding":                                        436,
		"citrixadc_netprofile":                                                    437,
		"citrixadc_netprofile_natrule_binding":                                    438,
		"citrixadc_netprofile_srcportset_binding":                                 439,
		"citrixadc_nitro_resource":                                                440,
		"citrixadc_nsacl":                                                         441,
		"citrixadc_nsacl6":                                                        442,
		"citrixadc_nsacls":                                                        443,
		"citrixadc_nsappflowcollector":                                            444,
		"citrixadc_nsassignment":                                                  445,
		"citrixadc_nscapacity":                                                    446,
		"citrixadc_nsconfig_clear":                                                447,
		"citrixadc_nsconfig_save":                                                 448,
		"citrixadc_nsconfig_update":                                               449,
		"citrixadc_nsconsoleloginprompt":                                          450,
		"citrixadc_nscqaparam":                                                    451,
		"citrixadc_nsdhcpparams":                                                  452,
		"citrixadc_nsdiameter":                                                    453,
		"citrixadc_nsencryptionkey":                                               454,
		"citrixadc_nsencryptionparams":                                            455,
		"citrixadc_nsfeature":                                                     456,
		"citrixadc_nshmackey":                                                     457,
		"citrixadc_nshostname":                                                    458,
		"citrixadc_nshttpparam":                                                   459,
		"citrixadc_nshttpprofile":                                                 460,
		"citrixadc_nsicapprofile":                                                 461,
		"citrixadc_nsip":                                                          462,
		"citrixadc_nsip6":                                                         463,
		"citrixadc_nslicense":                                                     464,
		"citrixadc_nslicenseparameters":                                           465,
		"citrixadc_nslicenseproxyserver":                                          466,
		"citrixadc_nslicenseserver":                                               467,
		"citrixadc_nslimitidentifier":                                             468,
		"citrixadc_nsmode":                                                        469,
		"citrixadc_nsparam":                                                       470,
		"citrixadc_nspartition":                                                   471,
		"citrixadc_nspartition_bridgegroup_binding":                               472,
		"citrixadc_nspartition_vlan_binding":                                      473,
		"citrixadc_nspartition_vxlan_binding":                                     474,
		"citrixadc_nspbr":                                                         475,
		"citrixadc_nspbr6":                                                        476,
		"citrixadc_nspbrs":                                                        477,
		"citrixadc_nsratecontrol":                                                 478,
		"citrixadc_nsrpcnode":                                                     479,
		"citrixadc_nsservicefunction":                                             480,
		"citrixadc_nsservicepath":                                                 481,
		"citrixadc_nsservicepath_nsservicefunction_binding":                       482,
		"citrixadc_nssimpleacl":                                                   483,
		"citrixadc_nssimpleacl6":                                                  484,
		"citrixadc_nsspparams":                                                    485,
		"citrixadc_nstcpbufparam":                                                 486,
		"citrixadc_nstcpparam":                                                    487,
		"citrixadc_nstcpprofile":                                                  488,
		"citrixadc_nstimeout":                                                     489,
		"citrixadc_nstimer":                                                       490,
		"citrixadc_nstrafficdomain":                                               491,
		"citrixadc_nstrafficdomain_bridgegroup_binding":                           492,
		"citrixadc_nstrafficdomain_vlan_binding":                                  493,
		"citrixadc_nstrafficdomain_vxlan_binding":                                 494,
		"citrixadc_nsvariable":                                                    495,
		"citrixadc_nsvpxparam":                                                    496,
		"citrixadc_nsweblogparam":                                                 497,
		"citrixadc_nsxmlnamespace":                                                498,
		"citrixadc_ntpparam":                                                      499,
		"citrixadc_ntpserver":                                                     500,
		"citrixadc_ntpsync":                                                       501,
		"citrixadc_onlinkipv6prefix":                                              502,
		"citrixadc_password_resetter":                                             503,
		"citrixadc_pcpprofile":                                                    504,
		"citrixadc_pcpserver":                                                     505,
		"citrixadc_pinger":                                                        506,
		"citrixadc_policydataset":                                                 507,
		"citrixadc_policydataset_value_binding":                                   508,
		"citrixadc_policyexpression":                                              509,
		"citrixadc_policyhttpcallout":                                             510,
		"citrixadc_policymap":                                                     511,
		"citrixadc_policyparam":                                                   512,
		"citrixadc_policypatset":                                                  513,
		"citrixadc_policypatset_pattern_binding":                                  514,
		"citrixadc_policystringmap":                                               515,
		"citrixadc_policystringmap_pattern_binding":                               516,
		"citrixadc_ptp":                                                           517,
		"citrixadc_quicbridgeprofile":                                             518,
		"citrixadc_radiusnode":                                                    519,
		"citrixadc_rdpclientprofile":                                              520,
		"citrixadc_rdpserverprofile":                                              521,
		"citrixadc_rebooter":                                                      522,
		"citrixadc_reputationsettings":                                            523,
		"citrixadc_responderaction":                                               524,
		"citrixadc_responderglobal_responderpolicy_binding":                       525,
		"citrixadc_responderhtmlpage":                                             526,
		"citrixadc_responderparam":                                                527,
		"citrixadc_responderpolicy":                                               528,
		"citrixadc_responderpolicylabel":                                          529,
		"citrixadc_responderpolicylabel_responderpolicy_binding":                  530,
		"citrixadc_rewriteaction":                                                 531,
		"citrixadc_rewriteglobal_rewritepolicy_binding":                           532,
		"citrixadc_rewriteparam":                                                  533,
		"citrixadc_rewritepolicy":                                                 534,
		"citrixadc_rewritepolicylabel":                                            535,
		"citrixadc_rewritepolicylabel_rewritepolicy_binding":                      536,
		"citrixadc_rnat":                                                          537,
		"citrixadc_rnat6":                                                         538,
		"citrixadc_rnat6_nsip6_binding":                                           539,
		"citrixadc_rnat_clear":                                                    540,
		"citrixadc_rnat_nsip_binding":                                             541,
		"citrixadc_rnatglobal_auditsyslogpolicy_binding":                          542,
		"citrixadc_rnatparam":                                                     543,
		"citrixadc_route":                                                         544,
		"citrixadc_route6":                                                        545,
		"citrixadc_routerdynamicrouting":                                          546,
		"citrixadc_rsskeytype":                                                    547,
		"citrixadc_server":                                                        548,
		"citrixadc_service":                                                       549,
		"citrixadc_service_dospolicy_binding":                                     550,
		"citrixadc_service_lbmonitor_binding":                                     551,
		"citrixadc_servicegroup":                                                  552,
		"citrixadc_servicegroup_lbmonitor_binding":                                553,
		"citrixadc_servicegroup_servicegroupmember_binding":                       554,
		"citrixadc_smppparam":                                                     555,
		"citrixadc_smppuser":                                                      556,
		"citrixadc_snmpalarm":                                                     557,
		"citrixadc_snmpcommunity":                                                 558,
		"citrixadc_snmpengineid":                                                  559,
		"citrixadc_snmpgroup":                                                     560,
		"citrixadc_snmpmanager":                                                   561,
		"citrixadc_snmpmib":                                                       562,
		"citrixadc_snmpoption":                                                    563,
		"citrixadc_snmptrap":                                                      564,
		"citrixadc_snmptrap_snmpuser_binding":                                     565,
		"citrixadc_snmpuser":                                                      566,
		"citrixadc_snmpview":                                                      567,
		"citrixadc_spilloveraction":                                               568,
		"citrixadc_spilloverpolicy":                                               569,
		"citrixadc_sslaction":                                                     570,
		"citrixadc_sslcacertgroup":                                                571,
		"citrixadc_sslcacertgroup_sslcertkey_binding":                             572,
		"citrixadc_sslcert":                                                       573,
		"citrixadc_sslcertfile":                                                   574,
		"citrixadc_sslcertkey":                                                    575,
		"citrixadc_sslcertkey_sslocspresponder_binding":                           576,
		"citrixadc_sslcertkey_update":                                             577,
		"citrixadc_sslcertreq":                                                    578,
		"citrixadc_sslcipher":                                                     579,
		"citrixadc_ssldhparam":                                                    580,
		"citrixadc_ssldtlsprofile":                                                581,
		"citrixadc_sslfipskey":                                                    582,
		"citrixadc_ssllogprofile":                                                 583,
		"citrixadc_sslocspresponder":                                              584,
		"citrixadc_sslparameter":                                                  585,
		"citrixadc_sslpolicy":                                                     586,
		"citrixadc_sslpolicylabel":                                                587,
		"citrixadc_sslpolicylabel_sslpolicy_binding":                              588,
		"citrixadc_sslprofile":                                                    589,
		"citrixadc_sslprofile_sslcertkey_binding":                                 590,
		"citrixadc_sslprofile_sslcipher_binding":                                  591,
		"citrixadc_sslservice":                                                    592,
		"citrixadc_sslservice_ecccurve_binding":                                   593,
		"citrixadc_sslservice_sslcertkey_binding":                                 594,
		"citrixadc_sslservice_sslciphersuite_binding":                             595,
		"citrixadc_sslservicegroup":                                               596,
		"citrixadc_sslservicegroup_ecccurve_binding":                              597,
		"citrixadc_sslservicegroup_sslcertkey_binding":                            598,
		"citrixadc_sslservicegroup_sslciphersuite_binding":                        599,
		"citrixadc_sslvserver":                                                    600,
		"citrixadc_sslvserver_ecccurve_binding":                                   601,
		"citrixadc_sslvserver_sslcertkey_binding":                                 602,
		"citrixadc_sslvserver_sslciphersuite_binding":                             603,
		"citrixadc_sslvserver_sslpolicy_binding":                                  604,
		"citrixadc_streamidentifier":                                              605,
		"citrixadc_streamselector":                                                606,
		"citrixadc_subscribergxinterface":                                         607,
		"citrixadc_subscriberparam":                                               608,
		"citrixadc_subscriberprofile":                                             609,
		"citrixadc_subscriberradiusinterface":                                     610,
		"citrixadc_systembackup":                                                  611,
		"citrixadc_systembackup_create":                                           612,
		"citrixadc_systembackup_restore":                                          613,
		"citrixadc_systemcmdpolicy":                                               614,
		"citrixadc_systemcollectionparam":                                         615,
		"citrixadc_systemextramgmtcpu":                                            616,
		"citrixadc_systemfile":                                                    617,
		"citrixadc_systemglobal_auditnslogpolicy_binding":                         618,
		"citrixadc_systemglobal_authenticationldappolicy_binding":                 619,
		"citrixadc_systemglobal_authenticationlocalpolicy_binding":                620,
		"citrixadc_systemglobal_authenticationpolicy_binding":                     621,
		"citrixadc_systemglobal_authenticationradiuspolicy_binding":               622,
		"citrixadc_systemglobal_authenticationtacacspolicy_binding":               623,
		"citrixadc_systemgroup":                                                   624,
		"citrixadc_systemgroup_nspartition_binding":                               625,
		"citrixadc_systemparameter":                                               626,
		"citrixadc_systemuser":                                                    627,
		"citrixadc_systemuser_nspartition_binding":                                628,
		"citrixadc_tmformssoaction":                                               629,
		"citrixadc_tmglobal_auditnslogpolicy_binding":                             630,
		"citrixadc_tmglobal_auditsyslogpolicy_binding":                            631,
		"citrixadc_tmglobal_tmtrafficpolicy_binding":                              632,
		"citrixadc_tmsamlssoprofile":                                              633,
		"citrixadc_tmsessionaction":                                               634,
		"citrixadc_tmsessionparameter":                                            635,
		"citrixadc_tmsessionpolicy":                                               636,
		"citrixadc_tmtrafficaction":                                               637,
		"citrixadc_tmtrafficpolicy":                                               638,
		"citrixadc_transformaction":                                               639,
		"citrixadc_transformglobal_transformpolicy_binding":                       640,
		"citrixadc_transformpolicy":                                               641,
		"citrixadc_transformpolicylabel":                                          642,
		"citrixadc_transformpolicylabel_transformpolicy_binding":                  643,
		"citrixadc_transformprofile":                                              644,
		"citrixadc_tunnelglobal_tunneltrafficpolicy_binding":                      645,
		"citrixadc_tunneltrafficpolicy":                                           646,
		"citrixadc_userprotocol":                                                  647,
		"citrixadc_uservserver":                                                   648,
		"citrixadc_videooptimizationdetectionaction":                              649,
		"citrixadc_videooptimizationdetectionpolicy":                              650,
		"citrixadc_vlan":                                                          651,
		"citrixadc_vlan_channel_binding":                                          652,
		"citrixadc_vlan_interface_binding":                                        653,
		"citrixadc_vlan_nsip6_binding":                                            654,
		"citrixadc_vlan_nsip_binding":                                             655,
		"citrixadc_vpnalwaysonprofile":                                            656,
		"citrixadc_vpnclientlessaccesspolicy":                                     657,
		"citrixadc_vpnclientlessaccessprofile":                                    658,
		"citrixadc_vpneula":                                                       659,
		"citrixadc_vpnformssoaction":                                              660,
		"citrixadc_vpnglobal_appcontroller_binding":                               661,
		"citrixadc_vpnglobal_auditsyslogpolicy_binding":                           662,
		"citrixadc_vpnglobal_authenticationcertpolicy_binding":                    663,
		"citrixadc_vpnglobal_authenticationldappolicy_binding":                    664,
		"citrixadc_vpnglobal_authenticationlocalpolicy_binding":                   665,
		"citrixadc_vpnglobal_authenticationnegotiatepolicy_binding":               666,
		"citrixadc_vpnglobal_authenticationradiuspolicy_binding":                  667,
		"citrixadc_vpnglobal_authenticationsamlpolicy_binding":                    668,
		"citrixadc_vpnglobal_authenticationtacacspolicy_binding":                  669,
		"citrixadc_vpnglobal_domain_binding":                                      670,
		"citrixadc_vpnglobal_intranetip6_binding":                                 671,
		"citrixadc_vpnglobal_intranetip_binding":                                  672,
		"citrixadc_vpnglobal_sharefileserver_binding":                             673,
		"citrixadc_vpnglobal_sslcertkey_binding":                                  674,
		"citrixadc_vpnglobal_staserver_binding":                                   675,
		"citrixadc_vpnglobal_vpnclientlessaccesspolicy_binding":                   676,
		"citrixadc_vpnglobal_vpneula_binding":                                     677,
		"citrixadc_vpnglobal_vpnintranetapplication_binding":                      678,
		"citrixadc_vpnglobal_vpnnexthopserver_binding":                            679,
		"citrixadc_vpnglobal_vpnportaltheme_binding":                              680,
		"citrixadc_vpnglobal_vpnsessionpolicy_binding":                            681,
		"citrixadc_vpnglobal_vpntrafficpolicy_binding":                            682,
		"citrixadc_vpnglobal_vpnurl_binding":                                      683,
		"citrixadc_vpnglobal_vpnurlpolicy_binding":                                684,
		"citrixadc_vpnintranetapplication":                                        685,
		"citrixadc_vpnnexthopserver":                                              686,
		"citrixadc_vpnparameter":                                                  687,
		"citrixadc_vpnpcoipprofile":                                               688,
		"citrixadc_vpnpcoipvserverprofile":                                        689,
		"citrixadc_vpnportaltheme":                                                690,
		"citrixadc_vpnsamlssoprofile":                                             691,
		"citrixadc_vpnsessionaction":                                              692,
		"citrixadc_vpnsessionpolicy":                                              693,
		"citrixadc_vpntrafficaction":                                              694,
		"citrixadc_vpntrafficpolicy":                                              695,
		"citrixadc_vpnurl":                                                        696,
		"citrixadc_vpnurlaction":                                                  697,
		"citrixadc_vpnurlpolicy":                                                  698,
		"citrixadc_vpnvserver":                                                    699,
		"citrixadc_vpnvserver_aaapreauthenticationpolicy_binding":                 700,
		"citrixadc_vpnvserver_analyticsprofile_binding":                           701,
		"citrixadc_vpnvserver_appcontroller_binding":                              702,
		"citrixadc_vpnvserver_appflowpolicy_binding":                              703,
		"citrixadc_vpnvserver_auditnslogpolicy_binding":                           704,
		"citrixadc_vpnvserver_auditsyslogpolicy_binding":                          705,
		"citrixadc_vpnvserver_authenticationcertpolicy_binding":                   706,
		"citrixadc_vpnvserver_authenticationdfapolicy_binding":                    707,
		"citrixadc_vpnvserver_authenticationldappolicy_binding":                   708,
		"citrixadc_vpnvserver_authenticationlocalpolicy_binding":                  709,
		"citrixadc_vpnvserver_authenticationloginschemapolicy_binding":            710,
		"citrixadc_vpnvserver_authenticationnegotiatepolicy_binding":              711,
		"citrixadc_vpnvserver_authenticationoauthidppolicy_binding":               712,
		"citrixadc_vpnvserver_authenticationradiuspolicy_binding":                 713,
		"citrixadc_vpnvserver_authenticationsamlidppolicy_binding":                714,
		"citrixadc_vpnvserver_authenticationsamlpolicy_binding":                   715,
		"citrixadc_vpnvserver_authenticationtacacspolicy_binding":                 716,
		"citrixadc_vpnvserver_authenticationwebauthpolicy_binding":                717,
		"citrixadc_vpnvserver_cachepolicy_binding":                                718,
		"citrixadc_vpnvserver_cspolicy_binding":                                   719,
		"citrixadc_vpnvserver_feopolicy_binding":                                  720,
		"citrixadc_vpnvserver_icapolicy_binding":                                  721,
		"citrixadc_vpnvserver_intranetip6_binding":                                722,
		"citrixadc_vpnvserver_intranetip_binding":                                 723,
		"citrixadc_vpnvserver_responderpolicy_binding":                            724,
		"citrixadc_vpnvserver_rewritepolicy_binding":                              725,
		"citrixadc_vpnvserver_sharefileserver_binding":                            726,
		"citrixadc_vpnvserver_staserver_binding":                                  727,
		"citrixadc_vpnvserver_vpnclientlessaccesspolicy_binding":                  728,
		"citrixadc_vpnvserver_vpneula_binding":                                    729,
		"citrixadc_vpnvserver_vpnintranetapplication_binding":                     730,
		"citrixadc_vpnvserver_vpnnexthopserver_binding":                           731,
		"citrixadc_vpnvserver_vpnportaltheme_binding":                             732,
		"citrixadc_vpnvserver_vpnsessionpolicy_binding":                           733,
		"citrixadc_vpnvserver_vpntrafficpolicy_binding":                           734,
		"citrixadc_vpnvserver_vpnurl_binding":                                     735,
		"citrixadc_vpnvserver_vpnurlpolicy_binding":                               736,
		"citrixadc_vrid":                                                          737,
		"citrixadc_vrid6":                                                         738,
		"citrixadc_vridparam":                                                     739,
		"citrixadc_vxlan":                                                         740,
		"citrixadc_vxlan_nsip6_binding":                                           741,
		"citrixadc_vxlan_nsip_binding":                                            742,
		"citrixadc_vxlan_srcip_binding":                                           743,
		"citrixadc_vxlanvlanmap":                                                  744,
		"citrixadc_vxlanvlanmap_vxlan_binding":                                    745,
	}
)

func GetResource(r string) (*resource.Resource, error) {
	rs, ok := resourcesMap[r]
	if !ok {
		return nil, fmt.Errorf("resource %q not found", r)
	}
	return Resources[rs], nil
}
